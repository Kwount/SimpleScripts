Log:TraceString( CLog.l_info , "LUA: "..tostring("$Id: analyst_rules.lua 97511 2017-01-16 07:39:43Z y.minina $") )
-- $Id: analyst_rules.lua 97511 2017-01-16 07:39:43Z y.minina $
-- test

function RunAnalystRules()
    NOTICE('AnalystRules: start')
    
    if ProfileName=='Debug' then 
        IsBlocked = false
    end
    
	--ar1
	--mxs_other / #pidori #ttt
	--10.08.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 100 and features:MsgSize() <= 500000 
		and features:HasTextOnly() == 1
		and wclass:NO_FROM()
		and (wclass:HDR_NO_MSG_ID() or wclass:MAIL_RU_MSGID_PATTERN())
		and wclass:MISSING_DATE()
		and wclass:NO_CONTENT_TYPE()
		and wclass:NO_TO()
    then
		SetPSAR('ar1')
	end
    
	--ar2
	--mxs / #zarabotok
	--24.06.2016 / zubr 
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 20 and features:MsgSize() <= 500 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:HasFreeHosting() == 1 
		and features:TextLines() >= 1 and features:TextLines() <= 5
		and features:WordCount() > 1 and features:WordCount() <= 40
		and wclass:YANDEX_DISC()
		and wclass:SHORT_MESSAGE()
		and (wclass:FROM_REALNAME_IN_TO_LOCALPART() 
			or wclass:IP_IN_HELO() 
			or wclass:CP1251_WITH_7BIT()
			or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH() and not features:FromDomain() == 'ya.ru'
			or wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
			or wclass:OTHER_IP_IN_DNSBL()
			or wclass:FROM_AND_TO_REALNAMES_ARE_EQUAL_BUT_EMAILS_ARE_NOT()
			or wclass:SPF_NOT_PASS_FROM_MBP())
	then
		SetPSAR('ar2')
	end
    
    --ar3
	--fe / #casino
	--24.06.16 / veselitsky	
    if not IsBlocked
        and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 100, 10000) 
        and features:HasTextOnly() == 1
        and features:WordCount() <= 5
        and features:HtmlTagCount() > 0
        and wclass:HAS_INPUT_TAG()
    then
    	SetPSAR('ar3')  
    end
        
	--ar4
    --fe / #znakomstva #eng
    --02.01.17 / philip.karpov
    --f_fm_yahoo
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 2, 5, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and (cmpr_lt(features:RepuserAge(), 30, true) or wclass:USER_AGE_30())
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and wclass:FE_REGIONS_MISMATCH()
        and wclass:HAS_FREE_HOSTING()
        and wclass:HAS_SUSP_URLS()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar4')
    end
    
    --ar5
	--mxs_other /  #smartresp_zakrivaetsia #shelest.net
    --18.09.16 / r.kulpin		
	--2447e080d7245c9a51c545cbc22c63f1 46b1ff2f961044a1fa617dc63990ed98 dda6f7d2bae6073607fb825e1eb4a4d3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and features:HeloInMsgId()
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and features:GetSubjectEncoding() == "UTF-8" 
        and cmpr_gt(features:HeaderNum(), 30, true)
        and cmpr_btw(features:TextLines(), 4, 20, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 25, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:HtmlTagCount(), 5, 50, true)
        and (wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL() or wclass:HAS_IMAGE_URL())
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:NEW_IP_30_DAYS()
    then
        SetPSAR('ar5') 
        LogMsgToHadoop('dstat_kulpin_log', '#ar5')
    end
    
    --ar6
	--mxs_other / #stoyak
    --14.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),300,2000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:ToInvalidChars() == 1
        and features:UrlNormCount() == 0
        and features:HtmlTagCount() == 1
        and features:NoBodyTag()
        and cmpr_btw(features:TextLines(),1,5,true)
        and features:MsgIdLocalPart()
        and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{7,15}$]]))
    then
        SetPSAR('ar6') 
    end
    
	--ar7
	--mxs_other / #flud
	--24.08.2016 / zubr 
	--c2a569dc377b59124fe948077efe64e0
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10 and features:MsgSize() <= 50
		and features:HasTextOnly() == 1
--		and features:InvalidFrom() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:NoRealNameFrom() == 1
		and features:UrlNormCount() == 0
		and features:WordCount() >= 2 and features:WordCount() <= 5
		and features:Subject7bitOnly() == 1
		and wclass:ONLY_7BIT_WORDS()
		and wclass:NO_CTE()
		and HeaderMatch('Content-Type','text/plain; charset="iso-8859-1"')
	then
    	SetPSAR('ar7')
	end
    
    
    --ar8
    --mxs_other / #cloud.mail #tv #reportaj #mcdonalds
	--18.09.16 / r.kulpin
	--264ca13640c301b1ff6bf0e4cdf9060e c1835f0761bce4ff58954dd8f41e0087 b3bc9d3f75f78e11c5361ae1df8a02e6
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrc(), 'mxs') or cmpr_eq(features:RcvSrc(), 'imap') or cmpr_eq(features:RcvSrc(), 'rpop'))
    	and cmpr_btw(features:MsgSize(), 3000, 10000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and not features:IsEnvelopeFromFreeMail()
        and (features:HeloInMsgId() or features:ToRealNameInSubject() or features:NoRealNameTo())
        and features:GetSubjectEncoding() == "WINDOWS-1251" 
      	and cmpr_btw(features:WordCount(), 150, 350, true)
    	and cmpr_btw(features:TextLines(), 10, 50, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
        and (wclass:SPAM_RATIO_BY_LAST_HOUR_MORE_THAN_25() or wclass:NEW_IP_30_DAYS() or wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25() or wclass:MX_INVALID_RATE_MORE_THAN_5())
    	and wclass:SHORT_BOUNDARY()
    	and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:URL_GOOGLEDRIVE() or UrlsMatchStr('cloud.mail.ru',1) or UrlsMatchStr('vk.com/doc',1) or UrlsMatchStr('drive.google.com',1))   
    then
    	SetSpam('ar8')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar8' )
    end
  
 	--ar9
	--smtp / #2kartinki #novosib #dom #stroika
	--18.09.16 / r.kulpin
	--4d55fe1ae8f34eeb523726f043b243a0
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'smtp')
    	and cmpr_btw(features:MsgSize(), 100000, 500000)
        and cmpr_btw(features:ImgNum(), 1, 10, true)
        and features:HasNoAttach()
        and cmpr_gt(features:MultipartNum(), 3, true)       
        and features:NoRealNameTo()   
        and (cmpr_lt(features:Karma(), 0, true) or features:IsAutoreg())
        and cmpr_gt(features:SubjectLen(), 30, true) 
    	and cmpr_eq(features:WordCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
  	    and cmpr_lt(features:RepuserAge(), 15)
        and wclass:LASTHELO_WITHOUT_DOMAIN()  
        and StrMatchRe(features:From(), regex([[^.*\d.*@]]))
		and not StrMatch(features:Subject(), 'VideoNet')
    then
        SetSpam('ar9',false)
		CarbideSendStatsSum('rules_analyst', 'ar9', 1)
    	--SetPSAR('ar9')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar9')
    end
  
	
    --ar10
	--mxs_other / #online
	--11.12.16 / razuvaev
    --edf466d0fa01bbbd24dbebcfbdef186e 52151ff8321c80292a194ad0c9cb36ad
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 2000,20000)
    	and cmpr_eq(features:FromDomain(),'online.ua')
        and cmpr_eq(features:XMailerName(),'Online')
        and wclass:X_MAILER_DOMAIN()
        and wclass:W8BIT_NO_CTE()
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and wclass:NO_CTE()
        and wclass:WORDS_TO_URLS_BADRATIO()
	then
		SetPSAR('ar10')
	end
    
    --ar11
    --mxs_mbp / #zarabotok #thwglobal.com #$25vchas #denejniiSTART
    --18.09.16 / r.kulpin
    --68a17cdbec0d42e0212a9c8e84866871 bc1225d8c5cbe4a320db99cfb86c9669 c22fbcdffbfe3cd36b3aa29ad574b2e3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 10000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and cmpr_eq(features:FromDomain(), "gmail.com")
    	and cmpr_btw(features:WordCount(), 100, 1800, true)
    	and cmpr_btw(features:TextLines(), 1, 100, true)
        and cmpr_btw(features:UrlNormCount(), 1, 20, true)
    	and cmpr_gt(features:HtmlTagCount(), 80, true)
        and wclass:NOREALNAME_FROM()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    then
        SetPSAR('ar11')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar11')
    end
    
	--ar12
	--mxs_other / #virus
	--03.08.2016 / zubr 
	--3772843ba85a74db041e24c9c3432ea9 2011d1462a98a55114f94447ab47cd4b
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "rpop")
		and features:MsgSize() >= 10000 and features:MsgSize() <= 20000 
		and features:HasAttach() == 1
		and features:AttachAllCount() >= 1
		and features:FilesInArchiveNum() == 1
		--and features:IsExecNameInArchive() == true
		and features:UrlNormCount() <= 1
		--and features:HtmlTagCount() <= 10
		and features:TextLines() >= 2 and features:TextLines() <= 15
		and features:WordCount() >= 10 and features:WordCount() <= 200
		and (wclass:ONLY_7BIT_WORDS() or wclass:ENGLISH_LANGUAGE_MESSAGE())
		and (wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE() or wclass:ARCHIVE_WITH_ONE_FILE_INSIDE())
	then
		SetPSAR('ar12')
	end 
    
    
    --ar13 
	--mxs_other / #online
	--02.01.117 / razuvaev
    --edf466d0fa01bbbd24dbebcfbdef186e 52151ff8321c80292a194ad0c9cb36ad
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 6000,25000)
    	and cmpr_gt(features:NumberCount(),1000)
    	and cmpr_eq(features:UrlNormCount(),2)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and wclass:PTR_ERROR()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:HELO_IN_MSGID()
        and wclass:HELO_IN_FROM()
        and wclass:OS_WINDOWS()
        and wclass:ONE_RECEIVED()
        and wclass:LONG_MSGID()
	then
		SetPSAR('ar13')
	end

	--ar14 
    --mxs_other /  #vakansiya 
    --18.09.16 / r.sulimov (appruv zubr)
    --93fa27f5bb677c0f2321529f8d0f7199 7de037ebb8f7433ee4586306476b9757
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 2, 6, true)
        and cmpr_btw(features:TextLines(), 20, 80, true)
        and cmpr_btw(features:WordCount(), 20, 400, true)
    	and cmpr_gt(features:WordOtherCount(), 20)
    	and cmpr_gt(features:WhitespaceCount(), 900)
		and cmpr_lt(features:DomainRepipAge(), 30)
    	and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    	and wclass:HAS_IMAGE_URL()
    	and wclass:LONG_HELO()
    	and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
	then
        SetPSAR('ar14')
		LogMsgToHadoop('dstat_sulimov_log', '#ar14')
    end
    
	--ar15
    --fe / #bazi 
	--04.11.16 / a.zubrilova
	--9cf822edbc1d88e6f82c6ca3fe3c39f3
 	if not IsBlocked
		and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == "fe" or wclass:MAILRU_FROM_MXS())
    	and features:MsgSize() >= 8000 and features:MsgSize() <= 2000000
        and features:ImgNum() >= 1
		and features:HasNoAttach() == 1
    	and (features:RepuserAge() <= 14 or wclass:HAS_20_DAYS_GAP())
		and features:UrlCountWithoutMailRu() <= 1
    	and features:TextLines() >= 1 and features:TextLines() <= 40
    	and features:WordCount() >= 10 and features:WordCount() <= 250
		and (features:Karma() <= 0 or wclass:WORDS_MIXED_RATIO() or wclass:USER_AGE_1())
    	and TermsMatchGroup(17286,100)
    then
		SetPSAR('ar15')
	end 
    
	--ar16
    --fe / #bazi 
	--13.01.17 / a.zubrilova
	--525084ed6a5405f8950872c7afa43f28 c286b7a71d5149c3a2c196700f051c1e
 	if not IsBlocked
		and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == "fe" or wclass:MAILRU_FROM_MXS())
    	and features:MsgSize() >= 500 and features:MsgSize() <= 50000
        and features:HasNoAttach() == 1
		and features:ImgNum() >= 0 and features:ImgNum() <= 5
		and features:NoRealNameTo() == 1
    	and (features:RepuserAge() <= 7 or wclass:HAS_20_DAYS_GAP())
		and features:UrlCountWithoutMailRu() == 0
    	and features:TextLines() >= 1 and features:TextLines() <= 100
    	and features:WordMixedCount() >= 2
    	and features:Subject()
		and features:SubjectWordCount() >= 2
		and (StrMatch(features:Subject(), 'ñêàÿ îá') or StrMatch(features:Subject(), 'ñêàÿ Îá'))
    then
		SetPSAR('ar16')
	end  
    
	--ar17
    --fe / #bazi 
	--12.08.16 / a.zubrilova
	--bd0888c805b2f88d8fb8b14353ac1d9f 56209e8e63ae5a533cb7948d3f141a1b
 	if not IsBlocked
		and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == "fe" or wclass:MAILRU_FROM_MXS())
    	and features:MsgSize() >= 500 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
    	and (features:RepuserAge() <= 7 or wclass:HAS_20_DAYS_GAP())
		and features:UrlCountWithoutMailRu() <= 2
    	and features:TextLines() >= 1 and features:TextLines() <= 40
    	and features:WordCount() >= 10 and features:WordCount() <= 250
		and (features:Karma() <= 0 or features:WordsMixedRatio() >= 3 or wclass:USER_AGE_1())
    	and TermsMatchGroup(17286,100)
    then
		SetPSAR('ar17')
	end
    
    --ar18
	--mxs_other / #zarabotok
	--27.06.16 / veselitsky	
	--e4c604f6b4cc0376b172720218d2b25b 6eeeda14dddd8780839ed5d73d55e9c7 2391bb693c966b83f0bf77d4b13b5587
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 8000, 400000) 
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
		and cmpr_btw(features:WordCount(), 60, 2000)
    	and cmpr_btw(features:HtmlTagCount(), 110, 3000)
    	and cmpr_gt(features:RcptNum(), 2)
    	and cmpr_btw(features:UrlNormCount(), 3, 13)
    	and features:HasImageUrl() == 1
        and features:FromRealName()
        and cmpr_gt(#features:FromRealName(), 0)
    	and (StrMatch(features:FromRealName():lower(), 'admin') or wclass:INVALID_CHAR_FROM())
    	and (wclass:HIDING_HTML_TAGS() or cmpr_gt(features:WordsOtherRatio(), 50) or wclass:URLS_MORE_THAN_100())
 	--	and wclass:PHP_URL()
 		and wclass:DOMAINS_EQUAL()
    then
    	SetPSAR('ar18')  
    end

	--ar19
	--mxs_other / #zarabotok
	--19.09.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 9000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:HtmlTagCount() <= 40
		and features:TextLines() >= 20 and features:TextLines() <= 50 
		and features:WordCount() >= 100 and features:WordCount() <= 300
		and features:Words8bitRatio() >= 50
		and features:NumberCount() >= 8 and features:NumberCount() <= 30
		and features:SubjectWordCount() >= 5
		and wclass:SHORT_BOUNDARY_AND_MAILRU_MSG_ID_PATTERN()
		and wclass:ONE_RECEIVED()
		and (features:HasFreeHosting() == 1 or UrlsMatchStr('.vk.com'))
		and HeaderMatch('Date', '0700')
		and HeaderMatch('Received', '0300')
	then
		SetPSAR('ar19')
	end
    
	--ar20
    --mxs /  #zarabotok
    --19.09.16 / r.sulimov (appruv zubr)
    --3ae9cd7c875c12c0bb2a51d5f7107132 21dde24b971a8ea39cd3d3f9885b4b04
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
		and cmpr_eq(features:Word8bitCount(), 0)
    	and cmpr_gt(features:WordOtherCount(), 8)
    	and cmpr_gt(features:WhitespaceCount(), 200)
		and cmpr_lt(features:DomainRepipAge(), 7) 
    	and wclass:PRECEDENCE_BULK()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:ONE_RECEIVED()
    	and wclass:HAS_IMAGE_URL()
    	and wclass:HTML_BODY_HEAD()
	then
        SetPSAR('ar20')
		LogMsgToHadoop('dstat_sulimov_log', '#ar20')
    end
    
    --ar21
    --mxs_mbp #zarabotki
    --13.12.16 / zubr
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:IsFromGoogle() == true
        and features:TextLines() >= 5 and features:TextLines() <= 30
        and features:WordCount() >= 30 and features:WordCount() <= 150
        and features:NoRealNameTo() == 1
        and features:UrlNormCount() == 0
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:FROM_EMAIL_IN_BODY()
		and TermsMatchGroup(17947, 100)
    then
        SetPSAR('ar21')
    end
    
	--ar22
	--mxs_other / #greencard
	--19.09.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 9000 
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 8
		and features:UrlsTextSize() >= 80
		and features:TextLines() >= 3 and features:TextLines() <= 50 
		and features:WordCount() >= 60 and features:WordCount() <= 300
		and features:Words8bitRatio() >= 50
		and features:NumberCount() >= 2 and features:NumberCount() <= 50
		and features:SubjectWordCount() >= 2
		and wclass:MS_MAILER()
		and wclass:PRECEDENCE_BULK()
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
		and HeaderMatch('Date', '0700')
		and HeaderMatch('Received', '0300')
	then
		SetPSAR('ar22')
	end
    
	--ar23
	--mxs_other / #zarabotok
	--19.09.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 200 and features:MsgSize() <= 900 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:HtmlTagCount() <= 20
		and features:TextLines() >= 5 and features:TextLines() <= 10 
		and features:WordCount() >= 10 and features:WordCount() <= 40
		and features:Words8bitRatio() >= 50
		and features:SubjectWordCount() >= 2
		and features:SubjectWordMixedCount() >= 1
		and wclass:PHP_URL()
		and wclass:INVALID_CHAR_FROM()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
		and wclass:PRECEDENCE_BULK()
	then
		SetPSAR('ar23')
	end
    
   
    --ar24
	--fe / #casino_img_tag
    --03.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,3000)
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:HtmlTags()['img'] 
        and (wclass:FE_TOR_IP() or wclass:FE_ENG_MSG())
    then
        SetPSAR('ar24',true) 
    end

	--ar25
	--fe / #pdf spam
    --03.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and HasHeader('X-Mru-PDD-Id')
        and cmpr_gt(features:MsgSize(),100000)
        and features:HasAttach() == 1
        and features:AttachOfficeCount() == 1
        and features:RepuserAge() <= 30
        and features:UrlNormCount() == 0
        and features:FilesExtensions() == ".pdf"
        and features:HtmlTags()['br'] 
        and features:TextLines() > 2
        and wclass:FROM_TLD_IS_SUSP()
        and StrMatchRe(features:PartsFilenames(),regex([[^[A-Z]?[à-ÿ¸a-z\d\s\-]{5,}\.pdf$]]))
    then
        SetPSAR('ar25') 
    end
    
    --ar26
	--fe / #casino
    --03.01.17 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000,100000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:OneWordSubject()
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_eq(features:UrlNormCount(),0)
    	and features:HtmlTagCount() > 5
    	and features:HtmlTags()['p']
    	and features:HtmlTags()['p']/features:HtmlTagCount() > 0.5
        and (wclass:FE_TOR_IP() or wclass:FE_ONE_WORD_7BIT_SUBJECT_WITH_MOSTLY_8BIT_BODY())
    	and wclass:HAS_5_DAYS_GAP()
    then
        SetPSAR('ar26')
    end
    
	--ar27
	--mxs_other / #watch #chasi 
	--30.08.16 / veselitsky	
	--620750bb27017c6729fbe1bfd2169089 d474fdfc6d25fb70c0baa1c71002481d 83efb3edd60b49e4d148f33781bc56f7  
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and (cmpr_btw(features:MsgSize(), 100, 8000) or cmpr_btw(features:MsgSize(), 100000, 500000))
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
    	and (cmpr_btw(features:TextLines(), 0, 10) or cmpr_btw(features:TextLines(), 100, 400))
    	and (cmpr_btw(features:WordCount(), 0, 100) or cmpr_btw(features:WordCount(), 8000, 30000))
   		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 4)
    	and wclass:PRECEDENCE_BULK()
		and (wclass:IP_REP_GAP_MORE_7_DAYS() or wclass:NEW_IP_30_DAYS() or wclass:DKIM_FAIL())
    	and wclass:MISSING_DATE()
		and wclass:MAIL_RU_MSGID_PATTERN()
   	then
    	SetPSAR('ar27')
    end
    
    
    --ar28
	--fe / #eng flood
    --03.01.17 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 500) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and not features:MailRuTo()
        and features:UrlNormCount() == 0
        and TermsMatchGroup(18222,100)
    then
        SetPSAR('ar28')
    end
    
    --ar29
	--mxs_mbp / #aol #eng realname
	--28.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
      	and cmpr_eq(features:FromDomain(),'aol.com')
        and cmpr_btw(features:MsgSize(), 2000,6000)
        and cmpr_eq(features:UrlCount(),1)
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
        and wclass:NOT_CP1251_CHARS_IN_SUBJECT()
        and not wclass:RUSSIAN_FROM_REALNAME()
		and not HeaderMatch('From', '(Cron Daemon)')
	then
		SetPSAR('ar29')
	end

    --ar30
    --mxs_other / #zarabotok #dohod #first_noise_long_word
	--18.09.16 / r.kulpin
	--68312ab47926baa91228011e6c02443f cd30ac8600233a332f9cec1b1d7fbc04 30dd47e3346cef6ff871e8404655ce18
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1500, 35000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (features:NoRealNameTo() or features:ReturnPath() == '<>')
        and features:GetSubjectEncoding() == "WINDOWS-1251" 
      	and cmpr_btw(features:WordCount(), 30, 300, true)
    	and cmpr_btw(features:TextLines(), 10, 60, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:HtmlTagCount(), 10, 55, true)
        and cmpr_btw(features:WordsOtherRatio(),10, 30, true)
        and cmpr_btw(features:LinesToWordsRatio(), 10, 30, true)
    	and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_7_DAYS())
    	and (wclass:WORDS_WITH_NOISE() or wclass:NO_USER_AGENT())
        and wclass:HTML_BODY_HEAD()
        and wclass:RUSSIAN_FROM_REALNAME()
    	and (wclass:PTR_ERROR() or wclass:PTR_SEEMS_DYNAMIC() or wclass:REMOTE_IP_IN_SPAMHAUS())
    then
    	SetPSAR('ar30')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar30' )
    end
        
   	--ar31
    --fe / #zarabotok
    --03.01.17 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:AUTOREG()
        and wclass:NEW_IP_30_DAYS()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar31')
    end
    
    --ar32
    --mxs_other / #likvidation
    --09.03.16 /m.guryanov
    --678d7ea073e0e11f8e34385d236b2269
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"   
        and cmpr_btw(features:MsgSize(), 200, 600)  
        and features:HasTextOnly() == 1
        and features:NoUserAgent() == 1
        and features:UrlCount() == 0
        and features:TextLines() == 0
        and features:WordCount() == 0
        and features:Subject8bitOnly() == 1
        and cmpr_gt(features:SubjectWordCount(), 3, true)
        and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 15, true))
        and wclass:HAS_TAG_META() 
        and (wclass:THIRD_LVL_DOMAIN_IN_FROM() or wclass:FOURTH_LVL_DOMAIN_IN_HELO()
         or wclass:FIFTH_LVL_DOMAIN_IN_HELO())    
    then     
        SetPSAR('ar32') 
    end
    
    --ar33
    --mxs_mbp #google
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
   		and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:UNAVAILABLE_IN_RECEIVED()
    	and (wclass:NO_MIME()
    		or wclass:SUBJECT_MIXED_BADRATIO()
    		or wclass:INV_RATIO_BY_ODDS_MAILER_MEDIUM())
    then
        SetPSAR('ar33')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar33')
    end

    
    --ar34
    --mxs_other / #tea #no_ct
    --9.03.2016 / rassadovskiy
    --166aa151ad4d680ea088d1314590c2bd 73b5fb4a200e6be7e4648a762ca477df 14909f5b28a655b34ada992216379d9b 9a19ef5e0bbb6f983cb865dad21a7fe3
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other" 
        and cmpr_btw(features:MsgSize(),200,2000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoSubject() == 1
        and features:NoUserAgent() == 1
        and cmpr_btw(features:UrlCount(),0,1,true)
        and cmpr_btw(features:TextLines(),3,20,true)
        and cmpr_gt(features:Words8bitRatio(),50,true)
        and wclass:NO_TO()
        and wclass:SPF_NOT_PASS()
        and wclass:NO_CT()
        and wclass:HELO_IN_FROM()
        and wclass:MISSING_DATE()
    then
        SetPSAR('ar34') 
    end
    
    --ar35
    --mxs_other / #buhgalter #1kartinka #inostrrab #vakansia #seminar
	--18.09.16 / r.kulpin
	--902f5a007f29475ad63c9716ec3d33b5 8b9f3afd1c581dd2b78ca269a16420f3 6fbbc519deb3cd37f2d2d8bd4b7e029d
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 10000, 300000, true)
    	and cmpr_eq(features:ImgNum(), 1)
        and features:FilesExtensions() == ".gif" 
        and cmpr_gt(features:RcptNum(), 1) 
        and features:HasNoAttach()
        and cmpr_eq(features:MultipartNum(), 5)
        and features:GetSubjectEncoding() == "WINDOWS-1251" 
      	and cmpr_btw(features:WordCount(), 100, 300, true)
    	and cmpr_btw(features:TextLines(), 10, 25, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and wclass:PTR_SEEMS_DYNAMIC()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar35')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar35' )
    end 
    
    --ar36
    --mxs_mbp / #zarabotok #tinyurl.com
    --14.12.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 500000, true)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar36')
    end 
    
	--ar37
    --mxs_other / #ucoz.site #pomogai_google 
    --03.10.16 / minina
	if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrc(),'rpop') or cmpr_eq(features:ImapSubSrc(),'mxs'))
        and cmpr_btw(features:MsgSize(), 100, 1000, true)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_lt(features:WordCount(), 10)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:UrlNormCount(), 2, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
    	and not StrMatch(features:Helo(), features:FromDomain())
    	and cmpr_gt(features:SubjectNumbersCount(), 5, true)
    	and cmpr_gt(features:SubjectWordCount(), 5, true)
        and wclass:PRECEDENCE_BULK()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and UrlsMatchStr('.ucoz.site')
    then
        SetPSAR('ar37')
        LogMsgToHadoop( 'dstat_minina_log', '#ar37' )
    end
    
    --ar38
    --fe / #zarabotok
    --03.01.17 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and (wclass:BADNET() or wclass:NEW_IP_7_DAYS())
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar38')
    end
    
    --ar39
    --mxs_mbp / #pernatoe zoloto #bit.ly
    --14.12.16 / philip.karpov
    --mfc_gm_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and cmpr_gt(features:NumberCount(), 15)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar39')
    end
    
    --ar40
    --mxs_other / #phishing paypal
    --04.01.17 / philip.karpov
    --moc_mo_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FAKE_PAYPAL_FROM()
        and wclass:FAIL_SPF()
        and wclass:PRECEDENCE_BULK()
        and wclass:NO_CTE()
    then
        SetPSAR('ar40')
    end
  
    
  
    --ar41
	--mxs_mbp / #google rambler
	--18.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),1000, 100000)
        and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_eq(features:MultipartNum(), 1)
 	    and cmpr_eq(features:EnvelopeFromDomain(),'yandex.ru')
        and cmpr_lt(features:LinesToWordsRatio(),5)
        and (cmpr_btw(features:Words8bitRatio(),50,95) or wclass:WORDS_OTHERS_BAD_RATIO())
        and wclass:NO_USER_AGENT()
        and wclass:RECEIVED_LAN_1()
        and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar41')
	end
    
    
    --ar42
	--mxs_mbp / #qip zarab /lem/
	--17.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_eq(features:FromDomain(),'qip.ru')
        and cmpr_btw(features:MsgSize(),300, 5000)
        and cmpr_eq(features:NoRealNameTo(),1)
        and TermsMatchGroup(18176,100) 
        and wclass:HELO_LOCALHOST()
    --    and wclass:DIFFERENCE_RCPTNUM_AND_TO()
	 then
		SetPSAR('ar42')
	end
    
    --ar43
    --mxs_other / #zarabotok
    --28.12.16 / philip.karpov(sokolik)
    --moc_mo_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 2, 4, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:HtmlTagCount(), 30)
        and wclass:SHORTURL()
        and wclass:SPF_NOT_PASS()
    	and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar43')
    end
      
    --ar44
    --fe / #zarabotok
    --14.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoTo(), 1)
        and cmpr_gt(features:WordCount(), 50, 450, true)
        and cmpr_gt(features:HtmlTagCount(), 5, true)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:ONE_WORD_SUBJECT()
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar44')
    end
    
    --ar45
    --mxs_mbp / #europribil'
    --04.01.17 / philip.karpov (guryanov fix)
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50, 2500, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and (wclass:REPLY_TO_WITHOUT_EMAIL() or wclass:DIFFERENCE_RCPTNUM_AND_TO() or wclass:SUBJECT_MIXED_BADRATIO())
        and (wclass:HAS_CC_AND_BCC() or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY() or wclass:XMAILER_NIMAILAGENT()
    		or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL())
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar45')
    end
    
    --ar46    
    --mxs_other / #cloud.mail.ru #virus
    --19.08.2016 / rassadovskiy
    --f70c34f7a9c90f037b948003f44e15a4 130ab2e23de01dd67d648bd1fe164160
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,40000)
        and (features:HasTextOnly() == 1
            or features:AttachArchiveCount() == 1
            or features:AttachOfficeCount() == 1)
        and features:MultipartNum() >= 2
        and features:NoRealNameTo()
        and features:NoUserAgent()
        and cmpr_btw(features:UrlNormCount(),0,5,true)
        and features:UrlCountWithoutMailRu() <= 3
        and cmpr_gt(features:HtmlTagCount(),5)
        and features:NoHtmlTag()
        and cmpr_gt(features:WordCount(),10)
        and (TermsMatchGroup(17786,100)
            or features:SPF() == "fail" and TermsMatchGroup(17786,50))
    then
        SetPSAR('ar46') 
    end
    
    --ar47
    --mxs_other / #cloud.mail #2MultipartNum  - esli 4to, pinat' moriaka  
	--18.09.16 / r.kulpin
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_eq(features:MultipartNum(), 2)
        and UrlsMatchStr('cloud.mail.ru',1)    
    then
    	SetPSAR('ar47')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar47' )
    end
    
    
	--ar48
    --mxs_other / #zarabotok
    --05.01.17 / philip.karpov
    --moc_mo_noimg
    if not IsBlocked
		and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:PHP_URL()
        and wclass:NONE_SPF()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar48')
    end
 
    
	--ar49
    --mxs_other / #zarabotok
    --05.01.17 / philip.karpov
    --moc_mo_nourl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:PRECEDENCE_BULK()
        and wclass:DOMAINS_EQUAL()
        and wclass:BAD_LINES_TO_WORD_RATIO()
    then
        SetPSAR('ar49')
    end
    
    
    --ar50
	--mxs_other mxs_mbp / #zarabotok
	--16.03.16 / fedorov/veselitsky	
	--4420a0472ccc63c217394d56f6bed3f7 714c65640ff828674b5edb1470c185dd 51a33f62d91b9a90a06e34a1fdc235ec
	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 200, 800)
    	and features:HasTextOnly() == 1
    	and features:NoTo() == 1
    	and features:InvalidFrom() == 1
    	and features:NoUserAgent() == 1
    	and features:NoSubject() == 1
    	and cmpr_btw(features:TextLines(), 2, 10)
    	and cmpr_gt(features:Words8bitRatio(), 75)
    	and wclass:MISSING_DATE()
    	--and wclass:TERMS_ZARABOTOK_V_SETI2()
	then
    	SetPSAR('ar50')
    end

    --ar51
    --mxs_other / #sedina 
    --16.03.2016 / rassadovskiy
    --3b9e29308ad5710f8e8c980eb58142c9 7d65bd363cf8a70debd84d69e5d5afce 1793cbbb972a0f57dee3a1479be9920a
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrc() == "imap" or features:RcvSrc() == 'rpop')
        and cmpr_btw(features:MsgSize(),70000,200000)
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and cmpr_gt(features:MultipartNum(),3)
        and features:UrlNormCount() == 2
        and cmpr_btw(features:TextLines(),30,50,true)
        and wclass:SUSP_ONE_IMG_EXTENSION()
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:FROM_LOCALPART_IN_MSG_ID_DOMAIN()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[(?i)^[a-z\d]+(?:\$[a-z\d]+){2,}$]])) 
    then
        SetPSAR('ar51') 
    end
    
    --ar52
    --mxs_mbp / #zarabotok
    --15.12.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 300, 10000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:FROM_REALNAME_IN_LOCALPART()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar52')
    end
    
    
	--ar53
	--mxs_other / #flud
	--29.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10 and features:MsgSize() <= 90
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:OneWordSubject() == 1
		and features:Subject7bitOnly() == 1
		and features:SubjectLen() >= 50
		and features:TextLines() == 1
		and features:WordCount() >= 1 and features:WordCount() <= 5
		and wclass:SUSP_NUMBER_TO_TEXT_RATIO()
		and wclass:MESSAGE_ID_NO_ANGLE_BRACKETS()
	then
		SetPSAR('ar53')
	end
    
    
    --ar54
    --fe / #zarabotok #pdf
    --15.12.16 / philip.karpov
    --fc_fb_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 500000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 0, 1, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 2, 6, true)
        and cmpr_btw(features:WordCount(), 2, 10, true)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and cmpr_gt(features:LinesToWordsRatio(), 60, true)
        and features:MailRuTo()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:WITH_HTTP()
        and wclass:AUTOREG()
    then
        SetPSAR('ar54')
    end
    
    
    --ar55
	--fe / #video #zarabotok
    --05.01.17 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_gt(features:MsgSize(),50000)
        and features:ImgNum() == 1
        and features:HasNoAttach() == 1
    	and features:FromEndsWithYear()
        and features:RepuserAge() <= 30
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_btw(features:UrlNormCount(),0,3)
    	and features:HasShortUrl()
    	and features:LinesToWordsRatio() >= 30
    	and features:DomainRepipAge() <= 30
        and wclass:SU_PRECONDITION()
    then
        SetPSAR('ar55')
    end
    
	--ar56
	--mxs_other / #fishing
	--29.06.2016 / zubr
	if not IsBlocked	
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 40000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 30
		and features:TextLines() >= 6 and features:TextLines() <= 30
		and features:WordCount() >= 20 and features:WordCount() <= 200
		and features:SubjectWordCount() >= 2 and features:SubjectWordCount() <= 10
		and features:Subject7bitOnly() == 1
		and features:Words7bitRatio() >= 70
		and features:Words8bitRatio() == 0
		and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and wclass:PROBABLE_PHISHING_FROM()
		and TermsMatchGroup(17172, 100) 
	then
       SetPSAR('ar56')
    end
    
	--ar57
	--mxs_other / #zarabotok
	--05.01.17 / glushenkov
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 20000, 70000)
		and features:HasTextOnly() == 1
		and features:ExternalImgNum() == 1
		and features:UrlNormCount() >= 900
		and (features:TextLines() >= 2 and features:TextLines() <= 5)
        --and (features:SubjectWordCount() >= 3 and features:SubjectWordCount() <= 6)
		and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_50()
		and wclass:FROMDOMAIN_STARTS_WITH_CAPITAL_LETTERS()
		and wclass:MANY_CAPITALS_IN_FROM()
    then
    	SetPSAR('ar57')  
    end

	--ar58
	--mxs_other / #zarabotok
	--05.01.17 / glushenkov
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 20000, 70000)
		and features:HasTextOnly() == 1
		and features:ExternalImgNum() == 1
		and features:UrlNormCount() >= 100
		and (features:TextLines() >= 2 and features:TextLines() <= 5)
		and wclass:FROMDOMAIN_STARTS_WITH_CAPITAL_LETTERS()
        and features:WordCount() > 0
        and features:DotCount()/features:WordCount() > 0.5
    then
    	SetPSAR('ar58')  
    end
    
	--ar59
	--fe / #zayavka #vakanciya
	--06.09.2016 / zubr
	if not IsBlocked	
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 80 and features:MsgSize() <= 400
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:ToRealNameInToLocalPart() == true
		and features:RepuserAge() <= 40
		and features:MobileMailRu() == 1
		and features:UrlNormCount() == 1
		and features:UrlsTextSize() >= 40
		and features:TextLines() >= 1 and features:TextLines() <= 3
		and features:WordCount() >= 2 and features:WordCount() <= 10
	then
       SetPSAR('ar59')
    end

	--ar60
    --fe / #test autoreg
	--05.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_gt(features:HtmlTags()['br'], 10)
        and wclass:HAS_ATTACH()
        and StrMatch(features:UrlsRawHashString(),".ru")
        and StrMatchRe(features:From(), regex([[^[a-z]{8,}19[0-9]{2}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar60')
    end

    --ar61
	--mxs_other / #zarabotok
    --12.01.17 / philip.karpov
    --moc_mo_nourl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:SPF_NOT_PASS()
        and (wclass:IP_IN_HELO() 
        	or wclass:HELO_UNKNOWN()
    		or wclass:SUSP_SENDER_HELO_DOMAIN()
			or wclass:FREE_HOSTING())
        and wclass:ONE_RECEIVED()
        and wclass:DOMAINS_EQUAL()
        and wclass:NO_USER_AGENT()
    then
        SetSpam('ar61')
    end 
    
    --ar62   
    --fe / #zarabotok
    --31.08.16 / minina
    --d10d796a68bdc5ca65d52c9da5c9198a cc8d27beb0a0a19e1281db95a632b4a1
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 50000, 500000, true)
        and not features:IsPddUser()
       	and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 5, 20, true)
    	and cmpr_btw(features:WordCount(), 10, 350, true)
    	and cmpr_gt(features:UrlNormCount(), 3, true)
    	and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_btw(features:UrlsTextSize(), 100, 500, true)
    	and wclass:AUTOREG()
    	and wclass:FROM_ENDS_IN_NUMS()
    	and wclass:CT_ENCODED_FILENAME()
	then
		SetPSAR('ar62', true)
		LogMsgToHadoop('dstat_minina_log', '#ar62')
	end 
    
	--ar63
    --smtp / #flud  #eng #img
	--17.10.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 100, 100000,true)
   		and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 100, true)
        and cmpr_btw(features:UrlNormCount(), 0, 1,true)
    	and cmpr_btw(features:HtmlTagCount(), 0, 30, true)
    	and cmpr_eq(features:WordMixedCount(), 0)
        and cmpr_gt(features:Words7bitRatio(),30)
       	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 7 ,true)
    	and cmpr_btw(features:RepuserAge(), 1, 7, true)
    	and (not features:MailRuTo() or cmpr_gt(features:RcptNum(), 1))
    	and (features:HasShortUrl() == 1 or TermsMatchGroup(17260, 10))
    	and wclass:FAST_AUTOREG() 
    then 
        SetPSAR('ar63') 
        LogMsgToHadoop( 'dstat_minina_log', '#ar63')
    end
    
    --ar64
    --mxs / #yandex #predlojenie
	--19.09.16 / r.kulpin
    --e8d4ef35fc372413d036f0a6aed947e9 779349ced43547fdc403059a63de23bc
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(), 'mxs') 
    	and cmpr_btw(features:MsgSize(), 100, 3000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
      	and cmpr_lt(features:WordCount(), 15, true)
    	and cmpr_btw(features:TextLines(), 1, 4, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:LinesToWordsRatio(), 10, 60, true)
        and cmpr_btw(features:Words7bitRatio(), 1, 25, true)
    	and (wclass:YANDEX_DISC_AND_SHORT_MESSAGE() or wclass:FAKE_FREE_MAIL())
        and wclass:MS_MAILER()
        and wclass:HTML_BODY_HEAD()
        and HeaderMatch('Content-Type', 'boundary="----=_NextPart')
       and HeaderMatchRe('Message-ID', regex([[^\<[A-Z\d]{20,40}\@]]))
    then
    	SetPSAR('ar64')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar64' )
    end
     
    --ar65
	--mxs_other / #chasi #watch
	--19.09.16 / minina
	--1f054ceee672bd36a8074b342fbabf4b 1f054ceee672bd36a8074b342fbabf4b
 	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 5000, 1500000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_gt(features:WordCount(), 10, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100, true)
    	and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
     	and wclass:MISSING_DATE()
		and (wclass:DKIM_FAIL() 
        	or features:DkimDomain() and cmpr_eq(features:DkimDomainCategory(), 'small'))
    	and (wclass:NOREALNAME_FROM() or wclass:ONE_WORD_SUBJECT())
        and wclass:PRECEDENCE_BULK()
    then
    	SetPSAR('ar65')
        LogMsgToHadoop( 'dstat_minina_log', '#ar65' )
    end
    
    --ar66
    --fe / #zarabotok
    --15.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 500000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:MailRuTo()
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:AUTOREG()
        and wclass:NEW_IP_30_DAYS()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar66')
    end
    
	--ar67
	--mxs_mbp / #efremov
	--16.12.16 / razuvaev(sokolik)
    --235b369c0d47faf8704e440aa329b0c0 541e87c0c5d069b766521603fb459e79
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10, 10000)
    	and cmpr_gt(features:UrlNormCount(), 1, true)
        and cmpr_eq(features:LastHelo(),"helo=smtpout.ngs.ru")
        and wclass:ANTIVIRUS_STATUS()
        and wclass:MISC_SUSP_MAILERS()
        and (TermsMatchGroup(18163, 100)
    		or wclass:ENGLISH_TEXT_AND_CTE_8BIT())
	then
		SetPSAR('ar67')
	end
    
	--ar68
    --mxs_other / #zarabotok
    --05.01.17 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:IP_IN_HELO()
        and wclass:ONE_RECEIVED()
        and wclass:DOMAINS_EQUAL()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar68')
    end
    
    --ar69
    --fe / #zarabotok 
    --21.12.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 30000)
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 60, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 1, 1000)
        and cmpr_btw(features:TextLines(), 1, 50)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
		and wclass:FROM_ENDS_WITH_YEAR()
    	and cmpr_gt(features:Words8bitRatio(), 60)
      	and (wclass:RU_RF_URLS()
    		or UrlsMatch(regex([[\.ru$]]), 1)) 
    then
        SetPSAR('ar69')
        LogMsgToHadoop('dstat_sokolik_log', '#ar69')
    end

    --ar70
	--mxs_mbp / #yandex_search
	--16.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and features:IsFromYandex()
        and cmpr_lt(features:MsgSize(), 500)
    	and cmpr_eq(features:MultipartNum(), 1)
        and wclass:ONLY_URLS_IN_BODY()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
  		and TermsMatchGroup(18164, 100) 
	then
		SetPSAR('ar70')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar70')
    end
    
	--ar71
    --mxs_other / #seminary
    --20.09.2016 / rassadovskiy
    --aff5891b3a466c602a7292bfb69e2392 ccfe86315c127bdc5e17c34034422549 f99fc8ff941e92c129cf40983bf0b11d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and not wclass:EXCEPTIONS()
        and cmpr_gt(features:MsgSize(),1000) 
        and (features:HasTextOnly() == 1 or features:AttachOfficeCount() > 0)
        and features:MultipartNum() >= 3
        --and features:NoRealNameTo()
        and features:UrlNormCount() <= 3
        and features:HtmlTagCount() > 10
        and features:WordCount() > 20
        and wclass:HAS_HEADER_SENDER()
        and features:FromDomain()
        and StrMatchRe(features:FromDomain(),regex([[^\d+[a-z]+\-[a-z]+\.ru$]]))
    then
        SetPSAR('ar71') 
    end
    
	--ar72
	--mxs_other / #zarabotok
	--20.09.2016 / zubr
	--5de0e57e5deaf4c23c08659b7790a216 a123281099307cf9222cff2a9e8360d0
	if not IsBlocked	
		and (features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == "mxs")
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
		and wclass:TO_LOCALPART_IN_REALNAME()
		and wclass:NEW_FROMDOMAIN_AND_DKIM_7_DAYS()
		and wclass:DOMAINS_EQUAL()
		and wclass:URL_FROM_BODY_IN_FROM()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
	then
       SetPSAR('ar72')
    end
    
	--ar73
    --mxs_mbp / #eng #yahoo #SU
    --20.09.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and features:HasShortUrl() == 1
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 2, 20, true)
        and cmpr_btw(features:WordCount(), 10, 80, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 30, true)
    	and cmpr_eq(features:SubjectWordCount(), 1)
    	and wclass:SHORT_ENGLISH_MESSAGE()
        and wclass:MORE_1_EMAILS_IN_TO()
    	and wclass:RELAY_RECEIVED_FROM_FREEMAIL()      
    then
        SetPSAR('ar73',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar73' )
    end
    
	--ar74
	--mxs_mbp / #efremov
	--16.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10, 100000)
    	and cmpr_gt(features:UrlNormCount(), 1, true)
        and cmpr_eq(features:LastHelo(),"helo=smtpout.ngs.ru")
        and cmpr_eq(features:FromRealNameWordCount(), 1) 
        and wclass:ANTIVIRUS_STATUS()
        and wclass:MISC_SUSP_MAILERS()
        and not wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar74',true)
	    LogMsgToHadoop('dstat_sokolik_log', '#ar74')
    end
    
	--ar75
    --smtp / #zarabotok #dogovornye_matchi #pdd
	--20.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 500, 20000, true)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_btw(features:TextLines() ,2, 20, true)
    	and cmpr_btw(features:WordCount(), 100, 1000, true)
    	and cmpr_gt(features:SubjectWordCount(), 2, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
       	and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 15, true)
    	and cmpr_gt(features:WordsMixedRatio(), 20, true)
    	and wclass:SHORT_BOUNDARY()
    	and wclass:WORDS_WITH_NOISE()
    	and wclass:SOURCE_IP_IN_DNSBL()
    then
    	SetPSAR('ar75')
        LogMsgToHadoop( 'dstat_minina_log', '#ar75' )
    end
    
	--ar76
	--mxs_other / #rayban
	--20.09.16 / minina
	--99f79e3f6c7f82eb0709d214d0ae38f0 048f7cda4773b11fb72b5cc0a52f82cf
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 5000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 2, 30, true)
    	and cmpr_btw(features:WordCount(), 20, 150, true)
       	and cmpr_gt(features:UrlNormCount(), 3, true)
       	and cmpr_eq(features:MultipartNum(),1)
       	and cmpr_eq(features:SubjectWordCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 10, 80, true)
    	and cmpr_eq(features:HasFreeHosting(), 1)
   		and wclass:PHP_URL()
    	and wclass:THIRD_LVL_DOMAIN_IN_FROM()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:HAS_EXTERNAL_IMG()
    then
    	SetPSAR('ar76')
        LogMsgToHadoop( 'dstat_minina_log', '#ar76' )
    end
       
    --ar77
    --mxs / #zarabotok #link.
    --03.01.17 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and wclass:ONE_RECEIVED()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:PTR_ERROR() or wclass:SUSP_SWIFT_BOUNDARY())
        and UrlsMatch(regex([[link\.[a-z\-]+\d{0,3}\.[a-z]{2,3}]]),1)
        and TermsMatchGroup(18214, 10)
    then
        SetPSAR('ar77')
    end
    
    --ar78
    --mxs / #zarabotok #link. #top #us #pw
    --03.01.17 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other" 
        and features:MultipartNum() == 1
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:PTR_ERROR() or wclass:NEW_FROMDOMAIN_30_DAY() or wclass:MISSING_DATE())
        and UrlsMatch(regex([[link\.[a-z]+\d{0,3}\.(pw|top|us)]]),1)
        and TermsMatchGroup(18214, 10)
    then
        SetPSAR('ar78')
    end
    
    --ar79
    --mxs / #zarabotok
    --01.07.16 / r.belyankin
    --57c1fa55c2892082f45fe6466a0769fa 92562f38eac3c1a487f1de5959200b5c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 500, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 70)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 25, true)
        and cmpr_btw(features:WordCount(), 20, 100)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and cmpr_lt(features:HtmlTagCount(), 40)
        and wclass:SHORT_BOUNDARY()
        and wclass:OTHER_IP_IN_DNSBL()
        and (wclass:RECEIVED_BAD_PATTERN_4() or wclass:NEW_IP_15_DAYS())
        and (wclass:PTR_ERROR() or wclass:PTR_OFF())
    then
        SetPSAR('ar79')
    end
    
	--ar80
	--fe / #rabota na domu 
	--29.06.2016 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and features:MsgSize() >= 500 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
        and cmpr_lt(features:Karma(),0,true)
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
		and features:TextLines() >= 3 and features:TextLines() <= 30
		and features:WordCount() >= 20 and features:WordCount() <= 400
		and features:SubjectWordCount() <= 10
		and features:UrlNormCount() <= 5
		and features:WordsMixedRatio() >= 65 and features:Words8bitRatio() >= 4
	then
		SetPSAR('ar80')
	end    
    
	--ar81
	--fe / #rabota na domu 
	--20.06.2016 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and features:MsgSize() >= 500 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
		and features:TextLines() >= 3 and features:TextLines() <= 30
		and features:WordCount() >= 20 and features:WordCount() <= 400
		and (features:NoSubject() or cmpr_gt(features:RcptNum(), 5, true))
		and features:UrlNormCount() <= 3
		and features:WordsMixedRatio() >= 30 and features:Words8bitRatio() >= 4
		and TermsMatchGroup(17165, 100)
	then
		SetPSAR('ar81')
	end
    
    
    --ar82
	--fe / #google bez gruppi
	--19.09.16 / razuvaev
	if not IsBlocked
        and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 200, 2500) 
		and cmpr_eq(features:HasTextOnly(),1)
		and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_eq(features:MultipartNum(),3)
    	and (features:AbfCityWasChanged() or features:AbfIpWasChanged())
    	and cmpr_lt(features:RepuserAge(), 20)
    	and cmpr_lt(features:Karma(),0)
		and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 4, 20, true)
    	and cmpr_eq(features:UrlNormCount(),0)
	    and wclass:WORDS_MIXED_RATIO()
        and wclass:AUTOREG_WITH_BAD_CARMA()
    then
    	SetPSAR('ar82', true)	
    end
    
	--ar83
	--mxs_other / #privet #pidori
	--19.09.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 50000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 0 and features:UrlNormCount() <= 5
		and features:TextLines() >= 3 and features:TextLines() <= 200
		and features:WordCount() >= 10 and features:WordCount() <= 1000
		and (features:Words8bitRatio() >= 10 or features:SubjectWords8bitRatio() >= 50)
		and (features:IpAge() <= 30 or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:BCC_MORE_5())
		and (wclass:URL_IN_EPILOGUE_OR_PREAMBLE() or wclass:SUSP_PREAMBLE_AND_EPILOGUE_SIZE())
		and (wclass:HAS_VIRT_PART() or wclass:HAS_BIG_VIRT_PART())
	then
		SetPSAR('ar83')
	end
    
    --ar84
    --mxs / #zarabotok #html #php
    --03.01.17 / r.belyankin
    if not IsBlocked
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasNoAttach() == 1
        and not features:DkimDomain()
        and features:ImgNum() >= 1 and features:ImgNum() <= 3
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 80
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and (wclass:HAS_X_PHP_SCRIPT() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatch(regex([[\/[a-zA-Z]+\.(php|html)$]]),1)
        and not UrlsMatch(regex([[\/(index|order|load|post)\.php$]]),1)
    then
        SetPSAR('ar84')
    end
    
	--ar85
	--mxs_mbp / #.top
	--16.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10, 100000)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
		and cmpr_eq(features:NoHtmlTag(), 1) 
        and wclass:TOP_URLS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
	then
		SetPSAR('ar85')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar85')
    end
    
    --ar86
    --fe / #pohydenie #fake_link
    --21.09.16 / r.kulpin
    --f7e32ccf50931b8dcff2d2082e230adf a94a4e31ea6b7cc9679dcc4e1131f6a4 7aaaaf4f92f98f7645a915870f8b5f25
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
		and features:NoRealNameTo()
        and features:HeloInMsgId()
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
		and cmpr_gt(features:SubjectWordCount(), 4, true)
        and cmpr_btw(features:TextLines(), 2, 10, true)
        and cmpr_btw(features:WordCount(), 20, 80, true)
        and features:XMailerName() == "Mail"
        and (cmpr_lt(features:Karma(), 0, true) or cmpr_eq(features:IsAutoreg(), 1) or features:AbfCityWasChanged() )
        and cmpr_eq(features:FromRealNameWordCount(), 1)		
        and wclass:RUSSIAN_FROM_REALNAME()       
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and HeaderMatchRe('Message-ID', regex([[\d{8,15}\.\d{8,15}\@]]))
        and HeaderMatchRe('Content-Type', regex([[boundary="--ALT--[a-z]{25,40}\d{7,15}"$]]))       
    then
        SetPSAR('ar86')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar86')
    end
    
    --ar87
    --mxs_other / #buhgalter #seminar #inostrrab #vakansia #textonly
	--18.09.16 / r.kulpin
	--fd12f1c136e3f7ca44c67f5bf92cf5b4 ae4cbb39a550814d1dd53713ca518ec5 61bc5e140f777450ac42af377df4a715
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 10000, 300000, true)
    	and cmpr_eq(features:HasTextOnly(), 1) 
		and cmpr_eq(features:MultipartNum(), 3)
        and features:GetSubjectEncoding() == "WINDOWS-1251" 
      	and cmpr_btw(features:WordCount(), 700, 1500, true)
    	and cmpr_btw(features:TextLines(), 30, 100, true)
        and cmpr_lt(features:LinesToWordsRatio(), 15, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 1, 150, true)
        and cmpr_btw(features:NumberCount(), 100, 350, true)
        and cmpr_btw(features:NumbersToZeroRatio(), 10, 35, true)
    	and wclass:SHORT_BOUNDARY()
    	and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
        and wclass:HAS_STD_URL_IN_SUBSCRIPTION()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar87')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar87')
    end
    
    --ar88
    --fe / #virus #fake_attach
	--20.12.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:HasTextOnly(), 1)    
        and cmpr_btw(features:TextLines(), 0, 50, true)
        and cmpr_btw(features:WordCount(), 0, 500, true)
		and cmpr_gt(features:UrlNormCount(), 1, true)
    	and wclass:FAKE_ATTACH()
    	and (wclass:WORDS_MIXED_RATIO()
    		or wclass:SUBJECT_MIXED_BADRATIO())
    then
        SetPSAR('ar88', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar88')
    end

    --ar89
    --mxs_other / #zarabotok
    --06.01.17 / philip.karpov
    --moc_mo_spffail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50000, 5000000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:NEW_IP_7_DAYS()
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:HTML_SPAN_FONT_40()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar89')
    end
    
    --ar90
    --mxs / #karset
    --09.04.16 / r.belyankin
    --648450de81965e2a2911b8a5f4a7b493
    if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000, 250000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_lt(features:ImgNum(),1,true)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:OneWordSubject(), 1)
        --and cmpr_eq(features:SubjectLen(), 6)
        and cmpr_eq(features:Subject8bitOnly(), 1)  
        and cmpr_eq(features:TextLines(), 1)
        and cmpr_eq(features:HtmlTagCount(), 3)
        and cmpr_lt(features:WordCount(), 5)
        and cmpr_eq(features:Words7bitRatio(), 100)
    then
        SetPSAR("ar90")
    end
    
    --ar91
	--mxs_other / #zarabotok
    --06.01.17 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 2, 4, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FROM_AND_REPLY_TO_REALNAMES_MISMATCH()
        and wclass:UNKNOWN_IN_RECEIVED()
        and wclass:WORDS_TO_URLS_BADRATIO()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar91')
    end
    
	--ar92
	--mxs_other / #avito #zarabotok
	--17.05.2016 / zubr
	--9945f29ab0d1229c06f57b02c801040f 72201f230fff2a6bac758edf61c3471f
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 4000    
		and features:HasTextOnly() == 1    
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and features:SPF() == "fail"    
		and features:RcptNum() >= 10    
		and features:UrlNormCount() == 1    
		and features:TextLines() >= 5 and features:TextLines() <= 15
        and features:WordCount() > 0
		and features:LinesToWordsRatio() >= 20
    then
       SetPSAR('ar92')
    end
    
	--ar93
	--fe / #dropbox #zarabotok
	--17.05.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
        and not features:IsPddUser()
		and features:MsgSize() >= 200 and features:MsgSize() <= 2000    
		and features:HasTextOnly() == 1    
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and features:NoRealNameTo() == 1
		and features:RepuserAge() >= 0 and features:RepuserAge() <= 3
		and features:Karma() < 0
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:HasFreeHosting() == 1
		and features:WordCount() >= 10 and features:WordCount() <= 120
		and UrlsMatchStr('dropboxusercontent')
    then
       SetPSAR('ar93')
    end

    --ar94
    --mxs / #avitorabota
    --by r.kulpin
    --53e359cd187ef8dafa417943c187e2eb  55cb4da141af5f989d16b45bb33fa39a ebac74dacb7d814db90477c78cc8ce98
    if not IsBlocked   
       and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
       and cmpr_btw(features:MsgSize(), 2000, 25000)
       and cmpr_eq(features:HasTextOnly(), 1)
       and cmpr_eq(features:NoRealNameTo(), 1)
       and cmpr_gt(features:RcptNum(), 5, true)
       and features:Subject8bitOnly()
       and cmpr_eq(features:MultipartNum(), 1)
       and cmpr_lt(features:UrlNormCount(), 7, true)
       and cmpr_eq(features:HasImageUrl(), 1)
       and cmpr_btw(features:WordCount(), 50, 600) 
       and wclass:ONE_RECEIVED()
    then    
       SetPSAR('ar94')
    end
    
	--ar95
	--mxs_other / #zarabotok
	--28.07.2016 / zubr(sokolik)
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and features:MsgSize() >= 20000 and features:MsgSize() <= 80000
        and features:HasTextOnly() == 1
        and features:NoRealNameTo() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 30
        and features:WordCount() >= 50 and features:LinesToWordsRatio() >= 15
        and features:MultipartNum() == 1
		and features:HtmlTagCount() >= 150
		and features:HtmlUniqueTagCount() <= 30
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 6
		and features:UrlsTextSize() >= 300
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS())
        and wclass:NO_CTE()
        and wclass:HAS_IMAGE_URL()
        and (wclass:ENGLISH_LANGUAGE_MESSAGE() or wclass:ONLY_7BIT_WORDS())
    then   
        SetPSAR('ar95')
    end
    
    --ar96
    --mxs_other / #zarabotok
    --11.04.16 / minina
    --e9b215db48c545243fc5653835958783
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 25000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_btw(features:TextLines(), 5, 200, true)
        and cmpr_btw(features:WordCount(), 10, 500, true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:MultipartNum(), 3,true)
        and cmpr_eq(features:UrlNormCount(),2)
        and wclass:NEW_FROMDOMAIN_30_DAY()
        and wclass:HDR_LIST_UNSUBSCRIBE()
        and wclass:SUSP_SWIFT_BOUNDARY()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and UrlsMatch(regex([[^(?:[a-z\d]+\.){2}[a-z]+(?:/[a-z\d_-]+){4,}$]]),1)
    then
        SetPSAR('ar96')
        LogMsgToHadoop( 'dstat_minina_log', '#ar96' )
    end
    
    --ar97
    --fe / #bizml.ru
    --06.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and features:IsPddUser()
        and StrMatchRe(features:From(), regex([[^[a-z]{4,}[0-9]{2,4}@[a-z0-9]{4,}\.bizml\.ru$]]))
    then
        SetPSAR('ar97')
    end
 
    --ar98
    --mxs_other / #avito #zarabotok
    --05.12.16 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and not (HasHeader('X-MailRu-Forward') or wclass:X_MAILRU_FORWARD())
        and cmpr_eq(features:HasTextOnly(), 1)
        and features:UrlNormCount() > 1
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and HeaderMatch('X-DMARC-Result','fail')
        and TermsMatchGroup(10469,100)
    then
        SetPSAR('ar98')
    end

    --ar99
    --mxs_other / / #MBS
    --12.04.2016 / zubr
    --f365f31288260d063fddd392a63f0eeb 56a3db6bd462cd4832e3f87c55979204 077bbfbe8312d906cdea77313558984d
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 6000, 65000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 70)
        and cmpr_lt(features:UrlNormCount(), 10, true)
        and cmpr_btw(features:UrlsTextSize(), 350, 2000)
        and cmpr_eq(features:FreeHostingUrlCount(), 1)
        and cmpr_btw(features:TextLines(), 3, 90)
        and cmpr_btw(features:WordCount(), 10, 200)
        --and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EmailsCountInBody(), 1)
        and wclass:RUSSIAN_FROM_REALNAME() 
        and (mrasRepHasSendingGap(features:FromDomain(), 3, 30, 14) or wclass:NEW_FROMDOMAIN_30_DAY())
    then   
        SetPSAR('ar99')
    end    

    --ar100
	--mxs_other / #sumki
    --06.01.17 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:HELO_IN_MSGID()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:WINDOWS_SUSP_HOST_FROM_WITH_MULTIPLE_HEADERS()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar100')
    end
    
 	--ar101
	--mxs_other / #watch #priveti
	--21.07.16 / r.kulpin	
	--1477e77b2ad0e1a94cb433a7c5007d4f 7aa08d617c1668c17437522ff9dba4d2 6ab3028ede7f47564d33b6c7e7069242
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrc(), 'imap') or cmpr_eq(features:RcvSrc(), 'rpop') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
		and cmpr_btw(features:MsgSize(), 500, 2000000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and features:NoRealNameTo()
        and features:NoRealNameFrom() 
        --and features:Subject7bitOnly()
    	--and cmpr_gt(features:SubjectLen(), 30, true)
		and cmpr_btw(features:WordCount(), 50, 250, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 6, 40, true)
 		and (wclass:MESSAGE_ID_NO_DOMAIN() or wclass:PTR_ERROR() or wclass:REMOTE_IP_IN_SPAMHAUS())
 		and (wclass:MSGID_ONLY_BIG_SYMBOL() or wclass:SHORT_BOUNDARY_WITHOUT_LETTERS() or wclass:DOLLAR_IN_MSGID() or wclass:SHORT_BOUNDARY())
 		and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:HTML_BODY_HEAD()
        and (wclass:PTR_ERROR() or wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO())
	then
		SetPSAR('ar101')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar101')
    end
    
    --ar102
	--mxs_other / #vk.com/page #zarabotok
	--20.09.16 / minina
	--85d52b8c93283ed543c627f4740e5821 59e43974609a3ac1511a4da7e8caacb8 a3ce7bcac47228ae42e5a940943b1ffd
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 500, 2000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 2, 15, true)
    	and cmpr_btw(features:WordCount(), 10, 50, true)
    	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_eq(features:UrlNormCount(), 1)
       	and cmpr_eq(features:MultipartNum(), 3)
       	and cmpr_gt(features:SubjectWordCount(), 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30, true)
    	and cmpr_gt(features:RcptNum(), 10)
   		and wclass:SHORT_BOUNDARY()
    	and wclass:WORDS_MIXED_RATIO()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
      	and UrlsMatchStr('vk.com/page', 1)
    then
    	SetPSAR('ar102')
        LogMsgToHadoop( 'dstat_minina_log', '#ar102' )
    end
   
    --ar103
    --mxs / #greencard
    --27.12.16 / r.belyankin
    --wc_ip_ham_ps
        if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:HasTextOnly() == 1
        and not wclass:PHP_URL()
        and UrlsMatchStr('.htm', 1)
        and TermsMatchGroup(18121, 10)
        and StrMatchRe(features:FromLocalPart(), regex([[^[a-z]+\.[a-z\d]+$]]))
    then
        SetPSAR('ar103')
    end
    
    --ar104
    --mxs / #zarabotok #youngip #youngdomain
    --12.04.16 / r.belyankin
    --c332906e2d37d1d09c0810bef9c00a12
    if not IsBlocked
    	and not wclass:EXCEPTIONS()
        and (features:RcvSrcExt() == 'mxs_other' or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 1000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 5, true)
        and cmpr_btw(features:UrlCount(), 2, 10)
        and cmpr_eq(features:EmailInToRealName(), 1)
        and cmpr_eq(features:HasUnsubscribeUrl(), 1)
        and cmpr_btw(features:TextLines(), 10, 100)
        and cmpr_btw(features:WordCount(), 50, 150)
        and cmpr_lt(features:Words7bitRatio(), 20, true)
        and cmpr_gt(features:HtmlTagCount(), 20, true)
        and cmpr_gt(features:HtmlTagsUnknownCount(), 1, true)    
        and UrlsMatch(regex([[\/campaigns?\/[a-z0-9]+\/track\-url\/]]), 1)
    then
        SetPSAR('ar104')
    end
    
    --ar105
	--mxs_other / #spam
    --06.01.17 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:SPAM_FROM_JP()
        and wclass:RETURNPATH_BLACKLISTED()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:PHP_URL()
    then
        SetPSAR('ar105')
    end
   
	--ar106
	--mxs_other / #taliya #korset
	--04.07.16 / veselitsky	
	--f5dbac2942eea159d0d779201af106d5 35d5b5b88b13069921e54a2494684c39
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 200, 2000)
    	and	features:HasTextOnly() == 1
    	and cmpr_gt(features:MultipartNum(), 3)
        and (cmpr_gt(features:SubjectWords8bitRatio(), 0) or features:SubjectMixedOnly() == 1)
    	and cmpr_btw(features:WordCount(), 0, 50, true)
    	and cmpr_btw(features:TextLines(), 0, 15, true)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and (wclass:CT_IN_BODY() or features:CtMultipartSpamPattern25() or
    		(wclass:ONLY_URLS_IN_BODY() and wclass:SHORT_WITH_URLS() and features:CtMultipartSpamPattern28()))
    	--and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and wclass:ONE_RECEIVED()
    then
    	SetPSAR('ar106')
    end
    
    
	--ar107
	--mxs_other / #perevod/balans_in_subj #zarabotok
	--20.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 5000, 20000, true)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 1)
      	and cmpr_btw(features:TextLines(), 2, 50, true)
    	and cmpr_btw(features:WordCount(), 10, 300, true)
    	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_gt(features:UrlNormCount(), 3, true)
       	and cmpr_eq(features:MultipartNum(), 5)
       	and cmpr_gt(features:SubjectWordCount(), 2, true)
    	and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
   		and wclass:SPF_NOT_PASS()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
      	and UrlsMatchStr('.vk.com/doc', 1)
    then
    	SetPSAR('ar107',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar107' )
    end

    --ar108
	--mxs_other / #flood
    --06.01.17 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:PTR_ERROR()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:HELO_IN_FROM()
    then
        SetPSAR('ar108')
    end
    
	--ar109
	--fe / #zarabotok #attach #millionaire
	--25.07.2016 / veselitsky	 
	--1acc92d25e9d5e80ba64790dca0adbb1 1e9e412cade839456ddfe65ac97723b4 dee097b8440345656bbbaa09635b4115
	if not IsBlocked
		and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 50000, 1000000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachOfficeCount() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_btw(features:RepuserAge(), 0, 5) or cmpr_gt(features:AbfCountriesPerMonthNum(), 2))
    	and	cmpr_btw(features:TextLines(), 0, 4, true)
    	and cmpr_btw(features:WordCount(), 0, 20, true)
    	and (wclass:NEW_IP_30_DAYS() or features:IpCategory() == 'tiny')
        --and cmpr_gt(features:SubjectWordCount(), 3)
    	and StrMatchRe(features:PartsFilenames(), regex([[^[A-Za-z\d]{2,8}\_[A-Za-z\d]{2,8}\.pdf$]]))
		and wclass:ENGLISH_LANGUAGE_MESSAGE()
		and not wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar109', true)
	end

    --ar110
    --mxs_other / #8000 #zarabotok
    --03.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),1000,5000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_gt(features:MultipartNum(),3,true)
        and features:NoUserAgent() == 1
        and cmpr_btw(features:UrlNormCount(),0,3)
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_gt(features:TextLines(),5)
        and cmpr_btw(features:WordCount(),20,200)
        and wclass:FROM_INFORMATION_SERVICE()
        and UrlsMatchStr('.online') 
    	and features:MsgIdLocalPart()
    	and StrMatchRe(features:MsgIdLocalPart(), regex([[^mail\d{4}_[\d\.]+$]]))
    then
        SetPSAR('ar110') 
    end
    
	--ar111
	--mxs_other / #zarabotok #8000r
	--25.07.2016 / veselitsky	 
	--5a289ba407f558beac4152c4a81ce00a 8fafdee6c42529acc7ed09cff36405df 072078fc3a11f2f87bfdde76d2270f3a
	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'local'
			or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and features:HasNoAttach() == 1
    	and cmpr_lt(features:ImgNum(), 1, true)
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and	cmpr_btw(features:TextLines(), 2, 26, true)
    	and cmpr_btw(features:WordCount(), 5, 100, true)
    	and TermsMatchGroup(10604, 100)
    	and (TermsMatchGroup(17223, 100) or TermsMatchGroup(17192, 100))
		and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:OTHER_IP_IN_DNSBL() or (wclass:PTR_ERROR() and wclass:SPF_NOT_PASS()) or wclass:TOP_URLS())
 		and (wclass:HAS_TAG_META() or wclass:TERMS_ZARABOTOK_V_SETI2() or wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL())
	then
		SetPSAR('ar111')
	end

	
    --ar112
	--mxs_mbp / #vbei v google #ya.ru
	--13.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:UrlNormCount(), 1,true)
    	and cmpr_gt(features:Words8bitRatio(), 50)
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:NO_USER_AGENT()
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG() 
        and UrlsMatchStr('google.ru') 
	then
		SetPSAR('ar112')
	end
    
	--ar113
	--mxs_other / #zarabotok #cloud.mail.ru
    --06.01.17 / philip.karpov
    --moc_mo_fh
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 4, 6, true)
        and wclass:FAKE_IN_REPLY_TO()
        and wclass:HAS_FREE_HOSTING()
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:URL_IN_FROM_DOMAINPART()
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar113')
    end
    
    --ar114
	--mxs_mbp / #caps_caps #zarabotok #img_only
	--01.11.2016 / r.kulpin
	--a557ff1ebfffa372ebdc6e779634d1dc 0db8b6bd9704b0ea05a0d03e207d2c10
	if not IsBlocked
  		and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 100000, 600000)   
        and cmpr_eq(features:ImgNum(), 1)
    	and features:HasNoAttach()
    	and cmpr_eq(features:MultipartNum(), 3)
        and features:Subject8bitOnly()  
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:TextLines(), 0)
        and cmpr_lt(features:SubjectWordCount(), 6)                 
        and wclass:MORE_5_EMAILS_IN_TO()
        and wclass:FROM_REALNAME_SYMBOLS_ARE_UPPERCASE()
        and wclass:SUBJECT_WITH_CAPS()
    	and wclass:SHORT_BOUNDARY()
	then
		SetPSAR('ar114')
        LogMsgToHadoop('dstat_kulpin_log', '#ar114')
	end
    
    --ar115
    --fe / #viagra #eng #rf_url
	--22.09.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
      	and cmpr_btw(features:MsgSize(), 100, 1000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 1, 8, true)
    	and cmpr_btw(features:WordCount(), 5, 50, true)
       	and cmpr_eq(features:UrlNormCount() , 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
    	and not features:MailRuTo()
    	and features:Subject7bitOnly()
    	and (cmpr_btw(features:RepuserAge(),1,15,true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 20, 5))
    	and features:AbfIpWasChanged()
       	and wclass:ONLY_7BIT_WORDS()
    	and wclass:SHORT_MESSAGE()
    	and wclass:CYRILLIC_URL()
    then
    	SetPSAR('ar115')
        LogMsgToHadoop( 'dstat_minina_log', '#ar115' )
    end
    
    --ar116
	--mxs_other / #greencard
    --12.09.16 / veselitsky		
	--bdc7ceed165e6720617b37b23c771d3d bfdc682f3e331b49a1575006e0aa7406
    if not IsBlocked 
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 500, 14000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:IpAge(), 0, 250)
    	and cmpr_btw(features:TextLines(), 2, 50)
		and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and cmpr_btw(features:HtmlTagCount(), 0, 100, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and UrlsMatchStr('.htm', 1)
    	and features:ToRealNameInSubject()
    then
    	SetPSAR('ar116')
    end
    
	--ar117
	--mxs_other / #zarabotok
	--19.09.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 500000 
		and features:ImgNum() == 1 
		and features:HasNoAttach() == 1
		and features:MultipartNum() > 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 6
		and features:TextLines() >= 1 and features:TextLines() <= 50 
		and features:WordCount() >= 2 and features:WordCount() <= 300
		and wclass:SHORT_BOUNDARY()
		and (features:HasFreeHosting() == 1 or UrlsMatchStr('vk.com'))
		and (HeaderMatch('Authentication-Results', 'spf=permerror') or wclass:FAIL_SPF())
		and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
	then
		SetPSAR('ar117')
	end
    
    --ar118
    --mxs_mbp / #list-manage
    --19.07.16 / rassadovskiy
    --b74104655d966cb97758f4c120f68365 00aa32422311d8adb08e428881e6688c 2c5a715a89faebc07208cdd3f8376b19
    if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
        and cmpr_btw(features:MsgSize(),100,50000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
    	and (features:InvalidFrom() or features:NoFrom() or features:Helo() == "smtpout.ngs.ru")
        and cmpr_btw(features:UrlNormCount(),2,5,true)
    	and (features:NoRealNameFrom() or features:NoFrom())
        and (features:NoRealNameTo() or features:NoTo())
        and cmpr_gt(features:TextLines(),1,true)
    	and cmpr_gt(features:WordCount(),5)
        and (cmpr_gt(features:WhitespaceToWordRatio(),200) or features:NoHtmlTag())
    	and features:MsgIdLocalPart()
    	and (wclass:HDR_X_DMARC_RESULT_FAIL() or wclass:NO_FROM() or wclass:MISC_SUSP_MAILERS())
    	and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
        	or wclass:OTHER_IP_IN_DNSBL()
    		or StrMatchRe(features:MsgIdLocalPart(),regex([[web\-\d+$]])))
        and not wclass:HDR_LIST_UNSUBSCRIBE()
        and (UrlsMatchStr('list-manage')
        	or UrlsMatchStr('mailchimp.com'))
	then
        SetPSAR('ar118')
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar118')
    end
    
    
	--ar119
    --mxs_other / #efremov
    --07.01.17 / philip.karpov
    --fkd_mx3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:BADNET()
        and wclass:NEW_IP_30_DAYS()
        and wclass:PHP_URL()
        and wclass:DKIM_FAIL()
    then
        SetPSAR('ar119')
    end
    
    --ar120
    --mxs_other / #zarabotok
    --02.07.2016 / zubr
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == "mxs" or features:RcvSrcExt() == "mxs_mbp" )
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
		and features:MultipartNum() >= 3
		and wclass:TO_IN_SUBJECT()
        and features:UrlCountWithoutMailRu() <= 3
		and features:HtmlTagCount() <= 20
        and features:TextLines() >= 2 and features:TextLines() <= 30
        and (wclass:MESSAGE_ID_NO_DOMAIN() or wclass:CT_IN_BODY() 
			or wclass:SHORT_PHP_NAME_IN_URL())
    then   
        SetPSAR('ar120')
    end 
    
	--ar121
	--fe / #znakomstva #english
	--22.09.16 / zubr	
	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 500, 3000) 
		and	features:HasTextOnly() == 1
    	and wclass:NO_TO()
    	and features:RepuserAge() == 1
    	--and cmpr_gt(features:RcptNum(), 5, true)
    	--and (features:Subject7bitOnly() == 1 or features:NoSubject() == 1)
    	and features:Words8bitRatio() == 0
    	and	cmpr_gt(features:Words7bitRatio(), 30)
    	and cmpr_btw(features:WordsOtherRatio(), 10, 90, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
		--and features:BodyUpperLowerCaseRatio() <= 1
    	and cmpr_btw(features:NumberCount(), 5, 60)
    then
    	SetPSAR('ar121')
    end 
	 
	--ar122
    --fe /  #pdf
    --07.01.17 / r.sulimov
    if not IsBlocked
		and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_gt(features:UserAge(), 300, true)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:FE_NO_TO())
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
        and cmpr_gt(features:HtmlTags()['br'], 10)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
    then
        SetPSAR('ar122')
    end

    

	--ar123
	--mxs_other / #6000
	--07.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_gt(features:MsgSize(),300000)
        and cmpr_eq(features:Helo(),'smtp.merkurtz.de')
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:FROM_DOMAINPART_IN_REALNAME()
	then
		SetPSAR('ar123')
	end
    
	--ar124
	--fe / #cazino
	--09.08.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and (features:HasTextOnly() == 1 or features:AttachWithoutExtenstionsCount() == 1)
		and (TermsMatchGroup(17141, 80)
			or (features:DotCount() >= 1000 and features:WordCount() <= 5000)
			or (wclass:HAS_INPUT_TAG() and features:MsgSize() <= 1500)
			or (features:SourceTextSize() >= 10000 and features:WordCount() <= 200 and features:BodyUpperLowerCaseRatio() <= 1))
		--and not features:ReplyInSubject()
    then
        local tbl = features:AbfTable()
        local ip_tbl = {}
        local a = 0
        if tbl and tbl[1] then
            for i,val in pairs(tbl) do
                ip_tbl[i] = val[2]
                if StrMatchRe(ip_tbl[i], regex([[^(?:94|79|192)\.(?:243|173|141|42)\.(?:24|25|12|11|21|116)\d\.]]))
                then a = a + 1
                end
            end
        end
        if a > 0 or wclass:FE_TOR_IP()
        then
		SetPSAR('ar124')
		end
	end
    
    --ar125
    --mxs_mbp / #google #undisclosed #niggers
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and features:ToUndisclosed()
        and features:EngRealNameFrom()
        and features:SubjectLen() < 25
        and features:TextLines() < 10
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
	then
		SetPSAR('ar125') 
		----LogMsgToHadoop('dstat_rassadovskiy_log', '#ar125')
    end
        
    
    --ar126
	--mxs_other / #6000
	--07.01.17 / razuvaev
    --3839adc303796495ef688f95e11d14dc da83d0a774542fd111573b8164663765
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(),3000)
        and cmpr_eq(features:NoUserAgent(),1)
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_lt(features:TextLines(),10)
        and cmpr_gt(features:SubjectWordCount(),3)
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
        and wclass:HELO_IN_FROM()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar126')
	end
    
    
    --ar127
    --mxs / #amazon
    --22.09.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 2000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 2, 15, true)
    	and cmpr_btw(features:WordCount(), 10, 50, true)
        and cmpr_gt(features:UrlNormCount(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
    	and cmpr_eq(features:HasImageUrl(), 1)
    	and not features:IsSngCountry()
        and wclass:PHP_URL()
        and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:NO_USER_AGENT()
        and UrlsMatchStr('amazonaws.com')
    	and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
    then
        SetPSAR('ar127')
        LogMsgToHadoop( 'dstat_minina_log', '#ar127' )
    end
    
   
	--ar128
	--mxs_other / #rabotacaps
	--07.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(),3000)
        and cmpr_lt(features:TextLines(),10)
        and wclass:PHOTO_HOSTING()
        and wclass:NEW_IP_7_DAYS()
        and wclass:SPF_NOT_PASS()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:HDR_X_DMARC_RESULT_FAIL()
        and wclass:WHITESPACE_SUSP_RATIO()
	then
		SetPSAR('ar128')
	end
    
 	--ar129
    --mxs_other / #zarabotok #vacansy
	--20.11.16 / r.kulpin
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:UrlCountWithoutMailRu() , 1, 2,true)
    	and (cmpr_eq(features:SubjectWordOtherCount(), 1) or features:Subject8bitOnly())
    	and (wclass:NEW_IP_7_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
    	and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
      	and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
    	and features:FromDomain()
    	and UrlsMatchStr(features:FromDomain())
    then
    	SetPSAR('ar129')
    end 
    
	--ar130
	--fe / #cazino
	--24.10.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and features:HasTextOnly() == 1
		and features:WordCount() >= 1000
		and not features:ReplyInSubject()
		and features:BodyUpperLowerCaseRatio() <= 1
		and features:DotRatio() == 0
		and wclass:FE_TOR_IP()
    then
		SetPSAR('ar130')
	end
    
    --ar131
	--mxs_mbp / #google 1 pic
	--07.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        --and cmpr_lt(features:MsgSize(), 100000)
        and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr')
    	and cmpr_gt(features:ImgNum(),1, true)
    	and (cmpr_eq(features:UrlNormCount(),1) or StrMatch(features:UrlsRawHashString(),"go.mail.ru")
            or cmpr_eq(features:UrlNormCount(),2) and cmpr_eq(features:UrlCount(),1))
     	and cmpr_lt(features:SubjectLen(),50)
	    and cmpr_lt(features:TextLines(),5)
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and (TermsMatchGroup(18227,100) or TermsMatchGroup(18230,100))
	then
		SetPSAR('ar131')
	end
     
	--ar132
    --mxs_other / #chasy #watch
    --2.07.2016 / rassadovskiy
    --dd03a561a56893bbe6989abdcef516df 8cb4f09c4e4bc84190595b4cabddeb88 c2200bd7b3d8fd5e10541078e841e00b
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
    	and not wclass:DKIM_PASS()
        and cmpr_gt(features:MsgSize(),500)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),1)
        and features:HasFromRealName()
        and features:NoRealNameTo() == 1
        and features:NoUserAgent() == 1
        and cmpr_btw(features:UrlNormCount(),0,8,true)
        and cmpr_gt(features:HtmlTagCount(),2)
        and cmpr_btw(features:TextLines(),1,300,true)
        and (features:NoHtmlTag() == 1
        	or wclass:TERMS_REPLICAS_WATCHES()
        	or wclass:TERMS_REPLICAS_WATCHES2()
    		or wclass:FROM_REALNAME_WITH_SPAM_WATCHES()
        	or TermsMatchGroup(17248,100)
        	or wclass:NO_LETTERS_IN_REALNAME()
    		or wclass:HIDING_HTML_TAGS())
        and cmpr_gt(features:WordCount(),2)
        and wclass:MAIL_RU_MSGID_PATTERN() 
        and wclass:MISSING_DATE()
    	and wclass:HELO_IN_FROM()
    then
        SetPSAR('ar132') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar132')
    end
     
	--ar133
	--mxs_other / #efremov
	--07.01.17 / r.kulpin
    if  features:RcvSrcExt() == "mxs_other"
        and not features:DkimDomain()
    	and wclass:SPF_NOT_PASS()
    	and features:To()
        and (cmpr_eq(features:To(), 'vam.@mail.ru') or cmpr_eq(features:To(), '.vam.@mail.ru'))
    	and features:SrcIp()
		and SFKD('ar133', {features:SrcIp()}, 60, 5)
    then
        SetSpam('ar133')
    end
	
    --ar134
	--mxs_mbp / rambler #nachinaiteseichas
	 --28.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10000,35000)
        and cmpr_eq(features:UrlCount(),1)
        and wclass:FROM_RAMBLER_AND_DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:WHITESPACE_SUSP_RATIO()     
        and wclass:NO_HTML_TAG()     
	then
		SetPSAR('ar134')
	end
    
	--ar135
    --fe / #zarabotok  #2level_url
    --22.09.2016 / rassadovskiy
    --fe77e0855c70982cce9b58741810f4b9 cdef4149b5af16980b2928cb5dbc9e7c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe") and not features:IsPddUser()
            or cmpr_eq(features:RcvSrcExt(), "mxs_mbp") and wclass:MANY_CC_AND_MORE_THAN_5_RCPT())
        and cmpr_btw(features:MsgSize(),100,5000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and (features:FromEndsWithYear() or features:SubjectNumbersCount() > 2 or features:WordsMixedRatio() > 30 or wclass:DIFFERENCE_MSGID_AND_ORIGMSGID())
        and cmpr_btw(features:UrlNormCount(),1,2,true)
        and (features:HtmlTagCount() == 0 or features:IsFromYandex())
        and cmpr_gt(features:WordCount(),5)
        and (features:WordMixedCount() > 0
            or features:IsFromYandex())
        and not HasHeader('ReSent-To')
        and UrlsMatch(regex([[^[a-z\d\-]+\.ru\/[a-z\d]+\/$]]),1)
    then
        SetPSAR('ar135') 
    end
    
    
	--ar136
    --mxs_sender / #Oleg Efremov
    --05.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_sender")
        and not cmpr_eq(features:FromDomain(), 'linkedin.com')
        and cmpr_btw(features:MsgSize(),5000,30000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),2,5,true)
        and features:HasImageUrl()
        and features:WordCount() >= 50
        and features:Words8bitRatio() >= 50
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:WhitespaceToWordRatio() >= 500
        and features:DkimDomain()
        and cmpr_eq(features:SPF(), 'none')
    then
        local cnt = 0
        local DkimTbl = split(':', features:DkimDomain())
        if #DkimTbl >= 2 then
            SetPSAR('ar136',true)
        end
    end

    
	--ar137
    --mxs_mbp / #aol #pohudei
    --22.09.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),500,1500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:EnvelopeFromDomain() == 'aol.com'
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_btw(features:HtmlTagCount(),20,50)
        and features:NoHtmlTag()
        and features:WhitespaceToWordRatio() > 300
        and wclass:HEADER_X_AOL_REROUTE()
        and wclass:PHP_URL()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
        SetPSAR('ar137') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar137')
    end

    
	--ar138
	--mxs_other / #efremov
     --07.01.17 / razuvaev
 	if not IsBlocked
 		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(),10000,300000)
       	and cmpr_eq(features:To(),"vam.@mail.ru")
        and wclass:BAD_LINES_TO_WORD_RATIO()
        and (wclass:UNENCODED_SUBJECT() or wclass:NEW_IP_7_DAYS())
        and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:SUSP_UNIC_HTML_TAG_RATIO_AND_DIFFERENT_FROM_AND_ENVELOPE_FROM())
   then
 	SetPSAR('ar138')
   end
    
	
    --ar139
	--mxs_other / #efremov
	--07.01.17 / razuvaev
    if  features:RcvSrcExt() == "mxs_other"
        and cmpr_eq(features:To(), 'vam.@mail.ru')
        and TermsMatchGroup(18228,100)
    then
        SetPSAR('ar139')
    end
    
	--ar140
	--mxs_other / #yandex #direct
	--15.04.16 / veselitsky	
	--09616af6d0577b7c7f05c330fb7026f9  8e30c1e902e9d6f62b0652990bbca283 047102962614de2cd34e9f2b78a40253
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 50000, 2000000)
    	and features:HasAttach() == 1
        and features:AttachAllCount() == 1
    	and features:AttachOfficeCount() == 1
  --  	and features:NoRealNameTo() == 1
    	and features:NoUserAgent() == 1
    	and features:SenderPtr() == 'error' 
    	and features:SPF() ~= 'pass'	
    	and (cmpr_btw(features:IpAge(), 0, 30) or wclass:OTHER_IP_IN_DNSBL())
    	and features:Subject8bitOnly() == 1
    	and cmpr_btw(features:SubjectWordCount(), 0, 20)
    	and cmpr_btw(features:TextLines(), 0, 5)
    	and cmpr_btw(features:WordCount(), 3, 20)
    	and features:FilesExtensions() == '.pdf'
    	and features:RcptNum() > 1
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
    	SetPSAR('ar140')
    end
    
	--ar141
	--mxs_other / #kp
	--04.07.2016 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == 'mxs')
		and features:MsgSize() >= 5000 and features:MsgSize() <= 25000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoBodyTag() == 1
		and features:NoHtmlTag() == 1
		and features:WordCount() >= 50
		and features:LinesToWordsRatio() >= 30 and features:LinesToWordsRatio() <= 60
		and features:NumberCount() >= 20 and features:NumberCount() <= 60
		and features:DomainRepipAge() <= 7
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
	then
		SetPSAR('ar141')
	end
      
	--ar142
	--fe / #zarabotok
	--07.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe") 
		and cmpr_eq(features:HasAttach(), 1)
		and ((cmpr_btw(features:MsgSize(), 500, 4000) and cmpr_eq(features:AttachOfficeCount(), 1)) or (cmpr_btw(features:MsgSize(), 500000, 600000) and cmpr_eq(features:AttachOtherCount(), 1)))
		and cmpr_eq(features:MultipartPartCount(), 2)
		and cmpr_btw(features:SubjectLen(), 15, 80)
		and cmpr_eq(features:NoRealNameTo(), 1)
		and cmpr_eq(features:ExternalImgNum(), 1)
		and cmpr_eq(features:UrlNormCount(), 3)
		and cmpr_btw(features:HtmlTagsKnownCount(), 2, 12, true)
		and cmpr_lt(features:RepuserAge(), 30, true)
		and ((cmpr_eq(features:IsAutoreg(), 1) and cmpr_lt(features:Karma(), 0, true)) or cmpr_eq(features:BirthDateInFromLocalpart(), true))
		and UrlsMatchStr('img-fotki.yandex.ru', 1)
	then
		SetPSAR('ar142', true)
	end
    
    --ar143
    --mxs / #fake_marazin #partnerka
    --07.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:HasImageUrl() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 4
        and (features:IpAge() <= 15 or wclass:IP_REP_GAP_MORE_30_DAYS())
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 50 and features:WordCount() <= 500
        and wclass:ONE_RECEIVED()
        and wclass:PRECEDENCE_BULK()
        and StrMatchRe(features:FromLocalPart(), regex([[^(wildberries|yves-rocher)\.info$]]))
        and wclass:HAS_HDR_ORGANIZATION_AND_LIST_UNSUBSCRIBE()
    then
        SetPSAR('ar143')
    end

    --ar144
    --mxs / #zarabotok #su #english
    --10.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100000 and features:MsgSize() <= 1500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:HasShortUrl() == 1
        and features:MultipartNum() == 1
        and features:TextLines() >= 500
        and features:Subject7bitOnly() == 1
        and features:Words8bitRatio() == 0
        and wclass:ONE_RECEIVED()
        and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar144')
    end
    
    --ar145
	--mxs_mbp / #aol #corp
	--05.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'aol.com')
    	and (features:EngRealNameFrom() or wclass:FROM_REALNAME_IN_LOCALPART())
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and UrlsMatchStr('blogspot', 1)
	then
		SetPSAR('ar145',true)
	end
    
	--ar146
	--fe / #casino 
	--19.09.16 / veselitsky	
	--d43d4bff8dba47964e85fe3fa488f081 b590c8117ffc702f10197136196073b9
	if not IsBlocked
       	and features:RcvSrcExt() == 'fe'
   		and cmpr_btw(features:MsgSize(), 5000, 250000)
    	and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
   		and features:MailRuTo()
    	and (cmpr_lt(features:RepuserAge(), 60) or cmpr_gt(features:AbfCountriesPerMonthNum(), 1))
		and features:CtMultipartSpamPattern36()
    	and features:SubjectWordCount() <= 2
    	and cmpr_lt(features:NumberCount(), 10)
		and cmpr_btw(features:WordCount(), 10, 15000)
    	and TermsMatchGroup(10100, 100)
    	and (wclass:USER_SENDING_MORE_THAN_20_PER_DAY() or wclass:FE_TOR_IP() or wclass:SOURCE_IP_IN_TOR_NODE())
    then
    	SetPSAR('ar146')
    end		
    
	--ar147
    --mxs_other / #viagra #english #noise
    --23.09.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),100,500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and features:NoUserAgent()
        and cmpr_btw(features:UrlNormCount(),1,2,true)
        and features:HtmlTagCount() == 0
        and features:Words7bitRatio() > 70
        and features:NumbersToTextRatio() > 15
        and wclass:MESSAGE_ID_NO_ANGLE_BRACKETS()
        and UrlsMatch(regex([[(?i)\.[a-z]{2,4}\/[a-z]+\_[a-z]+\.php$]]),1)
    then
        SetPSAR('ar147') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar147')
    end
    
    --ar148
    --mxs / #zarabotok #efremov
    --07.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_esp"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 3
        and features:UrlsTextSize() >= 500 and features:UrlsTextSize() <= 2000
        and features:TextLines() >= 15 and features:TextLines() <= 150
        and features:WordCount() >= 50 and features:WordCount() <= 500
        and features:HtmlTagCount() >= 50 and features:HtmlTagCount() <= 150
        and UrlsMatch(regex([[^(mlcampaignru|mlsendru|mlnewsletterru)\.com$]]))
        and HeaderMatchRe('Content-type', regex([[boundary=\"b1_]]), 1)
        and TermsMatchGroup(18229, 10)
    then
        SetPSAR('ar148', true)
    end
    
	--ar149
    --fe / #zarabotok #image_noise
    --24.09.2016 / rassadovskiy
    --53762e5de2e08b605f05a46951187a1f
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),10000)
        and cmpr_btw(features:ImgNum(),1,5,true)
        and features:MultipartNum() >= 5
        and features:NoRealNameTo()
        and features:Karma() < 0
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:FromRealNameWordCount() == 2
        and features:WordCount() > 30
        and features:Words7bitRatio() < 50
        and (wclass:PHP_URL() and StrMatchRe(features:PartsFilenames(), regex([[(?i)^(?:[a-z]+\_)+[a-z]+\.png$]]))
            or (wclass:IMAGES_BY_AUTOREG() 
                or wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
                or features:HtmlTagCount() > 5 and features:HtmlTags()['strong']) 
            and (StrMatchRe(features:PartsFilenames(), regex([[(?i)^[a-z\d]{2,25}\s?\(\d+\)\.(png|bmp|jpg)]]))
            	or StrMatchRe(features:PartsFilenames(), regex([[(?i)^\d{2,15}\s\.(png|bmp|jpg)]]))))
    then
        SetPSAR('ar149') 
    end
 
    --ar150
    --mxs / #zarabotok #su #img #english
    --10.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 10
        and features:HasImageUrl() == 1
        and features:HasShortUrl() == 1
        and features:Subject7bitOnly() == 1
        and features:Words8bitRatio() == 0
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (HeaderMatchRe('Content-type', regex([[boundary=\"_[a-z\d]{2,4}(\-|_)]]), 1) or features:MultipartNum() == 1)
    then
        SetPSAR('ar150')
    end
    
	--ar151
	--mxs_other / #attach
	--06.09.16 / veselitsky	
	--534acded35f4437973f2af4211781082 f2382c3ae80e8ce97a4cfbcb16d254ed 9088474e61d3e64f503e420d3846679d
	if not IsBlocked
       	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 40000, 200000)
		and features:HasAttach() == 1
		and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
    	and features:MultipartNum() == 5
    	and features:WordCount() <= 10
    	and features:FromDomain()
    	and	features:Helo() 
    	and not StrMatch(features:Helo(), features:FromDomain())
    	and features:FilesExtensions() == '.pdf' 
    	and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and wclass:TO_MISMATCH_ENVELOPE_TO()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
    	SetPSAR('ar151')
    end	
    
	--ar152
	--mxs_mbp / #zarabotok
	--08.01.17 / glushenkov
	--mfc_mf_gmail
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and cmpr_btw(features:MsgSize(), 1000, 10000)
		and cmpr_eq(features:FromDomain(), "gmail.com")
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 10, true)
		and cmpr_btw(features:TextLines(), 6, 70, true)
		and cmpr_btw(features:LinesToWordsRatio(), 20, 65, true)
		--and cmpr_btw(features:HtmlTagCount(), 20, 100, true)
		and (cmpr_eq(features:SubjectWord7bitCount(), 1) or cmpr_eq(features:SubjectWordMixedCount(), 1))
		and cmpr_eq(features:SubjectWord8bitCount(), 1)
		and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
		and not (cmpr_eq(features:ReplyInSubject(), true) or HeaderMatch('Subject' ,'Çàêàç'))
		and (TermsMatchGroup(17860,100) or wclass:WORDS_WITH_NOISE())
	then
		SetPSAR('ar152')
	end


	--ar153
	--mxs_esp / #efremov
	--08.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and wclass:SPF_NOT_PASS_AND_NEW_IP_1_DAY()
        and HeaderMatchRe('To', regex([[.{0,10}vam.{1,10}@mail\.ru]]))
        and TermsMatchGroup(18231,100)
	then
		SetPSAR('ar153')
	end
    
    --ar154
    --mxs_mbp / #business #molodost
    --04.07.16 / veselitsky
    --0a56f631ae41cdee2a76b5c77dd933a6 5cd3f1edbc9d044cd8604a28e3421893 7a481ac884a755fcfe06d2b147c7fc93
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
        and cmpr_btw(features:MsgSize(), 800, 4500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and features:IsFromGoogle() 
        and features:GeoCode() == "US" 
        and cmpr_btw(features:TextLines(), 3, 10, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and wclass:FROM_ENDS_WITH_YEAR()
        and wclass:HAS_SUSP_URLS()
        and wclass:NO_HTML_TAG()
    then
        SetPSAR('ar154') 
    end
  
	--ar155
    --fe / #zarabotok #blogspot
    --14.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 200, 2000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_gt(features:LinesToWordsRatio(), 25, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and features:MailRuTo()
        and wclass:SUSP_URLS_SHORT_TEXT()
        and wclass:WITH_HTTP()
        and (UrlsMatchStr('blogspot', 1) or UrlsMatchStr('cloud.mail.ru/public/', 1) or UrlsMatchStr('drive.google.com/open', 1))
    then
        SetPSAR('ar155')
    end

    
	--ar156
    --mxs_mbp / #google #undisclosed #terms_inheritance
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and features:ToUndisclosed()
        and features:EngRealNameFrom()
        and TermsMatchGroup(17802,100)
	then
		SetPSAR('ar156',true) 
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar156')
    end
    
    --ar157
    --mxs_mbp / #google #undisclosed #terms_inheritance
	--from google to yourself with bcc
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and features:EngRealNameFrom()
        and (features:HasAttach() and features:FilesExtensions() == ".pdf"  
            or features:ImgNum() > 0)
        and wclass:FROM_MATCH_TO_WITH_BCC()
    	and features:Word8bitCount() < 10
	then
		SetPSAR('ar157',true) 
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar157')
    end

	
	--ar158
	--mxs_other / #many urls
	--08.01.17 / razuvaev
    --ffb2a32ff7305fa957f60ea0ce8f329c 67296ab254b21b3ff9c9b324d1cf15ab
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(),30000,70000)
    	and cmpr_eq(features:MultipartNum(), 1)
 	    and cmpr_eq(features:EnvelopeFromDomain(),"ukrhosting.com")
        and cmpr_eq(features:FromRealName(),"Super Forex")    
        and cmpr_gt(features:UrlCount(),200)    
	then
		SetPSAR('ar158')
	end

	--ar159
    --mxs_mbp #nova
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromOtherMbp()
        and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
		and (wclass:RANDOM_CASE_IN_IMAGE_NAME()
        	or wclass:SUSP_IMAGE_NAME_3())
		and UrlsMatchStr('nova.rambler.ru')
    then
        SetPSAR('ar159')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar159')
    end
    
    --ar160
    --fe / #china_spam
	--09.01.17 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 50)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
        and (cmpr_lt(features:RepuserAge(), 30, true)
    		or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 10, 20))
        and cmpr_lt(features:Karma(), 0, true)
    	and (wclass:SUSP_FROM_LOCALPART_MAILRU()
    		or wclass:CJK_UNIFIED_IDEOGRAPHS()
    		or wclass:BAD_LINES_TO_WORD_RATIO()
        	or wclass:MATH_SYMBOLS_IN_REALNAME_FROM()
    		or wclass:FE_SUBJECT_SUSP_UTF8_CHARS()
			or HeaderMatch('X-Mru-Referer', ''))
		and features:WordCount() >= 3
    	and (wclass:ONLY_7BIT_WORDS()
    		or (cmpr_gt(features:WordsOtherRatio(), 10) and cmpr_lt(features:Words8bitRatio(), 70)))
    	and (wclass:NO_TO()
        	or wclass:MORE_THAN_N_RCPT())
    then
        SetPSAR('ar160', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar160')
    end
    
    --ar161
    --mxs_mbp / #news #7days
    --24.09.2016 / rassadovskiy / philip.karpov fix
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),500)
        and features:HasTextOnly() == 1
        and cmpr_gt(features:MultipartNum(),2,true)
        and features:IsFromGoogle()
        and (features:NoSubject() or features:SubjectLen() > 10)
        and (cmpr_lt(features:WordCount(),50) or cmpr_gt(features:WordCount(), 250))
        and (wclass:NO_MIME() or wclass:FROM_ENDS_IN_NUMS())
        and (wclass:CT_IN_BODY() or wclass:HAS_HEADER_BCC())
        and TermsMatchGroup(17133,100)
    then
        SetPSAR('ar161') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar161')
    end
 
    
    --ar162
	--mxs_mbp / #flood
	--07.09.16 / veselitsky	
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
		and cmpr_btw(features:MsgSize(), 10, 80)
		and features:HasTextOnly() == 1	
       	and features:NoRealNameTo() == 1
		and features:NoRealNameFrom() == 1
    	and features:MultipartNum() == 1
    	and	features:TextLines() == 1
    	and cmpr_lt(features:WordCount(), 10)
     	and features:Word8bitCount() == 0
    	and	(StrMatch(features:FromDomain(), 'yahoo.') or features:FromDomain() == 'tin.it')
   		--and features:RemoteOS() == 'FreeBSD'    	
    	--and wclass:SUSP_NUMBER_TO_TEXT_RATIO()
    	and wclass:NO_CTE()
   	then
    	SetPSAR('ar162')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar162')
    end

    --ar163
    --mxs_mbp / #seo
    --4.07.16 / rassadovskiy
    --abc004d323680710792ef4fa0996cd55 3d99d6b21a5a48329683ae1a2179a4e4 48a55f8d7b256095c33cb3514f452636
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
        and cmpr_btw(features:MsgSize(),70,300)
        and features:HasTextOnly() == 1
        and cmpr_eq(features:MultipartNum(),1)
        and cmpr_btw(features:UrlNormCount(),1,2,true)
        and features:NoRealNameTo() == 1
        and features:NoRealNameFrom() == 1
        and features:IsFromYandex() == true
        and cmpr_btw(features:TextLines(),2,7,true)
        and cmpr_btw(features:WordCount(),7,20)
        and cmpr_eq(features:HtmlTagCount(),0)
        and cmpr_gt(features:WhitespaceToWordRatio(),140)
        and TermsMatchGroup(17176,100)
    then
        SetPSAR('ar163') 
    end
    
    --ar164
    --smtp / #calendar #zarabotki
    --03.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_lt(features:MsgSize(), 5000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 120)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
    	and cmpr_lt(features:WordCount(), 20)
    	and cmpr_gt(features:UrlNormCount(), 2)
		and wclass:HAS_EXTERNAL_IMG()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and UrlsMatchStr('calendar.mail.ru')
    then 
        SetPSAR('ar164')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar164')
    end 
    
	--ar165
    --mxs_other / #bags #cc_urls
    --29.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,5000) 
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameFrom()
        and features:HasDifferentFromAndReply()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HasFreeHosting()
        and features:NoHtmlTag()
        and wclass:CC_URLS()
    then
        SetPSAR('ar165') 
    end
    
    --ar166
    --mbp / #zarabotok #pdf
    --08.01.17 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:WordCount(), 30)
    	and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
    	and wclass:RAMBLER_FE()
        and HeaderMatch('Content-Transfer-Encoding', '7bit')
    then
        SetPSAR('ar166')
        LogMsgToHadoop('dstat_sokolik_log', '#ar166')
    end

	--ar167
    --mxs_mbp #nova
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromOtherMbp()
        and cmpr_gt(features:ImgNum(), 2, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and wclass:RANDOM_CASE_IN_IMAGE_NAME()
    	and wclass:DIFFERENT_RES_IMAGES()
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    then
        SetPSAR('ar167')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar167')
    end
    
	--ar168
	--mxs_other / #zarabotok
	--25.09.2016 / zubr
	--5a57671634759e17ca0f0e1e92d90dcf
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:UrlsTextSize() >= 100
		and features:TextLines() >= 10 and features:TextLines() <= 40
		and features:WordCount() >= 15 and features:WordCount() <= 70
		and features:LinesToWordsRatio() >= 50
		and features:SubjectWordCount() >= 3
		and features:SubjectWordMixedCount() >= 1
		and wclass:SUSP_SWIFT_BOUNDARY()
		and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
	then
		SetPSAR('ar168')
	end
   
    --ar169
    --fe/ #callme #numb_by_words #eng_msg #from_mail #young
    --25.09.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')             
        and cmpr_btw(features:MsgSize(), 800, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoTo()
        and cmpr_btw(features:TextLines(), 3, 8, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 40, true)
        and (features:UserCreateTime() 
        and cmpr_btw(features:UserCreateTime().days, 0, 7, true))
        and wclass:NEW_IP_15_DAYS()
        and (wclass:SORTED_X_ENVELOPE_TO() or HasHeader('X-Envelope-To'))
        and wclass:ENGLISH_LANGUAGE_MESSAGE() 
    then
        SetPSAR('ar169')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar169' )
    end       
    
	--ar170
	--mxs_other / #zarabotok
	--20.04.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and wclass:SPF_NOT_PASS()
		and wclass:MISSING_DATE()
		and wclass:ONE_RECEIVED()
		and wclass:RUSSIAN_FROM_REALNAME()
    	and (wclass:NEW_IP_15_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS() or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 14, 200))
	then 
		SetPSAR('ar170')
	end
    
    
	--ar171
    --fe / #pdf #instabunch #zarabotok #
    --25.09.2016 / rassadovskiy
    --e0e9156ee930d277a29879436bb4bc98 190bdce67a5266b52a5891f4a46f0468
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_gt(features:MsgSize(),200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:MultipartNum() == 5
        and (features:NoSubject() or wclass:FE_SUSP_HTMLTAG_TO_WORD_RATIO() or wclass:FROM_TLD_IS_SUSP())
        and (features:NoRealNameTo() or features:NoTo()) 
        and cmpr_lt(features:Karma(),0)
        and cmpr_lt(features:RepuserAge(),5)
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:TextLines(),2,15,true)
        and cmpr_btw(features:WordCount(),10,30)
        and (features:Words7bitRatio() == 0 or TermsMatchGroup(17789,100) or features:LinesToWordsRatio() > 30)
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and (wclass:NEW_IP_7_DAYS() or wclass:SOURCE_IP_IN_XBL() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY() or wclass:RANDOM_DIGITS_LOWER_CASE_IN_HEADER())
        and StrMatchRe(features:PartsFilenames(), regex([[(?i)^[a-zÀ-ßà-ÿ¸\d\s\-\!\+]{5,}\.pdf$]]))
    then
        SetPSAR('ar171') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar171')
    end
    
    
	--ar172
	--mxs_mbp / #economitel
	--07.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:EmailsCountInBody(), 1)
       	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
		and wclass:ONE_RECEIVED()
    	and not wclass:DKIM_PASS()    	
    then
    	SetPSAR('ar172')
    end
    
   
    --ar173
	--mxs_mbp / #zarab_php
	--16.12.16 / razuvaev
    --0352474fd9da6ffb5851f28e5c43c0de fba5a70b724324454037177efe17aba1
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 10000)
    	and cmpr_eq(features:Helo(),"localhost")
    	and cmpr_eq(features:MsgIdDomain(),"mail.qip.ru")
      	and cmpr_eq(features:UrlCount(),1)
        and (wclass:PHP_URL() or UrlsMatchStr('sereport.net'))
    then
		SetPSAR('ar173')
	end
    
    --ar174
    --fe / #flud
    --13.09.2016 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and features:RcvSrc() == "fe" 
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and wclass:MOBILE_MAIL_RU_AND_FE_REGIONS_MISMATCH()
        and wclass:FE_ENG_MSG()
        and wclass:NOREALNAME_TO()
        and (wclass:SOURCE_IP_IN_DNSBL() or wclass:NEW_IP_NO_REP())
        and not features:IsPddUser() and not features:MailRuFrom()
    then
    	SetPSAR('ar174')
    end
    
	--ar175
    --fe / #zarabotok
    --30.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),200,1000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and cmpr_lt(features:RepuserAge(),14)
        and cmpr_lt(features:Karma(),0)
        and cmpr_btw(features:UrlCountWithoutMailRu(),2,3,true)
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:TextLines() == 1
        and cmpr_btw(features:WordCount(),2,5,true)
        and features:WhitespaceToWordRatio() >= 500
        and not wclass:RUSSIAN_FROM_REALNAME()
        and wclass:HAS_IMAGE_URL()
        and UrlsMatch(regex([[^.*\.[a-z]{2,4}/\d{1,4}\.jpg$]]),1)
    then
        SetPSAR('ar175') 
    end

	--ar176
    --mxs_mbp #nova
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromOtherMbp()
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and wclass:ONLY_IMAGE_WITH_ONLY_IMAGE_TAG()
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    then
        SetPSAR('ar176')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar176')
    end

    --ar177
    --mxs_mbp / #zarab_S_google #seminar #gmail
    --25.09.2016 / r.kulpin
    --80346dd976ef337bacc8dd80264d9ae1 d116627378763e42605b88af7a0c046a 95e9c8f39d66499b2be7ed9cda81b1be
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId() 
        and features:NoRealNameTo()
        and features:MsgIdDomain() == "google.com"
        and cmpr_eq(features:GetSubjectEncoding(), "UTF-8") 
        and features:FromRealName()
        and features:FromLocalPart()
        and cmpr_btw(features:TextLines(), 10, 60, true)
        and cmpr_btw(features:SubjectLen(), 15, 70, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 25, true)
        and cmpr_btw(features:WhitespaceToWordRatio(), 200, 600, true)
        and cmpr_btw(features:UrlNormCount(), 2, 7, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 30, true)  
        and wclass:PHP_URL()
        and wclass:NO_BODY_TAG()
        and wclass:NO_HTML_TAG()
        and wclass:SHORT_BOUNDARY()
        and (wclass:FROM_LOCALPART_IN_REALNAME() 
           or cmpr_eq(string.sub(features:FromLocalPart(), 1, 5), string.sub(features:FromRealName(), 1, 5)))
    then
        SetPSAR('ar177')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar177')
    end
     
    --ar178
    --mxs_mbp / #hotel-travel #1url-redir #shortmsg #yandex
    --18.09.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and cmpr_eq(features:FromDomain(), "yandex.ru")
    	and cmpr_btw(features:WordCount(), 5, 100, true)
    	and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:NOREALNAME_FROM()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:MULTIPLE_HEADERS()
    then
        SetPSAR('ar178')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar178')
    end    
    
    --ar179
    --fe/ #callme #porn #eng_msg #with_Gshort #young_dkim
    --25.09.16 / r.kulpin
    --caaf0deedbc3909cc7fa5cf8c4ceb091 a2c4b68808ab72c7df89d924ed60516a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')             
        and cmpr_btw(features:MsgSize(), 500, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and cmpr_btw(features:TextLines(), 3, 12, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 40, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and (wclass:NEW_IP_15_DAYS() or wclass:NEW_DKIM_15_DAYS())
        and wclass:ENGLISH_LANGUAGE_MESSAGE() 
        and HeaderMatchRe('Message-ID', regex([[^\<(?:[A-Z\d]{2,12}-){3,5}[A-Z\d]{2,18}\@]]))
    then
        SetPSAR('ar179')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar179' )
    end
    
	
    --ar180
	--mxs_mbp / #franshisa
	--16.12.16 / razuvaev
    --699851996ffc136ce3cc2b4448305d1e ced00dbd56abce1c8ade85bb0fa4ef1d
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 200000, 300000)
        and cmpr_eq(features:SPF(),"softfail")  
     	and cmpr_eq(features:AttachOfficeCount(),1)
        and wclass:SUSP_IMAGE_NAME_3()
        and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass: MS_MAILER() 
    then
		SetPSAR('ar180')
	end
    
    --ar181
    --mxs_other / #zarab #eng #quick_cash #link=quickcashsystem.tech  
    --25.09.2016 / r.kulpin
    --65bfa45e6baebc4bad9463000f5d71bb 261626d2679cc0b240dd872ea3fde282 77806ed72f0b0ec84e2c2a509d742b90
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId() 
        and features:NoRealNameTo()
        and features:FromRealName()
        and features:FromLocalPart()
        and cmpr_btw(features:TextLines(), 15, 50, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 25, true)
        and cmpr_btw(features:WhitespaceToWordRatio(), 200, 500, true)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_btw(features:HtmlTagCount(), 10, 30, true) 
        and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
        and wclass:PHP_URL()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:SHORT_BOUNDARY()
        and (wclass:FROM_LOCALPART_IN_REALNAME() 
           or cmpr_eq(string.sub(features:FromLocalPart(), 1, 5), string.sub(features:FromRealName(), 1, 5)))
        and HeaderMatchRe('Content-Type', regex([[(?i)boundary="b1_]]))
        and HeaderMatch('Content-Type', 'charset="UTF-8')
    then
        SetPSAR('ar181')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar181')
    end
    
   
    --ar182
    --fe / #zarabotok
	--16.12.16 / razuvaev
    --c123d448563036ce59d3097892b324c0 1eb700ca2aeb660dbc31632f94bc6607
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000,5000)
        and features:HasTextOnly() == 1
        and cmpr_lt(features:Karma(),0)
        and cmpr_eq(features:IsAutoreg(), 1)
        and wclass:FREE_HOSTING()
        and wclass:NOREALNAME_TO()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and UrlsMatchStr('cloud.mail.ru')   
    then
        SetPSAR('ar182') 
    end
    
    --ar183
    --mxs_mbp / #zarab_za_8min
    --25.09.16 / r.kulpin
    --d55a4e088098f162fcebe085f90b0b4b 026899b6dcc76386356ba8f3e7dd483f 3acab1db17d9b5fff107f63e1cca56e8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 3000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and features:HeloInMsgId()
        and features:NoRealNameFrom()
        and cmpr_eq(features:FromDomain(), "gmail.com")
    	and cmpr_btw(features:WordCount(), 150, 350, true)
    	and cmpr_btw(features:TextLines(), 20, 45, true)
        and cmpr_eq(features:UrlNormCount(), 1, 6, true)
        and features:HasShortUrl() 
    	and cmpr_btw(features:HtmlTagCount(), 10, 40, true)
        and features:ToRealName()
        and features:ToLocalPart()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:SHORT_BOUNDARY()
        and wclass:MULTIPLE_HEADERS()
        and HeaderMatchRe('Message-Id', regex([[^\<(?:[a-z\d]{2,12}-){3,5}[a-z\d]{2,18}\@]]))
        and cmpr_eq(string.lower(string.sub(features:ToRealName(), 1, 5)), string.lower(string.sub(features:ToLocalPart(), 1, 5)))
    then
        SetPSAR('ar183')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar183')
     end
   
	--ar184
	--mxs_mbp mxs_other / #m16 #secretnoe #sredstvo
	--06.07.2016 / veselitsky 
	--1a4cf41bbe681df9e3876ff8e3908773 c1285c9e7e5488a3b0b8444a88423166 e4ed7be3e2c4a6017b90de3905a58a28
	if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
		and cmpr_btw(features:MsgSize(), 800, 30000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
		and features:IsFromFreeMail() == 1
    	and cmpr_btw(features:WordCount(), 15, 5000)
    	and cmpr_btw(features:TextLines(), 0, 25)
    	and features:InvalidFrom() == 1
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:HDR_X_DMARC_RESULT_FAIL()
	then
		SetPSAR('ar184')
	end  
  
	--ar185
    --mxs_mbp #nova
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_gt(features:ImgNum(), 1, true)
		and (wclass:SUSP_IMAGE_NAME_3()
        	or wclass:RANDOM_CASE_IN_IMAGE_NAME())
    	and wclass:SUBJECT_ONLY_WITH_IMAGE()
    then
        SetPSAR('ar185', true)
	    LogMsgToHadoop('dstat_sokolik_log', '#ar185')
    end
    
    --ar186
    --fe / #virus
    --26.08.16 / r.sulimov
	--f_fo_email
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 400000)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 5, 200, true)
        and cmpr_btw(features:HtmlUniqueTagCount(), 0, 5, true)
	and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
        and wclass:FE_REGIONS_MISMATCH()
    	and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
    	and HeaderMatchRe('Content-type', regex([[boundary="-{3,10}[a-z]{20,50}-[a-zA-Z0-9]{5,25}-[0-9]{5,20}"]]), 1)
    then
        SetPSAR('ar186')
        LogMsgToHadoop('dstat_sulimov_log', '#ar')
    end
    
    --ar187
    --mxs_mbp #$robot
    --15.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 10, 1000000)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)     
        and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:BAD_LINES_TO_WORD_RATIO()
		and TermsMatchGroup(18193, 100)
    then
        SetPSAR('ar187')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar187')
    end
    
    --ar188
    --fe #disk 
    --09.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and features:IsFromYahoo() 
        and cmpr_eq(features:HasTextOnly(), 1)  
       	and cmpr_eq(features:UrlNormCount(), 1)
  		and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:YANDEX_DISC()
    then 
        SetPSAR('ar188')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar188')
    end
	
    --ar189
    --mxs_other / #noreply #zarabotok #kniga
    --27.09.2016 / rassadovskiy
    --095f27fe7b275ce3f14eaf7113fbd2f3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),1000,7000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:ExternalImgNum() > 0
        and features:MultipartNum() == 3
        and features:NoRealNameReplyTo()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_gt(features:HtmlTagCount(),5)
        and features:WhitespaceToWordRatio() > 300
        and features:Words8bitRatio() > 75
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:DMARC_PASS()
        and TermsMatchGroup(17820,100)
    then
        SetPSAR('ar189') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar189')
    end
    
	--ar190
    --mxs_mbp / #zarabotok #vacancy #docs.google
    --27.09.2016 / rassadovskiy
    --af880005b6956597a865750e3b83c28c 750251dac7dc1adbfa95e837c23d4699
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),3000,10000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() > 0
        and features:MultipartNum() == 3
        and features:IsFromGoogle()
        and features:FromEndsWithYear()
        and features:NoRealNameFrom()
        and cmpr_btw(features:UrlNormCount(),1,7,true)
        and cmpr_gt(features:HtmlTagCount(),30)
        and features:WordCount() > 50
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and (UrlsMatchStr('docs.google.com')
            or UrlsMatchStr('goo.gl/forms/',1))
    then
        SetPSAR('ar190') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar190')
    end
    
	--ar191
	--mxs / #virus #gz
	--19.07.2016 / zubr 
	--af6d7b1824d2c79c726ce41df9961617
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 3000 and features:MsgSize() <= 800000 
		and features:HasAttach() == 1
		and features:AttachAllCount() == 1
		and features:AttachArchiveCount() == 1
		and features:ImgNum() == 0
		and features:MultipartNum() >= 3
		and features:NoRealNameTo() == 1 
		and features:UrlNormCount() <= 1
		and features:WordCount() >= 5 and features:WordCount() <= 200
		and (features:FilesExtensions() == ".gz" or features:FilesExtensions() == ".xz")
		and (wclass:DIFFERENT_REPLY_TO_AND_FROM_AND_MS_MAILER() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:OTHER_IP_IN_DNSBL())
	then
		SetPSAR('ar191')
	end

	--ar192
	--mxs_other / #pidori
	--27.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000
		and features:HasTextOnly() == 1
		and features:NoTo() == 1
		and features:WordCount() >= 50
		and (wclass:SPF_NOT_PASS() or wclass:CT_IN_BODY())
		and (TermsMatchGroup(17827, 100) or TermsMatchGroup(17825, 100))
	then
		SetPSAR('ar192')
	end
    
    --ar193
    --fe / #eng
    --09.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 30000)
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 2)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and wclass:FE_REGIONS_MISMATCH()
		and wclass:MORE_THAN_N_RCPT()
    	and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar193')
        LogMsgToHadoop('dstat_sokolik_log', '#ar193')
    end
    
	--ar194
	--mxs_other / #zarabotok
    --16.12.16 / razuvaev
    --4ea3ec8f3d86ac9b26fd9d503960c48b 4ae6ea11d5f73375d13e661d788cded9
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 5000, 20000)
        and cmpr_eq(features:EnvelopeFromDomain(),"msk-f199.241.komtet.ru")   
	    and wclass:HAS_X_PHP_SCRIPT()
        and wclass:SUSP_FROM_AND_REPLY_TO()
        and wclass: RUSSIAN_FROM_REALNAME()
        and wclass:NONE_SPF()
	then 
		SetPSAR('ar194')
	end
    	
    --ar195
    --fe / #zarabotok  #1url
    --09.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 2000)
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:RepuserAge(), 5)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:WordCount(), 10, 100)
    	and cmpr_btw(features:TextLines(), 2, 12, true)
    	and cmpr_eq(features:SubjectWordCount(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and (wclass:SOURCE_IP_IN_DNSBL() or wclass:NEW_IP_30_DAYS())
    	and not wclass:RUSSIAN_FROM_REALNAME()
		and StrMatchRe(features:UrlsRawHashString(), regex([[\.ru/.{5,25}]]))		
    then
        SetPSAR('ar195')
    end

	--ar196
	--mxs_other / #znakomstva
	--09.01.2017 / zubr
	if not IsBlocked	
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 50000
		and features:ImgNum() >= 3
		and features:HasNoAttach() == 1
		and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 30
		and features:WordCount() >= 100
		and features:WhitespaceToWordRatio() >= 4000
		and features:DomainRepipAge() > 0 and features:DomainRepipAge() <= 30
		and features:DkimDomainRepipAge() > 0 and features:DkimDomainRepipAge() <= 30
		and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
	then
       SetPSAR('ar196')
    end
    
    --ar197
    --mxs / #visa #english
    --10.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 1
        and features:Subject7bitOnly() == 1
        and features:Words8bitRatio() == 0
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and (wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar197')
    end
    
    --ar198
    --fe / #china #no_to #ip #no_img #small size
    --11.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 300000)
		and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_lt(features:RepuserAge(), 10)
    		or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 10)
    		or wclass:HAS_5_DAYS_GAP()
			or UrlsMatchStr('.sinaapp.com',1))
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
    	and (cmpr_lt(features:ShingleTextSize(), 1000)
    		or cmpr_lt(features:WordCount(), 50)
			or cmpr_gt(features:UrlNormCount(), 5))
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 7, true)     
    	and (wclass:NEW_IP_15_DAYS()
    		or wclass:MORE_THAN_N_RCPT())
		and (wclass:NO_TO()
        	or wclass:AUTOREG_WITH_BAD_CARMA())
    then
        SetPSAR('ar198',true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar198')
    end
    
	--ar199
	--fe / #zarabotok
    --18.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:ImgNum(), 2, true)
        and cmpr_gt(features:MultipartNum(), 3)
        and cmpr_gt(features:UrlCount(), 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 300)
        and cmpr_gt(features:NumberCount(), 15)
        and cmpr_gt(features:HtmlTagCount(), 30)
        and cmpr_gt(features:LinesToWordsRatio(), 11)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and wclass:REDIRECTS_URL_PART()
        and wclass:HAS_TAG_SCRIPT()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:HAS_EXTERNAL_IMG()
    then
        SetPSAR('ar199')
    end

    --ar200
	--mxs_other / #efremov 
	--09.01.17 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and not features:DkimDomain()
		and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10))
		and wclass:SOFTFAIL_SPF()
		and features:WordCount() >= 10
		and features:LinesToWordsRatio() >= 40
		and HeaderMatch('Received', '[92.53.')
	then
		SetPSAR('ar200')
	end
    
    --ar201
    --mxs / #moreurl #mxs #english
    --20.04.16 / r.belyankin
    --cc013602175f20e11330982ec9965ae0 76cda37db8977e45ad4c07c6feca94d8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 50, 500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 2, 8)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EnvelopeFrom(), features:From(), 1) --and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:TextLines(), 1)
        and cmpr_btw(features:WordCount(), 5, 20)
        and cmpr_eq(features:Words7bitRatio(), 100)
        and wclass:UNENCODED_SUBJECT()
        and wclass:NO_MIME()
    then
        SetPSAR('ar201')
    end
    
    --ar202
    --smtp / #shorturl #zarabotki
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:HAS_HDR_ORGANIZATION()
    	and TermsMatchGroup(17375,100)
    then 
        SetPSAR('ar202')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar202')
    end
    
	--ar203
    --fe / #buhgalter #virus
    --10.01.2017 / zubr
    if features:RcvSrcExt() == "fe"
        and not features:IsPddUser()
        and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 10
		and wclass:FAKE_ATTACH()
        and features:HtmlTagCount() >= 20
        and features:HtmlFingerprint()
        and features:FromRealName()
    then
        SetPSAR('ar203', true) 
    end
    
	--ar204
	--fe / #buhgalter #virus
	--10.01.2017 / zubr
	if features:RcvSrcExt() == "fe"
        and not wclass:EXCEPTIONS()
		and not features:IsPddUser()
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 10
		and features:HtmlTagCount() >= 20
		and features:WordCount() >= 20
		and (features:WordsMixedRatio() >= 15 or features:FromRealName() == 'Áóõãàëòåð')
		and wclass:FAKE_ATTACH()
	then
        SetPSAR('ar204') 
    end
    
    --ar205
	--mxs_other / #sumki
    --10.01.17 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 2)
    	and cmpr_gt(features:SubjectLen(), 20, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
        and wclass:SHORTURL_AND_IMG()
    	and wclass:SHORT_BOUNDARY()
    	and HeaderMatchRe('Message-ID', regex([[^\<[A-Z\d]{20,40}\@]]))
    	and not HeaderMatch('Date', '0300')
    then
        SetPSAR('ar205')
    end
       
    --ar206
	--mxs_other / #viagra
	--06.07.16 / veselitsky	
    --d77d478860e6232acef8580105e7976b f09d97b383cc03f042f129febe8c818c 3aba303e2157adbb334e166d65229a32 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 300, 1200)
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and features:NoUserAgent() == 1
    	and features:Subject7bitOnly() == 1
    	and features:Words7bitRatio() == 100
    	and cmpr_btw(features:TextLines(), 0, 8)
    	and cmpr_btw(features:WordCount(), 50, 150, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 4)	
    	and features:Has3dLevelDomain() == 1
    	and wclass:DISCOUNT_IN_SUBJECT()
   	then
    	SetPSAR('ar206')
    end

    
    --ar207
    --mxs_other / #vacancy #zarabotok
    --26.09.2016 / rassadovskiy/ a.lis fix
    --896cbfdb2ff691246302615b2f525669 9c7cdbe16c3373c060118487d32e1bf8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),15000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and features:NoUserAgent()
        and cmpr_gt(features:UrlNormCount(),2,true)
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:NoHtmlTag()
        and features:WhitespaceRatio() >= 15
        and (features:WhitespaceToWordRatio() > 500 and cmpr_btw(features:WordCount(),5,100,true)
        	or features:WhitespaceToWordRatio() > 300 and cmpr_gt(features:WordCount(),100))
        and (wclass:HTML_TAG_BACKGROUND_URL() or wclass:NEW_FROMDOMAIN_15_DAYS() or wclass:DIFFERENCE_RCPTNUM_AND_TO() 
            or wclass:NOT_CP1251_CHARS_IN_SUBJECT() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:MSG_ID_LOCALPART_SEEMS_HASH())
        and (wclass:FROM_TLD_IS_SUSP() or wclass:IP_IN_HELO() or wclass:HDR_AUTH_BITS() or wclass:MORE_THAN_1_RCPT())
        and (features:NoRealNameFrom() or wclass:RUSSIAN_FROM_REALNAME())
    then
        SetPSAR('ar207') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar207')
    end
    
	--ar208
    --fe / #zarabotok
    --28.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 15, 45, true)
        and cmpr_btw(features:Words7bitRatio(), 1, 20, true)
        and cmpr_gt(features:LinesToWordsRatio(), 15)
        and features:MailRuTo()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and (wclass:NEW_IP_30_DAYS() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY())
    then
        SetPSAR('ar208')
    end

    
    --ar209
	--fe / #rabota #avito
	--06.07.16 / veselitsky	
    --8d21e108e5eb7998f26c41ab8f786c22 ecb3a316b613ca6af8889e84b26fb152 
	--d933b4fd1b2522af81cac97efadc5772 c0d520aea458afc4ef095e3858689980 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
   		and cmpr_btw(features:MsgSize(), 20, 1200)
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and features:IsAutoreg() == 1
    	and features:MailRuTo() 
    	and features:UrlCountWithoutMailRu() == 1
    	and cmpr_btw(features:WordCount(), 0, 70)
    	and wclass:SUBJECT_NUMBERS_ONLY()
   		and (wclass:SOURCE_IP_IN_TOR_NODE() or cmpr_gt(features:AbfCountriesPerMonthNum(), 1))
   	then
    	SetPSAR('ar209')
    end
    
	
    
    --ar210 
    --fe / #zarabotok
	--01.01.17 / razuvaev
    --3bc9b3febb493d29065803a0dcc2288a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(),1500)
        and features:HasTextOnly() == 1    
        and cmpr_gt(features:UrlCount(),1)
        and cmpr_eq(features:TextLines(),1)
        and cmpr_lt(features:WordCount(),10)
        and wclass:VERY_LONG_LOCALPART()
        and wclass:ONLY_7BIT_WORDS()
        and wclass: SUBJECT_8BBIT_AND_BODY_7BIT()
        and wclass: FE_SUSP_HTMLTAG_TO_WORD_RATIO()
        and wclass: CRASHED_BASE64_IN_SUBJECT()
        and UrlsMatchStr('img-fotki.yandex.ru',1)
    then
        SetPSAR('ar210') 
    end
        
	--ar211
	--mxs_other / #seminar #attach
	--25.04.2016 / zubr
	--958666176db8ebb995d2e537f8788a57 79751865907d4464636b484af172dde0
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 25000 and features:MsgSize() <= 100000
		and features:HasAttach() == 1
    	and features:ImgNum() == 0
		and features:AttachAllCount() == 1
    	and features:MultipartNum() == 5
    	and features:TextLines() <= 5
		and features:WordCount() <= 10
    	and features:Words8bitRatio() == 100
    	and features:Subject8bitOnly() == 1
		and features:FilesExtensions() == ".pdf"
    	and not features:IsSngCountry()
    	and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 30, 200))
	then   
		SetPSAR('ar211')
	end    
    
	--ar212
    --mxs_mbp #nova
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:ImgNum(), 1, true)
        and features:WordCount() <= 30
    	and HeaderMatchRe('Content-Type', regex([[boundary.+[A-Z]{5,}-\d{5,}.{3,}?"$]]))
    then
        SetPSAR('ar212')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar212')
    end
    
	--ar213
	--mxs_mbp / #nigga
	--25.04.2016 / zubr
	--dfd8325221dfe347ec00b646ab58e051
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 5000000
        and features:HasNoAttach() == 1
    	and features:UrlCount() == 0
        and features:ImgNum() >= 1 and features:ImgNum() <= 2
    	and features:GeoCode() == "US"
    	and features:MsgIdDomain() == "mail.gmail.com"
    	and features:EmailsCountInToHeader() <= 1
    	and features:EmailsCountInBccHeader() == 1
    	and features:WordCount() <= 10
    	and features:SubjectWordCount() <= 3
    	and (wclass:UNDISCLOSED() or (wclass:NOREALNAME_TO() and not HeaderMatch('To', '<')))
    	and not HeaderMatch('Bcc', '<')
    	and HeaderMatchRe('Content-Type', regex([[boundary\=(?:\d|[a-z]){25,30}$]]))
	then   
		SetPSAR('ar213')
	end    
    
	--ar214
    --mxs_mbp #bad_ct
    --08.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and wclass:SUSP_CHARS_IN_BOUNDARY()
    	and wclass:HDR_EMPTY_LOCALPART()
    then
        SetPSAR('ar214')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar214')
    end
    
    --ar215
    --mxs_other / #porn #unsub.do #english
    --28.09.2016 / r.kulpin / philip.karpov fix
    --3849c66d5f74bcc6d5158a32250ee9e2 23ae4cba8b0953e57ec6ffeb34094ff4 dd11ed300d6844d5818a324dc169a728
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 30000, 80000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:ExternalImgNum(), 5, 15, true)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId() 
        and features:NoRealNameTo()
        and cmpr_btw(features:TextLines(), 40, 100, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 25, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 600, true)
        and cmpr_btw(features:UrlNormCount(), 3, 5, true)
        and cmpr_btw(features:HtmlTagCount(), 100, 450, true) 
        and (wclass:EXTERNAL_IMG_FROM_NEW_IP_7_DAYS() or wclass:IMAGE_AND_FROM_MATCHES_WITH_URL_WITH_YOUNG_DOMAIN() or wclass:FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()     
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:SHORT_BOUNDARY()    
        and UrlsMatchStr('unsub.do', 1)
    then
        SetPSAR('ar215')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar215')
    end
    
	--ar216
	--mxs / #simbol v resivde
	--29.09.2016 / zubr 
	if features:RcvSrcExt() == "mxs_other"
		and TermsMatchGroup(17827, 100)
		and not HeaderMatch('Subject', 'ï»¿')
		and SFKD('ar216', ',ar216', 60, 30)
	then   
		SetSpam('ar216')
		CarbideSendStatsSum('rules_analyst', 'ar216', 1)	
	end   
    
	--ar217
	--mxs_other / #pidori
	--22.08.2016 / zubr
	--f3c03dc71c4fc79572e6528118c393bf
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
		and features:MsgSize() >= 500 and features:MsgSize() <= 500000
		and features:HasTextOnly() == 1
    	and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and features:NoRealNameTo() == 1
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 3
		and features:UrlFotoMyMail() == true
    	and features:TextLines() >= 1 and features:TextLines() <= 50
		and features:WordCount() >= 1 and features:WordCount() <= 100
		and features:WhitespaceToWordRatio() >= 400
    	and features:Subject8bitOnly() == 1
    	and wclass:FAKE_FOTO_MAIL_RU()
		and wclass:SPF_NOT_PASS()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
	then   
		SetPSAR('ar217')
	end
    
    --ar218
	--mxs_other / #viagra
	--07.07.16 / veselitsky	
    --09e4556227b000c5401d28d4dba80ace d8cdf6b9f245e5a93eccd59bd0033557 d15abcc00ced9e1ed243ad7511719bf8
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'rpop')
   		and cmpr_btw(features:MsgSize(), 80, 200)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoUserAgent() == 1
    	and features:Subject7bitOnly() == 1
    	and features:Words7bitRatio() == 100
    	and features:TextLines() == 1
    	and cmpr_btw(features:WordCount(), 1, 8, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)	
    	and (wclass:MANY_CAPITALS_IN_FROM() or wclass:FROM_TLD_IS_SUSP())
    	and (wclass:NO_MIME() or wclass:NO_TO())
    	and wclass:TERMS_FARMACY()
   	then
    	SetPSAR('ar218')
    end

    --ar219
    --mxs / #rambler #zarabotok
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:MultipartNum() == 1
        and features:IpAge() >= 0 and features:IpAge() <= 5    
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:HtmlTagCount() == 0
        and wclass:ONE_RECEIVED()
        and wclass:SUSP_FROM_AND_REPLY_TO()
        and UrlsMatchStr('r0.ru')
    then
        SetPSAR('ar219')
    end
    
	--ar220
	--mxs_other/ #zarabotok 
	--07.12.16 / minina
 	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'mxs_esp')
    	and features:IsFromGoogle()
    	and cmpr_eq(features:HasTextOnly() , 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 25)
		and UrlsMatchStr('.stat-pulse.com/', 1)
    	--and features:FromRealName()
    	--and SFKD('ar3186', features:FromRealName(), 60, 5)
    then
    	SetPSAR('ar220')
    end
    
    --ar221
    --fe / #anketa_polzovatelya
	--29.09.16 / r.kulpin
    --26383c6a92111d441aa9bb340799e0a8 9246427715cd107611e6596b1dbd0d65 7a1212192614d8236f03b33be7f7c22a
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 100, 3000,true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and features:NoSubject()
    	and features:MultipartNum() == 3
    	and cmpr_lt(features:TextLines(), 15)
    	and cmpr_btw(features:WordCount(), 10, 150, true)
       	and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 12, true)
      	and cmpr_btw(features:RepuserAge(), 1, 30, true)    	
    	and features:NumberCount() == 0
        and (features:AbfIsFastIpChange() or wclass:VERY_LONG_LOCALPART())
    	and (features:AbfCityWasChanged() or features:AbfIpWasChanged())
    	and wclass:AUTOREG()
    	and (features:IpCategory() == 'tiny' or features:IpCategory() == 'small')
    then
    	SetPSAR('ar221')
    end
   

     --ar222
	 --mxs_mbp / #gmail #blogspot.com
	 --28.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 2000,10000)
        and cmpr_gt(features:UrlCount(),3)
        and cmpr_eq(features:Subject8bitOnly(),1)
      	and cmpr_gt(features:SubjectWordCount(), 4, true)
        and wclass:HAS_X_RECEIVED()
        and wclass:HELO_IN_MSGID()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:HTML_BODY_HEAD()
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:FREE_HOSTING()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:VERY_LONG_LOCALPART()
        and UrlsMatchStr('blogspot.com', 1) 
	then
		SetPSAR('ar222')
	end
    
    --ar223
	--mxs_other/ #zarabotok #rt.ru
	--07.12.16 / minina
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and features:AuthenticatedDomain() == 'rt.ru'
    	and cmpr_eq(features:HasTextOnly() , 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and features:IpCategory() == 'tiny'
        and cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 50)
    	and wclass:SPF_NOT_PASS()
    	and not wclass:DKIM_PASS()
    then
    	SetPSAR('ar223',true)
    end
       
    --ar224
    --fe / #zarabotok  
    --30.09.16 / r.sulimov
    --2b2d51b9fc093c18917a7351f2811ecf 06476a3ce6ee7f789647f10f25222e95
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 3000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:RepuserAge(), 50, true)
    	and cmpr_lt(features:Karma(), 1, true)
    	and cmpr_eq(features:NoSubject(), 1)
    	and cmpr_eq(features:Word7bitCount(), 0) 
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 5, 40, true)
        and cmpr_btw(features:WordCount(), 30, 400, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 120)
		and cmpr_gt(features:WordsOtherRatio(), 20)
        and (wclass:AUTOREG() or wclass:TO_LOCALPART_IN_REALNAME())
    	and wclass:FE_LOW_USER_AGE()
    	and wclass:NAME_IN_BODY()
    	and wclass:WORDS_WITH_NOISE()
    then
        SetPSAR('ar224')
    end

    --ar225
    --mxs_other / #mirtesen
    --01.12.16 / minina
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
        and features:FromDomain() == 'mirtesen.ru'
		and cmpr_btw(features:IpAge(), 0, 60) 
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and not wclass:DKIM_PASS()
    then
        SetPSAR('ar225')
    end    

    --ar226
    --mxs / #greencard
    --09.01.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:HasTextOnly() == 1
        and UrlsMatchStr('.htm', 1)
        and TermsMatchGroup(18121, 10)
        and not wclass:PHP_URL()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and not wclass:FROM_INFORMATION_SERVICE()
    then
        SetPSAR('ar226')
    end
 
    --ar227
    --fe / #TestEngMsg 
    --30.09.16 / r.sulimov
    --TEST
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 50, true)
        and cmpr_lt(features:Karma(), -1, true)
        and cmpr_eq(features:Word8bitCount(), 0)
		and not (features:MailRuTo()
			or cmpr_eq(features:NoTo(), 1))
    	and wclass:FE_REGIONS_MISMATCH()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar227', true)
		LogMsgToHadoop( 'dstat_sulimov_log', '#ar227TEST')
    end
     
	--ar228
	--mxs_other / #rabota na domu
	--27.04.2016 / zubr
	--cefa9b7e84c96fcc3c247289bf2e34a7 d9b64ffc0cb1b3b864e2d38a55090baa c94b8b087e633c51c749c4b9974d6843
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe" 
		and features:MsgSize() >= 800 and features:MsgSize() <= 20000
		and (features:HasTextOnly() == 1 or features:HasNoAttach() == 1 and features:ImgNum() == 1)
		and features:MultipartNum() <= 4
		and (features:UrlNormCount() == 0 or features:HasFreeHosting() == 1 or features:HasPhotoHosting() == 1)
		and features:HtmlUniqueTagCount() <= 20
		and features:TextLines() >= 3 and features:TextLines() <= 30
		and features:Words7bitRatio() <= 20
		and TermsMatchGroup(17111, 100)
		and HeaderMatch('Received', 'by e.mail.ru') 
	then
		if features:RepuserAge() >= 10
		then
        local user = RepuserStatNDays(tostring(features:MpopUserId()), 'mail', 10)
		local a, tbl, send_days40 = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 10, 1, nil, 40)
        local a1, tbl1, send_days15 = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 10, 1, nil, 15)
        local a2, tbl2, send_days150 = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 10, 1, nil, 150)
        local malo = features:RepuserAge() - send_days15
			if send_days40 >= 1
            	and user
            	and user.stat
            	and (send_days40 < malo or (send_days150 > 1 and user.stat.cmpl_rate and user.stat.cmpl_rate > 0))
			then
			SetPSAR('ar228')
			LogMsgToHadoop( 'dstat_zubrilova_log', '#ar228')    
            end
		else
		SetPSAR('ar228')
		LogMsgToHadoop( 'dstat_zubrilova_log', '#ar228')
		end
	end
    
    --ar229
    --mxs / #fvds
    --01.10.16 / r.belyankin
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and wclass:ONE_RECEIVED()
        and StrMatchRe(features:EnvelopeFromDomain(), regex([[^[a-z\d-]+\.fvds\.ru$]]))
    then
        SetPSAR('ar229')
    end
    
	--ar230
	--mxs_other / #zarabotok
	--07.07.2016 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrc() == "rpop" or features:ImapSubSrc() == "mxs")
		and features:MsgSize() >= 1000 and features:MsgSize() <= 20000
		and features:HasTextOnly() == 1
		and features:RcptNum() >= 5
		and features:UrlNormCount() <= 1
		and features:TextLines() >= 2 and features:TextLines() <= 7
		and features:WordCount() >= 100 and features:WordCount() <= 600
		and wclass:MAIL_RU_MSGID_PATTERN()
		and wclass:PRECEDENCE_BULK()
		and wclass:HAS_HDR_ORGANIZATION()
	then   
		SetPSAR('ar230')
	end  
    
	--ar231
    --fe / #bazy 
    --10.01.17 / a.lis
    --78b53f5593a7fb121b80a3e4896b1489
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 10000, 55000, true)
    	and cmpr_btw(features:ImgNum(), 1, 3, true)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:RepuserAge(), -1, 2, true)
    	and features:UserCreateTime()
		and features:UserCreateTime().days
        and features:UserCreateTime().days <= 5
    	and TermsMatchGroup(17845, 100)
	then
		SetPSAR('ar231')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar231')
	end 
       
       
    --ar232
    --fe / #zarabotok #image_noise
    --30.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not wclass:EXCEPTIONS()
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),10000)
        and cmpr_btw(features:ImgNum(),1,5,true)
        and features:MultipartNum() >= 5
        and features:NoRealNameTo()
        and features:RepuserAge() < 15
    	and cmpr_lt(features:Karma(), 0, true) 
        and cmpr_eq(features:UrlCountWithoutMailRu(),1)
        and features:FromRealNameWordCount() == 2
        and features:WordCount() > 30
        and cmpr_btw(features:TextLines(),1,3,true)
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:HtmlTags()['a']
        and features:HtmlTags()['a'] == 1
    then
        SetPSAR('ar232') 
    end
    
    --ar233
    --mxs / #BOUNDARY
    --10.01.17 / r.belyankin
    if	not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and HeaderMatchRe('Content-type', regex([[boundary=(\")?\-*\[\[BOUNDARY\]\][;:"]*]]),1)
    then
        SetPSAR('ar233')
    end
    
    --ar234
    --fe / #blogspot
    --10.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_gt(features:UserAge(), 200, true)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:FE_NO_TO() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
        and cmpr_gt(features:HtmlTags()['br'], 15)
        and StrMatchRe(features:UrlsRawHashString(), regex([[.*\.blogspot\.[a-z]{2,6}\/2017\/[0-9]{2,4}\/[a-z]+\.html$]]))
    then
        SetPSAR('ar234')
    end
    
    --ar235
    --mxs / #gribok
    --10.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() <= 3
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and (HeaderMatchRe('Content-type', regex([[boundary=\"\-{5,35}=?]]), 1)
            or HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,5}={5,10}]]), 1))
    then
        SetPSAR('ar235')
    end
    
	--ar236
	--mxs_mbp  / #m16 #secretnoe #sredstvo
	--07.07.2016 / veselitsky 
	--3edf0511636b53e69b7f00422886823b e0940d84593a94c478ade9d1f20666af
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
		and cmpr_btw(features:MsgSize(), 800, 10000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 3, 4, true)
		and features:IsFromGoogle()
    	and cmpr_btw(features:WordCount(), 15, 500)
    	and cmpr_btw(features:TextLines(), 10, 35)
		and (features:MsgIdDomain() == 'yahoo.com' or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and wclass:CT_IN_BODY()
	then
		SetPSAR('ar236')
	end   

    --ar237
    --fe / #fast autoreg
	--10.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 1, true)
        and cmpr_lt(features:UserAge(), 100, true)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_lt(features:Karma(), 0, true)
        and not wclass:RUSSIAN_FROM_REALNAME()
        and StrMatch(features:UrlsRawHashString(),".ru")
        and StrMatchRe(features:UrlsRawHashString(), regex([[\.ru\/\d\w{4,}]]))
    then
        SetPSAR('ar237')
    end
     
    --ar238
	--fe / #casino 
    --23.09.16 / veselitsky	
	--568e7ceb01d99b9dc44bc021a285a309 84edd0a7078937d7befcbf8a0cc0f312
    if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 5000)
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
    	and features:AbfIpWasChanged() 
    	and features:WordCount() >= 30	and features:WordCount() <= 400	
    	and features:WordsOtherRatio() >= 20
    	and features:HtmlTagCount() > 8
 		and features:UrlNormCount() == 0
    	and wclass:FE_TOR_IP()
    	and (wclass:SUBJECT_WITHOUT_LETTERS() or TermsMatchGroup(10100, 100) or features:NoSubject() == 1 or cmpr_gt(features:DotCount(),features:WordCount()))
    then
    	SetPSAR('ar238', true)
    end
    
    --ar239
	--mxs_mbp / #zarabotokskartinkoy
	--26.09.16 / veselitsky	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 100000, 250000)
    	and features:HasNoAttach() == 1 
      	and features:ImgNum() == 1
    	and features:IsFromGoogle()
 		and features:NoRealNameTo() == 1
   		and features:HasBcc() == 1
    	and features:MultipartNum() == 5
	   	and features:TextLines() == 1
    	and cmpr_lt(features:WordCount(), 7)
		and wclass:FROM_MATCH_WITH_TO()
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
  	then
    	SetPSAR('ar239')
    end
    
	--ar240
	--fe / #buhgalter #virus
	--10.01.2017 / zubr
	if features:RcvSrcExt() == "fe"
        and not wclass:EXCEPTIONS()
		and not features:IsPddUser()
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 10
		and features:HtmlTagCount() >= 20
		and wclass:FAKE_ATTACH()
		and features:FromRealName()
        and features:HtmlFingerprint()
		and SFKD('ar240', {features:FromRealName(),features:HtmlFingerprint()}, 60, 5)
	then
        SetPSAR('ar240') 
    end
        
	--ar241
	--mxs_mbp / #vbei #google
    --mfc_mf_yandex
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 5000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:RECEIVED_LAN_1()
        and wclass:PHP_URL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    	and wclass:NO_USER_AGENT()
    	and (UrlsMatchStr('search.icq.com', 1) 
    		or UrlsMatchStr('yandex.ru/search', 1)
    		or UrlsMatchStr('google.com/', 1))
    then
        SetPSAR('ar241')
    end
    
  --[[  --ar242
    --fe / #alco
	--11.01.17 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	--and (cmpr_gt(features:RcptNum(), 2, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and cmpr_btw(features:UserAge(), 100,300, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 30, 300)
		--and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_eq(features:HtmlTagCount(),0)
		and cmpr_eq(features:MultipartNum(), 1)
    	and wclass:NOREALNAME_TO()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
        and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))]]
    	--and StrMatchRe(features:UrlsRawHashString(), regex([[[a-z]{3,}\.[a-z]{3,}\.ru]]))
   --[[ then
        SetPSAR('ar242')
    end]]
     
     --ar243
	 --mxs_mbp / #autozarabotok
	 --28.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),50,5000)
        and cmpr_eq(features:MsgIdDomain(),"USER-PK")
        and wclass:HAS_X_RECEIVED()
        and wclass:OUTLOOK_WITH_BAD_MESSAGE_ID()
        and wclass:URL_COUNT_0_WITH_HTTP()
        and TermsMatchGroup(18210,100)
	then
		SetPSAR('ar243')
	end

    --ar244
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_eq(features:HasAttach(), 1)
        and (cmpr_gt(features:RcptNum(), 10) or wclass:AUTOREG())
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and cmpr_eq(features:HtmlTags()['center'], 1)
        and UrlsMatchStr('yadi.sk')
        --and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
    then
        SetPSAR('ar244')
    end
    
    --ar245
	--mxs_mbp / #From == To + Bcc #su
	--08.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 200000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	--and cmpr_gt(features:WordCount(), 100)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	--and cmpr_gt(features:HtmlTagCount(), 50, true)
    	and (wclass:FROM_MATCH_TO_WITH_BCC() or wclass:FROM_MATCH_TO())
	then
		SetPSAR('ar245')
	end
    
    --ar246
    --fe / #one_ru_url
    --14.10.16 / a.sokolov
    if not IsBlocked
    	and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 100, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 25, 350, true)
        and cmpr_gt(features:Words8bitRatio(), 50)
        and UrlsMatch(regex([[\.ru\/?([a-z0-9]{3,})?$]]),1)
        and HeaderMatch('Received', 'tel.mail.ru')
        --and wclass:NAME_IN_BODY()
    then
        SetPSAR('ar246')
        LogMsgToHadoop('dstat_sokolik_log', '#ar246')
    end
    
	--ar247
    --mxs_other / #zarabotok
    --19.12.16 / philip.karpov
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:RETURNPATH_BLACKLISTED())
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:PHP_URL()
        and wclass:ONE_RECEIVED()
        and wclass:DOMAINS_EQUAL()
    then
        SetPSAR('ar247')
    end
      
	--ar248
    --mxs_other / #fifa
    --8.07.2016 / rassadovskiy
    --a4969e78f5d6591647306c0e0cee6774 bccdccd80af3c43c0a49c0c97223cea8 822a5fec083a285772df244480ba33ae
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),2000,6000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),3)
        and cmpr_gt(features:RcptNum(),5)
        and features:IsFromHotmail()
        and cmpr_btw(features:UrlNormCount(),3,6,true)
        and cmpr_btw(features:HtmlTagCount(),30,70)
        and cmpr_btw(features:TextLines(),5,20,true)
        and cmpr_btw(features:WordCount(),30,70)
        and wclass:EMPTY_BCC_AND_NO_TO()  
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:SHORTURL()
    then
        SetPSAR('ar248')
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar248')
    end
    
	--ar249
	--fe / #yandexdirect
	--22.09.16 / veselitsky	
    --c1c020694ee3eb896c2284730dc65328 cbf529cb4fe92330ee305bc27168fec6 1d8ca672cfea7f5a6091ed7207adac91
	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
   		and cmpr_btw(features:MsgSize(), 10000, 50000)   
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and (features:NoTo() == 1 or features:NoRealNameTo() == 1)
    	and features:IsAutoreg() == 1
    	and cmpr_lt(features:RepuserAge(), 10)
    	and cmpr_btw(features:WordCount(), 300, 1200)
    	and cmpr_gt(features:Words7bitRatio(), 20)
   		and cmpr_gt(features:Words7bitRatio(), 5)
    	and cmpr_gt(features:NumbersToTextRatio(), 50)
    	and TermsMatchGroup(10651, 50)	
	then
    	SetPSAR('ar249')
    end
    
    --ar250
	--mxs / #vacancy #zarabotok #php
	--22.09.16 / veselitsky	
	if not IsBlocked
    	and features:RcvSrc() == 'mxs'
        and features:HasTextOnly() == 1
		and cmpr_gt(features:UrlNormCount(), 0)
		and UrlsMatchStr('/amsweb.php', 1)
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (wclass:MISSING_DATE() or wclass:NO_MIME())
	then
    	SetPSAR('ar250')
		LogMsgToHadoop('dstat_veselitsky_log', '#ar250')
	end
    
    --ar251
    --mxs_other / #business-processings
    --11.01.2017 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),5000,20000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and features:FromMatchesWithUrl()
        and features:NoBodyTag()
        and features:UrlCountWithoutMailRu() > 0
        and features:WhitespaceToWordRatio() > 500
        and UrlsMatch(regex([[^[a-f]{10,}\.ru$]]))
    then
        SetPSAR('ar251') 
    end
    
   --ar252
   --mxs / #matrix #money
   --02.05.2016 /by r.kulpin
    if not IsBlocked
      and cmpr_eq(features:RcvSrc(), "mxs")
      and cmpr_btw(features:MsgSize(), 5000, 8000)
      and cmpr_eq(features:HasTextOnly(), 1)
      and features:NoRealNameTo()   
      and cmpr_btw(features:UrlNormCount(), 1, 4, true)
      and cmpr_eq(features:Subject8bitOnly(), 1)
      and features:HasUnsubscribeUrl()
      and cmpr_btw(features:UrlsTextSize(), 200, 400)
      and cmpr_gt(features:TextLines(), 30, true)
      and HeaderMatchRe('Content-Type', regex([[(?i)boundary=".+_1"$]]))
	  and not UrlsMatchStr('estismail.com')
    then  
      SetPSAR('ar252')
   end
 
    --ar253
	--fe / #gif #xxxl
	--07.07.2016 / r.kulpin
	--60d7702f627b3afd296d258cb70836a5 2b491772f740c8b319b98718e31c3f90 35820e2f671d204a5977e498a68d7dfb
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
		and cmpr_btw(features:MsgSize(), 80000, 500000)
		and cmpr_eq(features:ImgNum(), 1)
        and features:HasNoAttach()
        and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_gt(features:MultipartNum(), 3, true)
		and cmpr_eq(features:NoRealNameTo(), 1)
        and features:HeloInMsgId()
        --and features:MailRuTo()
        and cmpr_eq(features:SPF(), "none")
        and cmpr_eq(features:LastHelo(), "") 
		and cmpr_eq(features:UrlNormCount(), 0)       
        and cmpr_lt(features:TextLines(), 6, true)
        and cmpr_btw(features:Words7bitRatio(), 50, 100, true)
        and cmpr_btw(features:WordCount(), 4, 20, true)
        and (
            cmpr_lt(features:Karma(), 0, true) 
           or 
            (features:UserCreateTime() and cmpr_btw(features:UserCreateTime().days, 0, 1, true))
            )
        and wclass:FROM_ENDS_IN_NUMS()
        and (cmpr_eq(features:FilesExtensions(), ".gif")
            or StrMatch(features:PartsFilenames(), '.jpg'))
	    then
		SetPSAR('ar253')
	end
    
	--ar254
	--fe / #bazi
	--30.09.16 / veselitsky	
	--9d494e9b8672d16653f359b0e6b0841a 93adb22c46fb0c2bd6b2dbb35c334161 0e1cdcf6a7220bccec6d1273f9ee3443
 	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 500, 10000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and features:MailRuTo()
    	and ((features:AutoregInfoClustersHeaderValue() and features:AutoregInfoClustersHeaderValue()[1])
        	or wclass:FAST_AUTOREG() or features:AbfAuthFromNewCountry())
    	and cmpr_lt(features:RepuserAge(), 5) 
    	and	cmpr_btw(features:TextLines(), 0, 40)
    	and cmpr_btw(features:WordCount(), 10, 250, true)
    	and cmpr_btw(features:NumberCount(), 0, 25, true)
    	--and (features:AbfAuthFromNewCountry() or features:AbfIsFastIpChange())
    	and TermsMatchGroup(10254, 80)
    	and (wclass:NEW_IP_7_DAYS() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY())
    then
    	SetPSAR('ar254')
    end
    
    --ar255
	--fe / #phishing #appleID
    --29.09.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
    	and features:NoRealNameTo() == 1
        and features:FirstLevelReplyToDomain() == 'fr'
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:SubjectNumbersCount(), 8)
		and cmpr_btw(features:TextLines(), 8, 40)
    	and cmpr_btw(features:WordCount(), 60, 300)
    	and cmpr_btw(features:UrlNormCount(), 0, 3, true)
		and wclass:MOBILE_MAIL_RU()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
    	SetPSAR('ar255')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar255')
    end
        
	--ar256
	--mxs_other  / #m16 #secretnoe #sredstvo
	--08.07.2016 / veselitsky 
	--7994c8d010c6293b5d827e566fb737e6 6a6f4f88dfce2f2bcc41b75ce8c7f104
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 1000, 10000)
		and cmpr_lt(features:AttachAllCount(), 1, true)
    	and cmpr_lt(features:AttachOfficeCount(), 1, true)
    	and cmpr_btw(features:MultipartNum(), 3, 4, true)
    	and cmpr_btw(features:WordCount(), 30, 400)
    	and cmpr_btw(features:TextLines(), 10, 50)
		and wclass:CT_IN_BODY()
    	and (wclass:MAIL_RU_MSGID_PATTERN() or wclass:PROBABLE_PHISHING_FROM() or wclass:FROM_INFORMATION_SERVICE())
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
	then
		SetPSAR('ar256')
	end 
    

    --ar257 
    --fe / #eng
	--01.01.17 / razuvaev
    --3bc9b3febb493d29065803a0dcc2288a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(),1500)
        and cmpr_eq(features:NoSubject(),1)
        and cmpr_gt(features:RcptNum(),10)
        and wclass:FAST_AUTOREG()
        and wclass:MANY_SORTED_ENVELOPE_TO()
        and wclass:FE_ENG_MSG()
        and wclass:SORTED_X_ENVELOPE_TO_AND_ONE_TO()
        and wclass:URL_COUNT_0_WITH_HTTP()
    then
        SetPSAR('ar257') 
    end
        
    --ar258
    --smtp / #zarabotok
    --01.01.17 / philip.karpov
    --sc_sb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and wclass:SHORTURL()
        and wclass:IP_IN_HELO()
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar258')
    end
   
	--ar259
	--mxs_other  / #news
	--08.07.2016 / veselitsky 
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 0, 200)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
		and features:Subject8bitOnly() == 1 
    	and features:Words8bitRatio() == 0
    	and cmpr_btw(features:WordCount(), 0, 10)
        and cmpr_gt(features:UrlCount(), 0)
		and wclass:NEW_FROMDOMAIN_30_DAY()
    	and wclass:DOMAINS_EQUAL()
	then
		SetPSAR('ar259',true)
	end  

	--ar260
    --mxs_other / #sk_integral
	--09.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:MultipartNum(), 3) 
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 20, 250)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:UrlsTextSize(), 400)
    	and cmpr_btw(features:HtmlTagCount(), 5, 120)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and wclass:HAS_HEADER_SENDER()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH() or not wclass:DKIM_PASS())
	then
        SetPSAR('ar260')
    end
    
    --ar261
    --fe / #virus
	--1.01.17 / r.sulimov
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_gt(features:MsgSize(), 50000)
		and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:ImgNum(), 0)
    	and (cmpr_eq(features:NoRealNameTo(), 1) or wclass:TO_LOCALPART_IN_REALNAME())
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 30, 100, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:UserAge(), 200)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3, true)
    	and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
        and wclass:NAME_IN_BODY()
        and cmpr_eq(features:FilesExtensions(), '.zip')
    then 
        SetPSAR('ar261')
    end

    
    --ar262
	--smtp / #durov
	--11.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'smtp')
        and cmpr_lt(features:MsgSize(), 10000)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and UrlsMatchStr('wget.link', 1)  
        and wclass:SMTP_HELO_SEEMS_DYNAMIC()
        and wclass:FROM_DOMAIN_GA_GQ_ML_CF()
        and wclass:FROM_TLD_IS_SUSP()
        and wclass:LOCAL_IP_IN_HELO() 
	then
		SetPSAR('ar262')
	end

   
	--ar263
	--mxs_mbp / #google caps from
	--07.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 1500)
        and cmpr_eq(features:AuthenticatedDomain(),'yahoo.com')
    	and cmpr_eq(features:MultipartNum(),2)
    	and cmpr_eq(features:NoHtmlTag(),1)
    	and cmpr_eq(features:NoUserAgent(),1)
    	and cmpr_lt(features:SubjectLen(),40)
        and (wclass:CAPS_IN_FROM_LOCALPART() or TermsMatchGroup(18238,100))
        and (wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS() or cmpr_eq(features:FromRealNameWordCount(), 2))
        and wclass:SUSP_HTML_WITH_TEXT_ONLY()
        and TermsMatchGroup(18227,100)  
	then
		SetPSAR('ar263')
	end    
    
	--ar264
	--mxs_other / #zarabotok #8000
	--09.07.16 / veselitsky	
	--713798b3854887b8f0b34f1c04acb55e 7a41ed93f0da64666fe8804c82e3c0cb 2eb719e923b2427f4123b06649c45386
	if not IsBlocked
       	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 2000, 7000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
		and cmpr_gt(features:SubjectNumbersCount(), 4)
    	and cmpr_btw(features:WordCount(), 50, 100)
    	and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and cmpr_btw(features:HtmlTagCount(), 30, 55)
    	and cmpr_btw(features:NumberCount(), 40, 80)
    	and cmpr_btw(features:NumbersToZeroRatio(), 10, 20)
    	and wclass:HAS_TAG_META()
    	and wclass:DOMAINS_EQUAL()
    	and wclass:TERMS_ZARABOTOK_V_SETI2() 
    	and (wclass:NEW_IP_30_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS())
        and wclass:SUSP_LINES_TO_WORD_RATIO()
    then
    	SetPSAR('ar264')
    end
    
    --ar265
	--mxs_mbp / #zarabotok #manyto
	--23.09.16 / veselitsky	 
	--0b3bea3fe856ea3569adb9470138344a cf0ccc709dc9279803c3bd221b31e2f8
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 4000)
    	and features:HasTextOnly() == 1
		and cmpr_gt(features:EmailsCountInToHeader(), 25)
    	and features:MultipartNum() == 3
    	and features:IsFromGoogle()
    	and cmpr_btw(features:WordCount(), 18, 36)
    	and cmpr_btw(features:HtmlTagCount(), 0, 10)
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and wclass:FROM_ENDS_IN_NUMS()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
    	SetPSAR('ar265')
    end
    
	--ar266
    --fe / #zarabotok #instabunch #blogspot
    --07.08.2016 / rassadovskiy
    --7341224e64193ba438f1513395626ea1 c3d9b71f63fb701cd7db75b31a828d40 7cdcce5dcef2950333e120a906fdb54c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,7000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:RepuserAge(),5)
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:TextLines(),3,15,true)
        and cmpr_btw(features:WordCount(),20,300)
        and cmpr_btw(features:HtmlTagCount(),5,25)
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and (wclass:IP_URL() 
            or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY()
            or wclass:TERMS_ZARABOTOK_V_SETI2())
        and TermsMatchGroup(17193,100)
    then
        SetPSAR('ar266')
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar266')
    end
    
    --ar267
	--smtp / #neftetrade
	--11.01.17 / razuvaev
    --b5cfae7e1b467e6eb6a25c32db18e767 8af67e8a8e2db4bdec9e06c9f0eb63d8
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'smtp')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_eq(features:NoTo(),1)
        and wclass:HTML_BODY_HEAD()
        and wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS()
        and wclass:SHORT_MESSAGE()
        and wclass:ABF_FAST_IP_CHANGE()
	then
		SetPSAR('ar267')
	end
    
    --ar268
    --mxs_other / #seminar
    --30.09.16 / philip.karpov
    --552e4d3620147b348c3b27e21fe194cb 60ea65aca9c1aaa42632b3579756cd34
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 100, 800, true)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
        and wclass:MS_MAILER()
        and wclass:CAPS_LETTERS_IN_DOMAIN()
        and wclass:FROM_MATCH_TO()
        and wclass:SPF_NOT_PASS()
        and wclass:HTML_BODY_HEAD()
        and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:OTHER_IP_IN_DNSBL())
    then
        SetPSAR('ar268')
    end
    
    
	--ar269
	--mxs_other / #zarabotok #8000r
	--07.01.17 / razuvaev
	if not IsBlocked
    	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and features:HasNoAttach() == 1
    	and cmpr_lt(features:ImgNum(), 1, true)
	    and cmpr_btw(features:SubjectWords8bitRatio(),20,80,true)
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and cmpr_gt(features:NumberCount(),2)
        and wclass:DOMAINS_EQUAL()
    	and TermsMatchGroup(10604, 100)
    	and (TermsMatchGroup(17223, 100) or TermsMatchGroup(17192, 100))
	    and not StrMatch(features:Helo(), features:FromDomain())  
	then
		SetPSAR('ar269')
	end    
    
    --ar270
	--mxs_other / #znakomstva
	--09.07.16 / veselitsky	
    --949f28da13886275536dd741838fc4b6 ce0f89169940471a331c78c2a914a39d 428c155b2f99174fc6e2dc97aa1dfb54
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
   		and cmpr_btw(features:MsgSize(), 80, 300)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and features:Has3dLevelFromDomain() 
    	and features:Subject7bitOnly() == 1
    	and features:Words8bitRatio() == 0
    	and cmpr_btw(features:TextLines(), 0, 6)
    	and cmpr_btw(features:WordCount(), 10, 40)
    	and features:UrlCountWithoutMailRu() == 1
    	and features:HasShortUrl() == 1
    	and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_30_DAYS())
    	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
   	then
    	SetPSAR('ar270')
    end
    
    
    --ar271
    --mxs_other / #docs.google #noise
    --11.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),5000,20000)
        and features:HasTextOnly() == 1
        and features:HtmlTagCount() > 10
        and features:SourceTextSize() > 5000
        and features:DomainRepipAge() <= 7
        and features:DotCount() < 10
        and UrlsMatchStr('docs.google.com/document/',1)
    then
        SetPSAR('ar271') 
    end

    
    --ar272
	--mxs_mbp / #soooooo much shorturls
	--07.01.17 / razuvaev
	if not IsBlocked
     	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 1500,10000)
        and cmpr_gt(features:UrlCount(),1)
        and (cmpr_gt(features:SubjectWordCount(),4,true)  or TermsMatchGroup(18252,100))
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:HAS_X_RECEIVED()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()  
        and TermsMatchGroup(18250,100)
	then
		SetPSAR('ar272')
	end
    
    --ar273
    --mxs / #zarabotok
    --30.09.16 / philip.karpov
    --7437dae3fc8d398cec91b92bbb38a82e 70cfd933fa9f2e1ab09791824155d984 a88d938f374ed7a1dff40bf3857f99b3 9a3cd879225911d485b5b97b079b52d4
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_btw(features:TextLines(), 5, 30)
        and cmpr_btw(features:LinesToWordsRatio(), 20, 50)
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and wclass:HTML_BODY_HEAD()
        and wclass:NO_USER_AGENT()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:BASE64_TRANSFER_ENCODING()
    then
        SetPSAR('ar273')
    end
    
	--ar274
    --mxs_mbp #nova
    --11.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM_AND_3DLEVELFROM()
    	and wclass:PHP_URL()
    	and HeaderMatch('Authentication-Results','.jino.ru')
    then
        SetPSAR('ar274')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar274')
    end
    
   --ar275
   --mxs / #noize
   --03.05.2016 /by r.kulpin
   --f4ee0788b66f76e16d453402c41f6e1d
   --906abd9ea88931e608b85754ea71da8c
   --41dbc0b4cd6f38c4aa3c6669c1a5fad5
   --3883c7d7659d0b6df5ec305e48c94b1f
    if not IsBlocked
      and (cmpr_eq(features:RcvSrc(), "mxs")
         or cmpr_eq(features:RcvSrc(), "imap"))
      and cmpr_btw(features:MsgSize(), 300, 5000)
      and cmpr_eq(features:HasTextOnly(), 1)
      and cmpr_eq(features:NoFrom(), 1)
      and cmpr_eq(features:NoTo(), 1)
      and cmpr_eq(features:NoSubject(), 1)
    then 
      SetPSAR('ar275')
   end

    
	--ar276
    --rpop / #english #top
    --10.07.2016 / rassadovskiy
    --f59f7fbce557b909220d8ed16c23b6df f2bba141ab60d694a55cb41cfd018a71 7dff3ec44e912f3a5bec8ebfe9b98dc6
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'rpop')
        and cmpr_btw(features:MsgSize(),3000,6000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and features:NoRealNameTo() == 1
        and features:NoUserAgent() == 1
        and features:ToEmailInBody() 
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_eq(features:HtmlTagCount(),0)
        and cmpr_btw(features:TextLines(),10,30,true)
        and cmpr_btw(features:WordCount(),400,800)
        and features:WhitespaceToWordRatio() > 150
        and wclass:TOP_URLS()  
        and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
        and wclass:SPF_NOT_PASS()
        and wclass:FIRST_LEVEL_FROM_DOMAIN_IS_NEWGTLD()
    then
        SetPSAR('ar276') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar276')
    end
    
    --ar277
    --mxs_other / #vacancy #zarabotok
    --25.08.2016 / rassadovskiy
    --c028919bc8da8e9da6892c65647f473f bdd486eb8b3a0187a6e50a189b32394a 603e1119ea2d6facdfbe29fe31fe041c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(),1000,50000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),1)
        and cmpr_gt(features:RcptNum(),1)
        and features:NoRealNameTo() == 1
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:HtmlTagCount(),20,60)
        and cmpr_btw(features:TextLines(),5,15,true)
        and cmpr_gt(features:WordCount(),20)
        and cmpr_gt(features:Words8bitRatio(),60)
        and features:WhitespaceToWordRatio() > 130
        and (wclass:REMOTE_IP_IN_SPAMHAUS()  
            or wclass:PTR_ERROR()
    		or wclass:HAS_TAG_META())
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:HAS_HDR_ORGANIZATION()
        and (wclass:WORDS_OTHERS_BAD_RATIO()
            or TermsMatchGroup(17194,100))
    then
        SetPSAR('ar277') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar277')
    end
    
	--ar278
    --fe / #pdf #zarabotok
    --08.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:Karma() < 0
        and (cmpr_lt(features:RepuserAge(),7) or wclass:HAS_20_DAYS_GAP())
        and features:UrlNormCount() == 0
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and cmpr_btw(features:TextLines(),2,10)
        and features:SubjectWordCount() > 1
        and features:FilesExtensions() == ".pdf" 
        and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.5
        and StrMatchRe(features:PartsFilenames(),regex([[^(?:[A-Za-z\-]+\s){0,3}[a-z\-]+\.pdf$]]))
    then
        SetPSAR('ar278') 
    end
    
    --ar279
    --fe / #zarabotok
    --11.07.2016 / rassadovskiy
    --9760898027e5935b667e8596772d01ae 46445379dd8f49159a7f7a0d187724b1
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),2000,5000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and features:IsAutoreg() 
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:RepuserAge(),100)
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_btw(features:TextLines(),4,12)
        and cmpr_btw(features:WordCount(),80,220)
        and features:Words8bitRatio() >= 80
        and cmpr_btw(features:HtmlTagCount(),10,30)
        and wclass:NEW_IP_1_DAY()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar279') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar279')
    end
    
    
	--ar280
    --mxs_other / #efremov #TEST
    --13.12.16 / minina
    if cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_eq(features:HasTextOnly(), 1)
    	and features:FromDomain()
		and features:EnvelopeFromDomain()
    	and features:Helo() 
    	and not StrMatch(features:Helo(), features:FromDomain())
 		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and SFKD('ar280', {features:EnvelopeFromDomain()}, 60, 5)
    then
         if checkSuspEntityWithSFKD('ar280', features:EnvelopeFromDomain(), features:FromDomain(), 3, 900) then
         SetPSAR('ar280',true)
         end
    end

	--ar281
	--mxs_mbp / #zarabotok
	--02.05.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 8000
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1
		and features:ToEmailInBody() == true 
		and features:NoRealNameTo() == 1 
		and features:NoUserAgent() == 1 
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4 
		and features:HasFreeHosting() == 1 
		and features:WordCount() >= 50 and features:WordCount() <= 300 
		and features:Words7bitRatio() <= 10
		and features:Words8bitRatio() >= 60
		and features:WordOtherCount() >= 5
		and features:IsFromFreeMail() == 1
		and not features:IsEnvelopeFromFreeMail()
	then
		SetPSAR('ar281')
	end
    
	--ar282
	--fe / #zarabotok
	--22.08.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 500
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 30
		and features:Words8bitRatio() >= 5
		and features:RepuserAge() <= 2
		and features:RcptNum() >= 10
		and features:UrlNormCount() >= 1
 		and wclass:HAS_IMAGE_URL()
 		and wclass:AUTOREG()
	then
		SetPSAR('ar282')
	end

	--ar283
    --fe / #pdf #zarabotok
    --10.01.2017 / zubr
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:Karma() <= 0
        and features:RcptNum() >= 20
        and (cmpr_lt(features:RepuserAge(),7) or wclass:HAS_20_DAYS_GAP() or wclass:SUSP_REP_USER_MAIL_AND_HAS_5_DAYS_GAP())
        and features:UrlNormCount() == 0
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and cmpr_btw(features:TextLines(),2,10)
        and features:SubjectWordCount() > 1
        and features:FilesExtensions() == ".pdf"
        and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.5
		and features:AbfCityWasChanged() == true
    then
        SetPSAR('ar283') 
    end

	--ar284
    --fe / #pdf #zarabotok
    --10.01.2017 / zubr
	if not IsBlocked
        and features:RcvSrcExt() == "fe"
        and not features:IsPddUser()
        and features:MsgSize() >= 200000
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        --and (features:RepuserAge() <= 7 or wclass:HAS_20_DAYS_GAP() or wclass:SUSP_REP_USER_MAIL_AND_HAS_5_DAYS_GAP())
        and features:UrlNormCount() == 0
		and features:WordCount() >= 5 and features:WordCount() <= 30
        and features:FilesExtensions() == ".pdf"
        and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.5
    then
        SetPSAR('ar284', true) 
    end
    
	--ar285
	--mxs_other / #zarabotok
    --11.01.17 / philip.karpov
    --mcc_mc_frles60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_X_PHP_SCRIPT()
        and wclass:PHP_URL()
        and wclass:NO_USER_AGENT()
        and not wclass:CYRILLIC_URL()
    then
        SetPSAR('ar285', true)
    end
    
	--ar286
    --fe / #pdf #zarabotok
    --10.01.2017 / zubr
	if features:RcvSrcExt() == "fe"
        and not features:IsPddUser()
        and features:MsgSize() >= 200000
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        --and (features:RepuserAge() <= 7 or wclass:HAS_20_DAYS_GAP() or wclass:SUSP_REP_USER_MAIL_AND_HAS_5_DAYS_GAP())
        and features:UrlNormCount() == 0
		and features:WordCount() >= 5 and features:WordCount() <= 30
        and features:FilesExtensions() == ".pdf"
        and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.5
		and features:HtmlFingerprint()
		and SFKD('ar286', {features:HtmlFingerprint()}, 60, 10)
    then
        SetPSAR('ar286', true) 
    end
    
    --ar287
	--mxs_other / #zarabotok
    --12.01.17 / philip.karpov
    --moc_mo_noat
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 80, 1000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:WordCount(), 3, 25, true)
        and cmpr_btw(features:TextLines(), 1, 12, true)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_gt(features:LinesToWordsRatio(), 15)
        and wclass:W8BIT_NO_CTE()
        and wclass:EML_HELO()
        and wclass:DOMAINS_EQUAL()
        and UrlsMatchStr('blogspot', 1)
    then
        SetPSAR('ar287')
    end
    
    --ar288
    --mxs_other / #priglashenie #call_center
    --28.09.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 20, 80, true)
        and cmpr_btw(features:WordCount(), 50 , 150, true)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 50, 200)
    	and cmpr_btw(features:UrlNormCount(), 2, 5, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:PRECEDENCE_BULK()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and HeaderMatch('Date', '-0700')
    then
        SetPSAR('ar288')
        LogMsgToHadoop('dstat_minina_log', '#ar288')
    end
    
    
	--ar289
	--mxs_other / #zarabotok #8000
	--11.07.2016 / r.kulpin (zubr)
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 500, 5000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_btw(features:MultipartNum(), 3, 5,true)
        --and features:Ptr3LevelDomain()
		and cmpr_btw(features:UrlNormCount(), 1, 4, true)
		and cmpr_eq(features:ShortUrlCount(), 0)   
		--and cmpr_lt(features:HtmlTagCount(), 20)
		and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 10, 100)
		and cmpr_btw(features:LinesToWordsRatio(), 10, 40, true)    
		and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
		and wclass:DOMAINS_EQUAL()
		and wclass:SPF_NOT_PASS()
		and wclass:REMOTE_IP_IN_SPAMHAUS()
		and HeaderMatchRe('Content-type', regex([[boundary="[a-g\d]{20,35}"$]]), 1) 
	then
		SetPSAR('ar289')
	end
    
    
	--ar290
    --fe / #flud
	--27.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 200, 1500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 15, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
       	and cmpr_btw(features:RepuserAge(),1,15,true)
    	and cmpr_btw(features:HtmlTagCount(), 10, 50, true)
     	and wclass:ONLY_7BIT_WORDS()
    	and wclass:AUTOREG()
    	and (wclass:ABF_FAST_IP_CHANGE() or cmpr_gt(features:AbfCitiesPerMonthNum(), 2))
    	and wclass:FE_REGIONS_MISMATCH()
    	and not features:MailRuTo()
    then
    	SetPSAR('ar290')
        LogMsgToHadoop( 'dstat_minina_log', '#ar290' )
    end

    
	--ar291
	--mxs / #kondicioner
	--06.05.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "mxs_other")
		and features:HasNoAttach() == 1 
		and features:WordsOtherRatio() >= 5
		and (features:Words8bitRatio() >= 50 or features:SubjectWords8bitRatio() >= 50)
		and (features:TextLines() >= 30 or features:ImgNum() == 1)
		and (wclass:MAIL_RU_MSGID_PATTERN() and HeaderMatch('Received', '.fvds.ru') and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
			or HeaderMatch('Message-ID', 'fvds.ru')
			or wclass:SUSP_FROM_FVDS())
	then
		SetPSAR('ar291')
	end

	--ar292 
	--smtp / #obnal
	--21.11.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_btw(features:MsgSize(), 100, 2000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 3)
    	and cmpr_btw(features:WordCount(), 1, 20, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
    	and cmpr_eq(features:EmailsCountInBody(), 1)
  		and (wclass:AUTOREG() or wclass:SUBJECT_MIXED_BADRATIO())
		and wclass:LASTHELO_WITHOUT_DOMAIN() 
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar292')
    end

    

	--ar293
	--fe / #zarabotok
	--29.06.2016 / zubr 
	--61ef4c3e8fc0910f4f4889a7b02c109c 3d399a71d156c5843fe1f89cf5eb21ec 4a676848cda0de8cdf54a946097a3e2d
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 400 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 50 and features:WordCount() <= 200
		and features:Words8bitRatio() >= 70
        and cmpr_gt(features:SubjectWordCount(),3)
		and features:Karma() <= 0
		and (features:RepuserAge() <= 14 
            or (wclass:SOURCE_IP_IN_TOR_NODE() and wclass:SOURCE_IP_IN_XBL_AND_SOURCE_IP_IN_DNSBL()) 
            or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY())
		and features:NumberCount() <= 12
		and features:IsAutoreg() == 1
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 2
		and (wclass:SUSP_REP_USER_MAIL_AND_HAS_5_DAYS_GAP() or wclass:NEW_IP_30_DAYS())
		and features:UrlsTextSize() <= 25
	then
		SetPSAR('ar293')
	end
    
	--ar294
	--fe / #zarabotok
	--21.08.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 200 and features:MsgSize() <= 1000
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:RepuserAge() <= 3
		and features:WordCount() >= 5 and features:WordCount() <= 30
		and features:UrlCountWithoutMailRu() == 1
		and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 50
 		and HeaderMatch('Received', 'by tel.mail.ru with HTTP')
 		and HeaderMatch('Content-Type', 'text/plain')
	then
		SetPSAR('ar294')
	end
    
	--ar295
	--fe / #zarabotok
	--11.12.2016 / zubr(sokolik)
	--e41cbf54906fb16c861ee2cc1e0ce7a6
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 400 and features:MsgSize() <= 6000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 10 and features:WordCount() <= 150
		--and features:Words8bitRatio() >= 40
		and (features:RepuserAge() <= 15 or wclass:HAS_5_DAYS_GAP())
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 5
		and UrlsMatchStr('sendgrid.net/wf/click', 1)
	then
		SetPSAR('ar295')
	end
    
	--ar296
	--fe / #zarabotok
	--30.09.2016 / zubr 
	--0869065cec9d2a00fdeab5d9f9025e7d
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 400 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 20 and features:WordCount() <= 200
		and features:Words8bitRatio() >= 70
		and features:WordsMixedRatio() >= 5
		and features:RepuserAge() <= 7
		and features:UrlCountWithoutMailRu() == 1
        and features:Karma() <= 0
		and wclass:MORE_THAN_1_RCPT()
	then
		SetPSAR('ar296')
	end
    
    
	--ar297
    --fe / #vbei v google
	--7.11.16 / minina
	--4b830dce4ed100e529857e86ca435e04 c8b8d3a7d2c51943815b9207accb3226
    if not IsBlocked
        and features:RcvSrc() == "fe"
        and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 200, 8000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_eq(features:UrlNormCount(), 0)
		and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and cmpr_btw(features:TextLines(), 2, 50, true)
        and cmpr_btw(features:WordCount(), 5, 500)
		and cmpr_gt(features:WordOtherCount(), 2, true)
		and cmpr_gt(features:SubjectWordCount(), 2, true)
    	and cmpr_gt(features:AbfCountriesPerDayNum(), 1)
    	and (features:IpCategory() == 'tiny' or features:IpCategory() == 'small')
        and wclass:NABERI_V_GOOGLE()
		and (wclass:AUTOREG() or wclass:FROM_ENDS_IN_NUMS())
    then
        SetPSAR('ar297')
        LogMsgToHadoop( 'dstat_minina_log', '#ar297' )
    end

	--ar298
    --fe / #flud
	--27.09.16 / minina
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 100, 1000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:WordCount(), 5, 20, true)
    	and cmpr_eq(features:SubjectWordCount(), 2)
       	and cmpr_eq(features:UrlNormCount(), 0)
       	and (cmpr_btw(features:RepuserAge(),1,5,true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and features:LinesToWordsRatio() > 30
     	and wclass:SHORT_ENGLISH_MESSAGE()
    	and (wclass:NEW_IP_NO_REP() or wclass:NEW_IP_7_DAYS() or features:IpCategory() == 'tiny')
    	and not features:MailRuTo()
    	and StrMatch(features:UserAgent(),"Mozilla")
    then
    	SetPSAR('ar298',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar298' )
    end
    
	--ar299
    --mxs_mbp / #yahoo #deepnet_trading
	--27.09.16 / minina
		if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 100, 1500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 2, 15, true)
    	and cmpr_btw(features:WordCount(), 10, 80, true)
       	and cmpr_gt(features:UrlNormCount(), 1, true)
       	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and cmpr_gt(features:SubjectWordCount(), 3, true)
    	and cmpr_eq(features:FromDomain(), 'yahoo.com')
       	and wclass:ENGLISH_LANGUAGE_MESSAGE()
		and wclass:NO_USER_AGENT()
    	and wclass:FROM_AND_TO_REALNAME_DUBLICATE_EMAIL()
    	and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY() 	      
    then
    	SetPSAR('ar299')
        LogMsgToHadoop( 'dstat_minina_log', '#ar299' )
    end
    
	--ar300
    --mxs_mbp / #rambler #vbey_v_yandex
    --01.12.16 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 100)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and features:IsFromRambler()
    	and features:NoUserAgent()
        and cmpr_btw(features:UrlNormCount(),1,2,true)
        and features:HtmlTagCount() == 0
    	--and wclass:SUSP_HELO()
    	and (wclass:HAS_HDR_ORGANIZATION() or wclass:UNAVAILABLE_IN_RECEIVED())
        and (TermsMatchGroup(18100,100) or wclass:NABERI_V_GOOGLE())
    then
        SetPSAR('ar300')
    end
    
    --ar301
    --mxs / #fvds
    --10.01.17 / r.belyankin
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:RECEIVED_BAD_PATTERN_2()
        and StrMatchRe(features:EnvelopeFromDomain(), regex([[^[a-z\d-]+\.fvds\.ru$]]))
    then
        SetPSAR('ar301')
    end

	--ar302
    --mxs_other / #pojar' ee
    --19.12.16 / philip.karpov
    --mcc_mc_iples60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_btw(features:WordCount(), 5, 25, true)
        and cmpr_gt(features:WordMixedCount(), 1, true)
        and wclass:HDR_RANDOM_DIGITS_UPPER_LOWER_CASE_IN_MSGID_DOMAIN()
        and wclass:HELO_IN_FROM()
        and wclass:NO_USER_AGENT()
        and wclass:ONE_RECEIVED()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar302')
    end
    
    --ar303
    --mxs_other / #kondicioner
    --03.10.16 / a.sokolov
    --471f5b46b288725cae5bbdfa57712448 5246e29951832787f391bfcd940a86c1
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and cmpr_btw(features:MsgSize(), 5000, 1000000)
        and (cmpr_eq(features:HasTextOnly(), 1)
            or (cmpr_gt(features:ImgNum(), 1, true) and cmpr_eq(features:AttachAllCount(), 0)))
        and (cmpr_eq(features:FromRealNameWordCount(), 1) 
            or wclass:FROM_AND_REPLY_TO_REALNAMES_MISMATCH()
			or not wclass:RUSSIAN_FROM_REALNAME()
			or cmpr_gt(features:FromRealNameWordCount(), 2))
        and cmpr_btw(features:HtmlTagCount(), 20, 500)
        and cmpr_eq(features:NoBodyTag(), 1) and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_btw(features:TextLines(), 1, 500)
        and cmpr_btw(features:WordCount(), 5, 1700)
        and (wclass:FROM_REALNAME_ALL_MIXED() 
            or wclass:ENGLISH_TEXT_AND_CTE_8BIT() 
            or wclass:NEW_FROMDOMAIN_15_DAYS())
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
            or wclass:BADNET() 
            or wclass:FROM_AND_REPLY_TO_REALNAMES_MISMATCH()
    		or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
			or wclass:SUSP_HTML_CODE()
    		or wclass:SPF_NOT_PASS()
			or wclass:ONLY_7BIT_WORDS())
    	and HeaderMatch('Received','.fvds.ru')
    then
        SetPSAR('ar303')
        LogMsgToHadoop('dstat_sokolik_log', '#ar303')
    end
    
    --ar304
    --fe / #pensioner_millioner
    --21.07.16 / a.sokolov
    --589cca4c2ff689c6855119d0263c4050 530a8ab8a177e7d95297b97362dd1f31 b7b621bf2d7fd5ff3d949a17fa6adc8e
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_btw(features:MsgSize(), 50000, 400000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_eq(features:MobileMailRu(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 10)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 8, true)
        and cmpr_eq(features:AttachAllCount(), 1)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 60, true)
        --and wclass:SUBJECT_LONGER_THEN_BODY()
        --and wclass:SUBJECT_ENDS_WITH_NUMS()
        and (StrMatchRe(features:PartsFilenames(), regex([[^[À-ßà-ÿ]*\s*[à-ÿ]*\d{3,}\.docx?$]])) 
            or StrMatchRe(features:PartsFilenames(), regex([[^[À-ßà-ÿ]*\s*[à-ÿ]*\d{3,}\.pdf$]]))
            or StrMatchRe(features:PartsFilenames(), regex([[^[a-z]{5,}\.pdf$]])))
    then
        SetPSAR('ar304')
        LogMsgToHadoop('dstat_sokolik_log', '#ar304')
    end
    
    --ar305
    --mxs / #zarabotok #efremov
    --10.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 150000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 5
        and features:MultipartNum() == 1
        and features:TextLines() >= 10
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_15_DAYS())
        and (StrMatchRe(features:FromRealName(), regex([[^\[.*\]$]])) or UrlsMatchStr('pechkintrack.ru'))
    then
        SetPSAR('ar305')
    end
    
	--ar306
	--mxs_other / #zarabotok
    --12.01.17 / philip.karpov
    --moc_mo_noat
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and wclass:HELO_IN_MSGID()
        and wclass:SHORT_BOUNDARY()
        and wclass:HELO_IN_FROM()
        and wclass:NO_USER_AGENT()
        and wclass:DOMAINS_EQUAL()
    then
        SetPSAR('ar306')
    end

    --ar307
	--mxs_other / #zarabotok 
	--07.05.16 / veselitsky	 
 	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 100000, 3000000)
    	and features:HasTextOnly() == 0
    	and features:ImgNum() <= 3
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:MultipartNum(), 5, 10, true)
		--and features:NoUserAgent() == 1
    	and cmpr_btw(features:TextLines(), 0, 100)
   		and cmpr_btw(features:HtmlTagCount(), 0, 400, true)
    	and features:SPF() ~= 'pass'
    	--and wclass:HELO_IN_FROM()
    	--and wclass:HELO_IN_MSGID()
        and (cmpr_btw(features:IpAge(), 0, 30, true) or wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:IP_HAS_GAP_LAST_WEEK())
    	and (cmpr_gt(features:Words7bitRatio(), 30) or cmpr_gt(features:WordsOtherRatio(), 50)
        	or features:Subject7bitOnly() == 1 or wclass:CRASHED_BASE64_IN_SUBJECT())
    	and (wclass:PROBABLE_PHISHING_FROM() or features:FromLocalPart() == 'noreply' or wclass:CYRILLIC_URL()
        	or StrMatch(features:FromLocalPart(),'service') or wclass:SUBJECT_8BBIT_AND_BODY_7BIT())
    	and (wclass:PTR_ERROR() or wclass:SOFTFAIL_SPF() or wclass:SUBJECT_MIXED_BADRATIO()
        	or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:INVALID_CHARS_IN_RAW_URLS() or wclass:PHOTO_HOSTING_WITH_SHORT_TEXT())
        and wclass:HAS_TAG_META()
    then
    	SetPSAR('ar307')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar307')
    end
    
    
  
    --ar308
	--mxs_mbp / #10 tr
	--12.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 10000)
        and cmpr_eq(features:Subject8bitOnly(),1)  
        and wclass:SUSP_ORGANIZATION_AND_ONE_RECEIVED()
  	    and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
    then
		SetPSAR('ar308')
	end
    
    --ar309
    --mxs_other / #credit_kerta #fake_mail
    --21.10.16 / r.kulpin
    --e3c728fdf64fb34c19c11d991ba0b145 25741b334fca709b316aeefe4adc4e35 e82caba02ecc7b69b9976e4a124c7d2f
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 800)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 3, 8, true)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 250, true)
        and wclass:FROM_INFORMATION_SERVICE()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:FAKE_FOTO_MAIL_RU()
        and UrlsMatchStr('austincollierescue.org')
    then
        SetPSAR('ar309')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar309')
    end    

	
    --ar310
	--mxs_mbp / #10 tr
	--12.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 10000)
      	and cmpr_eq(features:FromRealName(),'FAQ')
        and cmpr_eq(features:Subject8bitOnly(),1)  
        and cmpr_gt(features:SubjectNumbersCount(),1)      
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:WORDS_OTHERS_BAD_RATIO_AND_SUSP_NUMBERS_TO_ZERO_RATIO()
    then
		SetPSAR('ar310')
	end
    
	--ar311
	--mxs_other / #zarabotok
	--08.05.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"  
		and features:MsgSize() >= 1000 and features:MsgSize() <= 30000 
		and features:HasTextOnly() == 1 
		and features:UrlNormCount() == 1
		and features:WordCount() >= 50 and features:WordCount() <= 800
		and features:WordsOtherRatio() >= 5
		and features:Subject8bitOnly() == 1
		and features:TextLines() >= 10 and features:TextLines() <= 25
		and wclass:SPF_NOT_PASS()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
		and wclass:SHORT_BOUNDARY_AND_REMOTE_IP_IN_SPAMHAUS()
	then
		SetPSAR('ar311')
	end  
    
   
	--ar312
	--smtp / #zarabotok ct
	--12.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrc(), 'smtp')
        and cmpr_btw(features:MsgSize(), 100000,300000)
  	    and cmpr_lt(features:SubjectWordCount(),3)
        and wclass:CT_IN_BODY()
        and wclass:SMTP_HELO_SEEMS_DYNAMIC()
        and wclass:SPAMOBORONA_TAGGED()
        and wclass:SHORT_BOUNDARY()
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
        and wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS()
        and wclass:IMG_TAG()
	then
		SetPSAR('ar312')
	end
    
    --ar313
	--mxs_other / #znakomstva
	--08.05.16 / veselitsky	 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 50, 500)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum()  == 1
    	and features:SPF() ~= 'pass'
    	and features:ToRealNameInToLocalPart() == true
    	and features:Subject7bitOnly() == 1
    	and	cmpr_btw(features:TextLines(), 1, 7, true)
    	and cmpr_lt(features:WordCount(), 50)
		and cmpr_btw(features:UrlNormCount(), 0, 5) 
    	and wclass:MS_MAILER()
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    then
    	SetPSAR('ar313')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar313')
    end
    
	--ar314
	--mxs_other / #ef.ru+shortUrl
	--12.01.2017 / r.kulpin
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 100, 1500)
		and features:HasTextOnly() == 1
    	and cmpr_eq(features:MultipartNum(),3)
    	and features:AuthenticatedDomain() == "ef.ru" 
		and wclass:SHORT_WITH_URLS()
    	and wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO()
    then
		SetPSAR('ar314')
	end
    
  
    --ar315
	--mxs_mbp / #google
	--12.01.17 / razuvaev
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(),5000)
        and cmpr_eq(features:AuthenticatedDomain(),'aol.com')
        and cmpr_lt(features:SubjectLen(),40)
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        and (wclass:RUSSIAN_FROM_REALNAME() or  cmpr_eq(features:NoRealNameFrom(),1))
        and wclass:UNKNOWN_IN_RECEIVED()
	then
		SetPSAR('ar315')
	end
    
    --ar316
	--mxs_other / #greencard
    --24.08.16 / veselitsky		
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and features:HasTextOnly() == 1
    	--and (cmpr_btw(features:IpAge(), 0, 100) or cmpr_btw(features:DkimDomainRepipAge(), 0, 60) or features:DkimDomainRepipAge() == 10000)
    	and cmpr_btw(features:HtmlTagCount(), 0, 200, true)
    	and cmpr_btw(features:TextLines(), 5, 50) 
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and cmpr_btw(features:UrlNormCount(), 0, 5) 
    	and (cmpr_gt(features:SubjectNumbersCount(), 10) or features:ToRealNameInSubject())
        and UrlsMatchStr('.htm', 1)
    	--and wclass:SUSP_HTML_TAG_RATIO()
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and not features:HasUnsubscribeUrl()
    then
    	SetPSAR('ar316')
    end
    
    --ar317
	--mxs_other / #dohod #150 #usd #free #spins
    --08.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 200, 1000)
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 1
    	and cmpr_btw(features:TextLines(), 0, 7) 
    	and cmpr_btw(features:WordCount(), 10, 80)
    	and features:EmailsCountInBody() == 1
    	and cmpr_btw(features:UrlNormCount(), 0, 4) 
    	and features:HasShortUrl() == 1
        and (features:Subject8bitOnly() == 1 or wclass:TO_LOCALPART_IN_SUBJECT())
    	and (wclass:INVALID_CHAR_FROM() or wclass:MORE_THAN_1_RCPT())
    	and wclass:HELO_IN_MSGID()
    then
    	SetPSAR('ar317')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar317')
    end     

    --ar318
    --fe / #china #no_to #ip #img #small size
    --11.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_gt(features:ImgNum(), 1, true)
        and (cmpr_lt(features:RepuserAge(), 5)
    		or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 10)
			or UrlsMatchStr('.sinaapp.com',1)
			or wclass:AUTOREG())
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
    	and (cmpr_lt(features:ShingleTextSize(), 1000)
    		or cmpr_lt(features:WordCount(), 50)
			or cmpr_gt(features:UrlNormCount(), 7))
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 7, true)     
    	and (wclass:NEW_IP_15_DAYS()
    		or wclass:MORE_THAN_N_RCPT())
		and (wclass:NO_TO()
    		or wclass:SUSP_FROM_LOCALPART_MAILRU())
    then
        SetPSAR('ar318', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar318')
    end
    
    --ar319
	--mxs_other / #neftetrade
	--12.01.17 / r.kulpin
    --bb9b06ea58256bf0f19318010ad1fe9a 6f321679282e746df6c99e9a8b6db630
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
        and StrMatch(GetHeaderVal('From'), '.com.ua>')
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:IP_REP_GAP_MORE_7_DAYS()
        and wclass:PHP_URL()
        and wclass:FROM_INFORMATION_SERVICE()
	then
		SetPSAR('ar319')
	end
    
    --ar320
	--smtp / #znakomstva
	--20.09.16 / veselitsky	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_btw(features:MsgSize(), 200, 1000)
    	and features:HasTextOnly() == 1 
		and features:NoRealNameTo() == 1
    	and features:NoRealNameFrom() == 1
    	and features:MultipartNum() == 1
    	and cmpr_gt(features:AbfCountriesPerMonthNum(), 3)
    	and features:Words8bitRatio() == 0
		and features:EmailsCountInBody() == 1
       	and cmpr_btw(features:TextLines(), 3, 10)
		and cmpr_btw(features:WordCount(), 30, 90)
    	and StrMatchRe(features:Helo(), regex([[[A-Z\d]{2,20}]]))
  	then
    	SetPSAR('ar320')
    end
    
    --ar321
    --fe / #china 
    --11.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 1000)
		and (wclass:NO_TO()
        	or wclass:AUTOREG()
        	or wclass:FE_ENG_MSG())
        and UrlsMatchStr('.sinaapp.com',1)
    then
        SetPSAR('ar321')
        LogMsgToHadoop('dstat_sokolik_log', '#ar321')
    end

   	--ar322
    --mxs_other/ #zarabotok #nedvizhimost 
    --16.12.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
       	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and (cmpr_btw(features:IpAge(), 0, 30) or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 10, 500))
       	and wclass:ONE_RECEIVED()
    	and cmpr_btw(features:DkimDomainRepipAge(), 0, 30)
    	and wclass:HAS_IMAGE_URL()
    	and UrlsMatchStr('.html', 1) 
    then
    	SetPSAR('ar322')
    end
	
    
	--ar323
	--mxs_other  / #m16 #secretnoe #sredstvo
	--19.07.2016 / veselitsky 
	--7994c8d010c6293b5d827e566fb737e6 6a6f4f88dfce2f2bcc41b75ce8c7f104
	if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 200, 15000)
		and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 2, 3, true)
    	and (features:Subject8bitOnly() == 1 or cmpr_gt(features:SubjectWordMixedCount(), 0))
    	and cmpr_btw(features:WordCount(), 0, 800)
    	and cmpr_btw(features:TextLines(), 0, 130)
    	and cmpr_lt(features:HtmlTagCount(), 15)
    	and features:NoUserAgent() == 1
    	and wclass:CT_IN_BODY()
    	and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() 
        	or wclass:NEW_FROMDOMAIN_15_DAYS() or wclass:NEW_IP_15_DAYS())
    	--and (wclass:HELO_IN_FROM() or StrMatch(features:Helo(), features:FromDomain()))
	then
		SetPSAR('ar323')
	end  
    
	--ar324
    --mxs_other / #club #doverie
    --19.12.16 / philip.karpov (minina)
    --mcc_mc_iples60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NEW_FROMDOMAIN_30_DAY()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:NO_USER_AGENT()
        and wclass:PHP_URL()
    then
        SetPSAR('ar324')
    end
    
    --ar325
	--mxs_mbp / #short #flud
	--19.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and features:IsFromGoogle()
        and cmpr_lt(features:MsgSize(), 300)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:WordCount(), 1, 20, true)
        and cmpr_eq(features:TextLines(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:NoRealNameFrom(), 1)
  		and wclass:FROM_ENDS_WITH_YEAR()
	then
		SetPSAR('ar325')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar325')
    end
    
    --ar326
	--mxs_other / #dohod #150 #usd 
    --09.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 500, 100000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() <= 2
		and (features:NoTo() == 1 or features:NoRealNameTo() == 1 or features:ToRealName() == features:FromRealName())
    	and cmpr_btw(features:TextLines(), 0, 20) 
    	and cmpr_btw(features:WordCount(), 4, 100)
    	and (cmpr_gt(features:WordsMixedRatio(), 5, true) or cmpr_gt(features:RcptNum(),4))
    	and features:EmailInSubject() == 1
    	and cmpr_gt(features:EmailsCountInBody(), 0)
    	and cmpr_btw(features:UrlNormCount(), 0, 4) 
    	and (features:HasShortUrl() == 1 or wclass:HDR_RECEIVED_VPS())
    then
    	SetPSAR('ar326')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar326')
    end

    
    --ar327
    --mxs / #zarabotki #ot_slov_k_delu
    --15.07.16 / a.sokolov
    --efc8aaf0f0ccb4b098f71d1810a11ae9 7416f31552f86774e0cae42107bf3515 7aa46ecaf38d5540e55cfda0bf8dd95b
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs") 
        and cmpr_btw(features:MsgSize(), 5000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:ToEmailInBody(), true)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:TextLines(), 40, 80)
        and cmpr_eq(features:WordCount(), 60, 180)
        and cmpr_gt(features:WhitespaceCount(), 700)
        and cmpr_gt(features:WordOtherCount(), 5, true)
        and wclass:SUSP_SWIFT_BOUNDARY()	
        and wclass:BADNET()	
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar327')
        LogMsgToHadoop('dstat_sokolik_log', '#ar327')
    end
    

    --ar328
	--mxs_mbp / #rassilky
    --09.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 30000, 150000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:IsFromFreeMail() == 1
    	and (features:ToRealNameInToLocalPart() or wclass:TO_REALNAME_DUBLICATE_TO_EMAIL())
    	and	(features:Subject8bitOnly() == 1 or features:FakeReplyInSubject())
   		and cmpr_btw(features:TextLines(), 0, 25) 
    	and cmpr_btw(features:WordCount(), 0, 200, true)
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    then
    	SetPSAR('ar328')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar328')
    end    
    
    --ar329
	--mxs_other / #sber
    --09.05.16 / veselitsky		
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 100, 5000)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_lt(features:DomainRepipAge(), 30)
		and cmpr_btw(features:UrlNormCount(), 0, 4) 
    	and cmpr_btw(features:WordCount(), 10, 200)
		and wclass:SUBJECT_MIXED_BADRATIO()
    	and (wclass:NEW_DKIM_30_DAYS() or wclass:DKIM_FAIL())
    then
    	SetPSAR('ar329')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar329')
    end
    
	--ar330
    --mxs_other / #trader
    --19.12.16 / philip.karpov
    --mcc_mc_iples60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:UrlCount(), 300)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FROM_ADMIN()
        and wclass:ONE_WORD_SUBJECT()
        and wclass:DOMAINS_EQUAL()
        and wclass:NO_USER_AGENT()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar330')
    end
    
    --ar331
    --mxs_other #test_zarabotki
    --15.07.16 / a.sokolov
    --da3e010ca2867d79317c5a207df5ceab
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and (cmpr_eq(features:SPF(), "softfail") or cmpr_eq(features:SPF(), "none") or cmpr_eq(features:SPF(), "neutral") or cmpr_eq(features:SPF(), "fail"))
        and cmpr_gt(features:RcptNum(), 2, true)
        and (UrlsMatchStr("ok.ru", 1) or cmpr_eq(features:GeoCode(), "CN"))
    then
        SetPSAR('ar331')
        LogMsgToHadoop('dstat_sokolik_log', '#ar331')
    end

   
    --ar332
	--mxs_other /  #8000r #boundary po pisde
	--12.01.17 / razuvaev
	if not IsBlocked
    	and cmpr_btw(features:MsgSize(), 100, 30000)
    	and features:HasNoAttach() == 1
    	and cmpr_lt(features:ImgNum(), 1, true)
	    and cmpr_btw(features:SubjectWords8bitRatio(),20,80,true)
    	and (TermsMatchGroup(17223, 100) or TermsMatchGroup(17192, 100))
	    and not StrMatch(features:Helo(), features:FromDomain())  
        and wclass:NO_TEXT_LINES()
        and wclass:HAS_HDR_ORGANIZATION()
	then
		SetPSAR('ar332')
	end    

	
	--ar333
	--mxs_other / #fishing
	--12.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
        and wclass:RECIPIENT_EMAIL_IN_BODY()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:HAS_TAG_STYLE()
        and wclass:HAS_TAG_META()
        and TermsMatchGroup(18251,100)
	then
		SetPSAR('ar333')
	end   
    
	--ar334
	--mxs_other / #volosi
	--24.08.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"  
		and features:MsgSize() >= 5000 and features:MsgSize() <= 120000
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 8
		and (features:HasImageUrl() == 1 or features:PhotoHostingUrlCount() >= 2)
		and features:MultipartNum() == 3
		and features:TextLines() >= 20 and features:TextLines() <= 50
        and features:WordCount() > 30
		and features:LinesToWordsRatio() >= 20
    	and features:WordsOtherRatio() > 50
		and features:WhitespaceToWordRatio() >= 400
		and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
		and wclass:SUSP_SWIFT_BOUNDARY()
		and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
	then
		SetPSAR('ar334')
	end
    
	--ar335
    --fe / #google 
    --12.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 120000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 4, true)
        and TermsMatchGroup(18253, 100)
        and StrMatchRe(features:From(), regex([[^[a-z]{5,}19[0-9]{2}@(mail|bk|list|inbox)\.ru$]]))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 86400)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 2)
        then
            SetPSAR('ar335')
        end
    end
    
	--ar336
    --fe / #short
    --12.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 200, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:RepuserAge(), 100, true)
        and TermsMatchGroup(18254, 100)
        and StrMatchRe(features:From(), regex([[^[a-z]{5,}19[0-9]{2}@(mail|bk|list|inbox)\.ru$]]))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 86400)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 10)
        then
            SetPSAR('ar336')
        end
    end
   
    --ar337
    --fe / #cash_power
	--12.01.17 / minina
	if not IsBlocked
        and false
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and cmpr_gt(features:UrlNormCount(), 5, true)
		and cmpr_eq(features:FromRealNameWordCount(), 2)
       	and cmpr_lt(features:RepuserAge(), 3, true)
       	and (wclass:AUTOREG() or wclass:FROM_ENDS_IN_NUMS())
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and (cmpr_btw(features:IpAge(), 0, 30) or mrasRepHasSendingGap(features:SrcIp(), 0, 60, 10, 10))
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    then
    	SetPSAR('ar337')
    end
    
	--ar338
	--mxs_sender / #novostroiTV
	--19.12.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_sender" or features:RcvSrcExt() == "mxs_esp")
		and features:MsgSize() >= 5000 and features:MsgSize() <= 50000 
		and features:HasTextOnly() == 1 
		and features:ExternalImgNum() >= 1
		and (features:FromLocalPart() == "info" or features:FromLocalPart() == "admin")
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:WordCount() >= 100
		and features:DotRatio() <= 1
		and mrasRepHasSendingGap(features:FromDomain(), 3, 20, 10, 50)
    	and TermsMatchGroup(17797, 100)
		and HasHeader('DKIM-Signature')
		and HeaderCount('DKIM-Signature', 1) >= 2
	then
		SetPSAR('ar338')
	end
  
    --ar339
    --mxs_mbp / #qip #ngs.ru #zarabotok #rabotanadomy 
    --02.09.16 / a.sokolov
    --5a4b12c63191356edd7ff4469552305b 0ffe6f148af3a313957302817eb8c969 b9cbd4a7319d9d9d4e732b8a1d1daa3b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize() , 100, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:TextLines(), 1, 25, true)
        and cmpr_btw(features:WordCount(), 5, 150)
        and (cmpr_eq(features:FromRealNameWordCount(), 1) 
            or cmpr_eq(features:NoRealNameFrom(), 1)
            or wclass:MORE_THAN_N_RCPT()
			or wclass:TO_LOCALPART_IN_REALNAME())
        and (wclass:SPF_NOT_PASS_FROM_MBP() 
            or wclass:REDIRECTS_URL_PART()
        	or wclass:SHORTURL()
			or UrlsMatchStr('cli24.us',1))
        and (wclass:SHORT_BOUNDARY() 
        	or wclass:NO_HTML_TAG()
            or wclass:MISC_SUSP_MAILERS())
        and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() 
            or wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        	or wclass:NO_BODY_TAG()
            or wclass:MSGL_BAD_SPAM_RATIO()
			or wclass:MAIL_RU_MSGID_PATTERN()
    		or wclass:ONE_WORD_SUBJECT())
        and (HeaderMatch('Received', '.pochta.ru')
            or HeaderMatch('From', '@ngs.ru')
            or cmpr_eq(features:InvalidFrom(), 1))
    then
        SetPSAR('ar339')
        LogMsgToHadoop('dstat_sokolik_log', '#ar339')
    end

      
    --ar340
	--mxs_other / #english #spam
    --10.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1000, 2000)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and features:HasDifferentFromAndReply() == 1
    	and features:MultipartNum() == 1
    	and features:InvalidFrom() == 1
    	and features:Subject7bitOnly() == 1
    	and cmpr_gt(features:Words7bitRatio(), 75)	
    	and cmpr_btw(features:TextLines(), 0, 10)
    	and cmpr_btw(features:WordCount(), 0, 30)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	and features:HasImageUrl() == 1
    	and wclass:RECEIVED_BAD_PATTERN_4()
    	and wclass:NO_MIME()
    then
    	SetPSAR('ar340')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar340')
    end
    
    --ar341
	--mxs_mbp / #rambler #lenta #zarabotok
	--09.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:FROM_RAMBLER()
    	and wclass:SPF_NOT_PASS()
    	and (wclass:PHP_URL() or features:ToEmailInBody())
    	and (wclass:NEW_IP_30_DAYS() or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 25) or cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 50))
	then
		SetPSAR('ar341',true)
	end
    
    --ar342
	--mxs_mbp / #zarabotok
    --26.07.16 / veselitsky		
	--a922ab96c11d2783cb373190fe82344c 13901f7d8224a21a9c364495a63569d5 a83fbaf83685fa56e1ea2b5838242c8b
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 300, 3000)
    	and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
    	and features:NoRealNameTo() == 1
    	and features:InvalidFrom() == 1
    	and (features:Subject8bitOnly() == 1 or cmpr_gt(features:SubjectWordMixedCount(), 0) or wclass:TO_IN_SUBJECT())
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 70, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 8)
		and features:HasSuspEspUrl()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_15_DAYS())
    then
    	SetPSAR('ar342')
    end
    
    --ar343
    --mxs_mbp #dhl
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:XMailerName(), 'Yamail')
    	and wclass:PHP_URL()
        and wclass:NO_BODY_TAG()    
        and TermsMatchGroup(18240, 100)
    then
        SetPSAR('ar343')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar343')
    end
    
	--ar344 
	--mxs_other / #english #viagra #SU
	--11.05.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and features:MsgSize() >= 10 and features:MsgSize() <= 300
		and features:InvalidFrom() == 1
		and wclass:NO_MIME_AND_SU()
		and features:SimpleType() == 'text'
    then
    	SetPSAR('ar344')
    end    
        
    --ar345
    --mxs_other #gdn_and_other_test
    --16.07.16 / a.sokolov
    --8d990a0923e12339993815ac695900f8 e827c3ceb2f2a21391f1c689134c2878 604d8df039d42c9bdbbbaefa4ea4e466 62fee6cfed20aed29f7828afa49ec372
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 40000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 6, true)
        and cmpr_btw(features:WordCount(), 10, 150)
        and TermsMatchGroup(17212, 100)
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and (wclass:NONE_SPF() or wclass:SPF_NOT_PASS())
    then
        SetPSAR('ar345')
        LogMsgToHadoop('dstat_sokolik_log', '#ar345')
    end
    
    --ar346
    --fe / #dhl
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_lt(features:Karma(),0,true)
        and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE() 
    	and wclass:HAS_INPUT_TAG_AND_HAS_IMAGE_URL()
    then
        SetPSAR('ar346', true)
      	LogMsgToHadoop('dstat_sokolik_log', '#ar346')
    end
    
	--ar347
	--mxs_other / #zarabotok #dropbox
	--11.05.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and features:MsgSize() >= 100 and features:MsgSize() <= 1000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:WordCount() > 10 and features:WordCount() <= 100
		and features:Words7bitRatio() >= 3 and features:Words7bitRatio() <= 40
		and features:WordsMixedRatio() >= 1
		and features:Words8bitRatio() >= 20
		and features:UrlCount() >= 1 and features:UrlCount() <= 8
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:HasFreeHosting() == 1
		and wclass:SUSP_URL_CONSTRUCTION_3()
    then
    	SetPSAR('ar347')
    end
     
    --ar348
    --mxs_other #.top #.date
    --12.12.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other")
    		or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(), 100, 25000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_eq(features:NoRealNameTo(), 1)
    		or wclass:TO_LOCALPART_IN_REALNAME())
        and cmpr_btw(features:UrlNormCount(), 0, 10, true)
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and TermsMatchGroup(18050,100)
    then
        SetPSAR('ar348')
        LogMsgToHadoop('dstat_sokolik_log', '#ar348')
    end

    --ar349
    --smtp / #pdd
    --12.01.17 / r.sulimov
    --sc_sb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and features:IsPddUser()
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_gt(features:UrlNormCount(), 1, true)
        and TermsMatchGroup(18255, 100)
        and StrMatchRe(features:From(), regex([[^[a-z]{4,}[0-9]{4}@.*\.(tk|ml|gq)$]]))
    then
        SetPSAR('ar349')
    end
    
    --ar350
    --mxs_mbp / #gmail #docs #noise
    --17.07.2016 / rassadovskiy
    --6e01d80d2ab9bd651a45581bab6f2082 f887d9b949596e7d3ed11f1630a4d3eb 8b8bd6ac846acebff15b42d91fb46d0c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),1000,3000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:IsFromGoogle()
        and features:NoSubject()
        and features:NoRealNameTo() == 1
        and cmpr_btw(features:UrlNormCount(),2,3,true)
        and features:HasFreeHosting()
        and cmpr_btw(features:TextLines(),5,20,true)
        and cmpr_btw(features:WordCount(),30,100)
        and cmpr_btw(features:HtmlTagCount(),10,50)
        and features:NoBodyTag() 
        and cmpr_gt(features:WordsMixedRatio(),20)
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar350') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar350')
    end
    
    --ar351
    --mxs_mbp #rassilki
    --17.07.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 200, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 3, 18, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:SPF(), "softfail")
        and cmpr_btw(features:WordCount(), 20, 300, true)
        and cmpr_gt(features:NumberCount(), 5)
        and (wclass:OTHER_IP_IN_DNSBL() or wclass:NO_CTE())
        and (wclass:NOREALNAME_FROM() or cmpr_eq(features:FromRealNameWordCount(), 1) or cmpr_gt(features:RcptNum(), 5))
        and TermsMatchGroup(17213, 100)
    then
        SetPSAR('ar351')
        LogMsgToHadoop('dstat_sokolik_log', '#ar351')
    end
    
    --ar352
	--mxs_other / #zarabotki 
	--12.01.16 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),1)
        and cmpr_eq(features:NoRealNameTo(),1)
    	and wclass:SHORT_WITH_URLS()
       	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
        and wclass:NEW_FROMDOMAIN_15_DAYS()
    then
    	SetPSAR('ar352')
      	LogMsgToHadoop('dstat_sokolik_log', '#ar352')
	end
    
    --ar353
    --mxs_other #zarabotki #@
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)  
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and wclass:TO_IN_SUBJECT()
    	and wclass:SUBJECT_7BBIT_AND_BODY_8BIT()
        and mrasRepHasSendingGap(features:FromDomain(), 3, 40, 10, 20)
        and TermsMatchGroup(18011, 100)
        and UrlsMatchStr('@', 1)
    then
        SetSpam('ar353')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar353')
    end
        
    --ar354
    --fe / #zarabotok yadi.sk
	--12.01.17 / r.sulimov
	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
        and cmpr_eq(features:TextLines(), 2)
        and (cmpr_gt(features:RcptNum(), 10) or wclass:AUTOREG())
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and (cmpr_eq(features:HtmlTags()['center'], 1) or cmpr_gt(features:HtmlTags()['br'], 15))
        and UrlsMatchStr('yadi.sk')
        and StrMatchRe(features:From(), regex([[^[a-z]{5,}19[0-9]{2}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar354')
    end

    --ar355
    --mxs / #visa #english
    --13.01.17 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() > 0 and features:UrlNormCount() < 5
        and features:MultipartNum() == 3
   		and features:Words7bitRatio() > 30
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or wclass:HDR_RECEIVED_MAY_BE_FORGED()
    		or TermsMatchGroup(17204, 100))
        and wclass:MS_MAILER()
        and wclass:HDR_LIST_UNSUBSCRIBE_AND_DIFFERENT_REPLY_TO_AND_FROM()
    	and not wclass:RUSSIAN_FROM_REALNAME()
	then
        SetPSAR('ar355')
        LogMsgToHadoop('dstat_sokolik_log', '#ar355')
    end
      
    --ar356
	--mxs_other / #omolozheie
	--13.05.16 / veselitsky	 
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other'
			or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 1000, 8000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:NoRealNameTo() == 1
		and features:NoUserAgent() == 1
        and cmpr_btw(features:MultipartNum(), 3, 7, true)
    	and cmpr_btw(features:WordCount(), 0, 100)
    	and cmpr_btw(features:HtmlTagCount(), 0, 10)
		and cmpr_btw(features:UrlNormCount(), 0, 4) 
		and (features:MsgIdNoDomain() == true or wclass:UNTITLED_IMAGE())
    	and wclass:MORE_THAN_1_RCPT()
    	and (wclass:BASE64_ENCODED_PART_LEN_LONGER_THAN_80() or wclass:IS_PART_BOUNDARY_INCLUDES_MAIN())
    then
    	SetPSAR('ar356')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar356')
    end
    
    --ar357
	--mxs_other / #virus #archivå
    --13.05.16 / veselitsky		
	--c01b80a729690fc953927ea551f7573a 7c832d52b477f10665a150454f50aaa9 85b4814e94821f158c3eea4069077c38
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 2000, 10000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachArchiveCount() == 1
       	and cmpr_btw(features:TextLines(), 0, 15)
    	and cmpr_btw(features:WordCount(), 0, 50)
    	and (features:HeloInMsgId() == 1 
			or (features:Ptr2LevelDomain() ~= features:FromDomain() and features:MsgIdDomain() ~= features:FromDomain()))
    	and (wclass:MORE_1_EMAILS_IN_TO() or features:NoRealNameTo() == 1)
		and (wclass:EMAILS_IN_TO_HAS_SAME_FIRST_LETTERS() or wclass:IS_EXECUTION_FILE_IN_ARCHIVE())
    then
    	SetPSAR('ar357')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar357')
    end
    
    --ar358
	--mxs_other / #sber
    --13.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1000, 5000)
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
       	and cmpr_btw(features:TextLines(), 0, 20)
    	and cmpr_btw(features:WordCount(), 50, 500)
    	and cmpr_gt(features:Words7bitRatio(), 30)
    	and cmpr_btw(features:UrlNormCount(), 0, 20)
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (wclass:MORE_THAN_1_RCPT() or wclass:MORE_THAN_1_RCPT_FROM_WINDOWS())
		and wclass:INVALID_CHAR_FROM()
    then
    	SetPSAR('ar358')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar358')
    end
    
    --ar359
	--mxs_mbp / #volosi
    --13.05.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
    	and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 1
    	and cmpr_btw(features:TextLines(), 0, 10)
    	and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:WordsMixedRatio(), 30)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
		and UrlsMatchStr('.php',1)	
    	and wclass:HELO_IN_MSGID()
    then
    	SetPSAR('ar359')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar359')
    end
   
    --ar360
	--fe / #niger #tough
	--13.07.16 / veselitsky	
    if  not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe'
		and cmpr_btw(features:MsgSize(), 20000, 20000000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and cmpr_btw(features:RepuserAge(), 0, 45)
    	and features:IpCategory() == 'tiny'
    	and cmpr_btw(features:AbfLastAuthCountry(), 188, 213, true)
    	and cmpr_gt(features:RepIpHamHitsByLastMonth(), 100)
    	and cmpr_gt(features:RepIpComplRatioByLastMonth(), 10)
   		and cmpr_lt(features:WordCount(), 12)
        and cmpr_gt(features:SubjectLen(),4)
    	and features:FromRealName()
    	and StrMatchRe(features:FromRealName(), regex([[[A-Za-z\s\d\.]{4,}]]))
    then
       	SetPSAR('ar360') 
    end

    --ar361
    --mxs_other #docs.google
    --13.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatchStr('docs.google.com/document/', 1)
    then
        SetPSAR('ar361')
        LogMsgToHadoop('dstat_sokolik_log', '#ar361')
    end
    
    
    --ar362
    --mxs_other mxs_mbp / #ADULT_CONTENT
    --30.09.16 / veselitsky(sokolik)
    --354040a14dd047e9ff30c14dffe99d15 905a6d5b1a6a504e0a0877041f291f35 c61e626a97de6cc7692255b741f93196
    if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 20000, 100000)
        and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
        and cmpr_btw(features:WordCount(), 60, 600)
        and cmpr_btw(features:TextLines(), 10, 100)
		and cmpr_gt(features:Words7bitRatio(), 75)
        and	features:HeloInMsgId() == 1
    	and cmpr_btw(features:UrlCount(), 5, 40)  
        and cmpr_btw(features:UrlNormCount(), 0, 8)  
    	and features:HasImageUrl() == 1
    	and (features:XMailer() == 'ZenMail' or features:XMailerName() == 'PHP')
    	and wclass:SUBJECT_WITH_CAPS()
    	--and (wclass:NEW_FROMDOMAIN_30_DAY() or wclass:NEW_IP_30_DAYS())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL()
        --and wclass:PTR_ERROR()
    then
        SetPSAR('ar362')
    end  

	--ar363
	--mxs_other / #btc-take.com #referal
	--13.01.2017 / r.kulpin
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 1000, 7000)
		and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:WordCount(), 100, 600)
		and (wclass:PTR_ERROR() or wclass:DYNAMIC_PTR_IN_DNSBL())
    	and wclass:TO_MISMATCH_ENVELOPE_TO()
    	and UrlsMatchStr('btc-take.com/referal', 1)
    then
		SetPSAR('ar363')
	end
    
	--ar364
	--fe / #zarabotok #attach #afrodita
	--20.07.2016 / veselitsky	 
	--1acc92d25e9d5e80ba64790dca0adbb1 1e9e412cade839456ddfe65ac97723b4 dee097b8440345656bbbaa09635b4115
	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 50000, 500000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachOfficeCount() == 1
    	and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
    	and cmpr_lt(features:Karma(), 0, true)
    	and features:MailRuTo()
    	and features:IsAutoreg() == 1
        and cmpr_btw(features:RepuserAge(), 0, 10)
        and (features:NoSubject() == 1 or wclass:SORTED_X_ENVELOPE_TO_AND_ONE_TO())
    	and cmpr_lt(features:WordCount(), 8) 	
        --and wclass:FE_CHANGE_CITIES_PER_DAY_MORE_THAN_2()
    	and StrMatchRe(features:PartsFilenames(), regex([[^(?i)([a-z\d\s]{3,20}|[a-z]+\_\d+)\.pdf$]]))
	then
		SetPSAR('ar364')
	end
    
	--ar365
    --mxs_other #other
    --13.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
    	and cmpr_btw(features:UrlNormCount(), 0, 2, true)
    	and HeaderMatchRe('Content-Type', regex([[boundary.+[A-Z]{5,}-\d{5,}.{3,}?"$]]))
    	and TermsMatchGroup(17375, 100)
    then
        SetPSAR('ar365' )
	    LogMsgToHadoop('dstat_sokolik_log', '#ar365')
    end
    
    --ar366
    --mxs_other / #zarabotok
    --18.12.16 / philip.karpov
    --moc_mo_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and (cmpr_eq(features:NoRealNameTo(), 1) or wclass:TO_LOCALPART_IN_REALNAME())
        and wclass:SUSP_URLS_SHORT_TEXT()
        and wclass:SHORTURL()
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and wclass:DOMAINS_EQUAL()
    then
        SetPSAR('ar366')
    end
    
    --ar367
    --mxs_mbp / #zarabotok
    --13.01.2017 / zubr
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 6
        and features:HasShortUrl() == 1
        and features:HasImageUrl() == 1
        and features:HasPhotoHosting() == 1
		and features:HtmlTagCount() >= 10
        and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.5
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar367') 
    end
    
    --ar368
	--fe / #zarabotok #fedex
	--10.07.16 / veselitsky	
	--91b7f11d57c2ae226d4eaeb73237a249 6f5b837aff70ce0d25c06c93f8fb849a 8961e2efaff5b9953f4bae199c49442c
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1500, 5000)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 3
    	and features:RepuserAge() == 1
    	and (features:AbfCityWasChanged() or features:AbfAuthFromNewCountry() or features:IsAutoreg() == 1)
    	and features:MailRuTo() 
    	and cmpr_gt(features:SubjectWordCount(), 3)
		and	cmpr_btw(features:TextLines(), 5, 15)
    	and cmpr_btw(features:WordCount(), 80, 200)
    	and (cmpr_gt(features:WordMixedCount(), 0) or cmpr_gt(features:SubjectWordMixedCount(), 0) or cmpr_gt(features:SubjectLen(), 50))
    	and cmpr_btw(features:HtmlTagCount(), 0, 25)
    	and features:UrlCountWithoutMailRu() == 1
    	and wclass:SUSP_HTML_TAG_RATIO()
		and (wclass:CRASHED_BASE64_IN_SUBJECT()  or wclass:SUSP_FROM_BY_FE_OR_SMTP())
    then
    	SetPSAR('ar368')
    end   

    --ar369
	--mxs_other / #neftetrade
	--13.01.17 / r.kulpin
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 7000)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and cmpr_gt(features:SubjectLen(), 30)
    	and cmpr_btw(features:TextLines(), 2, 15, true)
		and wclass:HDR_RECEIVED_MAY_BE_FORGED()
		and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-zA-Z0-9]{3,15}\.php$]]),1)
    	and HeaderMatch('Precedence','bulk')
    	and HeaderMatchRe('Message-ID', regex([[^\<[A-Z\d]{20,40}\@]]))
    	and not HeaderMatch('Date', '0300')
	then
		SetPSAR('ar369')
	end
    
    --ar370
    --fe / #znakomstva #blogspot.ru
    --12.01.17 / r.belyankin(sokolik)
    --51ec807dc23511396f715a10ff1c3db4 aa3e186b71ccababc301b43965f8c448
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 1000, 8000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and (cmpr_eq(features:HasImageUrl(), 1)
    		or wclass:MORE_THAN_N_RCPT()
			or wclass:FE_NO_TO())
        and cmpr_lt(features:Karma(), 0)
        and (cmpr_eq(features:NoRealNameTo(), 1)
			or wclass:FE_NO_TO())
        and (cmpr_eq(features:Subject8bitOnly(), 1)
    		or wclass:SUBJECT_MIXED_BADRATIO())
        and cmpr_btw(features:WordCount(), 10, 1000)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and wclass:RUSSIAN_FROM_REALNAME()
        and UrlsMatch(regex([[\.blogspot\.]]), 1)   
    then
        SetPSAR('ar370')
    end    
    
    --ar371
	--mxs_other / #sber #fakeDeamon
    --13.01.17 / r.kulpin	
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
        and cmpr_gt(#features:From(), 0)
    	and cmpr_btw(features:UrlNormCount(), 0, 20)
    	and features:FromMailerDaemon()
    	and features:SubjectWord7bitCount() == 0
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
    	SetPSAR('ar371')
    end

    --ar372
	--fe/ #virus #archive
    --10.07.16 / veselitsky	
	--34dfc08bb9f8e1c5543b29c16421a59f 34dfc08bb9f8e1c5543b29c16421a59f 5e2033fbdf82bed75de1119a2f3fc30c
    if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
        and cmpr_btw(features:MsgSize(), 100000, 1000000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachArchiveCount() == 1
    	and features:FilesInArchiveNum() == 1
		and features:NoRealNameTo() == 1
    	and features:MailRuTo()
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
    	and cmpr_btw(features:WordCount(), 0, 100)
    	and (features:FilesExtensions() == '.zip' or features:FilesExtensions() == '.rar')
        and wclass:IS_ONLY_ONE_JAVASCRIPT_FILE_IN_ARCHIVE()
    	--and wclass:HAS_2_DAYS_GAP()
    then
        SetPSAR('ar372')
    end

    --ar373
	--mxs_other / #sber #fakeDeamon
    --13.01.17 / r.kulpin
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
        and features:EnvelopeFromDomain() 
        and features:FromDomain() 
        and (features:FromDomainCategory()=='large' or features:FromDomainCategory()=='huge')
    	and features:FromMailerDaemon()
    then
        local efd = Get2ndLevelDomain(features:EnvelopeFromDomain())
        local fd = Get2ndLevelDomain(features:FromDomain())
		if efd ~= fd then  
        	SetPSAR('ar373')
		end
    end
    
    --ar374
	--mxs_other mxs_sender / #casino
	--14.05.16 / veselitsky	
	--d475609aabd4bba0efa541132bb5afa6  be5528d618479bc277462090443dcd9e
	if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
    	and cmpr_btw(features:MsgSize(), 10000, 15000) 
		and features:HasTextOnly() == 1
 	    and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 3
    	and features:EmailInToRealName() == 1
    	and cmpr_gt(features:SubjectNumbersCount(), 3)
    	and cmpr_btw(features:TextLines(), 20, 50)
    	and cmpr_btw(features:WordCount(), 100, 300)
    	and cmpr_btw(features:HtmlTagCount(), 90, 140)
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and cmpr_btw(features:UrlCount(), 10, 30)    	
    	and features:ToEmailInBody()
    	and HasHeader('Content-Type')
    	and HeaderMatchRe('Content-Type', regex([[(?i)boundary="[a-z\d]{8}\.([a-z\d]{4}\.){3}[a-z\d]{12}"]]))
    then
    	SetPSAR('ar374')	
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar374')
    end
    
    --ar375
    --fe /  #yandex
    --13.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:WORDS_MIXED_RATIO())
        and cmpr_gt(features:UrlNormCount(),3, true)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:UserAge(), 10, true)
        and cmpr_gt(features:HtmlTagCount(), 30)
        and wclass:BAD_KARMA()
    	and not wclass:RUSSIAN_FROM_REALNAME()
        and StrMatch(features:UrlsRawHashString(),".yandex.ru")
    then
        SetPSAR('ar375') 
    end
    
    --ar376
	--fe / #zarabotok
	--19.07.16 / veselitsky	
	--ed88a8b5fd45a63c80b0ca708e4a1145 e92ecb6e8f9fda7279bc0d6285abf0ed 696a95425331b242cc083dcac59bfe11
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 12000)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:MultipartNum(), 3, 4, true)
    	and cmpr_btw(features:RepuserAge(), 0, 60)
    	--and (features:AbfCityWasChanged() or features:AbfAuthFromNewCountry())
    	and features:MailRuTo() 
    	and cmpr_gt(features:SubjectWordCount(), 1)
		and	cmpr_btw(features:TextLines(), 2, 50)
    	and cmpr_btw(features:WordCount(), 10, 320)
    	and (cmpr_gt(features:WordsMixedRatio(), 10) or (cmpr_gt(features:WordsMixedRatio(), 0) and wclass:TERMS_ZARABOTOK_V_SETI2()))
    	and cmpr_btw(features:HtmlTagCount(), 5, 250)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 4)
    	and UrlsMatchStr('imgsmail')
		--and wclass:CRASHED_BASE64_IN_SUBJECT() 
    then
    	SetPSAR('ar376')
    end
    
    --ar377
	--fe / #zarabotok
	--23.09.16 / veselitsky	
	--85e74aa3c79b1995211fe93b1faf7050 2f027ed9447cf109817cc6d3ef13631e 27f52a1014bc598599d863932c021c9f 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 100, 1000000)
    	and features:HasNoAttach() == 1
    	and cmpr_lt(features:ImgNum(), 4)
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 7, true)
    	and features:MailRuTo() 
		and	cmpr_btw(features:TextLines(), 0, 100)
    	and cmpr_btw(features:WordCount(), 0, 1500)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 25)
		and wclass:REDIRECTS_URL_PART() 
    then
    	SetPSAR('ar377')
    end

    --ar378
	--mxs_mbp / #zarabotok #denezhnaya #hren #gryadka
	--23.08.16 / veselitsky	
	--05043c40dee13877815036aa96468561 2041f6bc38279a4dc7ec1fa97278de92 4eee965aaca849e2a96c62abd986a1d3
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 4000, 100000)
    	and features:HasTextOnly() == 1 
    	and features:IsFromGoogle()
 		and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 1
       	and cmpr_btw(features:TextLines(), 1, 100)
    	--and cmpr_gt(features:WordMixedCount(), 0)
    	and features:HeloInMsgId() == 1
	    and cmpr_btw(features:UrlNormCount(), 0, 20)
    	and features:XMailerName()
    	and features:GeoCode() == 'US'
		and (UrlsMatchStr('.list-update.ru') or UrlsMatchStr('resize.yandex.net') or wclass:XYZ_URLS())
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    	and (wclass:CT_IN_BODY() or wclass:FROM_EMAIL_IN_BODY())
    	--and wclass:HAS_IMAGE_URL()
    	and wclass:HAS_TAG_META()
  	then
    	SetPSAR('ar378')
    end
    
    --ar379
	--fe / #virus #marrige #yadisk
	--20.08.16 / veselitsky	
	--b5dccc489592f32182fd403cfccd3364 831efa101075a02e680267d951b2aa87 d3bc1604ec26c86dd61c228ed6b00885
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'fe' or (features:RcvSrcExt() == 'mxs_mbp' and wclass:MAILRU_FROM_MXS()))
    	and cmpr_btw(features:MsgSize(), 1000, 3000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoSubject() == 1
    	and cmpr_gt(features:EmailsCountInToHeader(), 4)
		and	cmpr_btw(features:TextLines(), 2, 200)
    	and cmpr_btw(features:WordCount(), 30, 200)
		and cmpr_gt(features:BodyUpperLowerCaseRatio(), 30)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 4)
		and wclass:YANDEX_DISC() 
    then
    	SetPSAR('ar379')
    end
    
	--ar380
	--fe / #zarabotok #attach #yadisk
	--09.01.17 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 10000, 5000000)
       	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_gt(features:AttachAllCount(), 1, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
		and (features:RepuserAge() <= 3 or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 60, 15))
   		and (cmpr_eq(features:Subject8bitOnly(), 1) or cmpr_gt(features:SubjectWordMixedCount(), 0))
    	and cmpr_btw(features:WordCount(), 10, 1200, true)
        and cmpr_lt(features:TextLines(), 5)
    	and cmpr_gt(features:HtmlTagCount(), 150, true)
  		and wclass:AUTOREG()
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:YANDEX_DISC() 
    then
    	SetPSAR('ar380')
    end
    
    
	--ar381
	--mxs_mbp / #visa
	--13.01.17 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 12000)
    	and cmpr_eq(features:UrlCount(),1)
        and wclass:DIFFERENCE_MSGID_AND_X_ORIGMSGID()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:ONLY_DIGITS_IN_FROM_REAL_NAME()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
	then
		SetPSAR('ar381')
	end

    --ar382
	--fe / #shemisotrudnichestva
	--13.07.16 / veselitsky	
	--79c1c9e31895cda24dc77c73efb09974 b04389e47ee05a165d8ae1ad323075ab 097d3033249d6f40b6d44a2582622e01
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 500, 1500)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:RepuserAge(), 0, 5)
    	--and features:IsAutoreg() == 1
		and features:AbfCountryWasChanged() 
    	and cmpr_gt(features:AbfCountriesPerMonthNum(), 1)
		and	cmpr_btw(features:TextLines(), 0, 6)
    	and cmpr_btw(features:WordCount(), 10, 35)
    	and cmpr_btw(features:NumberCount(), 5, 30)	
    then
        if features:SrcIp() == "46.39.253.212" then SetPSAR('ar382') 
        else SetPSAR('ar382', true) end
    end
    
    --ar383
    --fe / #short
    --13.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 3, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_gt(features:UserAge(), 10, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 500)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and (wclass:PHP_URL() or wclass:IP_URL())
        and wclass:NO_SUBJECT()
    then
        SetPSAR('ar383')
    end
    
    --ar384
    --fe /  #pdf
    --14.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:HasAttach(), 1) 
        --and cmpr_btw(features:MsgSize(), 10000, 200000)
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_lt(features:UserAge(), 400, true)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar384')
    end
    
    --ar385
    --smtp / #znakomstva #english #su
    --14.1.17 / .sulimov
    --s_sm_hotmail
    if not IsBlocked
        and (cmpr_eq(features:RcvSrc(), 'smtp') or cmpr_eq(features:RcvSrcExt(), "fe"))
        and not features:IsPddUser()
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
        and (not features:MailRuTo() or cmpr_gt(features:RcptNum(), 2, true))
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_lt(features:WordCount(), 200)
        and cmpr_gt(features:Words7bitRatio() , 60)
        --and features:ReplyTo() 
        and cmpr_eq(features:IpCategory() , 'tiny')
        and (cmpr_eq(features:HtmlTagCount() , 0) or cmpr_gt(features:HtmlTags()['font'], 1, true))
        and (TermsMatchGroup(17260, 10) or cmpr_gt(features:NumberCount(), 4, true))
        and (wclass:FE_REGIONS_MISMATCH() or wclass:FAST_AUTOREG())
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 86400)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 5)
        then
            SetPSAR('ar385')
        end
    end
    
    --ar386
    --fe / #alco
	--14.01.17 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_btw(features:UserAge(), 100,200, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 30, 300)
		and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:UrlNormCount(),1, 2, true)
    	and wclass:NOREALNAME_TO()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
        and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and StrMatchRe(features:UrlsRawHashString(), regex([[[a-z]{3,}\.[a-z]{3,}\.ru]]))
    then
        SetPSAR('ar386')
    end
    
  
	--ar387
	--mxs_other / #fishing
	--12.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 1000)
    	and cmpr_eq(features:Subject8bitOnly(),1) 
        and wclass:REPLY_TO_WITHOUT_EMAIL()
        and wclass:BIZ_URLS()
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
        and wclass:THIRD_LVL_DOMAIN_IN_FROM()
        and wclass:SUSP_URLS_SHORT_TEXT()
        and not wclass:RUSSIAN_FROM_REALNAME()  
	then
		SetPSAR('ar387')
	end  

	--ar388
	--mxs_other / #capsurl
	--14.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 3000)
    	and cmpr_eq(features:Subject8bitOnly(),1) 
    	and cmpr_eq(features:UrlCount(),3)
    	and cmpr_eq(features:HasImageUrl(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_eq(features:ExternalImgNum(),2)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:HTML_BODY_HEAD()
        and wclass:NEUTRAL_SPF()
        and wclass:PHOTO_HOSTING()
        and wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(18257,100)
	then
		SetPSAR('ar388')
	end  

	--ar389
    --mxs_mbp / #zarabotok #3durl #received
	--03.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and cmpr_eq(features:MultipartNum(), 3) 
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and (features:IsFromOtherMbp() or features:IsFromRambler())
    	and cmpr_btw(features:WordCount(), 10, 100)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_eq(features:Has3dLevelDomain(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 5, 50)
    	and cmpr_btw(features:HtmlTagCount(), 10, 50)
    	and wclass:FROM_REALNAME_IN_LOCALPART()
    	and wclass:NO_USER_AGENT()
    	and (HeaderMatchRe('Received', regex([[^from\s[a-z]+-PC]])) or wclass:UNKNOWN_IN_RECEIVED())
	then
        SetPSAR('ar389')
    end
    
	--ar390
	--mxs_other / #zarabotok
	--14.07.16 / veselitsky	
	--b8757c4118f394d0e3555a4693dd6471 951556a893def56c5948e17338f9391b e379596ee991ec7c398c536ebabde4e2
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 2000, 7000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 100, 200)
    	and cmpr_btw(features:HtmlTagCount(), 12, 24)
    	and features:UrlCountWithoutMailRu() == 1
    	and features:MessageId()
 		and wclass:PTR_ERROR()
    	and wclass:NEW_IP_30_DAYS()
		and wclass:PHP_URL()
    	and StrMatchRe(features:MessageId(), regex([[^<[\dA-F]{25,45}@]]))
    then
    	SetPSAR('ar390')
    end

	--ar391
	--mxs_other / #zarabotok #vacancy #raiffeisen #globalbooks
	--06.09.16 / veselitsky	 
	--2dbf56c86fe8e2cff7f57ba945fec5c7 a3bcd7fddd57e65f5172c6e7113aae8a
	--a6c067c9072e88dbf5390506ad2eb122 2b5089b5ae707718427cc4f8093dcaeb f18c690d7c0def8a63a7526b6b02e71e
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 1000, 45000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 30, 3000)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and cmpr_btw(features:HtmlTagCount(), 20, 55)
		and cmpr_gt(features:RcptNum(), 6)	
    	and cmpr_btw(features:UrlNormCount(), 0, 12)
  		--and features:HasImageUrl() == 1
    	--and features:GeoCode() == 'CN'
    	and UrlsMatchStr('raiffeisen')
 		--and wclass:PROBABLE_PHISHING_FROM()
    	and (TermsMatchGroup(17222, 100) or TermsMatchGroup(17194, 100))
    	and wclass:HAS_TAG_META()
		and wclass:HTML_BODY_HEAD()
    then
    	SetPSAR('ar391')
    end
    
	
    --ar392
	--mxs_mbp / #zarabotok tk
	--14.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_lt(features:MsgSize(),3000)
    	and features:HasNoAttach() == 1
        and wclass:EMPTY_BCC_AND_NO_TO()
        and wclass:NO_TO_AND_FREE_MAIL()
        and wclass:NO_TO_AND_SHORT_MESSAGE()
        and wclass:HAS_THREAD_HEADERS()      
        and wclass:LONG_MSGID()
        and wclass:RECEIVED_MICROSOFT_SMTP_SERVER() 
	then
		SetPSAR('ar392')
	end    
    
    
	--ar393
    --mxs_mbp / #zarabotok #paysystem2.com
    --16.05.16 / minina
    --e35ff513cc10b1b7d1ea1e4a9d9bae5a
	--89ba65f0d2b066208d65414f6cc09844
	--be791e4d28f6e9b8907009544f970df3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(),'mxs_other')
        and cmpr_btw(features:MsgSize(), 1500, 7000)
        and cmpr_eq(features:HasTextOnly(), 1) 
      	and (cmpr_eq(features:MultipartNum(),1) or cmpr_eq(features:MultipartNum(),3))
        and cmpr_gt(features:TextLines(), 2, true)
        and cmpr_btw(features:WordCount(),15,75)
        and cmpr_gt(features:WhitespaceToWordRatio(),150,true )
    	and cmpr_gt(features:UrlNormCount(),1,true)
    	and (cmpr_gt(features:SubjectNumbersCount(),5,true) or cmpr_eq(features:SubjectWordOtherCount(),1))
    	and cmpr_eq(features:IpCategory(),'small')
    	and wclass:PRECEDENCE_BULK()
    	and cmpr_gt(features:RcptNum(),3,true)
    	
    then 
       	SetPSAR('ar393')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar393' )
    end
    
    --ar394
	--mxs_other / #efremov
    --13.01.17 / a.sokolov
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other' 
   		and features:MsgSize() >= 1000
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:CT_IN_BODY()
    	and wclass:MISSING_DATE()
    	and wclass:SPF_NOT_PASS()
    then
    	SetPSAR('ar394', true)
    	LogMsgToHadoop('dstat_sokolik_log', '#ar394')
    end
    
    --ar395
    --mxs_other / #USA #grazhdanstvo
	--11.07.16 / minina
	--1a4af8cb10592d2952c8684cdab74c59
	--074cc1bb24061b402671376211076fcf
	--355f5802bf38bb7e08ebbd6e5f321c16
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_other')
    	and cmpr_btw(features:MsgSize(),1000,15000)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_gt(features:TextLines(),5,true)
        and cmpr_gt(features:Words8bitRatio(),70)
    	and cmpr_gt(features:UrlNormCount(),2,true)
       	and cmpr_gt(features:MultipartNum(),3,true)
    	and cmpr_eq(features:IpCategory(),'small') 
    	and cmpr_eq(features:EngRealNameFrom(),1)
       	and wclass:MS_MAILER()
    	and wclass:PRECEDENCE_BULK()
       	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:RECIPIENT_EMAIL_IN_BODY()
    	and UrlsMatch(regex([[^(?:[a-z\d_\./-]+)/[a-z\d]+\.htm$]]),1)
    then
    	SetPSAR('ar395')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar395' )
    end
    
    
    --ar396
	--mxs_mbp mxs_other / #zippa
	--18.05.16 / veselitsky	
	--054b378fe6a561ce73b9c9ff5b27fce4 fea7e60ece8b2e80911ac04914895dae eb0f14dcdd9641d0fed5f303de004504
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'imap')
    	and cmpr_btw(features:MsgSize(), 80000, 180000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:MultipartNum() == 3
    	and	cmpr_btw(features:TextLines(), 1, 2, true)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and features:OneWordSubject() == 1		
		and features:Subject8bitOnly() == 1
      	and cmpr_btw(features:UrlCount(), 0, 5)
    	and TermsMatchGroup(10100, 100)
    	--and (UrlsMatchStr('.ask.fm', 1) or UrlsMatchStr('.accountant', 1) or UrlsMatchStr('/goto/', 1) or UrlsMatchStr('.top', 1))
    	and (wclass:MORE_THAN_1_RCPT() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS())
    then
    	SetPSAR('ar396')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar396')
    end
   
	
	--ar397 
	--mxs_mbp / #vbei v google #rambler
	--28.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and features:RamblerSmtp()
    	and cmpr_btw(features:WordCount(), 5, 250, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
		and wclass:PHP_URL()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
		and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
	then
		SetPSAR('ar397')
	end

    --ar398
	--mxs_other / #de
    --13.01.17 / a.sokolov
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other' 
   		and features:MsgSize() >= 1000
    	and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatchStr('.de')
        and (HeaderMatchRe('Content-type', regex([[boundary=.+="$]]), 1)
    		or not HeaderMatch('Content-type', 'boundary'))
    then
    	SetPSAR('ar398')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar398')
    end
    
    --ar399
    --mxs / #nosubject #shum
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and (features:HtmlTagCount() == 0 or features:NoSubject() == 1)
        and wclass:ONE_RECEIVED()
        and not wclass:FROM_INFORMATION_SERVICE()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^[A-Z\d]{10,15}$]]))
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{2}ALT\-{2}]]), 1)
    then
        SetPSAR('ar399')
    end
    
	--ar400
	--mxs_other /	#zarabotok #blagotvoritelnost
	--15.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 100000, 300000)
		and cmpr_eq(features:ImgNum(), 1)
		and cmpr_eq(features:HasNoAttach(), 1)
		and cmpr_eq(features:MultipartNum(), 5)
		and cmpr_eq(features:ReturnPath(), "<>")
		and cmpr_btw(features:UrlNormCount(), 4, 8)
		and cmpr_btw(features:TextLines(), 100, 200)
		and cmpr_gt(features:LinesToWordsRatio(), 40, true)
		and cmpr_gt(features:WhitespaceCount(), 5000)
		and cmpr_lt(features:IpAge(), 30)
		and wclass:SPF_NOT_PASS()
		and wclass:RECEIVED_BAD_PATTERN_4()
	then
		SetPSAR('ar400')
	end
    
    --ar401
    --mxs / #ip_in_url #english
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:Words8bitRatio() == 0
        and wclass:IP_URL()
        and wclass:RECEIVED_BAD_PATTERN_4()
    then
        SetPSAR('ar401')
    end
    
    --ar402
    --fe / #znakomstva #english #bit.ly
    --27.07.16 / r.kulpin
    --13ea3441ca5a7d6fdc1ac03da411674a 7bbdda5865ad9f93efebe4a0c5dc3e32
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), "fe") 
           or cmpr_eq(features:RcvSrcExt(), 'rpop')
           or cmpr_eq(features:RcvSrcExt(), 'imap')
           or cmpr_eq(features:RcvSrcExt(), 'smtp') )
        and not features:IsPddUser()   
        and cmpr_btw(features:MsgSize(), 20, 100000)
        and cmpr_lt(features:MultipartNum(), 3, true)
        and (features:Subject7bitOnly()
           or cmpr_gt(features:SubjectWord7bitCount(), 1, true)
           or features:NoSubject() )
        and (cmpr_eq(features:HasTextOnly(), 1) 
           or cmpr_eq(features:ImgNum(), 1))
        and (features:IsEnglishMessage()
           or wclass:ONLY_7BIT_WORDS())
        and cmpr_eq(features:NoRealNameTo(), 1)   
        and cmpr_lt(features:RepuserAge(), 10)       
        and cmpr_lt(features:TextLines(), 10)
        and features:UserCreateTime() 
        and cmpr_btw(features:UserCreateTime().days, 0, 14, true)
        and (wclass:FROM_MATCH_TO_AND_MORE_THAN_N_RCPT()
           or wclass:ENGLISH_LANGUAGE_MESSAGE())
        and (StrMatchRe(features:From(), regex([[^.*\d.*@]]))
           or wclass:VERY_LONG_LOCALPART())  
        and (cmpr_lt(features:RepuserAge(), 10) or wclass:SMALL_AGE_REPUSER_14())
        and ((cmpr_eq(features:UrlNormCount(), 0) and TermsMatchGroup(17245, 100)) 
           or (cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true) and features:HasShortUrl()))
    then
        SetPSAR('ar402')
    end

    --ar403
	--fe / #pdf
	--23.08.16 / zubr (minina)
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == 'fe'
		and features:IsPddUser()
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true) 
    	and features:MsgSize() >= 100000 and features:MsgSize() <= 800000
		and features:HasAttach() == 1 and features:ImgNum() == 0
		and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
		and features:NoRealNameTo() == 1
    	and features:DomainRepipAge() <= 60
    	and features:UrlNormCount() == 0
		and features:WordCount() >= 10 and features:WordCount() <= 200
    	and features:FilesExtensions() == ".pdf"
    	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar403')
    end
    
    --ar404
	--fe / #video #simple_url
    --14.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,1200)
        and features:HasTextOnly() == 1
        and features:Karma() <= 0
        and features:UrlNormCount() == 1
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_btw(features:HtmlTagCount(),2,8,true)
        and cmpr_btw(features:TextLines(),2,3,true)
        and features:HtmlTags()['strong']
        and wclass:HAS_5_DAYS_GAP()
        and wclass:NEW_IP_7_DAYS()
        and TermsMatchGroup(18258,100)
    then
        SetPSAR('ar404') 
    end

	--ar405
	--mxs_other / #znakomstva #seks #img
	--14.01.17 / zubr
	--de88596eea3c5f4d73dfbf93debd38ae 1760343a0716f0ab27c8c9c86efdbd41
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
    	and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
		and features:HasNoAttach() == 1 and features:ImgNum() == 1
		and features:UrlNormCount() == 1
		and features:UrlsTextSize() >= 150
    	and features:WordCount() >= 15
		and features:LinesToWordsRatio() <= 10
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:MAIL_RU_MSGID_PATTERN()
    	and wclass:SHORTURL()
    then
    	SetPSAR('ar405')
    end
    
    --ar406
    --fe / #zarabotok
    --21.05.16 / philip.karpov
    --f82c07e9755e758c4968ceab0591a128 ea78377b22452f924884016ca6450cd7 0ac889ab0617cf79ceaea5dd0347d02f 4550fc0a966f561413a890239e6500ff
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 2000, 6000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:Words8bitRatio(), 80)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 10)
        and wclass:TERMS_ZARABOTOK_V_SETI_AND_AUTOREG()
        and wclass:RUSSIAN_FROM_REALNAME()
        and UrlsMatch(regex([[\.[a-z]{2,3}/\w+$]]), 1)
    then
        SetPSAR('ar406',true)
    end
    
    --ar407
	--fe / #spam_attach
    --14.01.2017 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),3000)
        and (features:AttachOfficeCount() == 1
            or features:AttachWebCount() == 1)
        and features:NoRealNameTo()
        and cmpr_lt(features:RepuserAge(),7)
        and (features:UrlNormCount() == 0
        	or UrlsMatchStr('drive.google.com'))
        and features:HtmlTagCount() > 0
        and (features:HtmlTags()['h1']
        	or features:LinesToWordsRatio() < 5)
        and features:SubjectWordCount() >= 3
        and features:FilesExtensions() == ".htm"
        and features:WordCount() > 80
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar407') 
    end
    
    --ar408
    --mxs / #zarabotok #su #two_url
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 15 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 50 and features:WordCount() <= 150
        and features:HtmlTagCount() >= 30 and features:HtmlTagCount() <= 70
        and wclass:SHORTURL()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NEW_FROMDOMAIN_7_DAYS()
    then
        SetPSAR('ar408')
    end
    
    --ar409
	--mxs / #arenda
	--28.07.16 / r.kulpin	
	--5bb1c8425d8204eee0e2f977aa721f09 f1c8bff1d820dfe650b42a2f53930687 6da3077bd6223b5fa200a3f0e64a5a5d
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_other")
    	and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
        and features:Ptr3LevelDomain()
    	and features:Subject8bitOnly()
        and features:NoRealNameTo() 
    	and	cmpr_btw(features:TextLines(), 3, 30)
    	and cmpr_btw(features:WordCount(), 10, 160, true)
        and cmpr_lt(features:LinesToWordsRatio(), 30, true)
    	--and cmpr_btw(features:Word7bitCount(), 1, 5, true)  
        and wclass:DOUBLE_SUBJECT()
        and wclass:RANDOM_DIGITS_LOWER_CASE_IN_HEADER()
        and wclass:NO_CTE()
        and StrMatchRe(features:From(), regex([[^.*\d.*@]]))
    then
    	SetPSAR('ar409')
    end   
    
    --ar410
	--fe / #zarabotok
	--14.01.17 / glushenkov
    --def64479a1484eaad2d80fdcc5598804
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and cmpr_btw(features:MsgSize(), 1000, 10000)
		and cmpr_btw(features:MultipartNum(), 3, 4, true)
		and cmpr_btw(features:TextLines(), 4, 10, true)
    	and features:HasTextOnly() == 1
		and features:FromEmailInBody()
		and features:IsAutoreg()
		and features:NoSubject()
		and features:NoTo()
		and cmpr_lt(features:RepuserAge(), 30)
		and TermsMatchGroup(17860,100)
	then
		SetPSAR('ar410') 
	end
    
    --ar411
	--mxs_mbp / #azart #casino
	--14.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and cmpr_btw(features:MsgSize(), 500, 6000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
		and cmpr_btw(features:TextLines(), 5, 25)
		and cmpr_gt(features:WhitespaceToWordRatio(), 200)
		and cmpr_eq(features:SameEmailToAndSubject(), 1)
		and cmpr_eq(features:ReturnPath(), "<>")
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:HAS_PHP_SCRIPT_AND_MS_MAILER()
	then
		SetPSAR('ar411') 
        LogMsgToHadoop('dstat_glushenkov_log', '#ar411')
	end
    
    --ar412    
	--mxs_other mxs_mbp / #zippa #watch 
    --28.07.16 / r.kulpin
	-- 09eb046007b2a0f9dd9d747adeb4147a 0e9354f85a0e70aba416385d8b88157e 13408b6164d19d50aca5f0f0fb32dc0f
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 12000)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
	   	and cmpr_eq(features:HasTextOnly(), 1)
        and (features:OneWordSubject() 
           or cmpr_eq(features:SubjectWord7bitCount(), 1)
           or features:Subject8bitOnly())
    	and cmpr_btw(features:WordCount(), 30, 400, true)
		and cmpr_lt(features:UrlNormCount(), 9, true)
        and cmpr_lt(features:TextLines(), 15, true)
        and cmpr_lt(features:HtmlTagCount(), 30)
        and (features:HeloInMsgId() 
             or HeaderMatchRe('Message-Id', regex([[\d{8,15}\.\d{8,15}\@]])))
    	and (wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED()
           or wclass:IP_IN_SPAMHAUS_AND_NO_USER_AGENT())
        and (wclass:HAS_ONE_VIRT_PART() 
            or wclass:NON_RFC_CHARS_IN_BOUNDARY())
        and wclass:HELO_IN_FROM()  
    then
    	SetPSAR('ar412')
    end
    
    --ar413
	--smtp / #pdd_spam
	--14.01.2017 / zubr	
	if not IsBlocked
		and features:RcvSrcExt() == "smtp"
    	and cmpr_btw(features:MsgSize(),100,10000)
    	and features:IsPddUser()
		and features:RepuserAge() <= 3
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar413',true)
					end
            
			elseif i2 and type(i2)=='number' then
				local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar413',true)
					end
			end
	end

    --ar414
	--mxs_mbp / #avtozarabotok #gmail
    --01.12.16 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
    	and features:NoRealNameTo()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,3,true)
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    	and features:HtmlTagCount() > 0
        and features:HtmlTags()['span']
    	and features:HtmlTags()['span']/features:HtmlTagCount() > 0.2
    then
        SetPSAR('ar414')
    end
    
	--ar415
	--mxs_mbp / #vbei #google
    --11.01.17 / philip.karpov
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 5000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 2, true)
        and cmpr_btw(features:UrlCount(), 0, 1, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:RECEIVED_LAN_1()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
        and wclass:HAS_HDR_ORGANIZATION()
        and TermsMatchGroup(18180, 100)
    then
        SetPSAR('ar415')
    end
    
    --ar416
    --mxs_mbp #vbei_v_google
    --20.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_gt(features:MsgSize(), 100)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and (wclass:UNDISCLOSED()
    		or wclass:DOUBLE_CONTENT_TYPE())
    	and (wclass:SUSP_MAILERS_5()
    		or wclass:INVALID_DATE())
        and TermsMatchGroup(18180, 100)
    then
        SetPSAR('ar416')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar416')
    end

	--ar417
	--mxs_mbp / #zarabotok
	--14.01.17 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 50000
		and features:HasNoAttach() == 1 and features:ImgNum() == 1
    	and features:IsFromYandex()
		and wclass:NO_HTML_TAG()
		and wclass:NO_BODY_TAG()
		and features:FromLocalPart()
		and #features:FromLocalPart() >= 15
		and StrMatchRe(features:FromLocalPart(), regex([[\d{4,10}[a-z]+]]))
	then
		SetPSAR('ar417')
	end
    
    --ar418
	--mxs_mbp / #gmail #znakomstva #marketing
	--14.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and cmpr_btw(features:MsgSize(), 2000, 7000)
		and cmpr_eq(features:FromDomain(), "gmail.com")
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartPartCount(), 1)
		and cmpr_eq(features:NoTo(), 1)
		and cmpr_btw(features:ShortUrlCount(), 2, 5, true)
		--and cmpr_btw(features:HtmlUniqueTagCount(), 8, 12, true)
		and cmpr_btw(features:TextLines(), 6, 14, true)
		and cmpr_gt(features:SubjectWordCount(), 15, true)
		and cmpr_eq(features:BirthDateInFromLocalpart(), true)
		and cmpr_eq(features:ShortUrlMatchListUnsubscribe(), true)
		and UrlsMatchStr('goo.gl')
	then
		SetPSAR('ar418') 
	end
    
    --ar419
    --fe / #zarabotok
    --14.01.17 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:NEW_IP_30_DAYS()
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:WITH_HTTP()
        and wclass:HAS_FREE_HOSTING()
    then
        SetPSAR('ar419')
    end

	--ar420
	--mxs_other / #zarabotok
    --14.01.17 / philip.karpov
    --moc_mo_fh
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 10, 1000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:WordCount(), 1, 25, true)
        and cmpr_btw(features:TextLines(), 1, 12, true)
        and cmpr_gt(features:LinesToWordsRatio(), 15)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:X_MAILER_DOMAIN()
        and wclass:NO_CTE()
        and wclass:DOMAINS_EQUAL()
        and UrlsMatchStr('blogspot', 1)
    then
        SetPSAR('ar420')
    end
    
	--ar421
	--mxs_mbp / #zarabotok
    --15.01.17 / philip.karpov
    --mfc_mf_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 2000, 20000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:EMPTY_BCC_AND_NO_TO()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
        and wclass:HAS_SUSP_URLS()
    then
        SetPSAR('ar421')
    end
    
    --ar422
    --mxs_mbp #zarabotok #ot_slov_k_delu
    --28.07.16 / a.sokolov
    --7b6853b9184d30a6facc7b2e43b1c2f4 9427e29645b60fd0b222d89f63394033 e944bc5df93e09bcd538c77bda2d4d3d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp") 
        and cmpr_btw(features:MsgSize(), 50, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and (cmpr_eq(features:EngRealNameFrom(), 1) or wclass:NOREALNAME_FROM())
        and cmpr_btw(features:UrlNormCount(), 2, 8, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 10, true)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_btw(features:WordCount(), 0, 20, true)
        and wclass:SHORT_WITH_URLS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:IMG_TAG() 
        and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT() or wclass:ONLY_7BIT_WORDS())
    then   
        SetPSAR('ar422')
        LogMsgToHadoop('dstat_sokolik_log', '#ar422')
    end

	--ar423
	--mxs_other / #zarabotok
	--31.08.2016 / zubr 
	--c33ce43401337c6685a39fac1f7cb866
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 10
		and features:TextLines() >= 3 and features:TextLines() <= 15
		and features:WordCount() >= 5 and features:WordCount() <= 200
		and features:SubjectWords8bitRatio() >= 50
		and (wclass:NO_TO() or wclass:NOREALNAME_TO())
		and (wclass:MAIL_RU_MSGID_PATTERN() or wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL())
		and (wclass:MISSING_DATE() or wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO() or wclass:NEW_FROMDOMAIN_1_DAY())
		and (wclass:DKIM_FAIL() or wclass:MORE_THAN_10_RCPT() or wclass:SOFTFAIL_SPF_AND_NO_USER_AGENT() or wclass:NEW_IP_7_DAYS() or wclass:NEW_DKIM_7_DAYS())
	then
		SetPSAR('ar423')
	end

	--ar424
    --fe #eng_znakomstva
    --28.07.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 5) 
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 30)
        and wclass:FE_ENG_MSG()
        and HeaderMatchRe('Content-Type', regex([[[a-z]{20,}[0-9]{5,}"$]]))
    then
        SetPSAR('ar424')
        LogMsgToHadoop('dstat_sokolik_log', '#ar424')
    end
    
    --ar425
    --smtp / #seminar
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
    	and features:IsPddUser()
    	and features:Has3dLevelFromDomain() 
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
    	and cmpr_lt(features:RepuserAge(), 40)
    	and cmpr_gt(features:ImgNum(), 1, true)
    	--and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
    then 
        SetPSAR('ar425')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar425')
    end
    
	--ar426
	--mxs_other / #pidori #ray ban #varicoz
	--30.08.2016 / zubr(sokolik)
	--f34b52fa77d7bbcfef53ceaf3512ff04 ca3590c43881313a0452ca4a9ecb8aff
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 100000 and features:MsgSize() <= 500000 
		and features:HasNoAttach() == 1
		and features:ImgNum() >= 1
		and features:MultipartNum() >= 3 and features:MultipartNum() <= 8
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:HtmlTagCount() <= 100
		and features:TextLines() >= 1 and features:TextLines() <= 70
        and features:WordCount() > 0
		and features:LinesToWordsRatio() >= 15 and features:LinesToWordsRatio() <= 50
		and wclass:MSGID_DOMAIN_MATCH_WITH_FROM()
		and wclass:MESSAGE_ID_NO_DOMAIN()
		and wclass:DOLLAR_IN_MSGID()
	then
		SetPSAR('ar426')
	end
    
    --ar427
    --mxs / #kyrs #shum
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 1500000
        and features:HasNoAttach() == 1
        and features:ImgNum() >= 1 and features:ImgNum() <= 2
        and not features:DkimDomain()
        and features:DomainRepipAge() >= 1000
        and features:TextLines() >= 50
        and features:HtmlTagCount() >= 100
        and (wclass:ONE_RECEIVED() or wclass:RECEIVED_BAD_PATTERN_4())
        and (wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
    then
        SetPSAR('ar427')
    end

	--ar428
	--mxs_other / #vbei v google
    --15.01.17 / philip.karpov
    --mcc_mc_iples60
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_btw(features:WordCount(), 5, 35, true)
        and cmpr_btw(features:TextLines(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and (wclass:NEW_IP_30_DAYS_WITH_5_DAY_GAP() or wclass:IP_REP_GAP_MORE_14_DAYS_AND_SUBJECT_MIXED_BADRATIO())
        and wclass:NO_USER_AGENT()
        and wclass:HAS_HDR_ORGANIZATION()
    then
        SetPSAR('ar428')
    end
    
    --ar429
    --mxs / #rabota #evroset
    --20.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and features:WordCount() >= 1 and features:WordCount() <= 50  
        and wclass:NEW_FROMDOMAIN_1_DAY()
        and wclass:SHORTURL_AND_IMG()
        and wclass:HDR_X_ANTIVIRUS_AVAST_VPS()
        and StrMatchRe(features:FromLocalPart(), regex([[^information\d{1,3}$]]))
    then
        SetPSAR('ar429')
    end

	--ar430
    --mxs / #virus #rt.ru
    --28.05.2016 / zubr    
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and features:MsgSize() >= 5000 and features:MsgSize() <= 500000
        and (features:HasTextOnly() == 1 and (wclass:FREE_HOSTING() or wclass:SHORTURL()) or features:HasAttach() == 1)
        and features:UrlNormCount() <= 6
		and wclass:SPF_NOT_PASS()
        and wclass:RUSSIAN_FROM_REALNAME()
		and (wclass:NO_MIME() or HeaderMatch('Received', 'from computer_'))
        --and (StrMatch(features:FromDomain(), '.rt.ru') or StrMatch(features:FromDomain(), 'sber.ru'))
    then   
        SetPSAR("ar430",true)
    end
    
    --ar431
    --mxs_mbp / #attach
    --15.01.17 / zubr
    if features:RcvSrcExt() == "mxs_mbp"
        and features:HasAttach() == 1
		and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
		and wclass:RUSSIAN_FROM_REALNAME()
		and features:IsFromGoogle() == true
		and features:MsgGetHashAttach()
		and #features:MsgGetHashAttach() > 0
		and features:From()
    	and SFKD('ar431', {features:MsgGetHashAttach()}, 60, 10)
    then
		if checkSuspEntityWithSFKD('ar431', features:MsgGetHashAttach(), features:From(), 3, 900) 
		then
			SetPSAR('ar431')
		end
	end
    
   
    --ar432
	--mxs_mbp / #zarabotok web
	--15.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_lt(features:MsgSize(),10000)
    	and cmpr_gt(features:TextLines(),5) 
        and wclass:EMPTY_BCC_AND_NO_TO()
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
        and (wclass:HAS_5TH_LEVEL_DOMAIN_IN_MSGID() or wclass:NO_TO())
        and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
	then
		SetPSAR('ar432')
	end    
    
    --ar433
	--mxs_other /	#english #zarabotok
	--15.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 3000, 15000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:ExternalImgNum(), 1)
		and cmpr_eq(features:MultipartNum(), 3)
		and cmpr_btw(features:UrlCount(), 3, 6, true)
		and cmpr_eq(features:ShortUrlCount(), 0)
		and cmpr_btw(features:HtmlTagCount(), 60, 200)
		and cmpr_gt(features:TextLines(), 100, true)
		and cmpr_eq(features:NoRealNameReplyTo(),1)
		and cmpr_btw(features:SubjectWordCount(), 6, 15, true)
		and cmpr_lt(features:EnvelopeFromDomainRepipAge(), 40)
		and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
		and (wclass:CLICK_HERE_TO_CONTINUE() or wclass:NEW_IP_30_DAYS_WITH_14_DAY_GAP())
	then
		SetPSAR('ar433')
	end

    
	--ar434
	--mxs_mbp / #googledocs
	--15.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_eq(features:UrlCount(),1)
        and wclass:SUSP_FROM_AND_REPLY_TO()
        and wclass:FREE_HOSTING()
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
        and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()  or wclass:PSEUDO_DMARC_AND_PHP_SCRIPT())
        and UrlsMatchStr('docs.google.com')
	then
		SetPSAR('ar434')
	end    
    
    --ar435
	--mxs smtp / #yandex #direct
	--28.06.16 / veselitsky	
	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'smtp')
   		and cmpr_btw(features:MsgSize(), 1000, 4000)
		and features:HasTextOnly() == 1
    	and features:NoUserAgent() == 1
		and features:MultipartNum() == 3
	   	and cmpr_btw(features:TextLines(), 1, 10)
    	and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_btw(features:UrlNormCount(), 0, 3)
		and (UrlsMatchStr('vkontakte.ru/', 1) or UrlsMatchStr('vk.com/', 1))
    	and (wclass:PTR_ERROR_AND_NEW_IP_30_DAYS() or wclass:NEW_IP_7_DAYS() or cmpr_lt(features:RepuserAge(),4))
    	and wclass:TO_LOCALPART_IN_REALNAME()
    then
    	SetPSAR('ar435')
    end
    
    --ar436
	--mxs_other / #rassilki #ipurl
	--28.05.16 / veselitsky	
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 800, 2000)
		and features:HasTextOnly() == 1
    	and features:NoUserAgent() == 1
    	and features:NoRealNameTo() == 1
		and features:MultipartNum() == 1
	   	and cmpr_btw(features:TextLines(), 1, 10)
    	and cmpr_btw(features:WordCount(), 10, 50)
    	and cmpr_btw(features:UrlNormCount(), 0, 3)
    	and wclass:IP_URL()
    	and wclass:NEW_FROMDOMAIN_15_DAYS()
    	and wclass:IP_REP_GAP_MORE_7_DAYS()
    then
    	SetPSAR('ar436')
        LogMsgToHadoop( 'dstat_veselitsky_log', '#ar436')
    end
    
    --ar437
    --mxs_other / #zarabotok
	--29.05.16 / veselitsky
	if not IsBlocked          
		and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 100, 1000)
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:TextLines(), 1, 10, true)
		and cmpr_btw(features:WordCount(), 2, 40)
		and cmpr_btw(features:UrlNormCount(), 0, 3)	
    	and features:ShortUrlCount() == 1
    	--and (wclass:CP1251_WITH_7BIT() or wclass:WORDS_OTHERS_BAD_RATIO())
    	and wclass:INVALID_CHAR_FROM()
    	and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH() or features:ReplyToRealName() ~= features:FromRealName())
    then
		SetPSAR('ar437')
	end 
    
    --ar438
    --fe/ #callme #numbers #eng_msg #from_mail #young
    --29.07.16 / r.kulpin
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')             
        and cmpr_btw(features:MsgSize(), 10, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and features:NoRealNameTo()
        and features:Subject7bitOnly()
        and cmpr_lt(features:SubjectWord7bitCount(), 5, true)
        and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
        and cmpr_btw(features:NumberCount(), 6, 20, true)
        and features:EmailsCountInBody() == 0
        and (features:UserCreateTime() 
           and cmpr_btw(features:UserCreateTime().days, 0, 7, true))  
        and (wclass:NON_RFC_CHARS_IN_BOUNDARY()
           or wclass:SOURCE_IP_IN_DNSBL())
        and wclass:ENGLISH_LANGUAGE_MESSAGE()    
        and StrMatchRe(features:From(), regex([[^.*\d.*@]]))
        and (HeaderMatchRe('Content-Type', regex([[(?i)boundary="--ALT--]]))
           or HeaderMatch('Content-type', 'charset=utf-8', 1))
    then
        SetPSAR('ar438')
    end
    
    --ar439
    --mxs_other / #rabota #doma
	--29.05.16 / veselitsky
	if not IsBlocked          
		and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 200, 3000)
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:Subject8bitOnly() == 1
    	and cmpr_btw(features:TextLines(), 0, 10)
		and cmpr_btw(features:UrlNormCount(), 0, 5)	
     	and wclass:YANDEX_DISC()
    	and wclass:MAILRU_FROM_MXS()
    	and wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
    then
		SetPSAR('ar439')
	end 
    
    
    --ar440
	--mxs_mbp / #pochta
	--15.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_eq(features:HasAttach(),1)
        and cmpr_eq(features:FilesExtensions(),'.pptx')
        and wclass:HELO_IN_MSGID()
        and wclass:HAS_X_RECEIVED()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:HTML_BODY_HEAD()
	then
		SetPSAR('ar440')
	end    

    
	--ar441
    --fe / #zarabotok #attach
    --28.12.16 / philip.karpov
    --fc_fb_hasat
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 5000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_gt(features:AttachAllCount(), 1, true)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:MailRuTo()
        and features:MailRuFrom()
        and cmpr_lt(features:Karma(), 0, true)
        and (wclass:WORDS_OTHERS_BAD_RATIO() or wclass:WORDS_OTHERS_VERY_BAD_RATIO() or wclass:ABF_FAST_CITY_CHANGE())
        and (wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO() or wclass:WORDS_TO_URLS_BADRATIO())
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar441')
    end

	--ar442
	--mxs_other /	#phishing #apple #icloud
	--15.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 4000, 11000)
		and cmpr_eq(features:ExternalImgNum(), 2)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_eq(features:NoRealNameFrom(), 1)
		and cmpr_eq(features:EmailsCountInFromHeader(), 2)
		and cmpr_btw(features:UrlNormCount(), 4, 7, true)
		and cmpr_eq(features:HasPhotoHosting(), 1)
		and wclass:SPF_NOT_PASS()
		and UrlsMatchStr('apple.com')
		and TermsMatchGroup(18259,100)
	then
		SetPSAR('ar442')
	end
   
	--ar443
	--fe / #virus
	--25.11.2016 / zubr
	--b47042784b11a5573ce4553455e64969
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and (features:RcvSrc() == "fe" or features:RcvSrc() == "smtp")
		and features:MsgSize() >= 100000 and features:MsgSize() <= 1500000
		and features:ImgNum() == 1 
		and features:AttachAllCount() == 1
		and features:MultipartNum() >= 3
		and features:NoRealNameTo() == 1
		and features:UrlCountWithoutMailRu() <= 1
		and features:TextLines() >= 1 and features:TextLines() <= 40
        and features:WordCount() >= 3 and features:WordCount() <= 300
		and (features:RepuserAge() <= 3 or wclass:WORDS_MIXED_RATIO())
    	and not StrMatch(features:FilesExtensions(), ".zip")
		and (StrMatch(features:FilesExtensions(),".z") or StrMatch(features:FilesExtensions(), ".gz"))
     	and not StrMatch(features:UserAgent(),"mobmail android") 
	then
		SetPSAR('ar443')
	end
   
	--ar444
	--mxs_other / #seminar
	--30.05.2016 / zubr 
	--984b0541ae8ab6f39e70a1af8decd6f8
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 800000 and features:MsgSize() <= 1300000 
		and features:AttachAllCount() == 1
		and features:ImgNum() == 0
		and features:AttachOfficeCount() == 1
		and features:MultipartNum() >= 5
		and features:UrlNormCount() <= 2 
		and features:HtmlTagCount() >= 20 and features:HtmlTagCount() <= 80
		and features:TextLines() >= 10 and features:TextLines() <= 30
        and features:WordCount() > 0
		and features:LinesToWordsRatio() <= 8
		and features:NumberCount() >= 50 and features:NumberCount() <= 90
		and features:Words8bitRatio() >= 60
		and features:WordOtherCount() >= 40
		and features:SubjectWordOtherCount() >= 1
		and wclass:SHORT_BOUNDARY()
		and wclass:DOMAINS_EQUAL()
		and HeaderMatchRe('Content-type', regex([[boundary="=_[a-z\d]{25,35}"$]]), 1) 
	then
		SetPSAR('ar444')
	end

	--ar445
	--mxs_other /	#zarabotok 
	--15.01.17 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 50000 and features:MsgSize() <= 500000
		and features:HasNoAttach() == 1
		and features:ImgNum() <= 1
		and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 10
		and features:WordCount() >= 100 and features:WordCount() <= 800
		and features:NumberCount() >= 40
		and features:WhitespaceToWordRatio() >= 500
		and features:IpAge() <= 30
		and features:DomainRepipAge() >= 500
		and wclass:SPF_NOT_PASS()
	then
		SetPSAR('ar445')
	end 
 
	
	--ar446
	--mxs_mbp / #vbeyvgoogle
	--15.01.17 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
 	    and (cmpr_eq(features:EnvelopeFromDomain(),'yandex.ru') or cmpr_eq(features:EnvelopeFromDomain(),'ya.ru')   or cmpr_eq(features:EnvelopeFromDomain(),'yandex.ua'))
        and cmpr_gt(features:WhitespaceToWordRatio(),100)
        and cmpr_lt(features:SubjectLen(),35)
        and (wclass:NOT_CP1251_CHARS_IN_SUBJECT() or UrlsMatchStr('google.com'))
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:PHOTO_HOSTING()
        and wclass:HAS_HDR_ORGANIZATION()
        and TermsMatchGroup(18260,100)
	then
		SetPSAR('ar446')
	end 

	--ar447
	--mxs_other /	#watches
	--15.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 100000, 1000000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_lt(features:ExternalImgNum(), 1, true)
		and cmpr_eq(features:NoUserAgent(), 1)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 5, true)
		and cmpr_btw(features:HtmlUniqueTagCount(), 10, 20, true)
		and cmpr_btw(features:TextLines(), 20, 200, true)
		and cmpr_btw(features:WhitespaceCount(), 2000, 10000)
		and cmpr_gt(features:WhitespaceToWordRatio(), 200)
		and cmpr_eq(features:SubjectNumbersCount(), 1)
		and wclass:MISSING_DATE()
	then
		SetPSAR('ar447', true)
	end

	--ar448
    --fe / #casino
    --14.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 0)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 20, 65, true)
        and cmpr_eq(features:OneWordSubject(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 10)
        and cmpr_gt(features:LinesToWordsRatio(), 10)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and (wclass:FE_TOR_IP() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY())
        and wclass:WORDS_WITH_NOISE()
        and wclass:WORDS_OTHERS_BAD_RATIO()
    then
        SetPSAR('ar448')
    end
    
	--ar449
	--mxs_other /	#watches
	--15.01.17 / zubr-glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 100000, 1000000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 5, true)
		and cmpr_btw(features:TextLines(), 20, 300, true)
		and features:WordCount() >= 500
		and cmpr_gt(features:WhitespaceToWordRatio(), 180)
		and wclass:MISSING_DATE()
		and wclass:NO_HTML_TAG()
		and wclass:NO_BODY_TAG()
		and wclass:MAIL_RU_MSGID_PATTERN()
	then
		SetPSAR('ar449')
	end
    
	--ar450
	--mxs_other / #seminar
	--31.05.2016 / zubr 
	--e56c014f585096b65bc7f9bbfc380008
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 10000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:UrlNormCount() <= 3 
		and features:HtmlTagCount() >= 20 and features:HtmlTagCount() <= 80
		and features:TextLines() >= 10 and features:TextLines() <= 30
        and features:WordCount() > 0
		and features:LinesToWordsRatio() <= 8
		and features:NumberCount() >= 40 and features:NumberCount() <= 90
		and features:Words8bitRatio() >= 60
		and features:WordOtherCount() >= 30
		and wclass:SHORT_BOUNDARY()
		and wclass:EMPTY_ENVELOPE_FROM()
		and HeaderMatchRe('Content-type', regex([[boundary="=_[a-z\d]{25,35}"$]]), 1) 
	then
		SetPSAR('ar450')
	end 
   
	--ar451
	--mxs_other /	#zarabotok
	--15.01.17 / glushenkov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and cmpr_btw(features:MsgSize(), 100000, 300000)
		and cmpr_eq(features:HasAttach(), 1)
		and (cmpr_eq(features:AttachArchiveCount(), 1) or cmpr_eq(features:AttachOfficeCount(), 1))
		and cmpr_lt(features:ImgNum(), 1, true)
		and wclass:X_PRIORITY_HIGH()
		and wclass:SPF_NOT_PASS()
		and wclass:MORE_5_EMAILS_IN_TO()
		and (wclass:SORTED_RECIPIENTS() or wclass:SORTED_X_ENVELOPE_TO())
		and wclass:RECEIVED_BAD_PATTERN_2()
	then
		SetPSAR('ar451', true)
	end
    
	--ar452
	--mxs_other / #phishing
	--30.07.2016 / zubr 
	--48615e7f04e36f050e15f97fb70c4548
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 500 and features:MsgSize() <= 1000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:EngRealNameFrom() == 1
		and features:NoUserAgent() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:HtmlTagCount() <= 20
		and features:NoBodyTag() == 1
		and features:TextLines() >= 2 and features:TextLines() <= 8
		and features:DotCount() <= 1
		and features:Subject7bitOnly() == 1
		and wclass:ENGLISH_LANGUAGE_MESSAGE()
		and wclass:FROM_AND_TO_EMAILS_ARE_EQUAL_BUT_REALNAMES_ARE_NOT()
		and HeaderMatchRe('Content-type', regex([[boundary="={5,}\d{5,}={1,}"$]]), 1) 
	then
		SetPSAR('ar452')
	end
    
    --ar453
	--mxs_mbp / #nsg
    --12.09.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp' 
    	and cmpr_btw(features:MsgSize(), 1000, 150000)
    	and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
    	and features:NoRealNameTo() == 1
    	and features:NoRealNameFrom() == 1
    	and features:MultipartNum() == 1
    	and cmpr_btw(features:LinesToWordsRatio(), 15, 45)
    	and cmpr_btw(features:UrlNormCount(), 0, 50)
		and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
    	and wclass:FROM_NGS_RU() 
    then
    	SetPSAR('ar453', true)
    end
    
    --ar454
	--fe / #zarabotok #rf_url
	--21.12.16 / a.sokolov
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and cmpr_btw(features:MsgSize(), 100, 10000)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_btw(features:WordCount(), 1, 20, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and (cmpr_gt(features:Words7bitRatio(), 50)
    		or wclass:NAME_IN_BODY()
			or cmpr_btw(features:Word8bitCount(), 3, 6, true))
  		and (wclass:RU_RF_URLS()
    		or UrlsMatch(regex([[\.ru$]]), 1)) 
    	and (wclass:AUTOREG() 
        	or wclass:AUTOREG_FROM_NOT_TARGET_REGION())
    then
    	SetPSAR('ar454')
       	LogMsgToHadoop('dstat_sokolik_log', '#ar454')
    end

    --ar455
    --mxs / #english #podarok #sale #url
    --15.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:PRECEDENCE_BULK()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()   
        and UrlsMatch(regex([[link\.[a-z\-]+\d{0,3}\.[a-z]{2,3}]]),1)
    then
        SetPSAR('ar455')
    end
    
    --ar456
	--mxs_mbp / #vbei_v_google
    --15.01.17 / a.sokolov
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_mbp' 
        and features:IsFromYandex()
       	and features:HasTextOnly() == 1
   		and features:MsgSize() >= 20000
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:WordCount(), 20)
    	and cmpr_btw(features:TextLines(), 1, 3, true)
    	and HeaderMatchRe('Content-Type', regex([[boundary.+[A-Z]{5,}-\d{5,}.{3,}?"$]]))
    then
    	SetPSAR('ar456')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar456')
    end

	--ar457
	--fe / #zarabotok
    --15.01.17 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 35000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 5, 15, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 4, 14, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:AUTOREG()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar457')
    end
    
    --ar458
    --mxs_mbp / #zarabotok #dosc.google
    --11.09.2016 / rassadovskiy
    --79d7c7147aee03b5ebd6581a9109b6b9 88e6dc99cb5a7a76a37a541422da5096 18e15c0cf0785a2049cf6a06888ee357
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp") 
        and cmpr_btw(features:MsgSize(),10000,20000)
        and features:ExternalImgNum() > 0
        and features:HasTextOnly() == 1
        and features:NoRealNameTo() == 1
        and features:IsFromGoogle()
        and features:NoRealNameReplyTo()
        and cmpr_btw(features:UrlNormCount(),3,6,true)
        and features:HasFreeHosting()
        and cmpr_btw(features:TextLines(),20,50)
        and cmpr_gt(features:HtmlTagCount(),30)
        and features:WordCount() > 100
        and features:SubjectWordCount() > 3
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and (UrlsMatchStr('docs.google.com')
            or UrlsMatchStr('goo.gl/forms/',1))
        and wclass:HAS_INPUT_TAG()
        and wclass:NOREALNAME_FROM()
    then
        SetPSAR('ar458') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar458')
    end
    
    --ar459
	--fe / #zarabotok
    --16.01.17 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WORDS_TO_URLS_BADRATIO()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar459')
    end
    
	--ar460
	--mxs_mbp / #podpis
	--20.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and features:IsFromGoogle()
        and cmpr_gt(features:MsgSize(), 1000)
        and cmpr_gt(features:ImgNum(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
  		and wclass:FROM_REALNAME_ALL_MIXED()
    	and wclass:DIFFERENT_RES_IMAGES()
    	and wclass:WORDS_MIXED_RATIO()
	then
		SetPSAR('ar460')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar460')
    end
    
    --ar461
    --fe / #rabota
    --26.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and wclass:HAS_SUSP_URLS()
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar461')
    end
    
	--ar462
	--fe / #zarabotok #googledrive
    --16.01.17 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:NEW_IP_30_DAYS()
        and wclass:URL_GOOGLEDRIVE()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar462')
    end

	
	--ar463
	--mxs_mbp / #vbei v google
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
	    and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr')
        and wclass:FROM_TLD_IS_SUSP()
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass: RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar463')
	end
    
    --ar464
    --mxs / #zarabotok #zendesk
    --16.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
        and features:UrlNormCount() >= 2  and features:UrlNormCount() <= 10
        and features:EmailsCountInCcHeader() >= 5
        and features:TextLines() >= 10 and features:TextLines() <= 150
        and UrlsMatchStr('zendesk.com')
        and StrMatchRe(features:FromDomain(), regex([[\.zendesk\.com$]]))
        and HeaderMatchRe('Content-Type', regex([[boundary=\"\-{1,2}==_mimepart_]]), 1)
    then
        SetPSAR('ar464')
    end
    
	--ar465
	--mxs_mbp / #zarab. xls
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_eq(features:FilesExtensions(),".xlsx")
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:SPAMERS_LIKE_HELO()
        and wclass:SHORT_BOUNDARY()
	then
		SetPSAR('ar465')
	end

    --ar466
	--mxs_mbp / #kniga
    --15.01.17 / a.sokolov
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_mbp' 
        and features:IsFromYandex()
       	and features:HasTextOnly() == 1
   		and features:MsgSize() < 5000
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
    	and TermsMatchGroup(18261, 100)
    then
    	SetPSAR('ar466')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar466')
    end
    
    --ar467
    --mxs / #rabota #shum
    --16.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 15
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and features:HtmlTagCount() == 0
        and (wclass:NEW_FROMDOMAIN_15_DAYS() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
        and wclass:FROM_INFORMATION_SERVICE()
        and wclass:FAKE_REPLY_IN_SUBJECT()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    then
        SetPSAR('ar467')
    end
	
    --ar468
    --mxs_other #viagra
    --01.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 5, 30)
        and wclass:NO_MIME_AND_SU()
        and wclass:ONLY_7BIT_WORDS()
        and wclass:NO_MIME()
        and wclass:SHORT_MESSAGE()
    then
        SetPSAR('ar468')
        LogMsgToHadoop('dstat_sokolik_log', '#ar468')
    end
    
    --ar469
    --mxs / #zarabotok #two_url
    --16.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 200 and features:UrlsTextSize() <= 600
        and features:MultipartNum() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 15
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and wclass:NEW_DKIM_15_DAYS()
        and wclass:BADNET()
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:NEW_FROMDOMAIN_30_DAY()
        and UrlsMatch(regex([[^email\.[a-z\d\-_]+\.ru]]),1)
    then
        SetPSAR('ar469')
    end
        
    --ar470
    --mxs / #kysi #img
    --16.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 15000 and features:MsgSize() <= 100000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 5 and features:TextLines() <= 50
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 30
        and wclass:SHORT_BOUNDARY()
        and (wclass:NEW_IP_7_DAYS() or wclass:FAIL_SPF())
        and wclass:ONE_GIF_IN_BODY()
    then
        SetPSAR('ar470')
    end
    
	--ar471
    --mxs_other / #green_card #usa #immigrant
    --01.08.2016 / rassadovskiy (minina)
    --test
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),2000,50000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and cmpr_btw(features:UrlNormCount(),1,7,true)
        and features:HasUnsubscribeUrl()
        and cmpr_gt(features:SubjectNumbersCount(),10)
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
        and wclass:HDR_LIST_UNSUBSCRIBE_AND_DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:LIST_UNSUBSCRIBE_WITHOUT_URL_OR_ADRESS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:SHORT_BOUNDARY()
    	and UrlsMatchStr('.htm', 1)
        --and TermsMatchGroup(17254,100)
    then
        SetPSAR('ar471') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar471')
    end

	--ar472
	--mxs_other / #okna
	--02.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 15000 
		and features:HasTextOnly() == 1 
		and features:ToEmailInBody() == true
		and features:NoRealNameTo() == 1 
		and features:TextLines() >= 30 and features:TextLines() <= 45
        and features:WordCount() > 0
		and features:LinesToWordsRatio() >= 10
		and (features:WordsMixedRatio() >= 5 or wclass:FROM_REALNAME_ALL_MIXED())
		and wclass:SUSP_SWIFT_BOUNDARY()
		and wclass:DOMAINS_EQUAL()
	then
		SetPSAR('ar472')
	end
    
    --ar473
    --mxs / #teres
    --16.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:MultipartNum() == 1
        and features:TextLines() >= 2 and features:TextLines() <= 8
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:XMAILER_PHPMAILER()
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NONE_SPF()
    then
        SetPSAR('ar473')
    end
    
    --ar474
    --mxs / #english #podarok #sale #url
    --19.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 4 and features:UrlNormCount() <= 8
        and features:MultipartNum() == 1
        and features:Subject7bitOnly() == 1
        and features:Words8bitRatio() == 0
        and wclass:ONE_RECEIVED()
        and (wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar474')
    end
    
    --ar475
    --mxs_mbp #shorturl #english
    --20.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_lt(features:TextLines(), 5)
    	and cmpr_lt(features:WordCount(), 100)
        and cmpr_eq(features:UrlNormCount(), 1)
        and wclass:MISC_SUSP_MAILERS()
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    	and wclass:SHORTURL()
	then
        SetPSAR('ar475')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar475')
    end

    --ar476
    --mxs_mbp / #privet
    --02.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 80000)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_lt(features:UrlNormCount(), 3)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_eq(features:NoRealNameTo(), 1)	
        and features:IsFromGoogle()
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and (wclass:BCC_MORE_5() or wclass:CT_IN_BODY())
        and (wclass:RANDOM_CASE_IN_IMAGE_NAME() or wclass:HDR_X_ANTIVIRUS_AVAST_VPS() or wclass:SUSP_IMAGE_NAME_3())
        and (wclass:FROM_ENDS_IN_NUMS() or wclass:ONE_WORD_SUBJECT())
    then   
        SetPSAR('ar476')
        LogMsgToHadoop('dstat_sokolik_log', '#ar476')
    end 
    
    --ar477
    --fe #short_message
    --29.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_eq(features:MultipartNum(), 3) or cmpr_eq(features:MultipartNum(), 1))
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 3, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_btw(features:TextLines(), 1,15, true)
        and cmpr_btw(features:WordCount(), 1, 100, true)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 10)
        and (wclass:FE_ENG_MSG() or wclass:ONLY_7BIT_WORDS() or (cmpr_gt(features:Words7bitRatio(), 50) and cmpr_eq(features:Subject7bitOnly(), 1)))
        and (wclass:FROM_ENDS_IN_NUMS() or wclass:MORE_THAN_N_RCPT())
        and (HeaderMatch('X-Mru-User-Agent','Mozilla/4.0') or cmpr_gt(features:NumberCount(), 10))
        and not wclass:RUSSIAN_FROM_REALNAME()
		and TermsMatchGroup(17304, 100)

    then
        SetPSAR('ar477')
        LogMsgToHadoop('dstat_sokolik_log', '#ar477')
    end
    
	--ar478
	--fe / #zarabotok
    --16.01.17 / philip.karpov
    --fc_fb_noat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 3000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 2, 7, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 2, 6, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:NumberCount(), 25)
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
        SetPSAR('ar478')
    end
    
    --ar479
	--svobodno
    
	--ar480
	--svobodno

	--ar481
	--svobodno
    
	--ar482
	--svobodno
    
	--ar483
	--svobodno

    --ar484
	--mxs_other / #fishing
	--03.06.16 / veselitsky	
	--66af7f6c53d043ec62c70dc61019becb 7af506ee47692edce3ad95392589f314
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 10000, 30000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 2
    	and cmpr_btw(features:TextLines(), 50, 150)
    	and cmpr_btw(features:WordCount(), 100, 300)
    	and cmpr_btw(features:UrlNormCount(), 10, 30)
    	and features:HasImageUrl() == 1
    	and features:HasShortUrl() == 1
    	and wclass:FROM_DOMAIN_BEGINS_WITH_A_PUNCTUATION_CHARACTERS()
    	--and wclass:NEW_FROMDOMAIN_30_DAY()
		and wclass:IP_URL()
   	then
    	SetPSAR('ar484')
    end
    
	--ar485
    --mxs_mbp / #mailru #virus #ar486
    --16.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 1000, 10000)
		and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_btw(features:TextLines(), 2, 20, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:WordsOtherRatio(), 5)
    	and cmpr_lt(features:RepuserAge(), 7, true)
    	and wclass:AUTOREG()
    	and (wclass:WEB_ATTACH() or cmpr_eq(features:FilesExtensions(), '.zip'))
    	and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar485')
    end  
    
    --ar486
    --mxs_mbp / #mailru #mbp#virus
    --16.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 500000)
		and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_btw(features:TextLines(), 2, 20, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:WordsOtherRatio(), 10)
    	and wclass:MAILRU_FROM_MXS()
    	and (wclass:WEB_ATTACH() or cmpr_eq(features:FilesExtensions(), '.zip'))
    	and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar486')
    end     
    
    --ar487
	--mxs_other / #zarabotok
	--03.06.16 / veselitsky	
	--407c04d28b32018f47296f4ead9d1c5e 4e8357af0539c8c1dab12f660b294473
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 2000, 6000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_btw(features:TextLines(), 10, 30)
    	and cmpr_btw(features:WordCount(), 20, 120)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	and features:HasShortUrl() == 1
    	and features:HasImageUrl() == 1
    	and (cmpr_gt(features:SubjectNumbersCount(), 2) or cmpr_gt(features:WordsMixedRatio(), 4))
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
    	SetPSAR('ar487')
    end
    
	--ar488
	--fe / #zarabotok
	--02.08.16 / minina
    --cbd087259a789dfc7426832cccf63a7d e52b6d4fcab2c2f49317ea1c79a78927 4cedc676d1c5dd72d015f94e2afc9017
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 500, 15000)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 1, true))
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw (features:TextLines(), 2, 20,true)
    	and cmpr_btw(features:WordCount(), 10, 150)
       	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UserAge30(),1)
    	and (cmpr_btw(features:RepuserAge(), 0, 7, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 10))
    	and (wclass:CRASHED_BASE64_IN_SUBJECT()
            or wclass:VERY_LONG_LOCALPART()
            or wclass:TO_LOCAL_PART_DIGITS_ONLY()
            or wclass:RUSSIAN_FROM_REALNAME())
    	and (wclass:WORDS_OTHERS_BAD_RATIO()
            or wclass:SHORT_MESSAGE())
    	and UrlsMatchStr('sereport.net')
    	--and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{7,15}\.\d{7,15}$]]))
    then
    	SetPSAR('ar488')
    end
    
	--ar489
	--mxs_other / #virus #archivå
    --28.07.16 / veselitsky		
	--e1a36f692c27414e55b166bf2ab2ddcf 13e92d739b20a71dfa976b35134edb26 3ddc4f2c18bb67553f5db3e03799287b
	--e294186aed5db22c9634bb4d64bff286 9812a305307e039b8174afc282541eb6 2220ca748989a1ba9d156502118d0bcc
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other'
			or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 200000, 8000000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachArchiveCount() == 1
    	and features:HasDifferentFromAndReply() == 1
       	and cmpr_btw(features:TextLines(), 0, 25)
    	and cmpr_btw(features:WordCount(), 20, 150)
       	and StrMatchRe(features:FilesExtensions(), regex([[^\.((g|7)?z|rar)$]]))
    	and (wclass:MS_MAILER() or features:NoUserAgent() == 1)
    	and wclass:HAS_TAG_META()
    	and (wclass:RECEIVED_LAN_1() or wclass:UNKNOWN_IN_RECEIVED() or wclass:MULTIPLE_HEADERS())
    then
		SetPSAR('ar489')
	end 
    
    --ar490
	--mxs_other / #statistika #zarabotok #otchet 
    --04.08.16 / r.kulpin
	--2a4460317476d9b9911632e977d24ec2 03984384529c774a69d4d3058b26533c c5b2c35b1e3717a850dee02020e3840f
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "imap"))
        and cmpr_btw(features:MsgSize(), 4000, 8000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:Subject8bitOnly()
        and cmpr_btw(features:SubjectNumbersCount(), 3, 6, true)
        and cmpr_btw(features:LinesToWordsRatio(), 30, 80, true)
		and cmpr_btw(features:TextLines(), 50, 90, true) 
    	and cmpr_btw(features:NumberCount(), 50, 300, true)
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
        and cmpr_gt(features:HtmlTagCount(), 100, true) 
        and (cmpr_gt(features:DotCount(), 10) or wclass:XMAILER_PHPMAILER())
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED() or wclass:UNAVAILABLE_IN_RECEIVED_AND_OTHER_IP_IN_DNSBL() or wclass:INV_RATIO_BY_LAST_HOUR_MORE_THAN_20())
    	and (wclass:WHITESPACE_AND_SUSP_WORDS_OTHERS_RATIO() or wclass:SUSP_LINES_TO_WORD_RATIO())
    then
    	SetPSAR('ar490')
    end
    
	--ar491
	--svobodno

    --ar492
	--svobodno
    
    --ar493
	--mxs_other / #vacancy
    --03.06.16 / veselitsky		
	-- d444a3d94477076241742eb04998f689 74cb74c72a26683da120e6bc29911510  c8d49ccb965b7623381cc4be3c5cb072
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   	    and cmpr_btw(features:MsgSize(), 1000, 8000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	--and features:HeloInMsgId() == 1
    	and features:Word8bitCount() >= 10 and features:Word8bitCount() <= 40
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
    	and (features:HasShortUrl() == 1 or wclass:PHP_URL())
    	and (features:Has3dLevelFromDomain() or wclass:NEW_FROMDOMAIN_30_DAY())
    	and (wclass:LOCALHOST_AND_UNKNOWN_IN_RECEIVED() or wclass:MORE_THAN_1_RCPT() or features:Badnet() == 1)
    	and wclass:HAS_TAG_META()
    	and wclass:IP_REP_GAP_MORE_30_DAYS()
    then
		SetPSAR('ar493')
	end 

	--ar494
	--mxs_mbp / #pastebin #stoloto.ru
	--01.08.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 50, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_lt(features:TextLines(), 10, true)
    	and cmpr_btw(features:WordCount(), 5, 500)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
       	and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
       	and (cmpr_eq(features:SubjectWordCount(), 0) 
        		or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
    			or wclass:DKIM_FAIL() 
        		or wclass:MISC_SUSP_MAILERS()) 
    	and cmpr_lt(features:HtmlTagCount(), 20, true)
    	and features:FromRealName() == 'Ïî÷òà'
    then
    	SetPSAR('ar494')
        LogMsgToHadoop( 'dstat_minina_log', '#ar494' )
    end


    --ar495
	--svobodno
    

    --ar496
	--svobodno

    --ar497
	--mxs_other / #viagra
	--04.06.16 / veselitsky	
	if not IsBlocked
       	and features:RcvSrcExt() == 'mxs_other'
   		and features:MsgSize() >= 80 and features:MsgSize() <= 200
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
		and features:Subject7bitOnly() == 1
    	and cmpr_gt(features:Words7bitRatio(), 50)
    	and cmpr_gt(features:UrlNormCount(), 0, 4)
    	and	features:HasShortUrl() == 1
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    then	
    	SetPSAR('ar497')
    end

	--ar498
	--svobodno

    --ar499
	--mxs_mbp / #sobesedovanie 
    --27.07.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:IsFromGoogle() 
		and (features:NoTo() == 1 or features:NoRealNameTo() == 1)
    	--and features:NoSubject() == 1
    	and cmpr_btw(features:TextLines(), 0, 20) 
    	and cmpr_btw(features:WordCount(), 10, 300)
    	and cmpr_btw(features:HtmlTagCount(), 5, 25)
    	and cmpr_gt(features:WordsMixedRatio(), 3, true)
    	and features:UrlNormCount() == 1
    	and features:HasShortUrl() == 1
    	and wclass:NO_HTML_TAG()
    then
    	SetPSAR('ar499')
    end

	
    --ar500
	--mxs_mbp / #google yandex
	--10.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_lt(features:Words8bitRatio(),20)
    	and cmpr_eq(features:MultipartNum(), 1)
 	    and cmpr_eq(features:EnvelopeFromDomain(),'yandex.ru')
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
  	    and wclass:NABERI_V_GOOGLE()
        and wclass:NO_USER_AGENT()
        and wclass:RECEIVED_LAN_1()
        and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar500')
	end
    
	--ar501
	--mxs_other / #zarabotok
	--05.06.2016 / zubr
    --d58480dda9906501c7783f5411981978
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "mxs"
		and wclass:MISSING_DATE()
		and wclass:ONE_RECEIVED()
		and wclass:NO_MIME_AND_SPF_NOT_PASS()
		and wclass:NO_CONTENT_TYPE()
		and wclass:NO_TO()
    then 
		SetPSAR('ar501')
	end 
    
    --ar502
    --mxs / #zarabotok
    --27.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:UrlNormCount() == 1
        and features:FromLocalPart() == 'vlad'
        and features:TextLines() >= 5 and features:TextLines() <= 25
        and (wclass:MAIL_RU_MSGID_PATTERN() or StrMatchRe(features:MsgIdDomain(), regex([[\.rambler\.ru$]])))
        and HeaderMatchRe('Content-type', regex([[boundary=\"b1_]]), 1)
    then
        SetPSAR('ar502')
    end
    
    --ar503
	--svobodno
    
    --ar504
	--svobodno
    
    --ar505
    --fe / #outcome #english #noise
    --10.12.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),200,1000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo() 
        and not features:MailRuTo() 
        and cmpr_lt(features:RepuserAge(),7)
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() == 0
        and features:HtmlTagCount() == 0
        and wclass:FAST_AUTOREG()
    	--and wclass:SUBJECT_WITHOUT_LETTERS()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar505') 
    end
    
	--ar506
	--fe / #turi
	--06.06.16 / veselitsky	
	--75bb3a123db1c23c4ed3f64f320439db 4c32aba2993721e53a4a0e1e5e25928f 56a3a563da8398970c4e9eda7e981f43
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 150000, 300000)
    	and features:HasNoAttach() == 1
        and features:ImgNum() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:SubjectWordCount(), 4)
    	and	features:TextLines() == 0
        and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
		and wclass:HAS_5_DAYS_GAP()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar506')
    end

    --ar507
	--svobodno
    
	--ar508
	--svobodno
    
	--ar509
	--svobodno
    
    --ar510
	--svobodno
    
	
	--ar511
	--mxs_mbp / #zarab
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),50,10000)
        and cmpr_gt(features:SubjectWordCount(), 4)
        and cmpr_lt(features:WordCount(),20)
        and wclass:INVALID_CHAR_IN_FROM_REALNAME()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL_AND_SHORTURL()
        and UrlsMatchStr('bit.ly')
        and UrlsMatchStr('radikal.ru')
	then
		SetPSAR('ar511')
	end
        
    --ar512
	--svobodno

	--ar513
	--mxs_mbp / #zarabotok #blogspot
	--23.10.2016 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap")
		and cmpr_btw(features:MsgSize(), 500, 600000)
		and (cmpr_eq(features:HasTextOnly(), 1) or (cmpr_eq(features:HasNoAttach(), 1) and cmpr_eq(features:ImgNum(), 1)))
		and cmpr_btw(features:UrlNormCount(), 0, 10)
		and cmpr_btw(features:TextLines(), 1, 80)
		and cmpr_btw(features:WordCount(), 4, 700)
		and cmpr_btw(features:MultipartNum(), 3, 5, true)
		and cmpr_btw(features:HtmlUniqueTagCount(), 1, 20, true)
		and (wclass:SUBJECT_MIXED_BADRATIO() or wclass:SHORTURL_AND_IMG())
	--	and wclass:OTHER_IP_IN_DNSBL()
		and (wclass:BOUNDARY_WITHOUT_LETTERS() or wclass:SUBJECT_8BBIT_AND_BODY_7BIT())
		and wclass:SHORT_BOUNDARY()
		and UrlsMatchStr('.blogspot.')
	then   
		SetPSAR('ar513')
	end
    
    --ar514
	--svobodno

	--ar515
	--svobodno
    
    --ar516
	--mxs_other / #journal 
    --07.06.16 / veselitsky	
	--37aaf0cf56340c2eca31c58076ec8126 4643f5079207d0c6dab79d4e4dae80bd e6e1a1622a3dfa6b193d318774eb0281
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other' 
   		and features:MsgSize() >= 73000 and features:MsgSize() <= 80000
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
		and features:XMailerName() == 'MailChimp Mailer'
    	and cmpr_btw(features:HtmlTagCount(), 250, 300) 
    	and cmpr_btw(features:TextLines(), 80, 100)
 		and features:EmailsCountInBody() == 1
		and cmpr_btw(features:UrlNormCount(), 8, 15)
    	and UrlsMatchStr('list-manage', 1)
    	and TermsMatchGroup(10206, 150)
    then
    	SetPSAR('ar516')
    end
    
    --ar517
	--mxs_other / #swift #zarabotok #withnoise
    --13.01.17 / a.sokolov
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other' 
   		and features:MsgSize() >= 500 and features:MsgSize() <= 5000
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_lt(features:WordCount(), 20)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
		and wclass:SUSP_SWIFT_BOUNDARY()
    	and wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
    then
    	SetPSAR('ar517')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar517')
    end


    --ar518
	--svobodno
    
    --ar519
	--mxs_other / #swift #zarabotok #withnoise
    --07.10.16 / veselitsky(sokolik)
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other' 
   		and features:MsgSize() >= 50000 and features:MsgSize() <= 250000
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_btw(features:WordCount(), 1000, 4000)
    	and cmpr_btw(features:HtmlTagCount(), 100, 500)
    	and features:UrlNormCount() == 1
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    	and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or wclass:BADNET())
    	and wclass:MESSAGE_ID_NO_DOMAIN()
		and wclass:SUSP_SWIFT_BOUNDARY()
    then
    	SetPSAR('ar519')
    end
    
    --ar520
	--svobodno
    
    --ar521
    --mxs / #virus #rt
    --16.12.16 / minina  
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap" or features:RcvSrcExt() == "rpop")
        and cmpr_btw(features:MsgSize(), 100, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
		and wclass:SPF_NOT_PASS()
        and (wclass:LASTHELO_WITHOUT_DOMAIN()  or wclass:UNKNOWN_IN_RECEIVED() or wclass:HDR_NO_MSG_ID())
		and (wclass:NO_MIME() or wclass:MISSING_DATE())
        and UrlsMatchStr('.htm', 1)
    then   
        SetPSAR("ar521",true)
    end
    
    --ar522
	--mxs_mbp / #gadget
    --07.06.16 / veselitsky	
	--64083ee5f2ab88685712f02a715ce8a6 d9add66c3b9bb686905998336377fc25 ba9fefc2acc26640de6a3645944aab14
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 200, 1000)
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1	
    	and features:IsFromFreeMail() == 1
    	and cmpr_btw(features:WordCount(), 0, 30)
		and cmpr_btw(features:UrlNormCount(), 1, 5)
    	and features:HasShortUrl() == 1
		and features:HasImageUrl() == 1
    	and wclass:FROM_ENDS_WITH_YEAR()
    then
    	SetPSAR('ar522')
    end
  
	--ar523
    --mxs_other / #chasi #watch #army #for_man
	--16.08.16 / r.kulpin(sokolik)
	--4a73580d084a38996a7ea475a6b5761f eee708b83b2d0d035250ce2fd2afe792 c6839bc2d70e680ae05eda4847a852fb
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_other")
    	and cmpr_btw(features:MsgSize(), 2000, 35000)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and (features:Subject8bitOnly()
           or cmpr_eq(features:SubjectWord7bitCount(), 1))
    	and cmpr_gt(features:WordCount(), 3,true)
        and cmpr_btw(features:TextLines(), 3, 15, true)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 2, true)
    	and cmpr_lt(features:UrlCount(), 3, true)
        and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
           or wclass:REMOTE_IP_IN_SPAMHAUS()
           or wclass:NEW_IP_7_DAYS()
			 or wclass:FROM_INFORMATION_SERVICE())
    	and (wclass:ONE_RECEIVED()
           or wclass:NO_USER_AGENT())
        and (StrMatchRe(features:From(), regex([[.*@.*(\d|\-).*ru$]]))
           or wclass:HELO_IN_FROM())
    then
    	SetPSAR('ar523')
    end
  
	--ar524
	--svobodno
    
    --ar525
	--svobodno
    
    --ar526
	--svobodno

    --ar527
	--svobodno
    
	--ar528
	--mxs_mbp / #zarab. xls
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and cmpr_eq(features:AttachOfficeCount(), 1)
        and wclass:SUBJECT_NUMBERS_ONLY()
        and wclass:SUSP_FROM_LOCALPART()
        and wclass: RELAY_RECEIVED_FROM_FREEMAIL_WITH_OTHER_IP_IN_DNSBL()
        and wclass:SHORT_BOUNDARY()
	then
		SetPSAR('ar528')
	end

	--ar529
	--svobodno
    
	--ar530
	--svobodno
    
    --ar531
	--svobodno

    --ar532
    --mxs / #zarabotok #url_cc #img
    --21.12.16 / r.belyankin(sokolik)
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000
        and features:HasNoAttach() == 1
        and features:ImgNum() >= 1 and features:ImgNum() <= 5
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 1 and features:WordCount() <= 50
		and (wclass:FREE_HOSTING() or wclass:SUSP_IMAGE_NAME_3())
        and (wclass:NEW_IP_7_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:RECEIVED_BAD_PATTERN_4()
    then
        SetPSAR('ar532')
    end  

    --ar533
    --mxs / #zarabotok #one #url #kairos
    --20.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 70
        and features:TextLines() >= 10 and features:TextLines() <= 25
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and wclass:ONE_RECEIVED()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:NEW_DKIM_15_DAYS()
        and not wclass:PHP_URL()
    then
        SetPSAR('ar533')
    end
    

    --ar534
	--fe / #zarabotok fake text
	--20.12.16 / razuvaev
	--644aaba5f31b0f2703aa0a037179c339 e5c825b4e1aff5006f1ae6bad2552f9e
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_gt(features:MsgSize(), 30000)
        and cmpr_gt(features:ExternalImgNum(),1,true)
        and cmpr_gt(features:ImgNum(),1,true)
        and features:HasNoAttach() == 1
        and cmpr_gt(features:MultipartNum(),3)
        and cmpr_gt(features:UrlCount(),5)
    	and cmpr_btw(features:WhitespaceToWordRatio(), 150, 3000)
        and wclass:HAS_INPUT_TAG()     
        and wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
        and features:Karma() <= 0
    then
    	SetPSAR('ar534', true)
    end

    
   
    --ar535
    --mxs_mbp / #znakomstva #yandex #many textlines
    --20.12.16 /razuvaev
       if not IsBlocked
          and features:RcvSrcExt() == "mxs_mbp"   
          and cmpr_btw(features:MsgSize(), 200, 15000)
          and features:HasTextOnly() == 1
    	  and features:IsFromYandex()
          and features:UrlNormCount() == 0
          and features:NoRealNameTo() == 1
          and features:NoUserAgent() == 1
          and cmpr_gt(features:TextLines(),5)
          and cmpr_gt(features:Word8bitCount(),100)
          and wclass:WORDS_OTHERS_BAD_RATIO()
          and wclass:RECEIVED_LAN_1()
          and TermsMatchGroup(18186,100)
     then        
         SetPSAR('ar535') 
      end   
    
    --ar536
	--mxs_mbp / #ofice #shtamp #stamp
    --15.08.16 / veselitsky	
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 800, 10000)
    	and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
    	and features:Subject7bitOnly() == 1
    	and cmpr_btw(features:WordCount(), 100, 600)
    	and cmpr_btw(features:TextLines(), 20, 200)
    	and cmpr_gt(features:WordsOtherRatio(), 5)
    	and cmpr_gt(features:Words7bitRatio(), 50)
    	and cmpr_gt(features:Words8bitRatio(), 0)
    	and cmpr_gt(features:NumberCount(), 10)
    	and (wclass:DKIM_FAIL() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
    	and wclass:SOFTFAIL_SPF()
		and (wclass:MESSAGE_ID_NO_DOMAIN() or wclass:IP_REP_GAP_MORE_7_DAYS() or wclass:BADNET())
    then
    	SetPSAR('ar536')
    end
    
    --ar537
	--fe / #casino 
    --21.09.16 / veselitsky	
	--2df3d9742f09eac45ac49daa29d535c7 bdd7f0187465394302b65870b3369eb8 
    if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 50, 5000)
    	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
    	and features:WordCount() <= 40	
    	and features:HtmlTagCount() > 0
 		and features:UrlNormCount() == 0
		and wclass:HAS_INPUT_TAG()
    	and (wclass:SUBJECT_WITHOUT_LETTERS() or TermsMatchGroup(10100, 100) or features:NoSubject() == 1)
    then
    	SetPSAR('ar537',true)
    end
    
    --ar538
	--svobodno

    --ar539
    --mxs_other / #zarabotok
    --18.12.16 / philip.karpov
    --moc_mo_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FROM_FIRST_LVL_DOMAIN_LV()
        and wclass:SHORTURL()
        and wclass:RECEIVED_LAN_1()
        and wclass:DOMAINS_EQUAL()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar539')
    end
    
    --ar540
    --mxs_other / #zarabotok 
	--28.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(), 100)
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:UrlNormCount(), 1)
    	and (wclass:NEW_IP_7_DAYS()
    		or mrasRepHasSendingGap(features:SrcIp(), 0, 20, 10, 0))
    	and (wclass:NEW_DKIM_7_DAYS()
    		or wclass:DKIM_FAIL())
    	and (wclass:NEW_FROMDOMAIN_7_DAYS()
    		or mrasRepHasSendingGap(features:FromDomain(), 3, 20, 10, 0))
    	and wclass:URL_FROM_BODY_IN_FROM()
    then
        SetPSAR('ar540')
        LogMsgToHadoop('dstat_sokolik_log', '#ar540')
    end
    
    --ar541
	--svobodno
    
	--ar542
	--mxs_sender / #zarabotok
	--09.06.2016 / zubr 
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
		and features:MsgSize() >= 10000 and features:MsgSize() <= 40000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 6
		and features:HasImageUrl() == 1 
		and features:HtmlTagCount() >= 100
		and features:HtmlUniqueTagCount() <= 20
		and features:TextLines() >= 20 and features:TextLines() <= 35 
		and features:WordCount() >= 100 and features:WordCount() <= 200
		and features:WhitespaceToWordRatio() >= 2000
		and TermsMatchGroup(17154, 100) 
	then
		SetPSAR('ar542')
	end 
    
    --ar543
    --smtp / #virus #attach
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and not features:IsPddUser()
    	--and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 10000, 300000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:FilesExtensions(), ".doc") 
    	and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:TextLines(), 15, true)
    	and cmpr_lt(features:WordCount(), 150, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and features:From() and features:ReplyTo()
    	and features:From() ~= features:ReplyTo() 
		and features:FromRealName() and features:ReplyToRealName()
		and features:FromRealName() == features:ReplyToRealName()
       	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar543')
    end
    
    --ar544
	--svobodno
 
	--ar545
	--mxs_other / #zarabotok
	--01.06.2016 / zubr 
    --de05f6caf05a7b2730613c4e4de499eb 9db07db8a9252b128a41ebc49d59c8d5
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
		and (features:HasTextOnly() == 1 or features:AttachOfficeCount() == 1)
		and features:MsgSize() >= 100 and features:MsgSize() <= 500 
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:TextLines() >= 2 and features:TextLines() <= 6
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:WordCount() >= 10 and features:WordCount() <= 40
		and features:HtmlTagCount() <= 5
		and (wclass:EMPTY_FROM() or wclass:X_PHP_EVAL())
		and wclass:W8BIT_NO_CTE()
		and wclass:INVALID_CHAR_SUBJECT()
	then
		SetPSAR('ar545',true)
	end

    --ar546
	--mxs_other / #zarabotok #manyurls
    --19.08.16 / veselitsky(sokolik)
	--a47a0ba5d1fffd30ba5153a0b28fbd42 ed23ba7908420760631a5df00580309f 
	--8052f579b7779b29f066d259ba345aed c5ee7d3079da5a718b9e4027821e01c9
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
        and cmpr_btw(features:MsgSize(), 10000, 80000)
	   	and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
    	and features:HeloInMsgId() == 1
    	and cmpr_btw(features:WordCount(), 250, 1000)
    	and cmpr_btw(features:HtmlTagCount(), 100, 500)
    	and (cmpr_gt(features:UrlNormCount(), 30) or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY())
    	and features:HasImageUrl() == 1
    	and wclass:MORE_THAN_5_RCPT()
    	and wclass:SPF_NOT_PASS()
    	and wclass:NO_HTML_TAG()
 		and wclass:NO_BODY_TAG()
    then
    	SetPSAR('ar546')
    end
    
    --ar547
    --mxs_mbp / #zarabotok #random caps in subject
    --20.12.16 /razuvaev
    --943f0c1d6a6296047c8d6baf66a8aa30
       if not IsBlocked
          and features:RcvSrcExt() == "mxs_mbp"   
          and cmpr_btw(features:MsgSize(), 1000, 10000)
          and cmpr_eq(features:MultipartNum(),1)
          and cmpr_gt(features:TextLines(),5)
          and cmpr_eq(features:NoRealNameTo(),1)
          and cmpr_eq(features:NoRealNameFrom(),1)
          and cmpr_gt(features:UrlCount(),1)
          and wclass:SUBJECT_MIXED_BADRATIO()
          and wclass:FROM_DOMAINPART_IN_REALNAME()
          and wclass:SUSP_HTML_TAG_RATIO()    
     then        
         SetPSAR('ar547') 
      end   
    
    
    --ar548
    --mxs_mbp / #zarabotok eng
    --21.12.16 /razuvaev
    --79fb7cee2b7fe135f59faec6bd0b06d1 9e4f672abdcfb2fe265292df26db8891
       if not IsBlocked
          and features:RcvSrcExt() == "mxs_mbp"   
          and cmpr_btw(features:MsgSize(), 2000, 5000)
          and cmpr_eq(features:MultipartNum(),3)
          and cmpr_gt(features:Words7bitRatio(),60)
          and cmpr_eq(features:Subject7bitOnly(),1)
          and wclass:NO_MIME()       
          and wclass:FAKE_REPLY_IN_SUBJECT()
          and HeaderMatchRe('Content-Type', regex([[boundary="----=_NextPart_]]))   
     then        
         SetPSAR('ar548') 
      end   
    
	--ar549
	--fe / #zarabotok
	--20.06.16 / zubr
	--da0b852bd6b6257f250c44327800bc3a
	if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 700 and features:MsgSize() <= 3000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 5 and features:WordCount() <= 70
		and features:Words8bitRatio() >= 30
		and wclass:AUTOREG()
		and features:Karma() < 0 
		and features:WhitespaceToWordRatio() >= 190
		and wclass:HAS_IMAGE_URL()
		and wclass:FREE_HOSTING()
	then
		if features:RepuserAge() >= 4
		then
		local a, tbl, send_days = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 5, 2, nil, 25)
		local a1, tbl1, send_days1 = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 5, 2, nil, 60)
			if (send_days >= 1 and send_days1 < 1)
			then
			SetPSAR('ar549') 
			end
		else
		SetPSAR('ar549')        
		end
	end
    
    --ar550
	--mxs_esp / #fonbet
	--12.12.2016 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_esp')
		and cmpr_btw(features:MsgSize(), 1000, 20000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 2, 80)
		and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:ExternalImgNum(), 1, true)
		and cmpr_btw(features:HtmlTagCount(), 10, 100)
		and cmpr_lt(features:HtmlUniqueTagCount(), 20)
		and cmpr_gt(features:Words8bitRatio(), 60)
		and cmpr_gt(features:SubjectWordCount(), 2)
		and cmpr_lt(features:MsgTypeRepipAge(), 5, true)
    	and cmpr_eq(features:AuthenticatedDomain(), 'usndr.com')
        and wclass:PRECEDENCE_BULK()
        and UrlsMatchStr('.site')
	then
		SetPSAR('ar550')
	end
    
    --ar551
	--mxs_other / #img #zarabotok #kurs #ded #audioknig
	--03.08.16 / r.kulpin	
	--d98c225d7151be97a9577149c5f042b5 3f7c0f5dafe821a1c3cf83e54b38fc26 1d761d05eaf998d34756160ae65cb04e
 	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), "mxs_other" 
           or cmpr_eq(features:RcvSrcExt(), "mxs_mbp")))
    	and cmpr_btw(features:MsgSize(), 500, 250000)
       	and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
    	and cmpr_gt(features:UrlCount(), 1, true)
        and features:Ptr3LevelDomain() 
        and features:NoSubject()
        and features:NoTo()
        and features:NoFrom()
    	and wclass:NO_CT()
    then
    	SetPSAR('ar551') 
    end    
    
    --ar552
	--svobodno

    --ar553
	--svobodno
    
    --ar554
	--svobodno
    
    --ar555
    --mxs_other / #zarabotok #cash resonance
    --10.06.2016 / zubr
    --0893f37621928e3582fba60b130368d4 19daee1aaa12a36a59ba04acbc90aac7
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap")
        and features:MsgSize() >= 2000 and features:MsgSize() <= 9000
        and features:HasTextOnly() == 1
 		and features:NoRealNameTo() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 6
        and features:TextLines() >= 5 and features:TextLines() <= 20
        and features:WordCount() >= 50 and features:WordCount() <= 200
		and features:NoHtmlTag() == 1
		and features:NoBodyTag() == 1
		and features:WhitespaceToWordRatio() >= 200
		and features:WordsMixedRatio() >= 50
		and features:Word8bitCount() >= 10 and features:Word8bitCount() <= 40
		and features:WordsOtherRatio() >= 2
		and features:SubjectUtf8Base64() == true
		and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar555')        
	end
    
    --ar556
	--svobodno

	--ar557
	--mxs_other / #nezubrilkin
	--19.10.2016 / zubr 
	--2eb5d23035231f2c65c37b7f59673c49 01177b0ce3771b9d1f2fe7c8b4860f0d 79e83644b751d5f74f4b0299c30291f5
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 12
		and (features:HasIpUrls() == 1 or features:DomainRepipAge() <= 7)
		and features:HtmlTagCount() >= 100
		and features:HtmlUniqueTagCount() <= 20
        and features:TextLines() >= 10 and features:TextLines() <= 300
		and features:WordCount() >= 100 and features:WordCount() <= 3000
		and features:Words8bitRatio() >= 60
		and features:SubjectWordCount() >= 5
		and (features:DomainRepipAge() <= 30 or mrasRepHasSendingGap(features:FromDomain(), 3, 40, 30, 5))
		and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH_AND_DIFF_FROM_AND_ENV_FROM()
    		or wclass:IMAGE_AND_FROM_MATCHES_WITH_URL_WITH_YOUNG_DOMAIN())
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
	then
		SetPSAR('ar557')
	end
    
	--ar558
	--mxs / #pidori #zarabotok #8000
	--29.08.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 4
		and features:UrlNormCount() >= 3
		and features:WordCount() >= 300 and features:WordCount() <= 1000
		and features:MsgIdLocalPart()
		and #features:MsgIdLocalPart() <= 25
		and features:Words8bitRatio() >= 10 and features:Words8bitRatio() <= 50
		and features:Words7bitRatio() >= 40
		and features:Subject8bitOnly() == 1
		and wclass:MAIL_RU_MSGID_PATTERN()
		and wclass:PRECEDENCE_BULK()
		and wclass:PHOTO_HOSTING()
		and wclass:HAS_HDR_ORGANIZATION()
		and wclass:MORE_THAN_10_RCPT()
		and StrMatchRe(features:MsgIdLocalPart(), regex([[^\d{5,15}\.\d{5,15}$]]))
	then
		SetPSAR('ar558')
	end
    
    --ar559
	--svobodno
    
	--ar560
	--mxs_other / #SEO
	--10.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
		and features:MsgSize() >= 100 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
		and features:UrlNormCount() == 1
		and features:UrlCount() >= 1 and features:UrlCount() <= 8
		and features:TextLines() >= 2 and features:TextLines() <= 15
		and features:WordCount() >= 5 and features:WordCount() <= 100
		and features:Words8bitRatio() >= 30
		and features:CutUrlsRawOnly7bit()
		and wclass:IP_URL()
		and StrMatchRe(features:CutUrlsRawOnly7bit(), regex([[^\d{2,8}[a-z\_\-\.]{3,15}\.ru/]]))
	then
    	SetPSAR('ar560')
	end
    
	--ar561
	--mxs / #pidori #zarabotok #8000
	--10.06.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 300 and features:MsgSize() <= 500000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 4
		and features:UrlNormCount() >= 1
		and features:DomainRepipAge() >= 1000 
		and (wclass:NEW_IP_15_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 400)) 
		and not features:DkimDomain() 
		and features:CTEId() == 4
		and wclass:SPF_NOT_PASS()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
		and wclass:BASE64_TRANSFER_ENCODING()
		and features:MsgIdLocalPart()
		and #features:MsgIdLocalPart() <= 25
		and StrMatchRe(features:MsgIdLocalPart(), regex([[^[A-Z\d]{4,10}\.[A-Z\d]{4,10}$]]))
	then
    	SetPSAR('ar561')
	end
    
	--ar562
	--mxs / #pidori #zarabotok #8000
	--03.08.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 100 and features:MsgSize() <= 1000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:HtmlTagCount() == 0
		and features:TextLines() >= 2 and features:TextLines() <= 10
		and features:WordCount() >= 5 and features:WordCount() <= 100
		and features:DotCount() <= 1
		and features:Words8bitRatio() >= 40
		and features:RcptNum() >= 3
		and (wclass:NEW_IP_7_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:OTHER_IP_IN_DNSBL())
		and (wclass:DOMAINS_EQUAL() or wclass:FROM_NGS_RU())
	then
    	SetPSAR('ar562')
	end
    
	--ar563
	--svobodno
    
	--ar564
	--mxs_other / #zarabotok #img #turbo
	--11.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000000 and features:MsgSize() <= 3000000
		and features:HasNoAttach() == 1 
		and features:ImgNum() == 1 
		and features:CtypeId() == 7
		and features:SubjectWordCount() <= 4
		and features:NoRealNameTo() == 1 
		and features:NoUserAgent() == 1 
		and features:UrlNormCount() == 1
		and (wclass:NEW_IP_7_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
		and wclass:SPF_NOT_PASS()
		and wclass:DOMAINS_EQUAL()
		and features:DomainRepipAge() >= 1000
	then
		SetPSAR('ar564')
	end
    
	--ar565
	--fe / #cazino
	--11.06.2016 / zubr 
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and features:MsgSize() <= 500000 
		and features:HasTextOnly() == 1 
		and features:Karma() <= 0
		and not features:IsPddUser()
		and wclass:RUSSIAN_FROM_REALNAME()
		and wclass:HAS_INPUT_TAG()
		and ((features:MsgSize() >= 5000 and features:UrlNormCount() == 0 and features:WordCount() <= 50)
        	or (features:Subject8bitOnly() == 1 and features:Words7bitRatio() >= 90 and features:BodyUpperLowerCaseRatio() == 0 and features:WordCount() >= 100))
	then
		if features:RepuserAge() >= 20
		then
		local a, tbl, send_days = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 10, 1, nil, 25)
        local a1, tbl1, send_days1 = RepuserHasPeriodicalSending(tostring(features:MpopUserId()), 'mail', 10, 1, nil, 150)
			if send_days >= 1 and send_days1 < 1
			then
			SetPSAR('ar565') 
			end
		else
		SetPSAR('ar565')        
		end
	end
    
    --ar566
	--mxs_other mxs_mbp / #zippa #watch #privet
    --27.07.16 / veselitsky	(zubr)
	--b5c27e23864e5bf8b38570ece069f9e3 afb75447233a8b7c70e706be2947e8a2 
	--0911f1bd71872354cca8620cddbc28c1 4c4fda525c747be7449aa94bb0eeba1b dd9cc6bf702b62f8984a56de01161e75
    --8dc4956e7e6023b2e5b9d0cc09c2a737
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 80000, 1000000)
	   	and features:HasNoAttach() == 1
		and cmpr_btw(features:ImgNum(), 0, 12)
    	and (features:Subject8bitOnly() == 1 or features:NoSubject() == 1)
    	and cmpr_btw(features:WordCount(), 0, 20)
		and features:Word8bitCount() == 0
		and cmpr_btw(features:UrlNormCount(), 0, 8, true)   
    	and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    	and (wclass:REDIRECTS_URL_PART() or wclass:REPLY_TO_WITHOUT_EMAIL() or
        	(wclass:SHORT_MSG_AND_URLS_WITH_INVALID_CHARS() and wclass:HAS_INPUT_TAG()) or
    		(wclass:HAS_INPUT_TAG_AND_SPF_NOT_PASS() and wclass:SUSP_IMAGE_NAME_3()) or
			wclass:NO_MIME_AND_SPF_NOT_PASS() or wclass:MESSAGE_ID_NO_DOMAIN() or
			wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:SOFTFAIL_SPF_AND_NO_USER_AGENT())
    then
    	SetPSAR('ar566')
    end
    
    --ar567
	--svobodno
    
    --ar568
	--svobodno
    
    --ar569
	--mxs_other / #zarabotok 
    --11.06.16 / veselitsky	
	--9c5935a72f49ed50ac0f330054f5c902 fae37e2f8f10f100ea4473f4bf99ef42 783b06747f9f2f56ffd660087fc0a56b
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
        and cmpr_btw(features:MsgSize(), 1000, 15000)
		and features:HasTextOnly() == 1
 		and features:MultipartNum() == 3
    	and (cmpr_btw(features:EnvelopeFromDomainRepipAge(), 0, 60) or wclass:IP_REP_GAP_MORE_30_DAYS())
    	and not features:DkimDomain()
    	and cmpr_btw(features:Words8bitRatio(), 10, 60)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	and wclass:NIGGER_DOLLAR()
        and HasHeader('Content-Type')
    	and HeaderMatchRe('Content-Type', regex([[boundary="[\da-f]{15,40}"$]]))
    then
    	SetPSAR('ar569')
    end
    
    --ar570
    --mxs_esp / #konfiskat
    --12.12.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 10000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:HtmlTagCount(), 50, 150)
        and cmpr_btw(features:TextLines(), 20, 50)
        and cmpr_btw(features:WordCount(), 100, 300)
        and cmpr_btw(features:DomainRepipAge(), 0, 30, true)
        and cmpr_gt(features:WhitespaceCount(), 1000)
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and cmpr_gt(features:SubjectWordCount(), 2)
    	and (wclass:SPF_NOT_PASS() 
        	or (features:SpfDomain() and features:SpfDomain() ~= features:FromDomain()))
    then
        SetPSAR('ar570',true)
    end
        
    --ar571
	--svobodno
    
	--ar572
	--svobodno
    
    --ar573
    --mxs_other #podrobnee
    --28.12.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other")
    		or features:IsFromOtherMbp())
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_btw(features:TextLines(), 1, 5, true)
    	and cmpr_gt(features:WordCount(), 500)
    	and cmpr_btw(features:HtmlTagCount(), 0, 50)
    	and cmpr_eq(features:NoHtmlTag(),1)
        and cmpr_gt(features:UrlNormCount(), 20)
	then
        SetPSAR('ar573')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar573')
    end

	--ar574
	--fe / #zarabotok #virus
	--16.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 600 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 5 and features:WordCount() <= 200
		and (features:Words8bitRatio() >= 50 
			or (features:Words8bitRatio() >= 30 and features:WordsOtherRatio() >= 10)
			or features:WordsMixedRatio() >= 40)
		and features:RepuserAge() <= 20
		and (features:IsAutoreg() == 1 or wclass:MORE_THAN_5_RCPT())
		and features:UrlCountWithoutMailRu() >= 2 and features:UrlCountWithoutMailRu() <= 5
		and wclass:FAKE_ATTACH()
		and wclass:LINK_TO_ARCHIVE_FILE()
		and (StrMatch(features:CutUrlsRawOnly7bit(), 'vk.com/doc') or StrMatch(features:CutUrlsRawOnly7bit(), 'docs.google.com/') or StrMatch(features:CutUrlsRawOnly7bit(), 'dropbox.com/'))
	then
		SetPSAR('ar574')
	end
    
	--ar575
	--mxs_other / #spam
	--12.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and features:InvalidFrom() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
		and wclass:DIFFERENT_REPLY_TO_AND_FROM_AND_NEW_IP_15_DAYS()
		and wclass:HAS_HDR_ORGANIZATION()
		and features:NoRealOrganization() == 1 
	then
		SetPSAR('ar575')
	end
    
    --ar576
	--mxs_other / #efremov #podstav_domain
	--13.12.16 / minina
    if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'rpop') or cmpr_eq(features:RcvSrcExt(), 'imap'))
		and cmpr_btw(features:MsgSize(), 20000, 500000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and (features:MsgIdDomainNotEqualFromDomain() 
    			or (features:Helo() and not StrMatch(features:Helo(), features:FromDomain())))
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (cmpr_btw(features:IpAge(), 0, 7, true) or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 14, 100))
    	and features:HasSuspEspUrl()
	then
		SetPSAR('ar576')
	end
     
    --ar577
    --mxs_other / #zarabotok
    --21.12.16 /a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:WordCount(), 1, 20, true)
    	and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_eq(features:FromRealNameWordCount(),1)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar577')
        LogMsgToHadoop('dstat_sokolik_log', '#ar577')
    end
    
    --ar578
    --mxs_other #podrobnee
    --07.01.17 / a.sokolov
    if not IsBlocked
        and features:IsFromOtherMbp()
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_btw(features:TextLines(), 1, 5, true)
    	and cmpr_gt(features:WordCount(), 100)
    	and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_gt(features:UrlNormCount(), 100)
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
	then
        SetPSAR('ar578')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar578')
    end
 
    --ar579
	--fe / #zarabotok pdf_
	--21.12.16 / razuvaev
    --e9aae7e87afafb36d73cf0106986ae4d 57578d96d391863dd89afd48143731fb
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_gt(features:MsgSize(),300000)
        and cmpr_eq(features:MultipartNum(),5)
        and cmpr_eq(features:FilesExtensions(),".pdf")
   	    and cmpr_lt(features:LinesToWordsRatio(),20)
        and cmpr_eq(features:Subject8bitOnly(),1)
      	and cmpr_lt(features:Karma(), 0, true) 
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and wclass:TERMS_ZARABOTOK_V_SETI_AND_AUTOREG()
        and StrMatchRe(features:PartsFilenames(), regex([[^.{1,40}\([0-9]{1,6}\).PDF$]]))    
    then
    	SetPSAR('ar579')
    end 
    
    --ar580
    --svobodno
        
    
    
    --ar581
	--fe / #zarabotok yandex kartinki
	--21.12.16 / razuvaev
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_lt(features:MsgSize(),1000)
    	and cmpr_eq(features:TextLines(),1)
     	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_eq(features:ShortWithUrls(),1)
      	and cmpr_lt(features:Karma(), 0, true) 
    	and cmpr_eq(features:UrlCount(),2)
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:ONLY_7BIT_WORDS()
        and UrlsMatchStr('img-fotki.yandex.ru/get/',1)
    then
    	SetPSAR('ar581')
    end   
    
    --ar582
    --mxs_mbp / #uroki #english #lessons
    --14.06.16 / veselitsky
    --1840490493a010d8000bd70397cbd3f4 296304a231e438cf3b0764cbcb68f368
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
        and cmpr_btw(features:MsgSize(), 500, 3000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo() == 1
    	and features:IsFromFreeMail() == 1
        and features:MultipartNum() == 1
    	and cmpr_btw(features:TextLines(), 5, 25)
   		and cmpr_btw(features:WordCount(), 20, 200)
    	and cmpr_btw(features:TextLines(), 0, 25)
    	and cmpr_gt(features:WordsMixedRatio(), 25)
     	and cmpr_btw(features:UrlNormCount(), 0, 3)
		and wclass:IP_URL()
    	and wclass:FROM_ENDS_WITH_YEAR()
    then
        SetPSAR('ar582')
    end
    
    --ar583
	--mxs_other / #trening #rassilki
	--14.06.16 / veselitsky	
	--96b54aeb3753016bb229256b482faeed d1195109ddb15d6b439d49e9224d2662
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 30000, 180000) 
		and features:HasNoAttach() == 1
	    and cmpr_btw(features:ImgNum(), 0, 5)
    	and features:MultipartNum() == 5
		and	cmpr_btw(features:TextLines(), 0, 10)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and cmpr_btw(features:HtmlTagCount(), 0, 20)
		and cmpr_gt(features:RcptNum(), 10)
    	and cmpr_gt(features:EmailsCountInBody(), 0)
    	and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    then
    	SetPSAR('ar583')
    end
    
	--ar584
	--svobodno
    
	--ar585
	--mxs_mbp / #zarabotok  #qip
	--12.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_btw(features:UrlNormCount(), 1, 8,true)
    	and cmpr_eq(features:AuthenticatedDomain(), 'qip.ru')
    	and (cmpr_gt(features:RepIpSpamRatioByLastWeek(), 20) 
        	or cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 20))
    	and wclass:PHP_URL()
    then
    	SetPSAR('ar585')
    end
    
    --ar586
	--svobodno
    
	--ar587
	--svobodno
    
	--ar588
	--svobodno
    
   	--ar589
    --smtp / #pdd #young
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 100, true)
    	and cmpr_gt(features:WordCount(), 50, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and cmpr_lt(features:RepuserAge(), 7, true)
    	and features:From() and features:ReplyTo()
    	and features:From() ~= features:ReplyTo() 
		and features:FromRealName() and features:ReplyToRealName()
		and features:FromRealName() == features:ReplyToRealName()
    	and (wclass:HAS3D_LVL_DOMAIN()
        	or wclass:PHP_URL() 
        	or UrlsMatchStr('html', 1)
    		or wclass:SHORTURL())
    then
    	SetPSAR('ar589')
    end
    
    --ar590
    --fe / #ntr #img #china #casino
	--09.01.17 / minina
	if not IsBlocked
        and not wclass:EXCEPTIONS()
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
    	and cmpr_btw(features:TextLines(), 2, 30, true)
    	and cmpr_btw(features:WordCount(), 10, 80, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 2, 20)
    	and cmpr_lt(features:HtmlTagCount(), 100)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and not features:MailRuTo()
    	and cmpr_gt(features:WordsOtherRatio(), 15)
    	and wclass:AUTOREG()
    	and wclass:ONLY_7BIT_WORDS()
    then
    	SetPSAR('ar590')
    end
    
	--ar591
	--mxs_mbp / #raskrutka
	--14.06.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3 
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 0
		and features:TextLines() >= 30 and features:TextLines() <= 55
		and features:WordCount() >= 100 and features:LinesToWordsRatio() >= 15
		and features:NumberCount() >= 10 and features:NumberCount() <= 40
		and features:FromLocalPart()
		and #features:FromLocalPart() >= 5 and #features:FromLocalPart() <= 20
		and HeaderMatch('X-DMARC-Policy','reject')
		and StrMatchRe(features:FromLocalPart(), regex([[[a-z\-\.]+\d{2,}[a-z\d\-\.]*]]))
	then
		SetPSAR('ar591')
	end
    
	--ar592
	--mxs_mbp / #virus
	--14.06.2016 / zubr
	--d9abd2e94b6d7fee17e655c1dafd2286
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 6000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 1
		and features:HtmlTagCount() <= 50
		and features:TextLines() >= 10 and features:TextLines() <= 30
		and features:WordCount() >= 10 and features:LinesToWordsRatio() >= 15
		and features:NumberCount() >= 10
		and features:SubjectNumbersCount() >= 3
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
	then
		SetPSAR('ar592')
	end
    
	--ar593
	--svobodno
    
	--ar594
	--mxs_mbp / #virtualnaya karta #zarabotok
	--14.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 300 and features:MsgSize() <= 2000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1 
		and features:TextLines() >= 4 and features:TextLines() <= 15
		and features:WordCount() >= 10 and features:LinesToWordsRatio() >= 10
		and features:WordsMixedRatio() >= 40
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
		and features:FromLocalPart()
		and #features:FromLocalPart() >= 5 and #features:FromLocalPart() <= 25
		and StrMatchRe(features:FromLocalPart(), regex([[[a-z\-\.]+\d{1,8}[a-z\d\-\.]*]]))
	then
		SetPSAR('ar594')
	end
    
	--ar595
	--svobodno
    
    --ar596
	--mxs_other / #avito #zarabotok
    --14.06.16 / veselitsky	
	--c3674b7cd7b3539c79c08c81e80dbec1 90ca0018daf1782c2eefe0157c62957e 254c516b1863886100ec5e17b30fabb1
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
        and cmpr_btw(features:MsgSize(), 1000, 20000)
   		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1 
    	and cmpr_gt(features:RcptNum(), 3)
    	and cmpr_gt(features:SubjectWords8bitRatio(), 50)
    	and cmpr_btw(features:WordCount(), 3, 1000)
    --	and cmpr_gt(features:Words7bitRatio(), 50)
        and cmpr_btw(features:HtmlTagCount(), 0, 75)
    	and cmpr_btw(features:UrlNormCount(), 0, 12)
    	and features:HasImageUrl() == 1
    	and (UrlsMatchStr('avito.ru',1) or TermsMatchGroup(17157, 100))
    	and wclass:PRECEDENCE_BULK()
    	and wclass:HAS_TAG_META()
    then
    	SetPSAR('ar596')
    end
    
    --ar597
	--mxs_mbp / #gruzi #gruzoperevozky
    --15.06.16 / veselitsky	
	--d9b9b6dc45903f6d156ec740888fa566 7a9a44840bf41745836d5d55bfa3be0b 53f8d8a8455ff9bbe86219bc3008293e
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp' 
        and cmpr_btw(features:MsgSize(), 20000, 35000)
   		and features:HasNoAttach() == 1
    	and features:ImgNum() >= 1 and features:ImgNum() <= 3 
		and features:NoRealNameTo() == 1 
    	and cmpr_gt(features:RcptNum(), 2)
		and features:IsFromFreeMail() == 1
    	and cmpr_btw(features:WordCount(), 300, 1000)
        and cmpr_btw(features:HtmlTagCount(), 50, 150)
    	and cmpr_btw(features:UrlNormCount(), 0, 3)
		and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    then
    	SetPSAR('ar597')
    end
    
    --ar598
	--svobodno
    
    --ar599
    --mxs_other #zarabotki #many_html
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_eq(features:HasTextOnly(), 1)  
        and cmpr_lt(features:UrlNormCount(), 5)
    	and wclass:NEW_IP_1_DAY()
    	and wclass:SHORT_TEXT_MANY_HTML_TAGS()
	then
        SetPSAR('ar599')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar599')
    end
    
	--ar600
	--mxs_mbp / #zarabotok
	--13.12.16 / minina
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_gt(features:UrlNormCount(), 1, true)
        and wclass:PHP_URL()
    	and (wclass:UNKNOWN_IN_RECEIVED() or wclass:SPF_NOT_PASS_FROM_MBP())
        and (wclass:TO_IN_SUBJECT() or wclass:TERMS_ZARABOTOK_V_SETI2())
    	and (cmpr_gt(features:RepIpSpamRatioByLastMonth(), 15, true)
			or cmpr_gt(features:RepIpProbableSpamRatioByLastMonth(), 15, true))
        and not TermsMatchGroup(18189,100)
	then
		SetPSAR('ar600')
	end

    
    --ar601
	--fe / #zarabotok #cash #resonasnce
    --15.06.16 / veselitsky	
	--6b832ce7d4524a402c03e7d3c0d6dfd5 4895654a1caa2e45a628e88838a230d3 54fdb89d8aab4a360fcdf4b1bae1020e
    if not IsBlocked
		and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe' 
        and cmpr_btw(features:MsgSize(), 1000, 4000)
   		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1 
    	and cmpr_lt(features:Karma(), 0)
    	and features:IsAutoreg() == 1
	  	and cmpr_btw(features:WordCount(), 40, 140)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 250)
        and cmpr_btw(features:HtmlTagCount(), 8, 22)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	and wclass:SOURCE_IP_IN_XBL()
    	and wclass:SOURCE_IP_IN_TOR_NODE()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar601')
    end
    
	--ar602
	--mxs_mbp / #zarabotok
	--15.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 15000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3 
		and features:NoRealNameTo() == 1
		and features:TextLines() >= 25 and features:TextLines() <= 50 
		and features:WordCount() >= 100 and features:WordCount() <= 350
		and features:WordsMixedRatio() >= 40
		and features:UrlNormCount() >= 5 and features:UrlNormCount() <= 20 
		and features:HasImageUrl() == 1
	then
		SetPSAR('ar602')
	end
    
	--ar603
	--svobodno
    
	--ar604
	--svobodno
    
	--ar605
	--svobodno
    
	--ar606
	--mxs_mbp / #efremov
	--14.12.16 / razuvaev
    --235b369c0d47faf8704e440aa329b0c0 541e87c0c5d069b766521603fb459e79
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 3000, 10000)
    	and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and cmpr_eq(features:LastHelo(),"helo=smtpout.ngs.ru")
        and cmpr_gt(features:NumberCount(),100)
        and wclass:ANTIVIRUS_STATUS()
        and wclass:MISC_SUSP_MAILERS()
	then
		SetPSAR('ar606')
	end
    
    --ar607
    --fe / #zarabotok 
    --21.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 3000)
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 2)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 60, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 1, 30, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
		and wclass:FROM_ENDS_WITH_YEAR()
        and (features:Karma() < 0 or features:RcptNum() > 5)
    then
        SetPSAR('ar607')
        LogMsgToHadoop('dstat_sokolik_log', '#ar607')
    end

 	--ar608
	--svobodno
 
	--ar609
	--mxs_other / #img #likvidaciya
	--16.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 90000 
		and features:HasNoAttach() == 1 
		and features:ImgNum() >= 1 and features:ImgNum() <= 4 
		and features:MultipartNum() >= 5
		and features:UrlNormCount() == 0 
		and features:TextLines() >= 1 and features:TextLines() <= 8
		and (features:WordCount() >= 1 and features:WordCount() <= 5 or features:WordCount() >= 150 and features:WordCount() <= 350)
		and features:EmailsCountInBody() >= 1
		and features:SubjectWords8bitRatio() >= 30
		and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN() 
		and wclass:ONLY_7BIT_WORDS()
	then
		SetPSAR('ar609')
	end
    
	--ar610
	--mxs_mbp / #zarabotok
	--16.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 8
		and features:HasImageUrl() == 1
		and features:TextLines() >= 25 and features:TextLines() <= 50
		and features:WordCount() >= 100
		and features:LinesToWordsRatio() >= 14
		and features:WordsMixedRatio() >= 30
		and features:EmailsCountInBccHeader() == 1
	then
    	SetPSAR('ar610')
	end
    
	--ar611
    --fe / #zarabotok
    --14.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 25, 120, true)
        and cmpr_gt(features:HtmlTagCount(), 2, true)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and wclass:NEW_IP_30_DAYS()
        and wclass:HAS_SUSP_URLS()
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar611')
    end  
    
	
	--ar612
	--mxs_mbp / #dengi
	--14.12.16 / razuvaev
    --5c60c2a21b0ebb008ae8b624d9096540 d4992a17bdb212874e131af6cce373e6
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000, 150000)
    	and cmpr_gt(features:ExternalImgNum(), 20)
        and cmpr_eq(features:MultipartNum(),1)
        and wclass:SUSP_FREEMAIL_PHOTO_HOSTING()
        and wclass:FROM_DOMAINPART_IN_REALNAME()
        and wclass: SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
	then
		SetPSAR('ar612')
	end 
    
	--ar613
	--fe / #zarabotok #attach
	--27.10.2016 / zubr 
	--4147e22d300ba12b743ab2b9ffcc60db
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 300000 and features:MsgSize() <= 600000 
		and features:HasAttach() == 1
		and features:ImgNum() == 0
		and features:MultipartNum() > 3 
		and features:NoRealNameTo() == 1
		and features:Karma() <= 0
		and features:UrlNormCount() == 0 
		and features:TextLines() >= 8 and features:TextLines() <= 30 
		and features:WordCount() >= 30 and features:WordCount() <= 300
		and wclass:CT_ENCODED_FILENAME()
		and wclass:FROM_ENDS_IN_NUMS()
		and features:IsAutoreg() == 1
		and StrMatchRe(features:PartsFilenames(), regex([[(?i)\s*[A-Z\d\-]{1,10}(?:\-|\s)[\dA-Z\-]{2,10}\.pdf$]]))
	then
		SetPSAR('ar613')
	end
    
	--ar614
	--svobodno
    
    --ar615
	--svobodno
    
    --ar616
	--svobodno
        
    --ar617
	--svobodno
    
    --ar618
	--svobodno
    
    --ar619
	--svobodno
    
	--ar620
    --fe / #zarabotok #pdf
    --14.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 20000, 5000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and features:FilesExtensions() == ".pdf"
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 0, 1, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_btw(features:TextLines(), 5, 35, true)
        and cmpr_btw(features:WordCount(), 15, 100, true)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_gt(features:LinesToWordsRatio(), 10, true)
        and features:MailRuTo()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:WITH_HTTP()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and StrMatchRe(features:FromLocalPart(), regex([[[a-z]*\d{2,7}[a-z]*]]))
    then
        SetPSAR('ar620')
    end
    
    --ar621
    --mbp / #kolgotki
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromOtherMbp()
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 10000)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlNormCount(), 1)
        --and cmpr_gt(features:TextLines(), 5)
        --and cmpr_gt(features:WordCount(), 30) 
        and UrlsMatchStr(features:ToLocalPart(), 1)
    then 
        SetPSAR('ar621', true)         
    	LogMsgToHadoop('dstat_sokolik_log', '#ar621')
    end
    
    --ar622
    --smtp / #seminar
    --22.12.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_gt(features:MsgSize(), 1000)
    	and not features:IsPddUser()
    	and (cmpr_eq(features:HasTextOnly(), 1)
            or cmpr_gt(features:ImgNum(), 1, true))
        --and cmpr_lt(features:Karma(), 0)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and (cmpr_gt(features:HtmlTags()['br'], 50)
    		or wclass:SMALL_AGE_REPUSER_1()
			or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 10))
    	and wclass:SOURCE_IP_IN_TOR_NODE()
    then 
        SetPSAR('ar622')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar622')
    end
    
    --ar623
	--mxs_mbp / #vbei v google 
    --22.12.16 / razuvaev(sokolik)
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and features:IsFromYandex()
		and cmpr_gt(features:MsgSize(), 100)
    	and cmpr_eq(features:UrlNormCount(), 0)
        and TermsMatchGroup(18180, 100)
        and HeaderMatchRe('From', regex([[@yandex\.ru>(?i)[a-z0-9]{3,}$]]))
	then
		SetPSAR('ar623')
       	LogMsgToHadoop('dstat_sokolik_log', '#ar623')
    end
        
    --ar624
	--svobodno
    
    --ar625
	--svobodno
    
    --ar626
    --mxs_mbp / #htmltagsinbody #noise
    --14.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),300,10000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() > 0
        and features:NoRealNameTo()
        and features:IsFromGoogle()
        and features:HasShortUrl()
        and features:HasPhotoHosting()
        and features:HtmlTagCount() > 0
        and features:NoBodyTag()
        and features:WhitespaceToWordRatio() > 300
        and features:MsgIdDomain() == 'google.com'
        and UrlsMatchStr('radikal.ru')
    then
        SetPSAR('ar626') 
    end
    
    --ar627
	--mxs_mbp mxs_other fe/ #virus #archive
    --02.09.16 / veselitsky	
	--f9adb8b7343f815da75e0ca05adbd576 8836f39572f2607431d4172dfcc9152f 9e66f7d55aaed6110ed70f1e7967ea4a
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other' 
            or features:RcvSrcExt() == 'imap' or features:RcvSrcExt() == 'fe')
        and cmpr_btw(features:MsgSize(), 1000, 2000000)
    	and ((features:HasAttach() == 1 and features:AttachAllCount() == 1 and features:AttachArchiveCount() == 1) 
            or wclass:HAS_BIG_VIRT_PART())
		and features:NoRealNameTo() == 1
    	and features:WordCount() >= 0 and features:WordCount() <= 1000
    	--and (cmpr_gt(features:Words8bitRatio(), 0) or cmpr_gt(features:WordsMixedRatio(), 20))
    	and (wclass:CRASHED_BASE64_IN_SUBJECT() or wclass:SUBJECT_MIXED_BADRATIO() or wclass:FROM_TLD_IS_SUSP()
        	or wclass:MISSING_DATE() or cmpr_gt(features:EmailsCountInToHeader(), 1)
    		or wclass:NO_MIME() or cmpr_gt(features:AbfCountriesPerMonthNum(), 2)
            or wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY())
    	and StrMatchRe(features:PartsFilenames(), regex([[[\d]{4,15}([a-z\-]{3,10})?\.(g?z|zip)$]]))
    then
    	if features:FilesExtensions() == '.gz' or features:FilesExtensions() == '.z' 
       	then
    		SetPSAR('ar627')
        elseif features:FilesExtensions() == '.zip' 
        	and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE()
        then
        	SetPSAR('ar627')
        end
    end
  
    --ar628
	--mxs_other / #efremov #podstav_domain
	--14.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'rpop' or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == "mxs"))
    	and cmpr_eq(features:HasTextOnly(), 1)
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (not features:DkimDomain() or wclass:DKIM_FAIL())
		and features:IpAge() <= 100
    	and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_7_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10))
		and features:DomainRepipAge() >= 1000
    	and (features:HasSuspEspUrl() or wclass:CT_IN_BODY() or wclass:SOFTFAIL_SPF() or wclass:DKIM_FAIL())
	then
		local reputation1 = getRepHits(features:EnvelopeFromDomain(), 2)
		local reputation2 = getRepHits(features:EnvelopeFromDomain(), 3)
		local total_hits1 = reputation1.total_hits
		local total_hits2 = reputation2.total_hits

		if total_hits1 and total_hits2 and total_hits1 > 0 and (total_hits2 > 0 or total_hits2 == -1)
		then 
			local result_zubr = total_hits1/total_hits2

			if result_zubr > 5
				or (total_hits1 >= 5000 and total_hits2 == -1) then SetPSAR('ar628') end
		end
	end
    	
    --ar629
	--svobodno
    
	--ar630
	--mxs_other / #virus
	--16.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 500 and features:MsgSize() <= 5000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1 
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 6 
		and features:PhotoHostingUrlCount() == 1 
		and features:HasFreeHosting() == 1 
		and features:NumberCount() >= 15 
		and features:WordCount() >= 10 and features:WordCount() <= 80
		and wclass:W8BIT_NO_CTE_AND_DIFFERENT_FROM_AND_ENVELOPE_FROM()
	then
		SetPSAR('ar630')
	end
    
    --ar631
	--mxs_other / #english spam 
	--22.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
		and features:ExternalImgNum() >= 1
		and features:HasTextOnly() == 1
		and features:EngRealNameFrom() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 1
		and features:IpAge() <= 30
		and features:DomainRepipAge() <= 100
		and mrasRepHasSendingGap(features:FromDomain(), 3, 30, 20, 5)
		and wclass:FROM_FIRST_LVL_DOMAIN_US()
    then
		SetPSAR('ar631')
	end

    --ar632
    --mxs_mbp / #vbei v google
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 3000000)
    	and cmpr_eq(features:HasTextOnly(), 1)
	    and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr')
        and wclass:SPF_NOT_PASS_FROM_MBP() 
        and (wclass:HAS_HDR_ORGANIZATION() or  wclass:NO_TO())
        and (wclass:NOREALNAME_FROM() or wclass:NO_SUBJECT() or wclass:OTHER_IP_IN_DNSBL())
	then
		SetPSAR('ar632')
	end
    
	--ar633
	--svobodno
    
	--ar634
	--mxs_mbp / #img #alsu #borodina
	--28.10.2016 / zubr
	--cc65aa95477e354e096e943666ad405b
	if not IsBlocked
        and false
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 400000 
		and features:HasNoAttach() == 1
		and (features:RcptNum() >= 2 or features:EmailsCountInToHeader() >= 2)
		and features:TextLines() >= 50
		and features:WordCount() >= 100
		and features:NumberCount() >= 200
		and wclass:CT_IN_BODY()
	then
		SetPSAR('ar634')
	end
    
	--ar635
	--svobodno
    
    --ar636
    --mxs_other #zarabotki #unparsed
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_eq(features:HasTextOnly(), 1)  
        and cmpr_eq(features:UrlNormCount(), 0)
    	and wclass:UNPARSED_URL_IN_BODY()
    	and wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
    	and wclass:ONLY_7BIT_WORDS()
	then
        SetPSAR('ar636')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar636')
    end
    
    --ar637
	--smtp / #borodina
	--19.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrc() == "smtp"
		and not features:IsPddUser()
		and features:MsgSize() >= 4000 and features:MsgSize() <= 5000000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1 
		and features:Karma() <= 0
		and features:UrlCount() == 0 
		and features:HtmlTagCount() == 0
		and wclass:NO_CONTENT_TYPE()
		and StrMatchRe(features:Helo(), regex([[^[a-z]{3,15}$]]))
		and (StrMatchRe(features:FromLocalPart(), regex([[^[a-z]{3,15}$]])) or wclass:YEAR_IN_FROM_LOCAL_PART())
	then
		SetPSAR('ar637')
	end
    
	--ar638
	--svobodno
    
	--ar639
	--svobodno
    
	--ar640
	--mxs_mbp / #vbei v google #invalid_from
	--14.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and (features:RamblerSmtp() or features:IsFromYandex())
		and cmpr_eq(features:InvalidFrom(), 1)
		and (wclass:UNAVAILABLE_IN_RECEIVED() or wclass:NO_USER_AGENT())
	then
		SetPSAR('ar640',true)
	end
    
 	--ar641 
	--svobodno
    
	--ar642 
	--svobodno
    
	--ar643
    --mxs_other / #zarabotok
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and wclass:SHORTURL()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar643')
      	LogMsgToHadoop('dstat_sokolik_log', '#ar643')
    end
    
	--ar644
	--svobodno
    
	--ar645
	--svobodno
    	
    --ar646
	--mxs_mbp / #amazon
	--20.06.16 / veselitsky	
	--125833b6526110be36c4c5ea85d60f04 d8976f3b0d5845891c4b3e0fb8131b20
	if not IsBlocked
       	and features:RcvSrcExt() == 'mxs_mbp'
   		and cmpr_btw(features:MsgSize(), 600, 1200)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:IsFromGoogle() 
    	and features:NoRealNameTo() == 1
   		and features:TextLines() >= 6 and features:TextLines() <= 10
    	and features:WordCount() >= 40 and features:WordCount() <= 60
        and features:HtmlTagCount() == 0
		and wclass:HAS_X_RECEIVED()
    	and wclass:LONG_MSGID()
    --	and wclass:MULTIPLE_HEADERS()
    	and (wclass:FROM_ENDS_WITH_YEAR() or wclass:PLUS_IN_MESSAGE_ID())
    then
    	SetPSAR('ar646')
    end
    
    --ar647
	--mxs_other / #watch #priveti
	--20.06.16 / veselitsky	
	--6e9c2d994c4129cdeb15b1b0e8aacd88 7547584bec8f046e233ad88dd7117876 57702d75c23c3303249877256066e475
	if not IsBlocked
       	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 80000, 280000)
		and features:HasAttach() == 1
    	and features:AttachAllCount() > 1
    	and features:AttachWithoutExtenstionsCount() > 1
    	and features:ImgNum() >= 1
    	and features:MultipartNum() > 3
		and features:OneWordSubject() == 1
    	and features:Subject8bitOnly() == 1
    	and features:Words8bitRatio() == 0
    	and (wclass:REDIRECTS_URL_PART() or 
        	 wclass:HAS_INPUT_TAG_AND_SPF_NOT_PASS())
    then
    	SetPSAR('ar647')
    end
        
    --ar648
    --smtp / #pdd #young #zarabotok
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 80, true)
    	and cmpr_btw(features:WordCount(), 10, 200, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_lt(features:RepuserAge(), 7, true)
    	and features:ToRealNameInToLocalPart()
    	and wclass:MS_MAILER()
       	and wclass:PHP_URL()
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
    then
    	SetPSAR('ar648')
    end
    
    --ar649
	--fe mxs_other / #virus #archive
    --23.08.16 / veselitsky	
	--22c2ed4c63cb30ade4fe2414659c898a  a38c5671dcc0a502560946943bdb7ec8
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == 'fe' or features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'rpop')
        and cmpr_btw(features:MsgSize(), 2000, 15000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachArchiveCount() == 1
    	and features:FilesInArchiveNum() == 1
    	and (features:NoSubject() == 1 or features:XMailerName() == 'iPhone Mail' or features:ToRealNameInToLocalPart())
    	and features:WordCount() <= 30
		and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE()
    	and wclass:IS_ONLY_ONE_JAVASCRIPT_FILE_IN_ARCHIVE()
    then
    	SetPSAR('ar649')
    end
    
    --ar650
	--mxs_mbp / #trash
    --20.06.16 / veselitsky	
	--386c7aa4578d80860d8e1091558f0dc0 dd38b4624a99decf3650190c8bc866f0 
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp' 
        and cmpr_btw(features:MsgSize(), 10, 180)
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and cmpr_gt(features:SubjectWordCount(), 0)
    	and features:Subject8bitOnly() == 1
    	and	cmpr_btw(features:WordCount(), 0, 10)
    	and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    	and wclass:SOFTFAIL_SPF()
    	and wclass:SUSP_MAILERS_5()
    	and wclass:MAILRU_FROM_MXS()
    then
    	SetPSAR('ar650')
    end
        
    --ar651
	--mxs_mbp / #virus #ifns
    --20.06.16 / veselitsky	
	--45face4f3ed3e2d27d090548c5677c72 6e4a57a6014778996721989ef8047527
	--f617c6ced63fee23442cc754ae72e294 b5dbae5407f65c136a50f0a6b933e507 
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp' 
        and cmpr_btw(features:MsgSize(), 1000, 4000)
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
    	and	cmpr_btw(features:WordCount(), 30, 100)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and features:UrlNormCount() == 1
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (wclass:SUBJECT_MIXED_BADRATIO() or features:OneWordSubject() == 1)
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and (UrlsMatchStr('php',1) or UrlsMatchStr('.htm',1))
    then
    	SetPSAR('ar651')
    end
    
	--ar652
	--svobodno
    
    --ar653
	--mxs_mbp mxs_other/ #zarabotok
    --20.06.16 / veselitsky	
	--5032990e6b4a1fb96cc87eceaa120a59 8a7430da830ef1f8fd8d1a67797b9aa4 9fb6da4d4c5cd9a96abc0e236a42b010
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other' or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 10000, 20000)
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
    	and features:FakeReplyInSubject() == 1
    	and	cmpr_btw(features:WordCount(), 50, 150)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and cmpr_btw(features:UrlNormCount(), 5, 15)
		and	features:HasImageUrl() == 1
    	and wclass:SUSP_XMAILER()
    	and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    	and StrMatchRe(features:FromLocalPart(),regex([[^[\d]{4,}\+[A-Z\d]{3,}$]]))
    then
    	SetPSAR('ar653')
    end
        
	--ar654
	--mxs_esp / #efremov
	--09.01.2016 / zubr	
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_esp"
    	and features:MsgSize() >= 1000 and features:MsgSize() <= 500000
		and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
		and (wclass:NO_URLS_WITH_HTML_TAGS() or features:UrlNormCount()>= 1)
		and features:HasUnsubscribeUrl() == 1
		and features:DomainRepipAge() <= 14
		and HeaderMatch('Precedence','bulk')
	then
		SetPSAR('ar654',true)
	end
    
	--ar655
	--fe / #zarabotok
	--05.10.16 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 700 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 2 and features:WordCount() <= 100
		and features:WordsMixedRatio() >= 40
		and features:AutoregInfoClustersHeaderValue()
		and features:AutoregInfoClustersHeaderValue()[1]
	--	and features:Karma() <= 0
		and features:RepuserAge() <= 20
		and features:NumberCount() <= 10
		and (features:IsAutoreg() == 1 or wclass:MORE_THAN_5_RCPT())
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
	then
		SetPSAR('ar655')
	end
    
	--ar656
	--mxs_other / #efremov
	--03.01.2016 / zubr	
	if not IsBlocked
        and false
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
    	and features:MsgSize() >= 1000 and features:MsgSize() <= 500000
		and wclass:SPF_NOT_PASS()
		and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or TermsMatchGroup(17192, 100))
		and (wclass:NO_URLS_WITH_HTML_TAGS() or features:UrlNormCount()>= 1)
		and not HeaderMatch('Authentication-Results', 'spf=none')
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar656')
					end
            
			elseif i2 and type(i2)=='number' then
			local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar656')
					end
			end
	end
    
	--ar657
	--mxs_other / #zarabotok
	--02.01.2016 / zubr	
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
    	and features:MsgSize() >= 400 and features:MsgSize() <= 500000
    	and features:UrlNormCount() >= 1
		and (wclass:SOFTFAIL_SPF() or wclass:FAIL_SPF() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:RETURNPATH_BLACKLISTED() or wclass:REMOTE_IP_IN_SPAMHAUS())
		and (wclass:SUSP_ORGANIZATION() or wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar657')
					end
            
			elseif i2 and type(i2)=='number' then
			local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar657')
					end
			end
	end
    
	--ar658
	--mxs_other / #efremov
	--28.12.2016 / zubr	
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
    	and features:MsgSize() >= 1000 and features:MsgSize() <= 1000000
    	and features:UrlNormCount() >= 1
		and (features:IpAge() <= 10 or wclass:NEW_DKIM_7_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
		and (features:RcptNum() >= 7 or features:EmailsCountInToHeader() >= 7 or HeaderMatch('To', 'vam@mail.ru') 
			or (wclass:PHOTO_HOSTING() and wclass:SUSP_URL_CONSTRUCTION_3()))
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar658')
					end
            
			elseif i2 and type(i2)=='number' then
				local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar658')
					end
			end
	end
    
    --ar659
    --mxs / #google #vbei #yandex #url_google
    --20.06.16 / r.belyankin
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlsHashString(), 'google.com')
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoUserAgent(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:TextLines(), 5)
        and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_lt(features:WhitespaceCount(), 100)
        and cmpr_eq(features:NumberCount(), 0)
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar659')
    end
    
    --ar660
    --fe / #zarabotok
    --22.12.16 / philip.karpov
    --fc_fb_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 5000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_gt(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 6)
        and cmpr_btw(features:UrlCount(), 2, 4, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:MailRuTo()
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:AUTOREG()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar660')
    end
    
	
    --ar661
	--mxs_mbp / #vbei v google
	--14.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(),1000)
    	and cmpr_eq(features:HasTextOnly(), 1)
	    and cmpr_eq(features:AuthenticatedDomain(),'yahoo.com')
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
        and wclass:TO_MISMATCH_ENVELOPE_TO()  
        and TermsMatchGroup(18195,100)
  
	then
		SetPSAR('ar661')
	end
    
    --ar662
    --fe / #zarabotok
    --23.12.16 / philip.karpov
    --fc_fb_hasurl
    if not IsBlocked
		and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:AUTOREG()
        and (wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO() or wclass:RU_RF_URLS())
        and wclass:WORDS_TO_URLS_BADRATIO()
    then
        SetPSAR('ar662')
    end  
    
    
	--ar663
	--mxs_mbp / #zarabotok #shum img
	--23.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),1000,200000)
        and cmpr_eq(features:AuthenticatedDomain(),'ngs.ru')
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
        and wclass:ANTIVIRUS_STATUS()
        and TermsMatchGroup(18197,100)
	then
		SetPSAR('ar663')
	end
    
    --ar664
    --mxs / #google #vbei #yandex #no_url
    --21.06.16 / r.belyankin
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:CTEId(), 3)
        and cmpr_eq(features:NoUserAgent(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_eq(features:Word7bitCount(), 0)
        and cmpr_btw(features:WordOtherCount(), 1, 10, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_lt(features:WhitespaceCount(), 50)
        and cmpr_lt(features:NumberCount(), 5)
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:UNKNOWN_GEO_CODE()
        and wclass:HAS_STD_URL_IN_SUBSCRIPTION()
    then
        SetPSAR('ar664')
    end
    
    
    --ar665
	--mxs_mbp / #zarabotok #shum img
	--23.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),50,5000)
    	and cmpr_eq(features:MultipartNum(),1)
        and (wclass:EML_HELO() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS())
        and wclass:IP_URL()
        and (wclass:IP_IN_HELO() or wclass:SUSP_SENDER_HELO_DOMAIN())
        and TermsMatchGroup(18198,100)
	then
		SetPSAR('ar665')
	end

    --ar666
	--mxs_other/ #zarabotok #casino #azart
    --21.06.16 / veselitsky	
	--59d054005533fc906f91e818317430df a660032a2af00c4e849bb393ed3afc57 3830233850652c856f433beb66f66f44
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
        and cmpr_btw(features:MsgSize(), 1000, 6000)
    	and features:HasTextOnly() == 1
		and cmpr_btw(features:MultipartNum(), 1, 3, true)
		and features:NoRealNameTo() == 1
    	and features:OneWordSubject() == 1
    	and cmpr_btw(features:WordCount(), 10, 200)
    	and (cmpr_gt(features:WordsMixedRatio(), 25) or features:HasDifferentFromAndReply() == 1)
    	and features:ToEmailInBody() 
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and wclass:PHP_URL()
		and wclass:TO_IN_SUBJECT() 
    	and wclass:SHORT_PHP_NAME_IN_URL()
    then
    	SetPSAR('ar666')
    end    
        
	--ar667
	--svobodno
    
	--ar668
	--mxs_other / #efremov 
	--09.01.17 / zubr
	if features:RcvSrcExt() == 'mxs_other'
		and not features:DkimDomain()
		and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10))
		and wclass:SPF_NOT_PASS()
		and not wclass:NONE_SPF()
		and SFKD('ar668', {features:FromDomain()}, 60, 1000)
	then
		SetPSAR('ar668')
	end
    
    --ar669
    --mxs_mbp #podrobnee
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and features:IsFromOtherMbp()
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:NumberCount(), 0)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
    	and wclass:SPF_NOT_PASS_FROM_MBP()
	then
        SetPSAR('ar669')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar669')
    end

	--ar670
	--svobodno
    
	--ar671
	--mxs_other / #efremov 
	--09.01.17 / zubr
	if features:RcvSrcExt() == 'mxs_other'
		and not features:DkimDomain()
		and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10))
		and wclass:SPF_NOT_PASS()
		and not wclass:NONE_SPF()
		and SFKD('ar671', {features:SrcIp()}, 60, 1000)
	then
		SetPSAR('ar671')
	end 

	--ar672
	--mxs_mbp / #vbei v google #orange.fr #2Delivered-To
	--13.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 500000)
    	and (features:AuthenticatedDomain() == 'orange.fr' or features:AuthenticatedDomain() == 'wanadoo.fr')
    	and cmpr_btw(features:WordCount(), 5, 2500, true)
    	and wclass:SUSP_SENDER_HELO_DOMAIN()
    	and (wclass:NO_USER_AGENT() or wclass:MS_MAILER())
		and not features:IsRmspamProfile()
        and not features:IsComplaint()
		and HasHeader('Delivered-To')
		and (TermsMatchGroup(17375,100) or wclass:HAS_EXTERNAL_IMG())
	then
		SetPSAR('ar672')
	end
    
	--ar673
	--fe / #naberi v google
	--21.06.2016 / zubr 
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrc() == "fe"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 25000
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3 
		and features:ReplySubject() == 1 
		and features:NoRealNameTo() == 1
		and features:RepuserAge() <= 40
		and features:UrlNormCount() == 0 
		and features:HtmlTagCount() <= 10 
		and features:TextLines() >= 1 and features:TextLines() <= 4 
		and features:WordCount() >= 80 and features:WordCount() <= 1300
		and features:AbfCitiesPerMonthNum() >= 2
		and wclass:NABERI_V_GOOGLE()
		and TermsMatchGroup(17166, 100)
		and (HeaderMatch('References', 'support-love.com') or features:FakeReplyInSubject() == 1)
	then
		SetPSAR('ar673')
	end
    
	--ar674
	--svobodno
    
	--ar675
	--svobodno
    
    --ar676
    --svobodno
    
	--ar677
	--mxs_mbp / #vbei v google #orange.fr #url #TEST
	--13.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr')
    	and cmpr_gt(features:UrlNormCount(), 1,true)
    	and wclass:SUSP_SENDER_HELO_DOMAIN()
   		and (cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 20) or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 20))
	then
		SetPSAR('ar677')
	end
    
    	
    --ar678
	--svobodno
    
    --ar679
	--svobodno
    
	--ar680
    --fe / #youtube mani
    --26.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:MailRuTo()
        and cmpr_lt(features:Karma(), 0, true)
        and (wclass:FREE_HOSTING() or wclass:HAS_FREE_HOSTING())
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar680')
    end
    
	--ar681
    --fe / #zarabotok #img #oazis_tv
	--11.01.17 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
       	and cmpr_lt(features:RepuserAge(), 3, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 800)
       	and wclass:AUTOREG()
    	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar681')
    end
    
    --ar682
    --mxs_mbp #zarabotok #esp
    --26.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and features:IsFromOtherMbp()
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and wclass:MISC_SUSP_MAILERS()
        and UrlsMatchStr('t.hsms02.com', 1)
    then
        SetPSAR('ar682')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar682')
    end
    
    --ar683
    --mxs_other / #rabota #doma 
	--22.06.16 / veselitsky
	--2e234305bda5d2c1718f70692b7ce695 435267fba08dbf9e15afa02318be07cc 51a67b443d2dd38e27140d3b18ca3499
	if not IsBlocked        
		and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
   		and cmpr_btw(features:MsgSize(), 10, 400)
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and cmpr_btw(features:TextLines(), 0, 4)
    	and cmpr_btw(features:WordCount(), 0, 8)
		and cmpr_btw(features:UrlNormCount(), 0, 5)	
    	and features:FromRealName()
    	and features:ToRealName()
    	and StrMatch(features:FromRealName(), features:ToRealName())
     	and wclass:YANDEX_DISC()
    	and wclass:MS_MAILER()
    then
		SetPSAR('ar683')
	end
    
    --ar684
    --mxs / #zarabotok #php_url #or_su_url
    --22.06.16 / r.belyankin
    --72fc73da81e6dfcea38e10d1c68af015 8094ffbb2b0c68bf3d6e18a9a3dedfd5
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 10)
        and cmpr_btw(features:TextLines(), 5, 30)
        and cmpr_btw(features:HtmlTagCount(), 5, 30)
        and cmpr_btw(features:WordCount(), 10, 100)
        and cmpr_btw(features:WhitespaceToWordRatio(), 100, 500)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:DOMAINS_EQUAL()
        and wclass:SHORT_BOUNDARY()
        and (UrlsMatch(regex([[\/i\/[a-zA-Z\d]+\.php]]),1)  or wclass:SHORTURL()) 
    then
        SetPSAR('ar684')
    end
    
    --ar685
    --smtp / #pdd #young 
	--06.01.17 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 100, true)
    	and cmpr_gt(features:WordCount(), 50, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and cmpr_lt(features:RepuserAge(), 7, true)
  		and (wclass:LASTHELO_WITHOUT_DOMAIN() or wclass:SUBJECT_MIXED_BADRATIO())
    	and (UrlsMatch(regex([[^[a-z\d]+\.(?!ru)[a-z]{2}$]])) or UrlsMatchStr('.blogspot.'))
       	--and wclass:URL_FROM_BODY_IN_FROM()
    then
    	SetPSAR('ar685')
    end
    
    --ar686
	--mxs_mbp / #zarabotok
	--23.12.16 / razuvaev
    --854e6dd10ed685c9df74f34569562bdd
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),1000,6000)
    	and cmpr_eq(features:HasTextOnly(), 1)  
        and wclass:FROM_DOMAINPART_IN_REALNAME()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:HTML_BODY_HEAD()
        and wclass:BASE64_TRANSFER_ENCODING()
        and TermsMatchGroup(18196,100)
	then
		SetPSAR('ar686')
	end
    
    
    --ar687
	--mxs_mbp / #vbey anekdot
	--23.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),5000,500000)
    	and cmpr_eq(features:MultipartNum(),2)
    	and cmpr_lt(features:TextLines(),6)
        and cmpr_gt(features:WordCount(),300)
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
        and wclass:HAS_5TH_LEVEL_DOMAIN_IN_MSGID()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and TermsMatchGroup(18199,100)
	then
		SetPSAR('ar687')
	end
    
    --ar688
	--svobodno    
    
    --ar689
	--svobodno
    
	--ar690
	--svobodno
    
	--ar691
	--svobodno    
	
    --ar692
	--mxs_mbp / #zarabotok
	--18.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000,400000)
    	and cmpr_gt(features:TextLines(),50)
        and cmpr_gt(features:UrlCount(),20)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:SUBJECT_WITH_CAPS()
        and wclass: SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:BASE64_TRANSFER_ENCODING()
        and UrlsMatch(regex([[shooturl.com\/[a-z]{20,100}]]),1)
	then
		SetPSAR('ar692')
	end
    
	--ar693
	--svobodno
    
	--ar694
	--mxs_mbp / #borodina
	--23.06.2016 / zubr
	--466ca926ed79060f98be49b4f52fae94 20a2cfc7d94ad174f93c7076a29708b1 14d55c6cd9d637d30cf9a8660ce32802
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 500 and features:MsgSize() <= 3000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:UrlNormCount() == 2
		and features:HtmlTagCount() <= 20
		and features:NoHtmlTag() == 1 
		and features:NoBodyTag() == 1 
		and features:TextLines() >= 2 and features:TextLines() <= 8 
		and features:WordCount() >= 2 and features:WordCount() <= 40 
		and features:WhitespaceToWordRatio() >= 400
		and features:BodyUpperLowerCaseRatio() == 0
		and StrMatchRe(features:FromLocalPart(), regex([[\d{1,7}]]))
	then
		SetPSAR('ar694')
	end
    
	--ar695
	--svobodno
    
	--ar696
	--mxs_mbp / #borodina
	--28.10.2016 / zubr
	--mfc_mf_gmail
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp" 
        and features:MsgSize() >= 200 and features:MsgSize() <= 1000
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 5
    	and features:HtmlTagCount() >= 2 and features:HtmlTagCount() <= 20
    	and features:TextLines() >= 1 and features:TextLines() <= 4
    	and features:WordCount() >= 3 and features:WordCount() <= 10
		and features:EmailsCountInToHeader() >= 2
    	and wclass:SUBJECT_LONGER_THEN_BODY()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar696')
	end
    
	--ar697
	--svobodno
    
	--ar698
    --mxs / #virus
    --23.06.2016 / zubr    
    if NotSpam()
        and not wclass:EXCEPTIONS()
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and features:MsgSize() >= 2000 and features:MsgSize() <= 150000
        and features:ImgNum() == 0
        and features:AttachAllCount() == 1
        and features:AttachArchiveCount() == 1
        and features:CtypeId() == 7
        and features:UrlNormCount() <= 1
        and StrMatch(features:FromRealName(), 'Ðîñòåëåêîì')
    then   
        SetPSAR("ar698")
    end
    
	--ar699
    --mxs / #virus
    --23.06.2016 / zubr    
    if NotSpam()
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap" or features:RcvSrcExt() == "rpop")
        and features:MsgSize() >= 8000 and features:MsgSize() <= 15000
        and features:ImgNum() == 0
        and features:AttachAllCount() == 1
        and features:AttachArchiveCount() == 1
		and features:IsExecNameInArchive() == true
		and features:NoRealNameTo() == 1
		and features:EngRealNameFrom() == 1
		and features:MailUserAgentType() == "Unknown"
        and features:CtypeId() == 7
        and features:UrlNormCount() == 0
        and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE()
--		and wclass:ONLY_7BIT_WORDS()
		and wclass:SPF_NOT_PASS()
		and HeaderMatchRe('Content-Type', regex([[boundary="/[a-zA-Z]{2,8}/[a-zA-Z]{5,20}"]]))
    then   
        SetPSAR("ar699")
    end
    
	--ar700
	--svobodno
    
	--ar701
	--mxs_mbp / #cash captcha
	--23.06.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 1000 and features:MsgSize() <= 5000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:UrlNormCount() == 0
		and features:HtmlTagCount() <= 30
		and features:TextLines() >= 5 and features:TextLines() <= 15
		and features:WordCount() >= 20 and features:WordCount() <= 80
		and features:Words8bitRatio() >= 50
		and features:Words7bitRatio() >= 10 and features:Words7bitRatio() <= 40
		and features:WordsOtherRatio() >= 5 and features:WordsOtherRatio() <= 25
		and features:SubjectLen() >= 40 and features:SubjectLen() <= 90
		and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
	then
		SetPSAR('ar701')
	end
    
    --ar702
    --mxs_mbp #zarabotki #href
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and cmpr_btw(features:WordCount(), 10, 300)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:URL_GOOGLEDRIVE()
    	and wclass:WORDS_MIXED_RATIO()
        and TermsMatchGroup(18146, 100)
    then
        SetPSAR('ar702')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar702')
    end
    	
	--ar703
	--svobodno
        
    --ar704
	--svobodno
    
	--ar705
	--svobodno
    
    --ar706
    --mxs / #press #cloud.mail.ru
    --22.06.16 / r.belyankin
    --9c9c8c56a3b2daa218cb03b13a930e9c 0ff0487c3c1c4e5b7a3af5087866e96f
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 4, true)
        and cmpr_btw(features:UrlsTextSize(),  10, 50)  
        and cmpr_eq(features:IsFromFreeMail(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)    
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        and wclass:ANTIVIRUS_STATUS()
        and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
    then
        SetPSAR('ar706')
    end
    
    --ar707
    --mxs / #zarabotok #english #more_hits_url
    --22.06.16 / r.belyankin
    --fkd_mx3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 10)
        and cmpr_btw(features:UrlsTextSize(), 50, 250)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 30)
        and cmpr_btw(features:WordCount(), 20, 250)
        and cmpr_gt(features:Word7bitCount(), 80)
        and cmpr_btw(features:HtmlTagCount(), 10, 50)
        and wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED()
        and (wclass:MS_MAILER() or wclass:SHORT_BOUNDARY())
        and (wclass:MESSAGE_ID_NO_DOMAIN() or StrMatchRe(features:MsgIdDomain() , regex([[^(?:[a-z\d]{7,20}\.)?mail\.ru$]])))
    then
        SetPSAR('ar707')
    end
    
    --ar708
    --mxs / #privet
    --14.06.16 / r.belyankin
    --mwvlt_sf
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrc(), 'imap'))
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_btw(features:ImgNum(), 0, 20, true)
        and cmpr_btw(features:UrlCount(), 1, 25, true)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:DomainRepipAge(), 1000)
        and cmpr_lt(features:TextLines(), 15)
        and cmpr_lt(features:WordCount(), 100)
        --and cmpr_gt(features:WhitespaceCount(), 5000)
        and (wclass:PRECEDENCE_BULK() or wclass:FROM_INFORMATION_SERVICE())
        and (wclass:ONE_RECEIVED() and (wclass:NEW_IP_30_DAYS() or wclass:REDIRECTS_URL_PART()))
        and StrMatchRe(features:MsgIdDomain(), regex([[mail\.ru$]])) 
    then
        SetPSAR('ar708')
    end
    
    --ar709
	--svobodno
    
	--ar710
    --fe / #zarabotok
    --18.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 50, 450, true)
        and cmpr_gt(features:HtmlTagCount(), 5, true)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and wclass:WORDS_TO_URLS_BADRATIO()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar710')
    end   
    
    --ar711  
    --smtp / #GOOGLE
    --23.06.16 / r.sulimov
    --ad8105b6c1495b5f54f0484da83df000 e4bb1c5c6a4a72c43c68c3f00629557c 6e50c6d92ee8dad4d5f636118181a8b7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'smtp')
        and cmpr_eq(features:IsPddUser(), true, true)
        and cmpr_btw(features:MsgSize(), 200, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:RcptNum(), 1)
        and cmpr_eq(features:UrlNormCount(), 0 )
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 5, 500, true)
        and cmpr_eq(features:NumberCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0) 
        and cmpr_eq(features:MultipartNum(), 1)
        and (cmpr_eq(features:AbfIsFastIpChange(), true) or cmpr_eq(features:AbfCountryWasChanged(), true))
        and cmpr_lt(features:Karma(), 0, true)
        and (StrMatchRe(features:Helo(), regex([[^[A-Za-z0-9]{3,20}\.[A-Za-z0-9]{3,20}\.[A-Za-z0-9]{3,20}\.[a-z0-9]{1,10}$]])) or StrMatchRe(features:Helo(), regex([[[a-z]{3,15}]])))
        and wclass:SMALL_AGE_REPUSER_14()
        and wclass:SOURCE_IP_IN_XBL()
    then
        SetPSAR('ar711', true)
        LogMsgToHadoop('dstat_sulimov_log', '#ar711')
    end
    
	--ar712
	--svobodno
    
	--ar713
	--svobodno
        
    --ar714
	--mxs_mbp / #virtualcards #cards #kart #virtualnie 
	--24.06.16 / veselitsky	
	--4cc15ebf029f9c29c4a21faac3e3e0ed 08ab435336f0bfb43bc23f3b1b301870 c821c302bd3e1a50265bdba811a364d8
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 400, 1500) 
		and features:HasTextOnly() == 1 
    	and features:IsFromFreeMail() == 1
  		and features:NoRealNameTo() == 1
     	and features:MultipartNum() == 3
		and cmpr_gt(features:SubjectWordCount(), 0)
    	and cmpr_btw(features:WordCount(), 1, 10)
    	and features:Word8bitCount() == 0
    	and cmpr_btw(features:UrlNormCount(), 2, 8)
    	and features:HasImageUrl() == 1
    	and wclass:FROM_ENDS_WITH_YEAR()
    then
    	SetPSAR('ar714')
    end
        
    --ar715
	--svobodno
        
    --ar716  
	--svobodno
    
    --ar717
	--mxs_mbp / #efremov #podstav_domain
	--20.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_mbp' or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == "mxs"))
    	and cmpr_eq(features:HasTextOnly(), 1)
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and features:IpAge() <= 60
    	and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10))
    	and features:HasSuspEspUrl()
		and wclass:SPF_NOT_PASS()
	then
		local reputation1 = getRepHits(features:EnvelopeFromDomain(), 2)
		local reputation2 = getRepHits(features:EnvelopeFromDomain(), 3)
		local total_hits1 = reputation1.total_hits
		local total_hits2 = reputation2.total_hits

		if total_hits1 and total_hits2 and total_hits1 > 0 and (total_hits2 > 0 or total_hits2 == -1)
		then 
			local result_zubr = total_hits1/total_hits2

			if result_zubr > 3
				or (total_hits1 >= 5000 and total_hits2 == -1) then SetPSAR('ar717') end
		end
	end
      
    --ar718 
    --rpop / #.top
    --27.06.16 / a.sokolov
    -- 78f93e97198c2c0ca22f9a840b166a48 2064b67155886e8c9fa01bda0f2fbd9d  425e2f6e7b2d29e276aebf3bfb340c93 1c89d424e9f35c9c0ac4da377f94db35
    if not IsBlocked
       and (cmpr_eq(features:RcvSrc(), "rpop") or cmpr_eq(features:RcvSrcExt(), "mxs_other")) 
       and cmpr_btw(features:MsgSize(), 1000, 30000)
       and cmpr_eq(features:HasTextOnly(), 1)
       and cmpr_eq(features:ImgNum(), 0)
       and cmpr_eq(features:FirstLevelFromDomain(), "top")
       and cmpr_btw(features:WordCount(), 10, 300)
       and cmpr_gt(features:Words7bitRatio(), 70)
       and cmpr_eq(features:Subject7bitOnly(), 1)
       and cmpr_gt(features:HtmlTagCount(), 20)
       and cmpr_gt(features:UrlCount(), 10)
       and cmpr_eq(features:IpCategory(), "tiny") 
       and (wclass:HELO_DOMAIN_IS_NEW_GTLD() or wclass:FIRST_LEVEL_FROM_DOMAIN_IS_NEWGTLD())
       and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    then
       SetPSAR('ar718')
       LogMsgToHadoop('dstat_sokolik_log', '#ar718')
    end
    
    --ar719
	--mxs_mbp / #efremov #podstav_domain
	--20.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_mbp' or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == "mxs"))
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and features:RcptNum() >= 5
    	and features:HasSuspEspUrl()
		and wclass:SPF_NOT_PASS()
    then
		SetPSAR('ar719', true)
	end
    
    --ar720
	--mxs_mbp / #efremov #podstav_domain
	--20.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_mbp' or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == "mxs"))
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and wclass:SPF_NOT_PASS()
		and wclass:MULTIPLE_SLASH_IN_RAW_URL()
    then
		SetPSAR('ar720', true)
	end
    
    --ar721
    --mxs / #casino
    --18.12.16 / philip.karpov
    --moc_mo_dkimfail
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 2, 4, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:NumberCount(), 10)
        and wclass:SHORTURL()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:XMAILER_PHPMAILER()
    then
        SetPSAR('ar721')
    end
    
    --ar722
	--mxs_other / #efremov
	--09.01.17 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
    	and features:MsgSize() >= 1000 and features:MsgSize() <= 500000
    	and features:UrlNormCount() >= 1
		and (features:IpAge() <= 7 or wclass:NEW_DKIM_7_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
		and (features:RcptNum() >= 50 or features:EmailsCountInToHeader() >= 20)
		and not features:DkimDomain()
		and wclass:SPF_NOT_PASS()
		and wclass:MULTIPLE_SLASH_IN_RAW_URL()
    then
		SetPSAR('ar722')
	end
     
	--ar723
	--smtp / #spam
	--27.11.16 / razuvaev
	if not IsBlocked
		and features:RcvSrcExt() == "smtp"
		and features:MsgSize() >= 200 and features:MsgSize() <= 500000
		and features:HasNoAttach() == 1
		and features:HasDifferentFromAndReply() == 1
		and features:ToEmailInBody() == true
		and features:NoRealNameTo() == 1
		and features:RepuserAge() <= 2
		and features:UrlNormCount() == 0
		and features:WordCount() >= 1
		and features:Word8bitCount() <= 1
		and features:SubjectWordCount() >= 2
		and features:SubjectWord8bitCount() >= 2
		and wclass:SOURCE_IP_IN_XBL_AND_SOURCE_IP_IN_DNSBL()
		and mrasRepHasSendingGap(features:SrcIp(), 0, 40, 20, 50)
	then
		SetPSAR('ar723')
	end
    
    --ar724
    --fe / #zarabotok
    --26.12.16 / philip.karpov
    --fc_fb_fh
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:LinesToWordsRatio(), 10)
        and cmpr_lt(features:WordCount(), 25)
        and wclass:HAS_FREE_HOSTING()
        and (wclass:SOURCE_IP_IN_XBL() or wclass:SOURCE_IP_IN_DNSBL())
        and wclass:WITH_HTTP()
        and not UrlsMatchStr('mail.ru')
    then
        SetPSAR('ar724')
    end
    
    --ar725
    --mxs / #chasi
    --29.06.16 / r.belyankin
    --5619e5bdeeeb8739039068bfd2b4f1d3 252797eecc56d53eea0c1df02bebdb1a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 100)
        and cmpr_eq(features:DkimDomainRepipAge(), 10000)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:MultipartNum(), 3)
        and cmpr_gt(features:RcptNum(), 2)
        and cmpr_btw(features:TextLines(), 1, 50)
        and cmpr_btw(features:WordCount(), 10, 250)
        and cmpr_btw(features:HtmlTagCount(), 1, 50)
        and (wclass:PTR_OFF() or wclass:PTR_ERROR())
        and wclass:ONE_RECEIVED()
        and wclass:MAIL_RU_MSGID_PATTERN()
    then
        SetPSAR('ar725')
    end
    
    --ar726
	--mxs_other / #zarabotki #php
	--12.01.16 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and wclass:PHP_URL()
       	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:NEW_FROMDOMAIN_15_DAYS()
        	or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 10, 50))
    then
    	SetPSAR('ar726')
      	LogMsgToHadoop('dstat_sokolik_log', '#ar726')
	end
    
    --ar727
    --mxs / #rabota #avito
    --29.06.16 / r.belyankin
    --ab31cf5e13f84124359e04adfc0e8c2e 2a3260c7517cf31839146e20bd6ce833
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 50, 350)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_gt(features:RcptNum(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 100, 600, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 70)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar727')
    end   
    
    --ar728
    --mxs_other / #zarabotok # shishkin #bigpartner
    --27.12.16 / philip.karpov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 2)
        and cmpr_lt(features:WordCount(), 50)
        and cmpr_gt(features:HtmlTagCount(), 50)
        and cmpr_gt(features:LinesToWordsRatio(), 35)
        and (wclass:NO_TO() or wclass:MX_COMPL_RATE_MORE_THAN_1())
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:FROM_MATCH_WITH_URL()
    	and wclass:NEW_DKIM_7_DAYS()
    then
        SetPSAR('ar728')
    end
    
    --ar729
	--svobodno
    
    --ar730
	--svobodno
    
    --ar731
	--svobodno
    
    --ar732
	--svobodno
    
    --ar733
	--mxs_other / #efremov
	--29.12.16 / r.kulpin
    if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
		and cmpr_btw(features:MsgSize(), 1000, 20000)
		and features:HasTextOnly() == 1
		and cmpr_lt(features:MultipartNum(), 3, true)
    	and features:NoRealNameTo()
		and wclass:BAD_LINES_TO_WORD_RATIO()
		and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
		and wclass:IP_IN_HELO()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    then
		SetPSAR('ar733')
	end
    
    --ar734
	--svobodno
    
    --ar735
	--svobodno
    
    --ar736
	--svobodno
    
    --ar737
    --imap and mxs / #rassilki
    --04.07.16 / a.sokolov apr zubr
    -- 492226a2c4bc7310d9383bbeca933a7a c715c035e903528d5d63353c6e2f59aa 50b141d64d29819fa0792cac18f0afe7
    if not IsBlocked
        and (cmpr_eq(features:RcvSrc(), 'mxs') or cmpr_eq(features:ImapSubSrc(), 'mxs'))
        and cmpr_btw(features:MsgSize(), 50000, 200000)
        and cmpr_eq(features:HasNoAttach(), 1)
		and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:IpAge(), 30, true)
        and wclass:SUBJECT_ONLY_WITH_IMAGE()
        and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
        and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
        and StrMatchRe(features:PartsFilenames(), regex([[^[A-Z0-9]{1,5}[0-9]+[A-Z\d]{1,20}\.jpe?g$]]))
    then
        SetPSAR('ar737')
        LogMsgToHadoop('dstat_sokolik_log', '#ar737')
    end
    
    --ar738
	--mxs_mbp / #efremov #podstav_domain
	--20.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == 'mxs_mbp'
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and features:RcptNum() >= 50
		and wclass:SPF_NOT_PASS()
    then
		SetPSAR('ar738', true)
	end
    
    --ar739
    --fe / #znakomstva
    --04.07.16 / r.belyankin
    --c2463e4a5247ca22d700e097f2f8da52 0d7ffd446b0f7c3dbaac742e8c96ef5c
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 20, 100, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:RepuserAge(), 10)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:TextLines(), 2, true)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 1500)
        and cmpr_gt(features:Words7bitRatio(), 80)
        and wclass:HAS_IMAGE_URL()
    then
        SetPSAR('ar739')
    end 
    
    --ar740
	--svobodno
       
    --ar741
    --fe / #zarabotok
    --04.07.16 / r.belyankin
    --c87f49d288bb982b46b88163daa347ef f4f5f2f6097f3085f4f3a4a9937dd921
    if not IsBlocked
    	and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 100, 15000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 200)
        and (cmpr_lt(features:Karma(), 0, true) or cmpr_eq(features:IsAutoreg(), 1))
        and cmpr_lt(features:RepuserAge(), 100)
        and (cmpr_eq(features:AbfCityWasChanged(), true) or cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true))
        and cmpr_eq(features:EmailsCountInBody(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_eq(features:NumberCount(), 0)
        and cmpr_lt(features:Word7bitCount(), 10)
        and not wclass:PHP_URL()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:FROM_ENDS_WITH_YEAR()
        and (wclass:NEW_IP_15_DAYS() or wclass:USER_AGE_30())
        and UrlsMatch(regex([[^[a-z\d\-]+\.ru(?:\/[a-zA-Z\d]+)?(?:\/)?$]]),1)
        and TermsMatchGroup(17190, 20)
    then
        SetPSAR('ar741')
    end
    
    --ar742
	--svobodno
    
    --ar743
	--svobodno
    
    --ar744
	--svobodno
    
    --ar745
    --mxs_other / #moneysys
    --05.07.16 / a.lisitskaya
    --2d62faaf938fcd0dab84cd64516f6275 eeca92fb9bbd3d61b33f7ca36cf2aebc
    if not IsBlocked
       and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       and cmpr_btw(features:MsgSize(), 10000, 25000, true)
       and cmpr_eq(features:HasTextOnly(), 1)
       and cmpr_eq(features:MultipartNum(), 3)
       and cmpr_btw(features:TextLines(), 25, 70, true)
       and cmpr_btw(features:Word7bitCount(), 20, 45, true)
       and cmpr_btw(features:Word8bitCount(), 100, 250, true)
       and not features:IsSngCountry()
       and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
       and wclass:NOT_EMAIL_IN_FROM()
       and wclass:MESSAGE_ID_NO_DOMAIN()
       and HeaderMatch('Received', '+0300')
    then
       SetPSAR('ar745')
       LogMsgToHadoop('dstat_lisitskaya_log', '#ar745')
    end 
    
    --ar746
    --fe / #zarabotok
    --27.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:LinesToWordsRatio(), 10)
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and (wclass:SOURCE_IP_IN_XBL() or wclass:SOURCE_IP_IN_DNSBL())
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar746')
    end
    
    --ar747
	--svobodno
    
    --ar748
	--svobodno
    
    --ar749
	--svobodno
    
    --ar750
    --mxs / #pidori
    --06.07.16 / r.belyankin
    --650bd41ee470941c027b28dbc3923590 ff1251a2792fec52b2b0a595a63bd8e0
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 25, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:FromInvalidChars(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 20, 200, true)
        and cmpr_btw(features:HtmlTagCount(), 50, 300)
        and cmpr_gt(features:HtmlUniqueTagCount(), 10)
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:HELO_IN_MSGID()
        and (wclass:BASE64_TRANSFER_ENCODING() or wclass:CTE_7BIT_WITH_CONTENT_8BIT())
        and HeaderMatchRe('Message-ID', regex([[\<[A-Z\d]{5,10}\.[A-Z\d]{5,10}\@.*\>]]))
    then
        SetPSAR('ar750')
    end
    
    --ar751
	--svobodno
    
    --ar752
    --fe / #zarabotok
    --27.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 1000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:HtmlTagCount(), 10, true)
        and wclass:HAS_FREE_HOSTING()
        and wclass:PHP_URL()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar752')
    end
    
	--ar753
    --mxs_mbp / #vbei google
    --27.12.16 / a.sokolov
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:IsFromYandex(), true)
        and cmpr_gt(features:MsgSize(), 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 5, 50)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and (cmpr_eq(features:HtmlTagCount(), 0)
    		or wclass:NO_URLS_WITH_HTML_TAGS())
	    and cmpr_gt(features:WordsOtherRatio(), 10)
        and wclass:RECEIVED_LAN_1()
        and wclass:TEXT_NORM_TO_SHINGLE_MORE_THAN_20()
    	and TermsMatchGroup(18180, 100)
    then
        SetPSAR('ar753')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar753')
    end

    --ar754
    --fe / #zarabotok
    --06.07.16 / r.belyankin
    --b6eb1c80ca1080c5d62f288c2e126214 b158fe577a0066a1c94ed8d5363b6a82
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 20, 200)
        and cmpr_eq(features:AbfCountryWasChanged(), true)
        and cmpr_lt(features:RepuserAge(), 100)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 5)
        and cmpr_btw(features:WordCount(), 10, 100)
        and cmpr_eq(features:NumberCount(), 0)
        and cmpr_lt(features:Word7bitCount(), 10)
        and wclass:SOURCE_IP_IN_XBL()
        and wclass:HAS_5_DAYS_GAP()
    then
        SetPSAR('ar754')
    end
    
    --ar755
	--svobodno
    
    --ar756
    --mxs / #attach_default #"img"
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:DomainRepipAge() >= 1000
        and features:NoSubject() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 3
        and features:WordCount() >= 1 and features:WordCount() <= 5
        and (wclass:MESSAGE_ID_NO_DOMAIN() or wclass:MAIL_RU_MSGID_PATTERN())
    then
        SetPSAR('ar756')
    end
    
   
	 --ar757
	 --mxs_mbp / #5000
	 --28.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),1000,10000)
        and cmpr_eq(features:EnvelopeFromDomain(),'yandex.ru')
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and cmpr_gt(features:Word8bitCount(),150)
        and cmpr_eq(features:NoBodyTag(),1)
        and wclass:FROM_ENDS_IN_NUMS()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:WITH_HTTP()
        and wclass: BASE64_TRANSFER_ENCODING()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass: WORDS_TO_URLS_BADRATIO()
        and UrlsMatch(regex([[.{1,50}\..{1,3}\/.{1,50}]]),1) 
	then
		SetPSAR('ar757')
	end
    
    --ar758
	--svobodno
    
    --ar759
	--svobodno
    
    --ar760
	--svobodno

    --ar761
	--svobodno
        
    --ar762
    --mxs_mbp / #holostyak
    --07.08.16 / a.sokolov
    --6e18d5e107aea49c15c3de6df1cfb7a1 f62d716388ba7e7ad09efd53cf76c49b 63fa35da6774b5a3fea0f2f1c275fcde
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 4, 20, true)
        and cmpr_btw(features:WordCount(), 20, 200)
        and (cmpr_gt(features:NumberCount(), 10) or cmpr_eq(features:Word7bitCount(), 1))
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:WordsOtherRatio(), 7, 30, true)
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_AND_MS_MAILER()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    then
       SetPSAR('ar762')
       LogMsgToHadoop('dstat_sokolik_log', '#ar762')
    end
    
    --ar763
    --mxs / #seminar #mlnewsletterru
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:UrlsTextSize() >= 200 and features:UrlsTextSize() <= 600
        and features:TextLines() >= 5 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 600
        and wclass:ONE_RECEIVED()
        and HeaderMatchRe('Content-type', regex([[boundary=\"=_[a-z\d]{20,50}]]), 1)
        and UrlsMatchStr('track.mlsendru.com')
    then
        SetPSAR('ar763')
    end
    
    --ar764
    --fe / #yandex #vbeu_v_yandex
    --07.07.16 / r.belyankin
    --b6eb1c80ca1080c5d62f288c2e126214 b158fe577a0066a1c94ed8d5363b6a82
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 1, true)
        and cmpr_lt(features:RepuserAge(), 100)
        and cmpr_lt(features:TextLines(), 5, true)
        and cmpr_btw(features:WordCount(), 500, 1500)
        and cmpr_btw(features:WordsOtherRatio(), 10, 30)
        and wclass:FROM_ENDS_IN_NUMS()
        and wclass:HAS_TAG_STYLE()
        and HeaderMatch('References', '@support-love.com')
    then
        SetPSAR('ar764')
    end
    
    --ar765
	--svobodno
    
	--ar766
	--svobodno
    
    --ar767
    --fe / #zarabotok #attach
    --23.12.16 / philip.karpov
    --fc_fb_hasat
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 5000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:MailRuTo()
        and features:MailRuFrom()
        and cmpr_lt(features:Karma(), 0, true)
        and (wclass:WORDS_OTHERS_BAD_RATIO() or wclass:WORDS_OTHERS_VERY_BAD_RATIO())
        and (wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO() or wclass:WORDS_TO_URLS_BADRATIO())
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar767')
    end
    
    --ar768
    --mxs_mbp / #magnit
    --29.06.16 / a.sokolov
    --079f8300c939e1d1752730c12b28f094 8ba5b442dc573bb4eeccd927bdf3c208 8a4700732312f3a434d06a79782b359d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp") 
        and cmpr_btw(features:MsgSize(), 1500, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:RcptNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 3, 15, true)
        and cmpr_btw(features:WordCount(), 5, 90)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:IsFromGoogle(), true)
        and StrMatch(features:UrlsHashString(), 'list-manage')
        and wclass:FROM_ENDS_WITH_YEAR()
        and wclass:HAS_X_RECEIVED()
    then
        SetPSAR('ar768')
        LogMsgToHadoop('dstat_sokolik_log', '#ar768')
    end
    
    
	--ar769
	--mxs_mbp / #vakansia
	--23.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),5000,800000)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_eq(features:MultipartNum(),5)
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass: RAMBLER_FE()
        and StrMatchRe(features:PartsFilenames(), regex([[\([0-9]{1,3}\)\.pdf]]))
	then
		SetPSAR('ar769')
	end
    
    --ar770
    --fe / #zarabotok
    --24.12.16 / philip.karpov
    --fc_fb_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:Word7bitCount(), 50)
        and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar770')
    end
    
    --ar771
    --mxs_other / #zarabotok
    --24.12.16 / philip.karpov
    --moc_mo_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:SHORTURL()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
    then
        SetPSAR('ar771')
    end
    
 
	--ar772
	--mxs_mbp / #1kanal
	--24.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(),10000,40000)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_gt(features:SubjectWordCount(),4)
        and wclass:FROM_TLD_IS_SUSP()
        and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        and wclass:HAS_TAG_STYLE()
        and wclass:HAS_TAG_META()
        and wclass:REPLY_TO_SUSP_DOMAIN()
        and not wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar772')
	end
    
    --ar773
	--svobodno
    
    --ar774
	--mxs_mbp / #eng znakomstv
	--24.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(),3000)
        and cmpr_eq(features:Subject7bitOnly(),1)
        and wclass:VERY_LONG_LOCALPART()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:MULTIPLE_HEADERS()
        and wclass:MESSAGE_ID_MULTIDOTS()
	then
		SetPSAR('ar774')
	end
    
    --ar775
    --mxs_other / #efremov
    --24.12.16 / philip.karpov
    --moc_mo_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 5000000)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:IP_REP_GAP_MORE_14_DAYS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar775')
    end
    
    --ar776
	--mxs_other / #alkoprost
    --24.12.16 / philip.karpov
    --6089718970949f71ec3a4705743bd663 7d9a6a19618ded1b15d04499c4d24739
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:HELO_IN_FROM()
        and wclass:NO_USER_AGENT()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:OS_WINDOWS()
    then
        SetPSAR('ar776')
    end
    
    --ar777
    --mxs / #kyrs #shum
    --27.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 1500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:HtmlTagCount() >= 50 and features:HtmlTagCount() <= 150
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_X_PHP_SCRIPT()
        and wclass:HAS_TAG_STYLE()
    then
        SetPSAR('ar777')
    end

    --ar778
    --mxs_mbp and smtp / #binary #close_firm 
    --11.07.16 / a.sokolov
    --e0c7bcc415744737d7620a3937654da2 42d5a734349bb1f751fb91b69e40439e ccdf7bcd6f5da629edf9c5f6e90206b1 1d1dced1e29b797d5cde100a4b5fb0c4
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "smtp")) 
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:LastHelo(), "helo=Outlook") 
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 3, 8, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and (wclass:DIFFERENT_REPLY_TO_AND_FROM() or not features:ReplyTo())
        and wclass:FROM_EMAIL_IN_BODY()
    then
       SetPSAR('ar778')
       LogMsgToHadoop('dstat_sokolik_log', '#ar778')
    end

    --ar779
    --mxs / #zarabotok #eurodir
    --12.12.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_btw(features:UrlsTextSize(), 5, 50)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EnvelopeFromDomain(), 'qip.ru')
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 10)
        and wclass:DIFFERENCE_RCPTNUM_AND_TO()
        and wclass:MORE_1_EMAILS_IN_TO()
        and wclass:HAS_HEADER_SENDER()
    then
        SetPSAR('ar779')
    end
    
    --ar780
	--svobodno
     
    --ar781
	--svobodno
    
    --ar782
	--svobodno 
    
    --ar783
    --mxs / #zarabotok #avito
    --05.09.2016 / r.belyankin(sokolik)
    --mcc_mc_dkim7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
		and ((cmpr_eq(features:HasNoAttach(), 1) and cmpr_btw(features:ImgNum(), 1 , 5, true)) or cmpr_eq(features:HasTextOnly(), 1))
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and (cmpr_gt(features:DomainRepipAge(), 1000) or cmpr_lt(features:DomainRepipAge(), 3))
        and (cmpr_eq(features:NoRealNameTo(), 1)
    		or wclass:TO_LOCALPART_IN_REALNAME()) 
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 250)
        and wclass:SHORT_BOUNDARY()
        and wclass:DOMAINS_EQUAL()
        and wclass:RECEIVED_BAD_PATTERN_4()
        and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS())
    then
        SetPSAR('ar783')
    end
    
    --ar784
    --mxs / #zarabotok
    --12.07.16 / r.belyankin
    --919a227bbe3df6e1e26ef56fdf5fb86e 38986d7ec51eec99e12d3dde3535d8b5
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 20, true)
        and cmpr_btw(features:IpAge(), 0, 15)   
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 1, 200)
        and (wclass:PTR_ERROR() or wclass:PTR_SEEMS_DYNAMIC() or wclass:BADNET())
        and wclass:PRECEDENCE_BULK()
        and wclass:MS_MAILER()
    then
        SetPSAR('ar784')
    end
    
    --ar785
    --mxs / #china
    --13.07.16 / r.belyankin
    --d9967fb9e0f2fd173eb771d0c1098648 880feb799980aa120736ae3c24523cea
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'rpop')
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 15, true)
        and cmpr_eq(features:Word8bitCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:MESSAGE_ID_SUSP_TLD()
        
    then
        SetPSAR('ar785')
    end 
    
    --ar786
    --mxs / #klychi_k_woman
    --01.09.16 / r.belyankin(sokolik)
    --0f9e14a338956656dc50c8b0808761ba 4d67c0b9b9eb647706ec899f657fcb91
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    		or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 30, 250)
        and cmpr_btw(features:WordCount(), 200, 500)
        and (cmpr_gt(features:Words7bitRatio(), 70) 
        	or cmpr_gt(features:NumberCount(), 20))
        and cmpr_lt(features:HtmlTagCount(), 50)
        and wclass:CT_IN_BODY()
        --and wclass:ONE_RECEIVED()
        and (wclass:REMOTE_IP_IN_SPAMHAUS()
    		or wclass:NEW_IP_15_DAYS()
			or wclass:PTR_ERROR())
    then
        SetPSAR('ar786')
    end
        
    --ar787
	--svobodno
    
    --ar788
    --fe / #english #omologenie
    --13.07.16 / r.belyankin
    --637c0e99d01c85fd6b9197cd2de6acdf ea408a044e0047a14d51da803b0a8e4d
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 2, 10)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_lt(features:RepuserAge(), 10)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 15)
        and cmpr_btw(features:WordCount(), 5, 50)
        and cmpr_gt(features:Words7bitRatio(), 90)
        and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and wclass:SHORT_BOUNDARY()
        and wclass:USER_AGE_7()
        and wclass:FROM_ENDS_IN_NUMS()
    then
        SetPSAR('ar788')
    end
    
    --ar789
    --mxs / #yandex_direct
    --13.07.16 / r.belyankin
    --4197e8752054b80f109a77a4d3763cfc 6112476e73313c89d8fd82522bc96456
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 25, true)
        --and cmpr_eq(features:HasImageUrl(), 1)
        and (cmpr_lt(features:IpAge(), 50) or wclass:IP_REP_GAP_MORE_14_DAYS())
        and (cmpr_gt(features:DomainRepipAge(), 1000) or cmpr_btw(features:DomainRepipAge(), 0, 15))
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 50, 200)
        and cmpr_btw(features:HtmlTagCount(), 5, 50)
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:MS_MAILER()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    then
        SetPSAR('ar789')
    end 
    
    --ar790
    --mxs / #zarabotok #pdf
    --13.07.16 / r.belyankin
    --355fb73e883921313cbf210873c71d0a 73c9982052c150f2c0639f85f64fb6ce
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_gt(features:MsgSize(), 300000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 1, 15)
        and cmpr_lt(features:HtmlTagCount(), 10)
        and cmpr_gt(features:LinesToWordsRatio(), 70)
        and wclass:FROM_RAMBLER()
        and wclass:SHORT_BOUNDARY()
        and wclass:BOUNDARY_WITHOUT_LETTERS()
    then
        SetPSAR('ar790')
    end 
    
    --ar791
	--svobodno
    
    --ar792
    --mxs / #zarabotok #sparkpostmail
    --12.12.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 200 and features:UrlsTextSize() <= 700
        and features:MultipartNum() == 1
        and features:TextLines() >= 2 and features:TextLines() <= 7
        and features:WordCount() >= 10 and features:WordCount() <= 50
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 25
        and wclass:ONE_RECEIVED()
        and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:FROM_FIRST_LVL_DOMAIN_US()
        and UrlsMatch(regex([[^go\.sparkpostmail(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar792')
    end
    
    --ar793
	--svobodno
    
    --ar794
    --mxs / #zarabotok
    --13.07.16 / r.belyankin
    --2484fb16841fb6b4a8fb8dc46e6519a9 c04715fd0e66bab22b0188427cab513b
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 10, 35, true)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_btw(features:TextLines(), 10, 100)
        and cmpr_btw(features:WordCount(), 50, 350)
        and cmpr_btw(features:HtmlTagCount(), 50, 300)
        and (cmpr_gt(features:WhitespaceToWordRatio(), 700) or wclass:FAIL_SPF())
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:HELO_IN_MSGID()
		and ((wclass:PHP_URL() and (wclass:HTML_TAG_BACKGROUND_URL() or wclass:REMOTE_IP_IN_SPAMHAUS())) or UrlsMatch(regex([[^plus.google.com$]])))
    then
        SetPSAR('ar794')
    end 
    
    --ar795
    --mxs / #zarabotok
    --13.07.16 / r.belyankin
    --6fa3b83709843aa4a07143a62ef585d1 c16d592dc2364afeff7a3679724a4822
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 20, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 20)
        and cmpr_btw(features:WordCount(), 200, 700)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:Words7bitRatio(), 50)
        and cmpr_gt(features:WhitespaceToWordRatio(), 200)
        and wclass:ONE_RECEIVED()
        and wclass:FROM_LOCALPART_IN_REALNAME()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
    then
        SetPSAR('ar795')
    end
    
    --ar796
	--svobodno
    
    --ar797
    --mxs / #kredit
    --14.07.16 / r.belyankin
    --swvlt_ce
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'smtp')
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_lt(features:RepuserAge(), 20)
        and cmpr_gt(features:RcptNum(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 5, 20, true)
        and cmpr_gt(features:Words7bitRatio(), 90)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:WhitespaceToWordRatio(), 500)
        and wclass:ENG_REAL_NAME_FROM_MAIL_RU()
        and wclass:NO_MIME()
    then
        SetPSAR('ar797')
    end 
    
    --ar798
	--svobodno
    
    --ar779
	--svobodno
    
    --ar800
    --mxs /  #VISA
    --27.11.16 r.sulimov(sokolik)
    --f4617747edf5195f502e2a8aa29f2a1c 737da2bf75060444d127be80f98c92fa 5a3776f0630c828460b3c66d6d5f5f06
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') 
            or cmpr_eq(features:RcvSrcExt(), 'imap')
        	or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
        and cmpr_btw(features:MsgSize(), 500, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:TextLines(), 2, 150, true)
		and cmpr_btw(features:WordCount(), 30, 1000, true)
        and cmpr_btw(features:Word7bitCount(), 1, 300, true)
    	and ((cmpr_btw(features:HtmlTagCount(), 30, 200, true) and cmpr_btw(features:HtmlUniqueTagCount(), 5, 20, true))
        	or cmpr_eq(features:HtmlTagCount(), 0))
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
		and cmpr_eq(features:HasFromRealName(),  true)
    	and TermsMatchGroup(17204, 100)
        and (wclass:NEW_IP_15_DAYS() 
        	or wclass:IP_REP_GAP_MORE_7_DAYS() 
        	or wclass:NEW_IP_NO_REP() 
            or wclass:MX_INVALID_RATE_MORE_THAN_10() 
        	or wclass:REMOTE_IP_IN_SPAMHAUS()
			or wclass:INVALID_CHARS_IN_RAW_URLS()
    		or wclass:FROM_MANY_SYMBOLS_SUCCESSIVELY()
			or wclass:HAS_X_PHP_SCRIPT()
			or wclass:SUSP_WORDPRESS_URL()
			or wclass:LONG_WORDS_IN_SUBJECT()
			or wclass:SPF_NOT_PASS_FROM_MBP()
			or wclass: LIST_UNSUBSCRIBE_WITHOUT_URL_OR_ADRESS())
    	and (wclass:RECIPIENT_EMAIL_IN_BODY() 
    		or wclass:MS_MAILER_WITH_ONE_RECEIVED() 
    		or wclass:ONE_SYMBOL_FROM_LOCALPART()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
	then
        SetPSAR('ar800')
    end
    
    --ar801
	--svobodno
    
    --ar802
    --mxs / #zarabotok
    --14.07.16 / r.belyankin
    --286327bb3b49a100a9fb0e0df96cb1af d384a40dd14fa070d786e855ba1458bd
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 5, 50)
        and cmpr_btw(features:DkimDomainRepipAge(), 0, 10)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text') 
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 10, 100)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:IP_REP_GAP_MORE_30_DAYS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:URL_IN_FROM_DOMAINPART()
    then
        SetPSAR('ar802')
    end 
        
    --ar803
	--mxs_other / #virus #archive #rostelecom
    --05.09.16 / veselitsky	
	--b52946449d283a9d01c010a5e107fd10 f35c01e2a79fcee015e8c12b82cc0c3f
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'rpop'  or features:RcvSrcExt() == 'imap')
        and cmpr_btw(features:MsgSize(), 5000, 25000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachArchiveCount() == 1
		and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 0, 800, true)
        and features:FilesExtensions() == '.zip'
    	and StrMatchRe(features:PartsFilenames(), regex([[\(\d+\)(\d+)?\.zip$]]))
    	--and (wclass:NO_MIME() or wclass:MISSING_DATE())
        and (wclass:HAS_ARCHIVE_IN_ARCHIVE_ATTACH() or wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE())
    then
        SetPSAR('ar803')
    end
    	
    --ar804
	--svobodno
        
    --ar805
	--svobodno
        
    --ar806
	--svobodno
    
    --ar807
    --mxs_other / #eng #young_domain #otchet
    --28.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_gt(features:WordCount(), 200, true)
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
    	and cmpr_btw(features:UrlsTextSize(), 400, 1500)
        and cmpr_btw(features:HtmlTagCount(), 10, 200)
    	and cmpr_btw(features:DomainRepipAge(), 0, 15)
       	and wclass:ONLY_7BIT_WORDS()
        and wclass:NO_USER_AGENT()
    	and wclass:HAS_EXTERNAL_IMG() 
    then
        SetPSAR('ar807')
    end

    --ar808
    --mxs / #zarabotok
    --15.07.16 / r.belyankin
    --1c61b0fd987e7d81db3eed92de9087cc f50604cf32d8b004395ae6364efc3f89
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 30, true)
        and cmpr_btw(features:UrlsTextSize(), 400, 1500)
        and (cmpr_eq(features:EmailInToRealName(), 1) or cmpr_eq(features:NoRealNameTo(), 1))
        and cmpr_btw(features:TextLines(), 30, 150)
        and cmpr_btw(features:WordCount(), 50, 200)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 100)
        and wclass:PRECEDENCE_BULK()
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:MAIL_RU_MSGID_PATTERN())
        and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS() or wclass:BADNET() or wclass:OTHER_IP_IN_DNSBL())
    then
        SetPSAR('ar808')
    end 
    
    --ar809
	--svobodno

    --ar810
	--svobodno
    
    --ar811
	--svobodno
    
    --ar812
	--svobodno

    --ar813
	--svobodno
     	
	--ar814
    --mxs_mbp / #ipoteka #img
    --21.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:HtmlTagCount(), 30)
    	and (cmpr_gt(features:SubjectWordMixedCount(), 0) or wclass:CRASHED_BASE64_IN_SUBJECT())
       	and wclass:HAS_EXTERNAL_IMG()
        and UrlsMatchStr('blogspot.')
    then
        SetPSAR('ar814')
    end
    
    --ar815
	--mxs_mbp / #bazi #katalogpredpriyatiy
	--15.07.16 / veselitsky	
	--604d568cc7d5c76c8d14622393033b5e 785bbde44128a7b9d2657f052a056986 336a1b94a557401c681e873db45807a9
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 1000, 3000) 
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
   		and features:IsFromGoogle()
    	and features:NoRealNameTo() == 1
    	and features:HasBcc() == 1
    	and features:GeoCode() == 'US' 
    	and cmpr_btw(features:WordCount(), 30, 80)
    	and cmpr_btw(features:TextLines(), 4, 12)
    	and TermsMatchGroup(10254,150)
    	and wclass:PLUS_IN_MESSAGE_ID()
    then
    	SetPSAR('ar815')
    end
        
    --ar816
	--svobodno

	--ar817
	--svobodno  
    
    --ar818
    --mxs_other / #zarabotok
    --15.07.16 / veselitsky
    --2484fb16841fb6b4a8fb8dc46e6519a9 c04715fd0e66bab22b0188427cab513b
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and cmpr_btw(features:MsgSize(), 2000, 10000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 20, 200)
    	and cmpr_btw(features:HtmlTagCount(), 40, 100)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and features:FromRealName()
    	and StrMatch(features:FromRealName():lower(), 'admin')
    	and wclass:HELO_IN_MSGID() 
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    then
        SetPSAR('ar818')
    end 
        
    --ar819
	--svobodno
    
    --ar820
    --mxs_mbp / #mebel
    --15.07.16 / veselitsky
    --806e0e17c149072ce79babe03fb20378 c37c3f2f68d266392f8604360d2d31cf 8085ed3ff7ce33bfe10baeafd16a1a64
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
        and cmpr_btw(features:MsgSize(), 100, 500)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:IsFromFreeMail() == 1
    	and cmpr_btw(features:WordCount(), 5, 40)
        and features:UrlNormCount() == 1
    	and wclass:CYRILLIC_URL() 
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and (wclass:SOFTFAIL_SPF()
           or wclass:FAIL_SPF())
    then
        SetPSAR('ar820')
    end 
    
    --ar821
    --mxs_other / #iphone
    --18.07.16 / veselitsky
    --5c65f9a87ce59334846383985ed2f8e5 c2be043f04c0148eceb1c2f24bd6a6ec 22182e8c91ab2be2c245e94cb834ffcb 
    if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50, 400)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoSubject() == 1
		and features:NoTo() == 1
    	and features:NoRealNameFrom() == 1
    	and cmpr_btw(features:WordCount(), 3, 40)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
		--and features:HasShortUrl() == 1
    	and cmpr_gt(features:EmailsCountInBody(), 0)	
	   	and wclass:MISSING_DATE() 
    	and wclass:NO_MIME()
    then
        SetPSAR('ar821')
    end 
    
    --ar822
	--svobodno
    
    --ar823
    --mxs_mbp / #yadisk #mail.kz
    --15.08.2016 / rassadovskiy(sokolik)
    --a1102246fe71cff73500395f533bbd15 ab139bce70a0fe5f60dd146bd841e120 3dad233db95a65edfc2230141af676d7
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),50,800)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and (features:NoSubject()
        	or wclass:INVALID_CHAR_IN_FROM_REALNAME())
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:CloudYandexUrl()
        and cmpr_btw(features:TextLines(),1,7,true)
        and cmpr_btw(features:WordCount(),1,50)
        and features:HtmlTagCount() == 0
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
        and ( (wclass:MS_MAILER() and wclass:SPF_NOT_PASS() and wclass:MSG_ID_LOCALPART_SEEMS_HASH())
           or ( wclass:MORE_5_EMAILS_IN_TO() and wclass:MULTIPLE_HEADERS()) )
    then
        SetPSAR('ar823') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar823')
    end
    
    --ar824
	--fe / #ok_php
	--20.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
        and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and ((cmpr_btw(features:UrlCountWithoutMailRu(), 2, 8, true)
    	and cmpr_gt(features:UrlNormCount(), 15))
    		or wclass:FAKE_ATTACH()
    		or cmpr_gt(features:HtmlTagCount(), 2000))
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and (wclass:HAS_INPUT_TAG()
            or wclass:HAS_TAG_SCRIPT())
    then
        SetPSAR('ar824')
        LogMsgToHadoop('dstat_sokolik_log', '#ar824')
    end
    
    --ar825
	--svobodno
    
	--ar826
	--svobodno
    
    --ar827
	--mxs_mbp mxs_other / #dolgi
    --15.08.16 / veselitsky	
	--ab7d9d5a967394d559396fd1e2c05742 89f4598dcc15eb33d3d205ade53d950b 7bb9bcfe6f00c2ff4be9e14743659802 8a73b9b5e9525f4c93573798feabbb8a 
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 200, 3000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
	  	and (features:NoRealNameTo() == 1 or features:NoTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
     	and cmpr_btw(features:WordCount(), 20, 120)
    	and cmpr_btw(features:NumberCount(), 6, 27)
    	and features:UrlNormCount() == 0
    	and TermsMatchGroup(10143, 100) --(TermsMatchGroup(10253, 100) or TermsMatchGroup(17217, 100) or TermsMatchGroup(10143, 100))
    	and wclass:SOFTFAIL_SPF()-- or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:OTHER_IP_IN_DNSBL() or wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS())
    then
    	SetPSAR('ar827')
    end
    
    --ar828
	--svobodno

	--ar829
	--mxs_mbp / #zarabotok
	--18.07.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 15000
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 5 and features:UrlNormCount() <= 15
		and features:TextLines() >= 5 and features:TextLines() <= 20
		and features:WordCount() >= 50 and features:WordCount() <= 200
		and features:SubjectWordCount() >= 2 and features:SubjectWordCount() <= 15
		and features:SubjectWords8bitRatio() >= 40
		and features:Words8bitRatio() >= 70
		and features:WordsOtherRatio() >= 2 and features:WordsOtherRatio() <= 20 
		and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH() or wclass:PSEUDO_DMARK_AND_WORDS_OTHERS_BAD_RATIO())
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:HAS_HEADER_SENDER()
		and (features:FromDomain() == 'yandex.ua' or wclass:FROM_RAMBLER())
	then
		SetPSAR('ar829')
	end
    
	--ar830
	--svobodno
    
	--ar831
	--mxs_other / #viagra
	--18.07.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10 and features:MsgSize() <= 30
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:ReplySubject() == 1
		and features:FakeReplyInSubject() == 1
		and features:UrlNormCount() == 1
		and features:TextLines() == 1
		and features:WordCount() >= 1 and features:WordCount() <= 5
		and wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
		and wclass:ONLY_URLS_IN_BODY()
		and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
	then
		SetPSAR('ar831')
	end
    

     --ar832
	 --smtp / #shum text
	 --29.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrc(), 'smtp')
        and cmpr_eq(features:IpCategory(),'tiny')
       	and cmpr_eq(features:Badnet(),1)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:SUSP_CHARS_IN_SUBJ_SEEMS_NORMAL()
        and wclass:HAS_TAG_STYLE()
        and wclass:HAS_TAG_META() 
        and TermsMatchGroup(18213,100)
	then
		SetPSAR('ar832')
	end
    
    --ar833
    --mxs / #watch #images
    --18.07.2016 / rassadovskiy
    --30642c5431ed8a1f2b53759d4d15fd3e e5f4caa27cfe78f0c248454e8ff4f9ad 4c7ca6f3ffd3d2abf29a1f09139b42c7
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_gt(features:MsgSize(),50000)
        and features:HasNoAttach() == 1
        and cmpr_btw(features:ImgNum(),4,10,true)
        and features:OneWidthImagesNum() == 1
        and cmpr_gt(features:MultipartNum(),3)
        and features:NoSubject()
        and features:NoUserAgent() == 1
        and features:TextLines() == 1
        and cmpr_lt(features:WordCount(),20)
        and cmpr_btw(features:HtmlTagCount(),10,40)
        and features:NoHtmlTag()
        and (wclass:REDIRECTS_URL_PART()
            or wclass:HAS_INPUT_TAG()
            or wclass:NEW_IP_7_DAYS()
            or wclass:NO_HTML_TAG())
        and wclass:DIFFERENT_RES_IMAGES()
        and (wclass:BOUNDARY_IN_EPILOGUE()
            or wclass:EXTERNAL_IMG_FROM_NEW_IP_7_DAYS() and wclass:UNTITLED_IMAGE()
    		or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY_AND_RANDOM_CASE_IN_IMAGE_NAME())
        and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar833') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar833')
    end
    
    --ar834
	--svobodno
    
	--ar835
	--svobodno
    
    --ar836
	--svobodno
    
	--ar837
	--svobodno
    
	--ar838
	--mxs_other  / #rayban
	--18.07.2016 / veselitsky 
	--f0ca646bb07560f2badf76fb02998138 840de2f2d9318fef21360476c4e13cab 51bc0bdae955eec48255c7c51b64ec8a
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 5000, 10000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 100, 250)
    	and cmpr_btw(features:TextLines(), 5, 25)
    	and features:Subject7bitOnly() == 1
    	and features:Words8bitRatio() == 0
    	and cmpr_btw(features:HtmlTagCount(), 30, 70)
    	and features:EmailsCountInBody() == 1
    	and cmpr_btw(features:UrlNormCount(), 3, 7)
    	and features:HasImageUrl() == 1
    	and UrlsMatchStr('amazonaws')
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:RECEIVED_BAD_PATTERN_4()
    	and wclass:NEW_IP_7_DAYS() 
    	and wclass:MS_MAILER()
	then
		SetPSAR('ar838')
    	LogMsgToHadoop('dstat_veselitsky_log', '#ar838')
	end 
    
	--ar839
	--svobodno
    
	--ar840
	--svobodno 
    
    --ar841
	--svobodno
    
	--ar842
	--svobodno
    
	--ar843
	--fe / #zarabotok #1kartinka #dostup
	--30.10.16 / r.kulpin
	--ac1962d29b9cae4077d55f25ca01caa3 f2b72e19ab238764a0482b9bf7e64dd0
 	if not IsBlocked
    	and (cmpr_eq(features:RcvSrc(), 'fe') or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
    	and cmpr_btw(features:MsgSize(), 1000, 200000)
        and cmpr_eq(features:HasNoAttach(), 1)
       	and cmpr_btw(features:ImgNum(), 1, 5, true)
    	and cmpr_eq(features:MultipartNum(), 5)
    	and features:NoRealNameTo()
		and	cmpr_btw(features:TextLines(), 1, 50)
    	and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:Words8bitRatio(), 40)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 9)
        and cmpr_gt(features:UrlsTextSize(), 50)
    	and (UrlsMatchStr('estismailer.com/goto/', 1) or StrMatch(features:CutUrlsRawOnly7bit(), '.ymlp') or StrMatch(features:CutUrlsRawOnly7bit(), '.pechkinwatch.ru'))
    	and (wclass:CT_ENCODED_FILENAME() or features:EnvelopeFromDomain() == 'rambler.ru' or wclass:PHP_URL())
        and (wclass:INNER_SOURCE_SUSP_REPEAT_TAG() or wclass:IP_IN_HELO() or wclass:PHP_URL())
        and (StrMatchRe(features:From(), regex([[^.*\d.*@]])) or features:IsAutoreg() or wclass:USER_AGE_30())
    then
    	SetPSAR('ar843')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar843')
    end
    
    --ar844
	--svobodno
    
	--ar845
	--svobodno
    
    --ar846
	--fe / #ok_php #big_size
	--21.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 500000)
  		and (cmpr_eq(features:HasAttach(), 1)
			or cmpr_gt(features:ImgNum(), 1, true))
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and (wclass:HAS_INPUT_TAG()
            or wclass:HAS_TAG_SCRIPT())
    then
        SetPSAR('ar846')
        LogMsgToHadoop('dstat_sokolik_log', '#ar846')
    end
    
    --ar847
	--svobodno    
   
    --ar848
    --fe / #zarabotok attach
	--25.12.16 / razuvaev
    --6dfb0cf93972241e8e83c9d3f2f830bb b43fd62dde60f707c37dfe9a7ef52ab7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),30000)
        and (cmpr_gt(features:AttachOfficeCount(),1,true)  or cmpr_gt(features:AttachOtherCount(),1,true) or cmpr_gt(features:AttachMultimediaCount(),1,true))
        and cmpr_gt(features:UrlCount(),1,true)
        and cmpr_eq(features:NoRealNameTo(),1)
     	and cmpr_lt(features:Karma(), 0, true) 
        and cmpr_gt(features:WordCount(),200)
        and cmpr_gt(features:NumberCount(),3)
        and cmpr_gt(features:SubjectWordCount(),5)
        and (wclass:SUSP_CHARS_IN_SUBJ_SEEMS_NORMAL() or wclass:CRASHED_BASE64_IN_SUBJECT())
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and UrlsMatch(regex([[.{1,50}\/.{1,50}]]),1)     
    then
        SetPSAR('ar848',true) 
    end
    
    --ar849
	--svobodno
    
	--ar850
	--mxs_sender / #foreks
	--19.07.2016 / zubr 
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 4000 and features:MsgSize() <= 15000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4 
		and features:TextLines() >= 50 and features:TextLines() <= 80
		and features:WordCount() >= 50 and features:LinesToWordsRatio() >= 30
		and features:WhitespaceToWordRatio() >= 600
		and features:Words8bitRatio() >= 50
		and features:ToEmailInBody() == true
		and features:SubjectWordCount() >= 4 and features:SubjectWordCount() <= 15 
		and wclass:SUSP_SWIFT_BOUNDARY_AND_FROM_MATCHES_URL()
		and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
		and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
		and wclass:FROM_ENDS_IN_NUMS()
	then
		SetPSAR('ar850')
	end

	--ar851
	--svobodno
    
	--ar852
	--svobodno
    
    --ar853
    --mxs_mbp #zaraborki #money_archive
    --19.07.16 / a.sokolov
    --ad51cb2e687dc4a1d23bb158f99fb791 ecde35bbd94ac6842cf476b9af8848e8 e124796eca451ff7281ef3e6eb7a156e
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1500, 2500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:AllAppTypes(), "	html")
        and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_eq(features:EmailsCountInBody(), 1)
        and cmpr_eq(features:EmailInSubject(), 1)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
        and cmpr_eq(features:Has3dLevelDomain(), 1)
        and cmpr_btw(features:TextLines(), 7, 12, true)
        and cmpr_btw(features:WordCount(), 10, 30)
        and cmpr_gt(features:WhitespaceCount(), 400)
        and wclass:PTR_ERROR()
        and wclass:ONE_RECEIVED() 
        and wclass:BODY_GREETENGS()
    then
        SetPSAR('ar853')
        LogMsgToHadoop('dstat_sokolik_log', '#ar853')
    end
    
    --ar854
	--svobodno
    
	--ar855
	--mxs_other / #document #virus
	--25.08.2016 / veselitsky 
	--fdc54e5d05d32b82d6d35f1fe523de37 f1b7f791236e99098b3943ceddecf412 236232fad9f287d0c90b8b92393d6755
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 30000, 70000)
		and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachOfficeCount() == 1
    	and features:MultipartNum() == 5
    	and features:NoRealNameTo() == 1
    	and features:Subject7bitOnly() == 1
		and (features:NoRealNameFrom() == 1 or
    		(features:From() and StrMatch(GetHeaderVal('From'), features:FromRealName())))
	   	and StrMatchRe(features:PartsFilenames(), regex([[[A-Za-z]{2,15}\(\d+\)\.docm]]))
	then
		SetPSAR('ar855')
	end 
    
    --ar856
	--svobodno
    
    --ar857 
    --mxs_other mxs_mbp / #rabota #doma
	--19.07.16 / veselitsky
	--c969eba264fee57a636bb922fe9b01ee 659a26339bdcc9fcbf69376b56c85e2e b6d51dc5100f18bf0651f0ae203dcb24 2aa5c5aefeecf733f55ecb415c1b1281
	if not IsBlocked          
		and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
   		and cmpr_btw(features:MsgSize(), 10, 300)
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
    	and features:NoSubject() == 1
    	and cmpr_btw(features:WordCount(), 0, 12)
		and cmpr_btw(features:UrlNormCount(), 0, 3)	
     	and wclass:YANDEX_DISC()
    	and wclass:MS_MAILER()
    	and wclass:DOMAINS_EQUAL()
    then
		SetPSAR('ar857')
	end 
    
    --ar858
	--mxs  / #m16 #secretnoe #sredstvo
	--30.08.2016 / rassadovskiy(sokolik)
	--3b14c36ec2aceaa7c7dce9f325426dc6 0d2cb373875cb53bc5c173f3c61ddec9
	if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 200, 50000)
		and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 2, 3, true)
    	and (features:Subject8bitOnly() == 1 or cmpr_gt(features:SubjectWordMixedCount(), 0)
           or cmpr_eq(features:SubjectWord7bitCount(), 1))
    	and cmpr_btw(features:WordCount(), 0, 800)
    	and cmpr_btw(features:TextLines(), 0, 130)
    	and cmpr_lt(features:HtmlTagCount(), 15)
    	and (features:NoUserAgent() == 1 or wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE())
    	and wclass:CT_IN_BODY()
    	and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() 
        	or wclass:NEW_FROMDOMAIN_15_DAYS() or wclass:NEW_IP_15_DAYS())
	then
		SetPSAR('ar858')
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar858')
	end
    
    --ar859
	--mxs_mbp / #vbey v #test 
	--25.12.16 / zubr
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
		and wclass:FROM_RAMBLER()
        and wclass:UNAVAILABLE_IN_RECEIVED()
        and features:Helo()
        and #features:Helo() > 0
		and StrMatchRe(features:Helo(), regex([[^[a-z]{4,10}\.[a-z]{2,3}$]]))
		and SFKD('ar859', ',ar859', 60, 70)
	 then
		SetPSAR('ar859')
	end

    --ar860
	--svobodno
    
	--ar861
	--svobodno
    
    --ar862
	--svobodno
    
    --ar863
    --mxs / #davlenie
    --19.07.16 / r.belyankin
    --352e29d8131a3be0bb113e7b719b1daf 7dab175a3e0d01296219f570b208385f
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 25000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_btw(features:UrlsTextSize(), 15, 300)
        and (cmpr_eq(features:GeoCode(), 'US') or features:NoSubject())
        and cmpr_btw(features:TextLines(), 5, 35, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and (wclass:FROM_ENDS_IN_NUMS() or StrMatchRe(features:From(), regex([[^.*\d.*@]])))
        and HeaderMatchRe('Content-type', regex([[boundary=[a-z\d]{20,50}$]]), 1)
    then
        SetPSAR('ar863')
    end
    
    --ar864
    --mxs_mbp #zapiska
    --18.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_lt(features:MsgSize(), 5000)
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UrlNormCount(), 2, 3, true)
        and TermsMatchGroup(18144, 100)
    then
        SetPSAR('ar864')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar864')
    end

    --ar865
	--svobodno
    
    --ar866
    --mxs_other / #pozdravliay #registracia
    --20.07.2016 / r.kulpin
    --627863648ab969a43f7459132773c2aa e4bd493db1c59278cb9064e0040ced4b 13e455b0e4feb8619e273c33334ffa5c
   if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,5000)
        and cmpr_eq(features:HasTextOnly(), 1)        
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:SubjectWord7bitCount(), 1)
        and cmpr_lt(features:UrlCount(), 6, true)
        and cmpr_gt(features:TextLines(), 10, true)
        and (wclass:BAD_LINES_TO_WORD_RATIO() 
            or wclass:WORDS_OTHERS_BAD_RATIO())
        and wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED()
        and wclass:SHORT_BOUNDARY()
        and wclass:HAS_TAG_META()
        and HeaderMatchRe('Content-type', regex([[boundary="[a-z\d]{20,35}"$]]), 1)
        and (HeaderMatch('Subject', '.COM', 1) 
            or HeaderMatch('Subject', '.com', 1))
    then
        SetPSAR('ar866') 
    end
    
    --ar867
	--svobodno
    
    --ar868
	--mxs_other / #dostup
	--19.07.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 20000 and features:MsgSize() <= 40000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
		and features:ToEmailInBody() == true 
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 8
		and features:HtmlTagCount() >= 80 and features:HtmlTagCount() <= 200 
		and features:HtmlUniqueTagCount() <= 30 
		and features:TextLines() >= 40 and features:TextLines() <= 70 
		and features:WordCount() >= 300 and features:WordCount() <= 500 
		and features:WhitespaceToWordRatio() >= 350
		and features:Words8bitRatio() >= 70 
		and features:SubjectWordCount() >= 5 and features:SubjectWordCount() <= 12 
		and features:DomainRepipAge() <= 7
		and wclass:HDR_LIST_UNSUBSCRIBE()
	then
		SetPSAR('ar868')
	end
    
    --ar869
	--mxs_mbp / #vbey v #test 
	--25.12.16 / zubr
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
		and features:MultipartNum() < 3
		and features:WordCount() >= 5
		and features:IsFromYandex() == true
		and features:MsgIdDomain()
		and StrMatchRe(features:MsgIdDomain(), regex([[smtp\d{1,2}[a-z]{1,2}\.mail\.yandex]]))
		and SFKD('ar869', ',ar869', 60, 50)
	then
		SetPSAR('ar869')
	end
    
    --ar870
	--svobodno
    
	--ar871
	--fe / #bazi
	--15.07.16 / veselitsky	
	--ccf00105626418cc1521a58724e7ab02 7cd0d58ce30834a233dc7a85b5e311b5
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 10000, 200000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:MultipartNum() == 5
    	and features:MailRuTo()
    	and ((features:AutoregInfoClustersHeaderValue() and features:AutoregInfoClustersHeaderValue()[1])
        	or wclass:FAST_AUTOREG())
    	and features:RepuserAge() == 1 
    	and cmpr_gt(features:RcptNum(), 5)
    	and	cmpr_btw(features:TextLines(), 0, 20)
    	and cmpr_btw(features:WordCount(), 10, 130, true)
    	and (features:AbfAuthFromNewCountry() or features:AbfIsFastIpChange())
    	and TermsMatchGroup(10254,50)
    then
    	SetPSAR('ar871')
    end
    
	--ar872
	--svobodno
    
	 --ar873
	 --mxs_mbp / #pdf
	 --29.12.2016 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_gt(features:MsgSize(),100000)
	    and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_gt(features:Words8bitRatio(),60)
       	and cmpr_eq(features:FilesExtensions(),'.pdf')
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:RAMBLER_FE()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:NOREALNAME_TO()
        and wclass:RANDOM_DIGITS_LOWER_CASE_IN_HEADER()
	then
		SetPSAR('ar873')
	end
    
	--ar874
	--svobodno
     
	--ar875
	--svobodno
    
    --ar876
	--svobodno
    
	--ar877
	--mxs_other  / #nalogi #povisheniekvalifikacii
	--21.07.2016 / veselitsky	 
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 100000, 500000)
       	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
    	and features:MultipartNum() == 5
    	and features:HasDifferentFromAndReply() == 1
    	and features:IsReplyToFreeMail()
     	and	cmpr_btw(features:TextLines(), 0, 4)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and features:FilesExtensions() == '.pdf'
		and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:DATE_IN_FILE_ATTACH() 
	then
		SetPSAR('ar877')
	end
    
	--ar878
	--svobodno
    
    --ar879
	--svobodno
    
    --ar880
	--svobodno
    
    --ar881
	--mxs_mbp / #virus #drive
    --21.06.16 / veselitsky	
	--ca34b9bd16b7fc07d9fb1d66505f7f2f a66baf294526b9a95617fb697aec3c80 e31bd4d482a2b90868596deb7fa08272
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp' 
        and cmpr_btw(features:MsgSize(), 800, 7000)
	   	and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
    	and features:IsFromGoogle()
    	and features:HasBcc() == 1
    	and features:ToUndisclosed() 
    	and cmpr_btw(features:WordCount(), 10, 100)
		and cmpr_btw(features:UrlNormCount(), 0, 6)
    	and wclass:URL_GOOGLEDRIVE()
    then
    	SetPSAR('ar881')
    end
    
    --ar882
	--svobodno
    
    --ar883
    --fe / #bazi #ekb
	--21.07.16 / r.kulpin	
	--224d24b8f12d52dc3bf6346f89f57d85 64b9949889e0874f56a48c7bc184c719 437b9eec7c39ecbf923dc81131384cab
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "fe") 
    	and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and features:MailRuTo()       
        and features:NoRealNameFrom()
    	and ((features:AutoregInfoClustersHeaderValue() and features:AutoregInfoClustersHeaderValue()[1])
        	or wclass:FAST_AUTOREG())
    	and cmpr_lt(features:RepuserAge(), 30) 
    	and	cmpr_btw(features:TextLines(), 0, 25)
    	and cmpr_btw(features:WordCount(), 10, 180, true)
    	and (features:AbfAuthFromNewCountry() or features:AbfIsFastIpChange())
    	and TermsMatchGroup(10254,50)
        and (features:NoSubject() or wclass:REP_USER_SPAM_RATE_MORE_25() or wclass:NEW_IP_15_DAYS())
    then
    	SetPSAR('ar883')
    end
    
    --ar884
	--svobodno
    
	--ar885
	--svobodno
    
	--ar886
	--svobodno
    
	--ar887
	--svobodno
    
    --ar888
	--svobodno
    
    --ar889
	--svobodno
    
    --ar890
    --mxs / #zarabotok
    --15.07.16 / r.belyankin
    --fkd_mx2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 15, true)
        and cmpr_btw(features:UrlsTextSize(), 50, 150)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_btw(features:TextLines(), 5, 50)
        and cmpr_btw(features:WordCount(), 10, 200)
        and cmpr_btw(features:HtmlTagCount(), 10, 150)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar890')
    end 
    
    --ar891
	--svobodno
    
    --ar892
	--svobodno
    
    --ar893
	--svobodno
    
    --ar894
	--svobodno
    
    --ar895
    --mxs / #flood #0days
    --25.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,2000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and (features:RcptNum() > 5
            or features:NoTo())
        and features:FromLocalPart() == "info"
        and features:FromMatchesWithUrl()
        and features:HtmlTagCount() > 0
        and features:DomainRepipAge() < 1
        and TermsMatchGroup(18215,100)
    then
        SetPSAR('ar895') 
    end
    
    --ar896
    --mxs / #zarabotok #vk.com
    --25.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 3
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and features:WordCount() >= 1 and features:WordCount() <= 50
        and features:HtmlTagCount() >= 50 and features:HtmlTagCount() <= 250
        and (wclass:NEW_IP_7_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS() or wclass:NEW_DKIM_7_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar896')
    end
    	
	--ar897
	--svobodno
    
    --ar898
	--svobodno
        
    --ar899
	--svobodno
    
    --ar900
	--svobodno

	--ar901
    --mxs / #ct_in_body #stoyak
    --20.07.16 / r.belyankin
    --5350b4d2c46a1e97e6c5279d31a00fd3 d491e5fb32519dfd50ccdadf401acd19
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        --and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 25)
        and cmpr_btw(features:WordCount(), 5, 70, true)
        and cmpr_gt(features:Words7bitRatio(), 60)
        and cmpr_lt(features:HtmlTagCount(), 5)
        and wclass:ONE_RECEIVED()
        --and wclass:MAIL_RU_MSGID_PATTERN()
        and (wclass:NEW_IP_15_DAYS() or wclass:DYNAMIC_PTR_IN_DNSBL() or wclass:PTR_ERROR())
        and wclass:CT_IN_BODY()
    then
        SetPSAR('ar901')
    end 

	--ar902
    --mxs / #zarabotok #more_url #hidden_url
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 20 and features:UrlNormCount() <= 70
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 1000 and features:WordCount() <= 2000
        and features:HtmlTagCount() >= 500 and features:HtmlTagCount() <= 1000
        and wclass:RECEIVED_BAD_PATTERN_4()
    then
        SetPSAR('ar902')
    end
    
    --ar903
    --mxs / #english #more_url #zarabotok
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 4 and features:UrlNormCount() <= 8
        and features:UrlsTextSize() >= 100 and features:UrlsTextSize() <= 300
        and features:MultipartNum() == 1
        and features:IpAge() >= 0 and features:IpAge() <= 5
        and features:DomainRepipAge() >= 0 and features:DomainRepipAge() <= 5
        and features:TextLines() >= 10 and features:TextLines() <= 40
        and features:WordCount() >= 400 and features:WordCount() <= 1000
        and features:Words8bitRatio() == 0
        and wclass:ONE_RECEIVED()
        and wclass:FROM_REALNAME_IN_LOCALPART()
    then
        SetPSAR('ar903')
    end 
    
    --ar904
	--svobodno
    
    --ar905
    --mxs / #english #malisheva #pohydenie
    --20.07.16 / r.belyankin
    --1dd9d667e2c823b978fefb84a9e952ec 8979269b90304a05280cf55b355927a4 6b3ca2b1fedaed372979352d71900c44
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_gt(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 15, 200)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 5, 60, true)
        and cmpr_gt(features:Words7bitRatio(), 60)
        and cmpr_btw(features:HtmlTagCount(), 1, 50)
        and (wclass:PTR_ERROR() or wclass:PTR_SEEMS_DYNAMIC() or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH())
        and (wclass:ONE_RECEIVED() or wclass:PHP_URL())
        and (wclass:NEW_IP_30_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:GID_INVALID_RATE_MORE_THAN_10())
		and (cmpr_eq(features:NoRealNameFrom(), 1) or wclass:FROM_ENDS_IN_NUMS()) 
    then
        SetPSAR('ar905')
    end
    
    --ar906
    --mxs / #podarok.su #one_img
    --14.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 150000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 2
        and features:WordCount() >= 1 and features:WordCount() <= 10
        and wclass:ONE_RECEIVED()
        and wclass:NEW_IP_7_DAYS()
        and wclass:SUSP_IMAGE_NAME_3()
    then
        SetPSAR('ar906')
    end
    
    --ar907
	--svobodno
    
    --ar908
    --mxs / #chasi #psevdo_razdel_kontakti
    --14.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:XMAILER_PHPMAILER()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:FROM_INFORMATION_SERVICE()
    then
        SetPSAR('ar908')
    end

    --ar909
    --mxs / #zarabotok #list-manage
    --14.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 400000 and features:MsgSize() <= 1000000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:IP_HAS_GAP_LAST_WEEK()
        and wclass:BAD_LINES_TO_WORD_RATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and TermsMatchGroup(785, 10)
        and UrlsMatch(regex([[\.list\-manage(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar909')
    end
    
    --ar910
    --mxs / #zarabotok #infos
    --03.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 10 and features:MsgSize() <= 5000
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 50
        and features:FromLocalPart() == 'infos'
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and wclass:ONE_RECEIVED()
        and (wclass:CC_URLS() or wclass:BIZ_URLS())
    then
        SetPSAR('ar910')
    end 
    
    --ar911
    --fe / #intel system
    --27.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:WITH_HTTP()
        and (wclass:SUSP_HTML_TAG_RATIO() or cmpr_gt(features:HtmlTagCount(), 2, true))
    then
        SetPSAR('ar911')
    end
    
    --ar912
    --mxs_other / #buhgalter
    --21.07.16 / a.lisitskaya
    --09d14baa1ceaff69a45590fa33b958bc 24d49955ee5db54b2d47b2a33a8a77dc
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 90000, 200000, true)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_lt(features:TextLines(), 5, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:WordCount(), 2, 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:DomainRepipAge(), 50, 200, true)
        and cmpr_eq(features:HasDifferentFromAndReply(), 1)
        and cmpr_eq(features:IsReplyToFreeMail(), true)
     then
        SetSpam('ar912')
        CarbideSendStatsSum('rules_analyst', 'ar912', 1)
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar912')
    end   
    
   
	--ar913
	--mxs_other / #molot tora
	--25.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(),1000,10000)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_eq(features:FromRealNameWordCount(),1)
        and cmpr_lt(features:TextLines(),6)
        and wclass:ONE_RECEIVED()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:HELO_IN_FROM()
        and wclass: FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
        and wclass: NO_USER_AGENT()
        and wclass:RUSSIAN_FROM_REALNAME()
    
	then
		SetPSAR('ar913')
	end
    
    --ar914
    --mxs / #english #two_urls
    --26.12.16 / r.belyankin(sokolik)
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlCount() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 100
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
        and (StrMatchRe(features:MsgIdLocalPart(), regex([[^\d{8,12}\.\d{12,17}$]]))
        	or HeaderMatch('Message-ID', 'MDAEMON'))
    then
        SetPSAR('ar914')
    end
    
    --ar915
    --mxs_other #zarabotki #rabota
    --21.07.16 / a.sokolov
    --881e8dea321d6adf7b975fadba5275a2 a6fa8bb8a8d41991fa73415c1c37a2ad 23aea00b23bc58a87a290637c5ae56e3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and cmpr_btw(features:MsgSize(), 2000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:EmailsCountInBody(), 1)
        and cmpr_eq(features:ToEmailInBody(), true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:HtmlTagCount(), 15, 50)
        and cmpr_btw(features:TextLines(), 20, 40)
        and cmpr_btw(features:WordCount(), 70, 140)
        and cmpr_btw(features:NumberCount(), 10, 40)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:WordsOtherRatio(), 15)
        and wclass:DKIM_FAIL()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:MS_MAILER()
    then
        SetPSAR('ar915')
        LogMsgToHadoop('dstat_sokolik_log', '#ar915')
    end
    
    --ar916
	--svobodno
    	
    --ar917
	--mxs_other  / #m16
    --03.09.16 / veselitsky	(sokolkik)
	--5450eebf40b9bcab597bc5cd28a8be1a ec5cff90fdf93733e4000e1da4807d51 9fc72fdbc3927d497eb85310b598c0ba
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 2000, 20000)
    	and features:HasTextOnly() == 1
    	and cmpr_gt(features:MultipartNum(), 3)
    	and features:NoRealNameTo() == 1
	 	and cmpr_lt(features:TextLines(), 20)
        and cmpr_lt(features:Word8bitCount(), 200)
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and (wclass:REMOTE_IP_IN_SPAMHAUS()
    		or wclass:NEW_IP_7_DAYS())
     	and (wclass:URL_IN_EPILOGUE_OR_PREAMBLE() or wclass:SUSP_PREAMBLE_AND_EPILOGUE_SIZE())
    	and wclass:HAS_ONE_VIRT_PART()
    then
		SetPSAR('ar917')
	end 
    
    --ar918
    --mxs / #virus #url
    --14.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:TextLines() >= 10 and features:TextLines() <= 25
        and features:WordCount() >= 50 and features:WordCount() <= 200
        and wclass:FAKE_ATTACH()
        and wclass:RECEIVED_BAD_PATTERN_2()
        and wclass:IP_REP_GAP_MORE_30_DAYS()
        and wclass:LOCALHOST_AND_UNKNOWN_IN_RECEIVED()
    then
        SetPSAR('ar918')
    end
    
    --ar919
    --mxs / #mxs_esp #zarabotok #avito #millioner
    --14.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_esp"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 25000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 7
        and features:DomainRepipAge() >= 0 and features:DomainRepipAge() <= 5
        and features:OneWordSubject() == 1
        and features:Subject7bitOnly() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 25
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_Part_\d+_?]]), 1)
        and UrlsMatchStr('unisender.com')
    then
        SetPSAR('ar919')
    end
    
    --ar920
	--svobodno
    
    --ar921
	--svobodno
    
  	--ar922
	--svobodno 
    
    --ar923
    --fe / #casino
    --01.08.2016 / rassadovskiy
    --7f9d4175e7281080df7e3366ffe91813 daa5e3dea9f271617cc3cba429000ec6 e21409062c678407f2cba5e6e9ec565d
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),300,250000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_gt(features:HtmlTagCount(),3,true)
        and (cmpr_gt(features:WordCount(),20)
    		or cmpr_lt(features:WordCount(),30) and features:SourceTextSize() > 3000
            or features:WordCount() > 1 and cmpr_gt(features:SourceTextSize()/features:WordCount(),30)
    		or features:WordsMixedRatio() > 5 and features:DotRatio() > 10
    		or features:SubjectLen() > 50)
        and (cmpr_btw(features:TextLines(),1,10) or features:TextLines() > 100)
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:HIDING_HTML_TAGS() or wclass:NEW_IP_7_DAYS() or wclass:FROM_ENDS_IN_NUMS() or wclass:NEW_IP_NO_REP()
            or wclass:WORDS_WITH_NOISE() or wclass:FE_SUSP_HTMLTAG_TO_WORD_RATIO() or wclass:SUBJECT_ALL_CAPS() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY())
        and wclass:FE_TOR_IP()
        and features:Subject()
        and (StrMatchRe(features:Subject(), regex([[^[à-ÿ\s]*[^a-zA-Zà-ÿ]{30,}[a-z]*$]]))
            or not HasHeader("Subject", 1)
            or features:Subject() == "äîáðûé äåíü"
        	or features:Subject() == "çäðàâñòâóéòå"
            or features:Subject() == 'hello'
            or wclass:SUBJECT_NUMBERS_ONLY()
        	or StrMatchRe(features:Subject(), regex([[^[a-z]{3,15}$]])) and (features:SourceTextSize() > 5000 or features:WordsOtherRatio() > 70)
        	or wclass:NEW_IP_1_DAY() and features:SubjectWordCount() == 2 and features:SubjectNumbersCount() == 0)
    then
        SetPSAR('ar923') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar923')
    end
    
	--ar924
	--svobodno
    
	--ar925
	--mxs_other / #chasi
	--22.07.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 900000 
		and features:HasTextOnly() == 1 
		and features:DKIM() == "invalid" 
		and features:NoRealNameTo() == 1 
		and features:NoUserAgent() == 1
		and features:UrlCountWithoutMailRu() <= 10
		--and features:Words8bitRatio() >= 20
		and wclass:MISSING_DATE()
		and wclass:PRECEDENCE_BULK()
		and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar925')
	end
    
    --ar926
	--svobodno
    
    --ar927
	--svobodno
    
    --ar928
    --mxs / #su #rasprodaga
    --20.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:ShortUrlCount() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 5 and features:WordCount() <= 50
        and TermsMatchGroup(18188, 20)
        and not wclass:PHP_URL()
    then
        SetPSAR('ar928')
    end
        
    --ar929
	--svobodno
    
    --ar930
    --mxs_other #.top_test_sbor
    --22.07.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_eq(features:FirstLevelFromDomain(), "top")
        and cmpr_gt(features:Words7bitRatio(), 70)
        and (wclass:FROM_LOCALPART_IN_REALNAME() 
            or wclass:HIDING_HTML_TAGS() 
            or wclass:ENGLISH_TEXT_AND_CTE_8BIT() 
            or wclass:TOP_URLS_AND_NEW_FROMDOMAIN_7_DAYS()) 
        and (wclass:SOFTFAIL_SPF() 
            or wclass:NONE_SPF() 
            or wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
            or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
            or wclass:LAST_AND_FIRST_BOUNDARY_DIFFERS()
            or wclass:RECIPIENT_EMAIL_IN_BODY()
            or wclass:FIRST_LEVEL_FROM_DOMAIN_IS_NEWGTLD())
    then
        SetPSAR('ar930')
        LogMsgToHadoop('dstat_sokolik_log', '#ar930')
    end

    --ar931
    --fe #bad_girl
    --24.07.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and (cmpr_btw(features:MsgSize(), 30000, 200000) or cmpr_lt(features:MsgSize(), 100))
        and not features:IsPddUser()
        and (wclass:AUTOREG() or wclass:AUTOREG_FROM_NOT_TARGET_REGION())
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:NumberCount(), 5)
        and (cmpr_btw(features:TextLines(), 7, 14, true) or cmpr_lt(features:TextLines(), 5))
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and (cmpr_btw(features:WordCount(), 15, 30) or cmpr_lt(features:WordCount(), 7, true))
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 20)    
        and wclass:NOREALNAME_TO()
        and wclass:SHORT_ENGLISH_MESSAGE()
    then
        SetPSAR('ar931')
        LogMsgToHadoop('dstat_sokolik_log', '#ar931')
    end
    
    --ar932
    --mxs / #zarabotok
    --13.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 1 and features:UrlsTextSize() <= 25
        and features:TextLines() >= 5 and features:TextLines() <= 15
        and features:WordCount() >= 5 and features:WordCount() <= 100
        and (wclass:PTR_ERROR() or wclass:PTR_SEEMS_DYNAMIC())
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:FROM_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar932')
    end
    
    --ar933
    --mxs_other / #zarabotok #yadisk
    --29.10.2016 / rassadovskiy(sokolik)
    --6fe3fcaf064c63e33bcd8bdc9456e25a 38bdf9323b9f72fcfd9c70072d11426c 561f1a43a7c6ae158b10bfb6ee149b90
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other")
            or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(),30,2500)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and (features:NoSubject() 
            or wclass:TO_IN_SUBJECT()
			or wclass:SUBJECT_LONGER_THEN_BODY()
		    or wclass:MS_MAILER())
        and cmpr_btw(features:UrlNormCount(),1,4,true)
        and cmpr_btw(features:HtmlTagCount(), 0, 30, true)
        and cmpr_btw(features:TextLines(),1,15,true)
        and cmpr_btw(features:WordCount(),1,100,true)
        and wclass:YANDEX_DISC_AND_MS_MAILER()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and (wclass:FROM_AND_TO_REALNAMES_ARE_EQUAL_BUT_EMAILS_ARE_NOT()
            or wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
            or wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
			or wclass:TO_LOCALPART_IN_REALNAME()
			or wclass:FAKE_FROM_REALNAME()
			or wclass:UNENCODED_SUBJECT()
        	or wclass:LOCALHOST_AND_UNKNOWN_IN_RECEIVED()
    		or wclass:INVALID_CHAR_FROM()
        	or wclass:DKIM_FAIL()
    	    or wclass:SPF_NOT_PASS()
    		or wclass:HAS_X_CMAE_ENVELOPE_HDR()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
			or wclass:OTHER_IP_IN_DNSBL()
			or wclass:HAS_HEADER_COREMAIL_ANTISPAM()
			or wclass:HDR_X_EMAIL_COUNT()
			or wclass:SHORT_WITH_URLS()
			or StrMatchRe(features:FromRealName(), regex([[^[à-ÿ¸]{2,}\s[à-ÿ¸]{2,}$]])))
    then
        SetPSAR('ar933') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar933')
    end
    
    --ar934
    --fe / #zarabotok
    --23.07.2016 / rassadovskiy
    --9a59fcbec67ccd5464828f59bcec84cc fef47ab88b58eed8fa061940ebd65888
    if not IsBlocked
       	and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and not wclass:FROM_EMAIL_IN_BODY()
        and cmpr_btw(features:MsgSize(),1000,6000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and (features:IsAutoreg()
            or wclass:NEW_IP_7_DAYS())
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_btw(features:HtmlTagCount(),2,50)
        and cmpr_btw(features:WordCount(),30,300)
        and cmpr_btw(features:TextLines(),1,15,true)
        and cmpr_gt(features:WhitespaceToWordRatio(),130)
        and (wclass:SOURCE_IP_IN_XBL()
    		or wclass:FE_SUSP_HTMLTAG_TO_WORD_RATIO()
    		or cmpr_lt(features:RepuserAge(),5))
        and (wclass:RUSSIAN_FROM_REALNAME()
            or wclass:REP_USER_SPAM_RATE_MORE_25())
        and (wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY()
        	or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY()
    		or wclass:REP_USER_COMPL_RATE_MORE_3()
    		or wclass:NEW_REP_IP_AND_COMPL_RATIO_BY_LAST_HOUR())
    then
        SetPSAR('ar934') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar934')
    end
    
    --ar935
	--svobodno
    
    
    --ar936
	--svobodno
    
    --ar937
    --mxs / #shum #url_more_hits
    --15.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 25
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and wclass:NEW_IP_30_DAYS()
        and wclass:NEW_DKIM_15_DAYS()
        and UrlsMatch(regex([[^almaty\-\d{1,2}\.ru$]]))
    then
        SetPSAR('ar937')
    end
    
    --ar938
    --mxs / #english #virus #url
    --15.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:MultipartNum() == 1
        and features:XMailerName() == 'PHP'
        and features:TextLines() >= 30 and features:TextLines() <= 100
        and features:WordCount() >= 100 and features:WordCount() <= 300
        and features:Word8bitCount() == 0
        and features:LinesToWordsRatio() >=30
        and StrMatchRe(features:Subject(), regex([[^\[[A-Z]{1}[a-z]+\s[A-Z]{1}[a-z]+\]\s]]))
    then
        SetPSAR('ar938')
    end
    
    --ar939
    --mxs / #pidori #two_urls
    --24.07.16 / r.belyankin
    --83449d6c7b05c48ad81b5fa91f1057d6 77e42b3d152ab6dc87888255e57fc33c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:ImgNum(), 1) 
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:MultipartNum(), 5)
        and (cmpr_eq(features:NoRealNameTo(), 1) 
            or cmpr_eq(features:ToRealNameInToLocalPart(), true) 
            or cmpr_eq(features:FromRealNameInFromLocalPart(), true))
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:FAIL_SPF())
        and wclass:DIFFERENCE_RCPTNUM_AND_TO()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar939')
    end
    
    --ar940
    --mxs / #zarabotok #url_cc #biz
    --13.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 5 and features:WordCount() <= 150
        and (wclass:CC_URLS() or wclass:BIZ_URLS())
        and wclass:FREE_HOSTING()
        and (wclass:NO_TO()
            or wclass:PTR_SEEMS_DYNAMIC()
            or wclass:UNDISCLOSED()
            or wclass:NEW_IP_15_DAYS()
            or wclass:NEW_DKIM_15_DAYS()
            or wclass:RECEIVED_BAD_PATTERN_2())
    then
        SetPSAR('ar940')
    end
    
    --ar941
    --mxs / #binarnye
    --24.07.2016 / rassadovskiy
    --7500a1b94b4bafe7fa722596256fd31f 53b1e8a2bf6ee81eeb5801fe373956e4
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(),400,800)
        and features:HasTextOnly() == 1
        and cmpr_gt(features:MultipartNum(),3,true)
        and features:NoRealNameTo() == 1
        and cmpr_gt(features:EmailsCountInToHeader(),5)
        and features:NoRealNameTo() == 1
        and features:NoUserAgent() == 1
        and features:UrlNormCount() == 1
        and cmpr_btw(features:TextLines(),1,5)
        and cmpr_btw(features:WordCount(),1,10)
        and cmpr_btw(features:NumberCount(),3,12)
        and cmpr_btw(features:HtmlTagCount(),1,10)
        and features:DotCount() > 3
        and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        and wclass:SORTED_RECIPIENTS()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:SHORT_BOUNDARY()
        and wclass:HAS_HDR_ORGANIZATION()
    then
        SetPSAR('ar941') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar941')
    end
    
    
    --ar942
	--svobodno
    
    --ar943
    --fe / #zarabotok
    --27.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:AUTOREG()
        and wclass:IP_URL()
        and wclass:WITH_HTTP()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar943')
    end
    
    --ar944
	--svobodno
    
    --ar945
	--svobodno
    
    --ar946
	--svobodno   
    
    --ar947
	--mxs_mbp / #varikoz
    --25.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 50000)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:URL_GOOGLEDRIVE()
    	and wclass:EMAIL_IN_FROM_REAL_NAME()
	then
		SetPSAR('ar947')
       	LogMsgToHadoop('dstat_sokolik_log', '#ar947')
    end
        
    --ar948
	--svobodno
    
    
    --ar949
	--svobodno
    
	--ar950
	--svobodno
    
    
    --ar951
	--svobodno
    
	--ar952
	--svobodno
    
    --ar953
	--svobodno
      
    --ar954
	--mxs_other / #zarabotok
	--25.07.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 20000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:TextLines() >= 5 and features:TextLines() <= 40
		and features:WordCount() >= 100 and features:WordCount() <= 500
		and TermsMatchGroup(17233, 100) 
	then
		SetPSAR('ar954')
	end
    
    --ar955
    --mxs_other / #1url #zarabotok
    --13.08.2016 / rassadovskiy
    --3aae589d0cc7fa2dd6f992a1be9f93a0
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),800,5000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and features:NoRealNameTo() == 1
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_btw(features:TextLines(),5,15,true)
        and cmpr_gt(features:WordCount(),20)
        and features:FromLocalPart()
        and cmpr_lt(#features:FromLocalPart(),5,true)
        and features:WhitespaceToWordRatio() > 150
        and features:LinesToWordsRatio() > 15
        and wclass:NEW_DKIM_7_DAYS()
        and wclass:HAS_TAG_STYLE()
        and wclass:HELO_IN_MSGID()
        and wclass:DMARC_PASS()
    then
        SetPSAR('ar955') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar955')
    end

    
    --ar956
    --mxs / #zarabotok
    --25.07.2016 / rassadovskiy
    --d68f241fde2e7095207bc4e40f2e649d 14d3d9e2f938c71d7c03a7fb002de2f3 f8abb7b95ad01250a71229e9abbb7673
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(),1500,8000)
        and (cmpr_eq(features:HasTextOnly(),1)
            or features:ImgNum() == 1)
        and features:MultipartNum() >= 3
        and cmpr_btw(features:UrlNormCount(),2,6,true)
        and cmpr_btw(features:TextLines(),2,15,true)
        and cmpr_btw(features:WordCount(),20,70)
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
        and wclass:MS_MAILER()
        and wclass:ONLY_7BIT_WORDS()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and wclass:HAS_TAG_META()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[(?i)^(?:[a-z\d]{3,20}\$){3,5}$]]))
    then
        SetPSAR('ar956') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar956')
    end
    
	--ar957
	--mxs / #likvidaciya
	--25.07.2016 / zubr
	--73c62e93f3485eb4c097544bbc7d3cfc ea2c7cfd9740d9fca6100233ad58cc3c 5ee6174e7e53b052f9fc1dbee9b8c8bf
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == "mxs")
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1 
		and features:UrlNormCount() == 0
		and features:TextLines() >= 7 and features:TextLines() <= 25
		and features:NumberCount() >= 5 and features:NumberCount() <= 30 
		and features:Words8bitRatio() >= 50 
		and features:Words7bitRatio() <= 5
		and features:WordsOtherRatio() >= 10
		and features:SubjectWords8bitRatio() >= 50
		and features:SubjectWordCount() >= 2 and features:SubjectWordCount() <= 20
--		and features:FromRealNameWordCount() >= 2
		and (wclass:OTHER_IP_IN_DNSBL() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:FREE_MAIL_AND_NO_CTE() or wclass:W8BIT_NO_CTE()
			or wclass:HOSTING_RELAY_IN_RECEIVED() or wclass:NEW_IP_7_DAYS() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:NO_TO())
		and (wclass:SPF_NOT_PASS() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and TermsMatchGroup(17236, 100)
	then
		SetPSAR('ar957')
	end
    
    --ar958
    --mxs_other / #8000
    --01.08.2016 / rassadovskiy(sokolik)
    --b566d572f981f12c74055404c65a54a0 eda3e49a9f00661639811a587805a3b1 002cb7ed7e20e0f05fd53d04ec047a2f
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),1000,10000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and cmpr_btw(features:UrlNormCount(),0,3,true)
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_btw(features:TextLines(),5,100)
        and cmpr_btw(features:WordCount(),15,200)
        --and cmpr_gt(features:WhitespaceToWordRatio(),150)
        and features:SubjectNumbersCount() > 3
        and wclass:DOMAINS_EQUAL()
        and wclass:SHORT_BOUNDARY()
        and wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(17192,100)
    then
        SetPSAR('ar958') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar958')
    end
    
    
    --ar959
	--svobodno

    --ar960
	--svobodno
   
    --ar961
    --fe / #zarabotok #php
    --25.12.2016 / razuvaev
    if not IsBlocked
		and false --mnogo jalob
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),10000)
        and cmpr_gt(features:UrlNormCount(),1,true)
        and cmpr_gt(features:ImgNum(),1,true)
        and cmpr_lt(features:Karma(), 0, true) 
        and wclass:CT_ENCODED_FILENAME()
        and wclass:PHP_URL()
        and (wclass:FROM_ENDS_IN_NUMS() or wclass:AUTOREG())
        and wclass:NOREALNAME_TO()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
		and not wclass:CUSTOMER_DELIVERY_AND_PAYMENT()

    then
        SetPSAR('ar961') 
    end
    
    --ar962
    --mxs_other #visa_usa
    --14.10.16 / a.sokolov
    --9b74de8619e38cdab6e69dc39607fac6 6fa0560230dcc59baaeb60b08aea0f1  e55cb64969b97523e94c1504b4051b69
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        --and cmpr_eq(features:GeoCode(), "US") 
        and cmpr_eq(features:HasDifferentFromAndReply(), 1)
        and cmpr_eq(features:ToEmailInBody(), true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 30, true)
        and cmpr_btw(features:TextLines(), 5, 15, true)
        and cmpr_btw(features:WordCount(), 70, 200)
        and cmpr_gt(features:WordsOtherRatio(), 5)
        and wclass:MS_MAILER()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:PRECEDENCE_BULK()    
    then
        SetPSAR('ar962')
        LogMsgToHadoop('dstat_sokolik_log', '#ar962')
    end
    
    --ar963
	--svobodno
    
    --ar964
	--svobodno
    
    --ar965
	--svobodno
    
    --ar966
	--svobodno
   
    --ar967
    --mxs_mbp #vbei_v_google
    --25.12.16 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and (features:IsFromYandex()
    		or features:IsFromRambler()
        	or features:IsFromOtherMbp())
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 300)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:Words8bitRatio(), 50)
    	and cmpr_gt(features:Words7bitRatio(), 15)
    	and cmpr_gt(features:WordsOtherRatio(), 15)
    	and cmpr_lt(features:WordCount(), 20)
        and cmpr_lt(features:NumberCount(), 5)
    	and cmpr_btw(features:TextLines(), 1, 5, true)
        and (TermsMatchGroup(18180, 100)
    		or wclass:UNAVAILABLE_IN_RECEIVED()
        	or wclass:DKIM_FAIL())
    then
        SetPSAR('ar967')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar967')
    end
    
    --ar968
    --mxs_other / #zarabotki
    --26.07.16 / a.sokolov
    --9e7a76b8e5c0bac9fed245d904395be3 3b705f031d563d2bd49590f0f88fea6c ae592360083f727b482a8ea972c0b84d b3d2de27e1cfd1ad3d78a3e75a5a9a22
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50, 3000)
        and cmpr_eq(features:SimpleType(), "text")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_eq(features:WordMixedCount(), 1)
        and (wclass:TERMS_ZARABOTOK_V_SETI2() or wclass:TERMS_ZARABOTOK_V_SETI())
        and (wclass:MORE_THAN_N_RCPT() or wclass:SPF_NOT_PASS())
        and wclass:DOMAINS_EQUAL()
        and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-z\d_-]+\/[a-z\d_-]+\/[a-z\d_-]+$]]), 1)
    then
        SetPSAR('ar968')
    end
    
    --ar969
	--svobodno
    
    --ar970
	--svobodno
    
    --ar971
	--svobodno

    --ar972
	--svobodno
    
    --ar973
    --mxs / #bazy
    --26.07.2016 / rassadovskiy
    --f0df7304f69c8d9de0a239ddf3e0c98c 15a2a2cc37b54f5a2e6ea3b41a03d4c8 9e0e18f41dc7f8dc80acead3b3aed4f8
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(),500,1500)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:RcptNum() > 5
        and features:NoTo()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:TextLines(),2,7,true)
        and cmpr_btw(features:WordCount(),5,50)
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
    --    and wclass:DMARC_PASS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:HAS_TAG_META()
        and TermsMatchGroup(17241,100)
    then
        SetPSAR('ar973') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar973')
    end
    
    --ar974
	--svobodno
    
    --ar975
	--mxs_other / #avito #gmail
	--26.07.16 / minina
	--6957a5e8ae18933b2c3f70332890a07f
	--33afd247d5b2e09ae1cffd1c9cf2d4d6
	--d0098128ad480638bcef33e6a1d84651
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
    	and cmpr_btw(features:MsgSize(),1000,10000)
    	and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_gt(features:TextLines(),5,true)
        and cmpr_btw(features:WordCount(),50,500)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_eq(features:HasShortUrl(),1)
       	and cmpr_gt(features:MultipartNum(),3,true)
       	and features:IsFromGoogle()
       	and wclass:SUSP_HTML_TAG_RATIO()
    	and wclass:NO_USER_AGENT()
       	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar975')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar975' )
    end
    
    --ar976
	--svobodno
    
    --ar977
    --fe / #seo
    --26.07.2016 / rassadovskiy
    --2ed75aeb096c1ae2ea0ed36beb74fe69 dd7c90386b6d80391d877e0b2231dea6 f388edacf8a4fa5aa68170be8dddbb60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),50,1200)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() <= 2
        and features:HtmlTagCount() == 0
        and cmpr_btw(features:WordCount(),1,20)
        and cmpr_btw(features:TextLines(),1,8,true)
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and cmpr_gt(features:WordsOtherRatio(),5)
        and wclass:MOBILE_MAIL_RU()
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:XYZ_URLS()
            or wclass:SOURCE_IP_IN_DNSBL()
        	or UrlsMatchStr('yandsearch', 1))
        and (wclass:FROM_ENDS_IN_NUMS() or wclass:TO_LOCALPART_IN_REALNAME())
        and TermsMatchGroup(17243,100)
    then
        SetPSAR('ar977') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar977')
    end
    
    --ar978
	--svobodno
    
    --ar979
	--mxs_other / #reklama
    --26.07.16 / veselitsky	
	--1f6b06900b4471cd5ce2eb4feeaa9ccb 04118ba0cab027ca70b225e87e461e1b
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 50000, 150000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
	 	and	features:MultipartNum() == 5
		and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 0, 6)
    	and features:Words8bitRatio() == 0
    	and features:TextLines() == 1
    	and cmpr_btw(features:HtmlTagCount(), 0, 10)
    	and wclass:NEW_IP_30_DAYS()
		and wclass:HAS_TAG_META()
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar979')
    end
    
	--ar980
	--mxs_mbp / #vbei v google
	--06.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MsgSize(), 10000)
        and cmpr_gt(features:HtmlTagCount(), 0)
		and cmpr_eq(features:UrlNormCount(), 0) 		
    	and cmpr_eq(features:UrlCountWithoutMailRu(), 0)    	
		and wclass:RECEIVED_LAN_1()
      	and wclass:CT_IN_BODY()
    	and (wclass:MULTIPLE_HTML_TAGS()
    		or wclass:BAD_LINES_TO_WORD_RATIO())
	then
		SetPSAR('ar980')
		LogMsgToHadoop('dstat_sokolik_log', '#ar980')
    end
    
    --ar981
	--svobodno
    
	--ar982
	--mxs_other / #morshini
	--26.07.16 / veselitsky	
	--d78a0fb4f9082dc81188e753c6059597 7449a70436483239a4e08e25df62f37b f2eb40186df0780f2213a584ef704601
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 400, 2000)
    	and	features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
	 	and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:Word8bitCount(), 25)
   		and cmpr_btw(features:HtmlTagCount(), 2, 12) 
    	and features:UrlCountWithoutMailRu() == 1
    	and wclass:SHORT_BOUNDARY()
     	and wclass:DOMAINS_EQUAL()
    	and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and wclass:HAS_TAG_META()
    	and wclass:HTML_BODY_HEAD()
    then
    	SetPSAR('ar982')
    end 
    
	--ar983
	--mxs_mbp / #vbei v google
	--06.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 200, 5000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
    	and cmpr_btw(features:WordCount(), 5, 50)
		and (cmpr_gt(features:UrlNormCount(), 2, true)
    		or cmpr_eq(features:UrlNormCount(), 0))
    	and (cmpr_gt(features:UrlCountWithoutMailRu(), 2, true)
        	or cmpr_eq(features:UrlNormCount(), 0))
		and wclass:RECEIVED_LAN_1()
      	and TermsMatchGroup(17357, 100)
	then
		SetPSAR('ar983')
		LogMsgToHadoop('dstat_sokolik_log', '#ar983')
    end
    
    --ar984
	--svobodno
    
	--ar985
	--fe / #zarabotok
	--26.08.16 / veselitsky(sokolik)
	--fe2de3d48befc2f39fa67fdf85318a6f f2327777b7558a9c982c0c9498710871 5b90a273d9bb8115319d6510c2a29d8b
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 100, 10000)
       	and features:HasTextOnly() == 1
    	and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
    	and cmpr_btw(features:RepuserAge(), -1, 10, true)
        and features:Karma() < 2
 		--and (features:AbfCountryWasChanged() or features:AbfIpWasChanged())
		--and (features:Subject8bitOnly() == 1 or cmpr_gt(features:SubjectWordMixedCount(), 1))
		and	cmpr_btw(features:TextLines(), 0, 20)
    	and cmpr_btw(features:WordCount(), 0, 400)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 5)
    	and UrlsMatch(regex([[(sereport|track\.mlsend|\.pulse\-stat\.com|\.ymlp|\.com/goto/|\.ether-mailer|hsms02|\.sendgrid)]]), 1)
    then
    	SetPSAR('ar985',true)
    end
    
	--ar986
	--svobodno
    
	--ar987
	--mxs_mbp / #pdf
	--29.12.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 100000
		and features:HasAttach() == 1
		and features:FilesExtensions() == '.pdf'
		--and wclass:MESSAGE_ONLY_WITH_ONE_ATTACH()
		and wclass:RAMBLER_FE()
		and features:FromLocalPart()
		and #features:FromLocalPart() >= 15
		and (StrMatchRe(features:FromLocalPart(), regex([[\d{4,10}]])) or StrMatchRe(features:PartsFilenames(), regex([[\d{2,5}\s*\(\d{2,5}\)\.pdf]])))
	then
		SetPSAR('ar987')
	end
    
    --ar988
	--mxs_other / #sotrudniki
	--28.07.2016 / veselitsky
	--44a048225614eb41a6bff22d3ec26d31 b39e7bc9eb1c30cde10c527f624a5a03 4371781587de9566080c98a102ecb8d9
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and cmpr_btw(features:MsgSize(), 2000, 30000)
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and cmpr_gt(features:RcptNum(), 10)
		and cmpr_btw(features:WordCount(), 100, 500)
    	and cmpr_btw(features:HtmlTagCount(), 20, 60)
		and features:UrlNormCount() == 1
		and features:UrlCountWithoutMailRu() == 1
    	and wclass:MAIL_RU_MSGID_PATTERN()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
		and wclass:HAS_HDR_ORGANIZATION()
		and wclass:PRECEDENCE_BULK()
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
	then
		SetPSAR('ar988')
	end
    
	--ar989
	--mxs_other  / #dostup #nemogutdostavit #badurls
	--05.08.2016 / veselitsky(sokolik)	 
	--27ccd7e22855dece6fb74056966c9f32 c49f794d8d6b4653c028a81eab46fcbd 538aff802e64c69a8bdbb0fff6d28f67
	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'imap')
    	and cmpr_btw(features:MsgSize(), 1000, 2000000)
       	and features:HasNoAttach() == 1
    	and cmpr_lt(features:ImgNum(), 2, true)
    	and cmpr_btw(features:MultipartNum(), 1, 5, true)
    	and	cmpr_btw(features:TextLines(), 0, 25, true)
    	and cmpr_btw(features:WordCount(), 0, 70, true)
    	and cmpr_gt(features:Words8bitRatio(), 20)
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
		and features:UrlsTextSize() >= 70
		and wclass:SPF_NOT_PASS()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
		and (wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:NEW_IP_15_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:FAIL_SPF())
		and not wclass:HDR_LIST_UNSUBSCRIBE()
	then
		SetPSAR('ar989')
	end
    
    --ar990
	--mxs_mbp / #penie #vocal 
	--28.07.16 / veselitsky	
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
   		and cmpr_btw(features:MsgSize(), 500, 3000)
		and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
		and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
		and cmpr_btw(features:WordCount(), 50, 150)
    	and cmpr_gt(features:WordsMixedRatio(), 25, true)
		and cmpr_btw(features:TextLines(), 7, 25)	
    	and features:HtmlTagCount() == 0
    	and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and features:HasShortUrl() == 1
    	and wclass:YEAR_IN_FROM_LOCAL_PART()
    then
    	SetPSAR('ar990')
    end
    
    --ar991
	--mxs_other / #zarabotok #uservoice
	--20.08.16 / veselitsky	
	--3faf52629aecef869c68d6f182283375 2fde43d6ff4d33783df0af77a5203981 34a6639be876b67ccea5474ca629fb5e
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 3000, 9000)
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
    	and features:ToRealNameInToLocalPart()
		and cmpr_btw(features:WordCount(), 50, 300)
		and cmpr_btw(features:TextLines(), 15, 50)
    	and cmpr_btw(features:HtmlTagCount(), 10, 50)
    	and cmpr_btw(features:UrlNormCount(), 2, 8)
    	and (cmpr_gt(features:WordsMixedRatio(), 30) or cmpr_gt(features:WhitespaceToWordRatio(),500))
    	and features:HasImageUrl() == 1
    	--and features:HasShortUrl() == 1
    	and StrMatch(features:EnvelopeFromDomain(), '.uservoice.com')
    then
    	SetPSAR('ar991')
    end
    
    --ar992
	--svobodno
    
    --ar993
	--svobodno
    
    --ar994
    --mxs / #seminar #yahoo
    --03.08.16 / r.belyankin
    --mfc_mf_yahoo
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:MultipartNum(), 1) 
        and cmpr_eq(features:MsgIdDomain(), 'mail.yahoo.com')
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 10, 50, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:NumberCount(), 8, 15)
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:RECIPIENT_EMAIL_IN_BODY()
    then
        SetPSAR('ar994')
    end
    
    --ar995
	--svobodno
    
    --ar996
	--svobodno
    
    --ar997
    --mxs_mbp #kurs #zarabotok #google
    --03.08.16 / r.kulpin
    --ca0f9fce3b17f5f1d1e7690a9c85010b a5431ee97dea8cbe33cbb6ab25cf1396 f5f18cb17c00ce44ac232ab98471c646
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId()
        and features:IsFromGoogle()
        and features:NoRealNameFrom()
        and features:NoRealNameTo() 
        and cmpr_btw(features:UrlCount(), 10, 30, true)
        and cmpr_btw(features:TextLines(), 30, 70, true)
        and cmpr_btw(features:WordOtherCount(), 30, 80, true)
        and cmpr_btw(features:WordCount(), 250, 600)
        and wclass:VERY_LONG_LOCALPART()
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:HAS_IMAGE_URL()
    then
        SetPSAR('ar997')
    end 
    
    
    --ar998
    --mxs / #zarabotok #swift
    --03.08.16 / r.belyankin
    --c59607bd9af6e51e754c09d15ff42474 8b9461172084c9ac2d7e01946467dc01
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_btw(features:UrlsTextSize(), 200, 500)
        and (cmpr_lt(features:IpAge(), 15) or wclass:IP_REP_GAP_MORE_30_DAYS())
        and cmpr_lt(features:DomainRepipAge(), 15)
        and cmpr_eq(features:NoRealNameTo(), 1) 
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and wclass:DOMAINS_EQUAL()
        and wclass:PRECEDENCE_BULK()
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:HDR_LIST_UNSUBSCRIBE()    
    then
        SetPSAR('ar998')
    end
    
    --ar999
	--mxs / #mycom
	--27.07.16 / veselitsky
    if not IsBlocked 
    	and features:RcvSrc() == 'mxs'
        and features:ToDomain() == 'my.com'
        and StrMatchRe(features:FromDomain(), regex([[^mx\d\.[a-z]+\.com$]])) 
    then
        SetPSAR('ar999')
        LogMsgToHadoop('dstat_veselitsky_log', '#ar999')
    end 
    
    --ar1000
    --mxs / #zarabotok #more_url #hidden_url
    --20.12.16 / r.belyankin (zubr)
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
        and features:MsgSize() >= 5000 and features:MsgSize() <= 150000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 100
        and features:MultipartNum() == 1
        and features:WordCount() >= 300 and features:WordCount() <= 2000
        and wclass:HAS_TAG_META()
    then
        SetPSAR('ar1000')
    end
    
    --ar1001
	--svobodno
	
    --ar1002
    --mxs / #zarabotok #swift
    --03.08.16 / r.belyankin
    --dr_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 10, 50)
        and cmpr_btw(features:UrlsTextSize(), 800, 2000)   
        and cmpr_lt(features:DomainRepipAge(), 30)
        and cmpr_btw(features:TextLines(), 200, 1000, true)
        and cmpr_btw(features:WordCount(), 500, 2000, true)
        and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:PRECEDENCE_BULK()
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:TO_EMAIL_IN_REALNAME() 
    then
        SetPSAR('ar1002')
    end
    
    --ar1003
	--svobodno
    
    --ar1004
	--svobodno
    
	--ar1005
	--svobodno
    
    --ar1006
	--svobodno
    
	--ar1007
	--mxs_other / #pidori #korr_figury
	--05.06.2016 / minina
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_btw(features:UrlNormCount(), 0, 10, true)
        and cmpr_btw(features:TextLines(), 1, 200)
    	and cmpr_btw(features:WordCount(), 1, 3000)
    	and wclass:NOREALNAME_TO()
    	and wclass:NO_USER_AGENT()
    	and (features:MailRuFeMsgId() 
        		or StrMatchRe(features:MsgIdLocalPart(),regex([[^(\d{8,15}\.){1,}\d{8,15}$]]))
    			or (features:Helo() and not StrMatch(features:Helo(), features:FromDomain()))
    			or (features:MsgIdLocalPart() and cmpr_gt(#features:MsgIdLocalPart(), 30, true)))
    	and HeaderMatch('Content-Type', 'boundary=----[[BOUNDARY]]')
    then   
        SetPSAR('ar1007')
        LogMsgToHadoop('dstat_minina_log', '#ar1007')
    end
    
    --ar1008
	--svobodno
    
    --ar1009
    --mxs / #zarabotok #rabota #gazprombank.
    --25.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 5000 and features:MsgSize() <= 100000
        and features:UrlNormCount() >= 3
        and	features:MultipartNum() == 1
        and features:RcptNum() >= 1
        and features:TextLines() >= 10 and features:TextLines() <= 70
        and features:WordCount() >= 300 and features:WordCount() <= 5000
        and (wclass:ONE_RECEIVED() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
        and UrlsMatchStr('online.sberbank.ru')
        and UrlsMatchStr('gazprombank.ru')
    then
        SetPSAR('ar1009')
    end 
    
    --ar1010
	--svobodno
    
    --ar1011
	--mxs_mbp / #privet #short
	--21.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and features:IsFromGoogle()
        and cmpr_lt(features:MsgSize(), 1000)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlNormCount(), 0)
        and (wclass:UNDISCLOSED()
    		or wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP())
    	and (wclass:SUBJECT_NUMBERS_ONLY()
    		or wclass:SUBJECT_7BBIT_AND_BODY_8BIT())
  		and wclass:HAS_HEADER_BCC()
	then
		SetPSAR('ar1011')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar1011')
    end
    
    --ar1012
	--svobodno
    
	--ar1013
	--svobodno
    
    --ar1014
	--svobodno
    
    --ar1015
	--svobodno
    
    --ar1016
	--svobodno
    
    --ar1017
    --fe / #virus
	--05.08.2016 / r.kulpin (philip.karpov)
	--b16d3addcd1942540beb248cf985135a ea76559df45572905f38ddb7ac5083b0 82af3f1a1471cb6c9a10f440c55f522e
	if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and not features:IsPddUser()
   		and cmpr_btw(features:MsgSize(), 10000, 800000)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:HasAttach(), 1)
        --and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:FilesInArchiveNum(), 1)
        and features:IsExecNameInArchive()
        and cmpr_eq(features:FilesExtensions(), ".zip")
        and (features:Subject8bitOnly()
           or features:NoSubject())
		and features:NoRealNameTo()
        and (cmpr_lt(features:RepuserAge(), 3)
           or wclass:USER_SENDING_MORE_THAN_50_PER_DAY())         
		and cmpr_eq(features:UrlNormCount(), 0) 
		and cmpr_btw(features:TextLines(), 1, 10)
		and cmpr_btw(features:WordCount(), 1,  150)
		and wclass:CT_ENCODED_FILENAME()
		and wclass:RUSSIAN_FROM_REALNAME()       
	then
		SetPSAR('ar1017')
	end
    
    --ar1018
    --mxs / #zarabotok #no_url #hidden_url
    --25.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 1
        and features:CTEId() == 4
        and features:TextLines() == 1
        and features:HtmlTagCount() >= 1 and features:HtmlTagCount() <= 15
        and wclass:HAS_TAG_META()
    then
        SetPSAR('ar1018')
    end
    
	--ar1019
	--fe / #zarabotok
	--05.08.2016 / zubr 
	--a9e04428b19b1de3a3526dadb4b671e9 dd8462fba929272d7cfac52d3a061c1f
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 7000
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:RepuserAge() >= 0 and features:RepuserAge() <= 3
		and features:Karma() <= 0
		and features:TextLines() >= 20 and features:TextLines() <= 30
		and features:WordCount() >= 200 and features:WordCount() <= 400
		and features:Words8bitRatio() >= 70
		and features:IsAutoreg() == 1
		and features:AbfCountriesPerMonthNum() >= 2
		and features:UrlCountWithoutMailRu() == 1
	then
		SetPSAR('ar1019')
	end
    
    --ar1020
	--svobodno

    --ar1021
	--svobodno
    
    --ar1022
    --mxs_other / #vk_doc
    --03.10.16 / a.sokolov (veselitsky)
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or features:RcvSrcExt() == 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 800, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and cmpr_btw(features:HtmlTagCount(), 3 , 80)
        and cmpr_btw(features:TextLines(), 3, 45)
        and cmpr_btw(features:WordCount(), 10, 200)
        and (cmpr_gt(features:Words8bitRatio(), 30) 
    		or cmpr_gt(features:WhitespaceCount(), 500))
        and UrlsMatchStr('.vk.com/doc', 1)   
        and (wclass:NEW_IP_30_DAYS() 
    		or wclass:IP_REP_GAP_MORE_30_DAYS() 
    		or features:IsFromRambler()
			or wclass:FAKE_IN_REPLY_TO())
    	and (wclass:TERMS_ZARABOTOK_V_SETI2() or wclass:FROM_ENDS_WITH_YEAR())
    then
        SetPSAR('ar1022')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1022')
    end
    
    --ar1023
    --fe / #vk.com/doc #zarabotok
    --21.08.2016 / rassadovskiy
    --fd17657bfe726d8d044182e96bbd9ceb a2280d8559d6990a130c3d14d100d982 c68e4a458178f6a73890ad2e36a25e2f
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(),300,2000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and features:RepuserAge() < 5
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:HtmlTagCount(),2,15,true)
        and cmpr_gt(features:TextLines(),2)
        and cmpr_btw(features:WordCount(),2,70)
        and cmpr_lt(features:DotCount(),5)
        and (features:Subject8bitOnly() or features:WordsMixedRatio() > 10 or features:RcptNum() > 1 or wclass:NO_SUBJECT())
        and (wclass:AUTOREG() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY() or wclass:DIFFERENCE_RCPTNUM_AND_TO() or wclass:MOBILE_MAIL_RU())
        and UrlsMatchStr('vk.com/doc',1)
    then
        SetPSAR('ar1023') 
    end
    
    --ar1024
    --mxs_other / #zarabotok
    --06.08.2016 / rassadovskiy
    --103c6862946cf4760ca026f098827eb3 ff03a5c8e091b84552935d8cbb06345d de0122199aaba9ab10c9544019a75c70
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),3000,10000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:ToEmailInBody()
        and cmpr_btw(features:UrlNormCount(),4,12,true)
        and features:NoRealNameTo()
        and cmpr_btw(features:HtmlTagCount(),10,50)
        and cmpr_gt(features:TextLines(),5)
        and cmpr_btw(features:WordCount(),50,200)
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
            or wclass:NEW_FROMDOMAIN_AND_DKIM_7_DAYS())
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:FROM_MISMATCH_SENDER()
        and UrlsMatchStr('email-clicks.com')
    then
        SetPSAR('ar1024') 
    end
    
    --ar1025
	--svobodno
    
    --ar1026
	--svobodno
    
    --ar1027
	--svobodno
    
    --ar1028
	--svobodno
    
    --ar1029
	--svobodno
    
    --ar1030
    --mxs_other / #ip_url
    --06.11.16 / a.sokolov
    --6269cc6ae0d91af0559e0a03d637493e 796651dd8b3e942e70171e83db54036d 863257057f70a0f2811a74662b2b0cf6
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and cmpr_btw(features:MsgSize(), 15000, 1500000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 8, true)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and (cmpr_gt(features:WordCount(), 250) or cmpr_lt(features:WordCount(), 10))
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and wclass:IP_URL()
        and wclass:NO_CTE()
    then
        SetPSAR('ar1030')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1030')
    end

    --ar1031
    --mxs_mbp / #guy
    --08.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp") 
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_btw(features:WordCount(), 20, 100, true)
        and cmpr_gt(features:Words7bitRatio(), 70)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and wclass:FROM_REALNAME_SYMBOLS_ARE_UPPERCASE()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
        and wclass:RECIPIENT_EMAIL_IN_BODY()
        and wclass:FREE_MAIL()
    then
        SetPSAR('ar1031')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1031')
    end

    --ar1032
	--svobodno

    --ar1033
    --mxs_other / #.xyz_body
    --24.10.16 / a.sokolov (fix zubr)
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") 
            or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(), 50, 5000)
        and cmpr_btw(features:MultipartNum(), 1,3, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        --and cmpr_eq(features:NoRealNameTo(), 1)
        and (cmpr_eq(features:NoRealNameFrom(), 1)
            or wclass:EMPTY_FROM()
			or features:FromRealNameInFromLocalPart() == true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 2 , 8, true)
        and cmpr_btw(features:WordCount(), 5, 80)
        --and cmpr_eq(features:Subject7bitOnly(), 1)
        and (wclass:ENGLISH_LANGUAGE_MESSAGE()
            or wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
            or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
			or wclass:MORE_THAN_5_RCPT())
        and TermsMatchGroup(17359,100)
    then
        SetPSAR('ar1033')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1033')
    end
    
    --ar1034
	--svobodno
    
    --ar1035
	--svobodno
    
    --ar1036
	--mxs_mbp / #eng #163.com
	--02.01.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and features:IsFromOtherMbp()
		and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and cmpr_gt(features:WordCount(), 100)
    	and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and cmpr_gt(features:WordsOtherRatio(), 10)
    	and cmpr_gt(features:NumberCount(), 50)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and features:EngRealNameFrom()
    	and wclass:THIRD_LVL_DOMAIN_IN_FROM()
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
	then
		SetPSAR('ar1036')
    end
    
    --ar1037
    --mxs_mbp #vbei_v_google
    --25.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:Words8bitRatio(), 50)
    	and cmpr_gt(features:WordsOtherRatio(), 50)
    	and wclass:BAD_LINES_TO_WORD_RATIO()
        and TermsMatchGroup(18180, 100)
    then
        SetPSAR('ar1037')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar1037')
    end
    
    --ar1038
	--svobodno
    
    --ar1039
	--svobodno
    
    --ar1040
	--svobodno
    
    
    --ar1041
	--svobodno
    
    --ar1042
	--svobodno
    
    --ar1043
    --mxs_other / #buhgalter #virus
    --08.08.2016 / rassadovskiy (minina)
    --efc063323544ff413561d6d07447f954 3288f552fa414ce3d50be0857006420e d37bffff7061b7be9feace5cc448fbe8
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(), 1000, 100000, true) 
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachArchiveCount(), 1)
        and cmpr_btw(features:MultipartNum(), 3, 6, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 70, true)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_lt(features:Word7bitCount(), 3)
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:HAS_NOT_EXT_IMG_WITH_IMG_TAG()
        and wclass:DOMAINS_EQUAL()
        and StrMatchRe(features:PartsFilenames(),regex([[^akt\d+\.gz$]]))
    then
        SetPSAR('ar1043') 
    end
    
    --ar1044
	--svobodno
    
    --ar1045
	--svobodno
    
    --ar1046
	--svobodno
    
    --ar1047
	--svobodno
    
    --ar1048
	--svobodno
    
	--ar1049
	--mxs_mbp / #spam
	--29.12.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 1000
		and features:UrlNormCount() == 0
		and wclass:URL_COUNT_0_WITH_HTTP()
		and GetAllPartsSymbolCount('/') >= 50 
	then
		SetPSAR('ar1049')
	end
    
    --ar1050
    --mxs / #attach #zarabtok
    --09.08.16 / r.belyankin
    --984d4cc11d29b21ad9bc48e6a0a4d60d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_gt(features:MsgSize(), 300000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_btw(features:ImgNum(), 1, 3, true)
        and cmpr_btw(features:UrlCount(), 1, 20, true)
        and cmpr_gt(features:MultipartNum(), 5)
        and cmpr_lt(features:IpAge(), 15)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 25)
        and cmpr_btw(features:HtmlUniqueTagCount(), 5, 15)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        --and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:MS_MAILER()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)    
    then
        SetPSAR('ar1050')
    end

    --ar1051
	--svobodno
    
    --ar1052
	--svobodno
    
    --ar1053
    --fe #zarabotok #pohudei
    --11.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 25, true)
        and cmpr_btw(features:WordCount(), 20, 500)
        and cmpr_lt(features:HtmlTagCount(), 30)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 600)   
        and (HeaderMatchRe('From', regex([[<[a-z]{2,}\d{2,}([a-z]{1,})?@[a-z]{2,}\.[a-z]{2,4}>$]]),1)
        or HeaderMatchRe('From', regex([[<\d{1,}[a-z]{2,}\d{3,}@[a-z]{2,}\.[a-z]{2,4}>$]]),1)
        or UrlsMatchStr('/webdirect.php', 1)
        or cmpr_eq(features:FromRealNameWordCount(), 1)
        or TermsMatchGroup(17281, 100))
        and HeaderMatchRe('Content-Type', regex([[boundary="--ALT--[a-z]{25,}\d{5,}"]]),1)
    then
        SetPSAR('ar1053')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1053')
    end
    
    --ar1054
    --mxs / #zarabtok #NextPart
    --09.08.16 / r.belyankin
    --788e9eb427e735ebf33e42e192180eef 788e9eb427e735ebf33e42e192180eef
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 50, 150)
        and cmpr_btw(features:DomainRepipAge(), 0, 15) 
        and cmpr_btw(features:TextLines(), 20, 100, true)
        and cmpr_btw(features:WordCount(), 50, 200, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 50)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:IP_REP_GAP_MORE_14_DAYS()
        and wclass:MS_MAILER()
        and wclass:PRECEDENCE_BULK()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)    
    then
        SetPSAR('ar1054')
    end
    
    --ar1055
    --fe / #autoreg #flood #privet_kak_dela
    --09.08.2016 / rassadovskiy
    --0f86a08228d8613832b01588d06f1a3f 3113c4ec265c8c1945d5fc4d7403d45f 285e0ba9af5ca7613431393d3167e149
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),400,1000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and (features:NoRealNameTo() or features:NoTo())
        and (features:IsAutoreg()
            or cmpr_lt(features:RepuserAge(),7))
        and cmpr_lt(features:Karma(),0)
        and features:UrlNormCount() == 0
        and cmpr_btw(features:HtmlTagCount(),2,10,true)
        and cmpr_btw(features:WordCount(),2,8,true)
        and cmpr_btw(features:TextLines(),2,5,true)
        and features:Subject8bitOnly()
        and (wclass:USER_SENDING_MORE_THAN_20_PER_DAY() 
            or wclass:REP_USER_COMPL_RATE_MORE_3()
            or wclass:ABF_FAST_CITY_CHANGE_AND_SHORT_MESSAGE()
            or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY())
        and TermsMatchGroup(17272,100)
    then
        SetPSAR('ar1055') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1055')
    end

    --ar1056
    --mxs / #from:info.random #.htm
    --25.12.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and StrMatchRe(features:FromLocalPart(), regex([[^(mail|postmaster|online|post|lock|usa)\.[a-z\d]+$]]))
        and not wclass:PHP_URL()
        and UrlsMatchStr('.htm', 1)
    then
        SetPSAR('ar1056')
    end
    
    --ar1057
	--svobodno
    
    --ar1058
    --fe / #bazy
    --30.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000,5000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and (features:NoRealNameTo() or features:NoRealNameFrom())
        and cmpr_lt(features:RepuserAge(),5)
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_gt(features:HtmlTagCount(),5)
        and features:Karma() < 0
        and cmpr_btw(features:WordCount(),25,150)
        and cmpr_btw(features:TextLines(),3,25,true)
        and features:WordsOtherRatio() > 10
        and features:HtmlTags()['base']
        and TermsMatchGroup(17241,200)
    then
        SetPSAR('ar1058') 
    end
    
    --ar1059
    --mxs_other / #zarabotok
    --09.08.16 / a.lisitskaya
    --ad41e262fa7abc767ae6e4f2032f4a20 2c0f8910deb47632a3497ac2e9d1fc86
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 3000, 10000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and not features:IsSngCountry()
        and cmpr_btw(features:TextLines(), 3, 15, true)
        and cmpr_btw(features:WordCount(), 100, 1000, true)
        and cmpr_eq(features:SenderPtr(), 'error')
        and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
        and cmpr_eq(features:MailRuMxsMsgId(), true)
        and (wclass:HAS_IMAGE_URL() or TermsMatchGroup(17273, 100))
        and HeaderMatchRe('Organization', regex([[^[A-Z]{2,10}$]]))
	then
        SetPSAR('ar1059')
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar1059')
    end
    
    --ar1060
	--svobodno
    
    --ar1061
    --mxs_other / #casino #vulcan
    --09.08.2016 / rassadovskiy
    --29eb9daf697525e20c352066c6620f68 7dbf4dfc823b9eda7119dfffe9fac77b
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),7000,100000)
        and features:HasNoAttach() 
        and features:MultipartNum() >= 3
        and features:EnvelopeFromMatchesWithUrl()
        and features:ToEmailInBody()
        and features:NoUserAgent()
        and features:NoRealNameTo()
        and features:EmailInToRealName()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,2,true)
        and cmpr_btw(features:HtmlTagCount(),30,100)
        and cmpr_gt(features:TextLines(),20)
        and cmpr_gt(features:WordCount(),200)
        and features:WhitespaceToWordRatio() > 200
        and cmpr_gt(features:Words8bitRatio(),70)
        and not wclass:HELO_IN_FROM()
        and wclass:SUSP_SWIFT_BOUNDARY_AND_DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:TERMS_ZARABOTOK_V_SETI()
            or wclass:TERMS_ZARABOTOK_V_SETI2())
    then
        SetPSAR('ar1061') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1061')
    end
    
    --ar1062
	--svobodno
    
	--ar1063
	--mxs_mbp mxs_other / #zarabotok
	--09.08.16 / minina
	--e10a184585f75117cc9972d5464c9b52
	--633745b1f2e1a26edd2da872b9f80268
	--4a62e5cb2901ac4f43779f4f8298eab1
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_other')
    	and cmpr_btw(features:MsgSize(),2,20)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_eq(features:WordCount(),0)
       	and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_gt(features:RcptNum(),2)
    	and cmpr_gt(features:SubjectWordCount(),2,true)
    	and cmpr_eq(features:Subject8bitOnly(),1)
       	and wclass:SPF_NOT_PASS()
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    	and wclass:SUBJECT_ONLY()
    	and wclass:DOMAINS_EQUAL()
    	and wclass:NO_USER_AGENT()
    then
    	SetPSAR('ar1063')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1063' )
    end
    
    
    --ar1064
    --fe / #zarabotok #img #attach #large
	--29.12.16 / minina
	if not IsBlocked
        and false
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_gt(features:MsgSize(), 20000)
    	and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	--and cmpr_btw(features:TextLines(), 2, 100, true)
    	--and cmpr_gt(features:WordCount(), 50, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_btw(features:UrlsTextSize(), 5, 50)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100)
    	and (cmpr_lt(features:RepuserAge(), 30, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 15))
        and (cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
        	or wclass:INNER_SOURCE_SUSP_REPEAT_TAG() and wclass:AUTOREG())
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar1064')
    end
    
    --ar1065
    --mxs / #greencard
    --13.12.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:HasTextOnly() == 1  
        and StrMatchRe(features:FromLocalPart(), regex([[^(mail|postmaster|online|post|lock|info)\.[a-z\d]+$]]))
        and not wclass:PHP_URL()
        and (UrlsMatchStr('.htm', 1)
            or HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1))
        and TermsMatchGroup(18121, 10)
    then
        SetPSAR('ar1065')
    end
    
    --ar1066
	--svobodno
    
    --ar1067
	--svobodno
    
    --ar1068
	--svobodno
    
    --ar1069
	--svobodno
    
    --ar1070
    --mxs_other /#zarabotok #google #digitfrom
    --10.08.16 / r.kulpin
    --51a2926494dbb20a019b680e53633fbd 1d50bb78636bf5c38b0af0e30e230001 5ba5878f8996ea48e19bdebf0dcae438
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:NoRealNameTo()
        and cmpr_eq(features:FromRealNameWordCount(), 1) 
        and cmpr_btw(features:UrlCount(), 1, 15, true)
        and cmpr_gt(features:UrlsTextSize(), 100)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 200)
        and features:NoBodyTag()
        and (wclass:DIGITS_ONLY_LOCALPART()
           or cmpr_lt(#features:FromLocalPart(), 4))
        and wclass:HELO_WITHOUT_DOMAIN()
        and UrlsMatchStr('google')
    then
        SetPSAR('ar1070')
    end 
    
    --ar1071
    --mxs / #zarabotok #html #img
    --22.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 5 and features:WordCount() <= 50
        and features:HtmlTagCount() == 0
        and UrlsMatch(regex([[\/[a-z]{2,10}\.html$]]),1)
        and wclass:MISC_SUSP_MAILERS()
        and wclass:NOREALNAME_FROM()
    then
        SetPSAR('ar1071')
    end 
    
	--ar1072
    --mxs_mbp 
    --10.08.16 / a.lisitskaya
    --d1b82c3b02be1bed48879bbe44b13054 da4e1fcb2687f49b18af0054687909d9
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 400, 900, true)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 2, true)
    	and cmpr_lt(features:WordCount() , 7, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:PhotoHostingUrlCount(), 2)
    	and cmpr_eq(features:SPF(), 'softfail')
    	and cmpr_eq(features:GeoCode(), 'unknown')
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    then
        SetPSAR('ar1072')
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar1072')
    end 
    
    --ar1073
    --mxs_other / #train #ticket #TrainTick
    --08.08.2016 / rassadovskiy
    --e04fc0d9bca616dd33be7cd329f610bd 6d633d7895ce75345dc9f4e307d5a1f5 1e87ec2d5acf312aea94996fddc10f30
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 2000)
        and features:HasTextOnly() == 1
        and cmpr_eq(features:MultipartNum(), 1)
        and features:NoRealNameTo()
        and features:MailRuTo()
        and cmpr_lt(features:UrlNormCount(), 1, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 60, true)
        and cmpr_btw(features:TextLines(), 5, 15)
        and cmpr_lt(features:LinesToWordsRatio(), 25, true)
        and cmpr_btw(features:WordMixedCount(), 0, 5, true)
        and cmpr_gt(features:WhitespaceToWordRatio(),100)
        and (wclass:REMOTE_IP_IN_SPAMHAUS()
           or wclass:PTR_ERROR()
           or wclass:PTR_SEEMS_DYNAMIC())
        and (wclass:NAME_IN_BODY()
           or wclass:HAS_HDR_ORGANIZATION()
           or wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE())
        and (HeaderMatch('Content-Type', 'charset="windows-1251"', 1)
           or HeaderMatch('Content-type', 'charset="utf-8"', 1))
    then
        SetPSAR('ar1073') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1073')
    end
   
    --ar1074
	--mxs_mbp / #seminar #almata #astana #img_only
	--01.11.2016 / r.kulpin
	--mfc_fk_hasimg
	if not IsBlocked
  		and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 100000, 900000)   
        and cmpr_eq(features:ImgNum(), 1)
    	and features:HasNoAttach()
    	and cmpr_eq(features:MultipartNum(), 3)
        and features:Subject8bitOnly()  
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:TextLines(), 0)
        and cmpr_gt(features:SubjectWordCount(), 4)     
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:SUSP_FROM_LOCALPART()
    	and wclass:FAKE_FREE_MAIL()	
    	and wclass:FROM_ENDS_IN_NUMS()      
	then
		SetPSAR('ar1074')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1074')
	end
    
    --ar1075
    --mxs / #vakansiy
    --10.08.16 / r.belyankin
    --6530ff34f692482408771cd3f704d864 db9c637905d08088d9090223e87b5ad2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 150000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:NoRealNameTo()
        and cmpr_lt(features:UrlNormCount(), 7, true)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 100, 2000, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 50)
        and (wclass:MAIL_RU_MSGID_PATTERN()
           or wclass:MSGID_WITHOUT_DIGITS())
        and wclass:PRECEDENCE_BULK()
        and (wclass:PTR_ERROR() or wclass:SUSP_PTR_YOTA() or wclass:PTR_SEEMS_DYNAMIC()
           or wclass:REMOTE_IP_IN_SPAMHAUS())
    then
        SetPSAR('ar1075')
    end
    
    --ar1076
	--svobodno
    
    --ar1077
    --mxs / #plastir
    --11.08.16 / r.belyankin
    --926b8f147c5a19dd26e00dcc4fa08118
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 200000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 40, 150)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 30)
        and cmpr_gt(features:WhitespaceToWordRatio(), 700)
        and wclass:UNKNOWN_IN_RECEIVED()
        and wclass:MS_MAILER()
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar1077')
    end
    
    --ar1078
    --mxs / #reklama
    --23.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:HasTextOnly() == 1
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:UrlNormCount() == 0
        and features:TextLines() >= 10 and features:TextLines() <= 40
        and features:WordCount() >= 100 and features:WordCount() <= 250
        and features:HtmlTagCount() >= 25 and features:HtmlTagCount() <= 100
        and wclass:NEW_IP_30_DAYS()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:MX_INVALID_RATE_MORE_THAN_50()
        and wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO()
    then
        SetPSAR('ar1078')
    end
    
    --ar1079
    --mxs_sender / #getresponse
    --11.08.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(),2000,30000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and (((features:ToRealName() == "Friend"
            or features:ToRealNameInToLocalPart()) and features:NoRealNameReplyTo())
            or cmpr_btw(features:DomainRepipAge(), 0, 15))
        and cmpr_btw(features:UrlCountWithoutMailRu(),2,4,true)
        and features:HasImageUrl()
        and cmpr_gt(features:HtmlTagCount(),20)
        and (features:NoHtmlTag() 
            or features:WordMixedCount() > 50 and features:WordsMixedRatio() > 20)
        and cmpr_btw(features:TextLines(),5,30)
        and (cmpr_lt(features:DomainRepipAge(),30) or features:FromDomain() == "fastmail.com" or features:IsFromYandex())
        and cmpr_gt(features:WordCount(),20)
        and cmpr_gt(features:WordMixedCount(),1,true)  
        and (features:FromAndDkimDomainMismtach() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
        and cmpr_gt(features:WhitespaceToWordRatio(),500)
        and UrlsMatchStr('getresponse.com')
	then
		SetPSAR('ar1079') 
		--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1079')
    end
    
    --ar1080
	--fe / #zarabotok
	--11.08.16 / minina
	--2210fb3a9f9e883ea862d65f8fc055e0
	--9d1df847358702c18c50de733a287c42
	--4be337b92a80db3063a187f132c14a24
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe') 
    	and cmpr_btw(features:MsgSize(),1000,10000)
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_eq(features:WordCount(),50,500)
    	and cmpr_lt(features:TextLines(),20)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_eq(features:Subject8bitOnly(),1)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_gt(features:SubjectNumbersCount(),2,true)
    	and cmpr_btw(features:RepuserAge(),1,7,true)
       	--and wclass:REP_USER_SPAM_RATE_MORE_50()
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    then
    	SetPSAR('ar1080',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1080' )
    end
    
    --ar1081
	--smtp / #virus #resume
    --11.08.16 / rassadovskiy	
	--bd0241cc95191a64be3b0bf2713d68f6 cef47d3e1ba34ddc92d6139fa9927583 a78ec8274461405fbf570f19df725bd0
    if not IsBlocked
    	and features:RcvSrcExt() == 'smtp' 
    	and cmpr_btw(features:MsgSize(), 70000, 3000000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
    	and features:RepuserAge() < 7
		and (features:NoRealNameTo() or wclass:TO_LOCALPART_IN_REALNAME())
    	and features:NoUserAgent()
    	and cmpr_btw(features:WordCount(),10,200)
    	--and cmpr_gt(features:WordsMixedRatio(),5)
    	and features:FilesExtensions() == '.docx' 
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:HAS_HDR_ORGANIZATION()
    then
    	SetPSAR('ar1081')
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1081')
    end
    
    --ar1082
	--svobodno
    
    --ar1083
	--svobodno
    
    --ar1084
    --mxs_other / #pidori #uvelicheniye #volosi #boundary
    --11.11.16 / minina
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
		and not wclass:DKIM_PASS()
        and HasHeader('Content-Type')
        and HeaderMatchRe('Content-Type', regex([[(?i)boundary=-{1,5}([a-z\d-]+).*boundary=-{1,5}\1]]))
	then
    	SetPSAR('ar1084')
	end
    
    
    --ar1085
	--svobodno
        
    --ar1086
	--svobodno
    
    --ar1087
	--svobodno
    
    --ar1088
    --mxs / #zarabotok #afrodita #pdf
    --10.08.16 / r.belyankin
    --c4afd1df6ce5fa46ff421f35715fec94 97195a907efdf9a490d4c4c085078c51
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000, 500000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:IsFromRambler(), true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_gt(features:RcptNum(), 5)
        and cmpr_btw(features:TextLines(), 0, 10, true)
        and cmpr_btw(features:WordCount(), 0, 20, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
        and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar1088')
    end
    
    --ar1089
    --mxs / #zarabotok #forex #modul #google
    --12.08.16 / r.belyankin
    --12be92687e25e209106210db0dadb8d8 4999da1cfdf8304a25dc7b67c5a3e3a5
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:FromDomain(), 'gmail.com')
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 500, true)
        and cmpr_btw(features:WordCount(), 1, 1500, true)
        and cmpr_btw(features:HtmlTagCount(), 100, 1000)
        and wclass:EMAIL_IN_FROM_REAL_NAME()
        and wclass:OTHER_IP_IN_DNSBL()
    then
        SetPSAR('ar1089')
    end
    
    --ar1090
	--svobodno
    
    --ar1091
	--svobodno
    
    --ar1092
    --fe / #blogspot #zaravotok
    --06.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
       	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:HtmlTagCount(), 30)
    	and (cmpr_lt(features:RepuserAge(),7) or wclass:HAS_5_DAYS_GAP())
    	and cmpr_gt(features:AbfCountriesPerMonthNum(), 2)
       	and wclass:HAS3D_LVL_DOMAIN()
        and UrlsMatchStr('blogspot.')
    then
        SetPSAR('ar1092')
    end
    
    --ar1093
	--svobodno
    
    --ar1094
	--svobodno
    
    --ar1095
    --mxs_mbp #flud
    --12.08.16 / a.sokolov
    --dcbedd6249015708f2f9ed0573722331 07b6b6780a0a331eff4b417bd91787c4 e0073e91b1951e1b0d19d222b875500f
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50, 200)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 3, 20, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:IsFromYandex(), true)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and cmpr_eq(features:Words7bitRatio(), 0)
        and HeaderMatch('Message-Id', '@email.android.com')
    then
        SetPSAR('ar1095')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1095')
    end
    
    --ar1096
	--svobodno
    
   --ar1097 
   --fe / #bizml 1pic
   --25.12.2016 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_gt(features:ImgNum(),1,true)  
        and UrlsMatchStr('cloud.mail.ru', 1)
        and TermsMatchGroup(18205,100)
        and (wclass:SUSP_PARTS_FILE_NAMES() or wclass:ONE_WORD_SUBJECT())
        and (wclass:DIGITS_ONLY_LOCALPART() or  wclass:SHORT_ALPHA_LOCALPART())
    then
        SetPSAR('ar1097') 
    end
    
    --ar1098
	--svobodno

    --ar1099
    --mxs_sender #getresponse.com
    --12.08.16 / a.sokolov
    --c7d83ba51c6e72f9cfc9b30d508968fb c314eab2d53ae91d895df6e812d11dd3 5039e95115113a2252cf3ce61e46ec5c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 5000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:MsgIdDomain(), "getresponse.com")
        and cmpr_eq(features:ToRealNameInToLocalPart(), true)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
        and cmpr_btw(features:TextLines(), 5, 20)
        and cmpr_btw(features:WordCount(), 50, 150)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and cmpr_gt(features:WhitespaceCount(), 800)
        and cmpr_gt(features:UrlsTextSize(), 180)
        and cmpr_eq(features:NoRealNameReplyTo(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
    then
        SetPSAR('ar1099')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1099')
    end  
    
    --ar1100
	--svobodno
    
    --ar1101
	--svobodno
    
    --ar1102
	--svobodno
    
    --ar1103
    --fe / #pdf #zarabotok
    --08.09.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:MultipartNum() == 5
        and features:IsAutoreg()
        and features:NoRealNameTo() 
        and cmpr_lt(features:Karma(),0)
        and cmpr_lt(features:RepuserAge(),60)
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:TextLines(),2,7,true)
        and cmpr_btw(features:WordCount(),5,20)
        and features:Words7bitRatio() == 0
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and wclass:NEW_IP_30_DAYS()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:HDR_MANY_ENVELOPE_TO()
        and wclass:FE_REGIONS_MISMATCH_WITH_MORE_THAN_10_RCPT()
        and StrMatchRe(features:PartsFilenames(), regex([[(?i)^[^\d]{5,}\.pdf$]]))
    then
        SetPSAR('ar1103') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1103')
    end
    
    --ar1104
    --mxs_other / #vacancy #zarabotok
    --13.08.2016 / rassadovskiy
    --3aae589d0cc7fa2dd6f992a1be9f93a0
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),1000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_btw(features:MultipartNum(),1,3,true)
        and features:NoRealNameTo() == 1
        and cmpr_btw(features:UrlCountWithoutMailRu(),0,5,true)
    	and cmpr_btw(features:HtmlTagCount(),20,80)
        and cmpr_btw(features:TextLines(),1,15,true)
        and cmpr_gt(features:WordCount(),20)
        and features:WhitespaceToWordRatio() > 130
        and (wclass:REMOTE_IP_IN_SPAMHAUS()  
            or wclass:PTR_ERROR()
            or wclass:HAS_TAG_META())
        and (wclass:MISSING_DATE() or wclass:MORE_THAN_1_RCPT())
        and (cmpr_gt(features:RcptNum(),1) or StrMatchRe(features:MsgIdLocalPart(), regex([[(?i)^(?:[a-z\d]{3,20}\$){3}$]])))
        and TermsMatchGroup(17194,100)
    then
        SetPSAR('ar1104') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1104')
    end
    
    --ar1105
    --mxs_mbp / #qip #flood
    --14.08.2016 / rassadovskiy
    --de49e4afba0c50a21c262ee57ad27dcf 3a7cdd34d00f1bdbc8148f8cee880729
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),25,170)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:GeoCode() == "unknown" 
        and features:SrcIp() == "185.79.118.173"
        and features:MsgIdDomain() == "email.android.com" 
        and features:NoRealNameTo()
        and features:NoRealNameFrom()
        and features:NoUserAgent()
        and features:UrlNormCount() == 0
        and features:HtmlTagCount() == 0
        and features:TextLines() == 1
        and features:Word7bitCount() == 0
        and cmpr_btw(features:Word8bitCount(),2,10,true)
        and cmpr_btw(features:SubjectWord8bitCount(),2,10,true)
        and features:DotCount() == 0
        and features:Subject8bitOnly()
        and wclass:MISSING_DATE()
    then
        SetPSAR('ar1105') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1105')
    end
    
    --ar1106
	--svobodno
    
    --ar1107
    --fe / #zarabotok
    --13.08.2016 / rassadovskiy
    --51cbfecc9537a135dfa379f0932b1432 56e5421f37e29f473c26ceaae8eb048b
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,2000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and (features:IsAutoreg()
            or cmpr_lt(features:RepuserAge(),14))
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_lt(features:HtmlTagCount(),20)
        and cmpr_btw(features:TextLines(),1,6,true)
        and features:Words8bitRatio() > 70
        and cmpr_lt(features:DotCount(),5,true)
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:YEAR_IN_FROM_LOCAL_PART()
        and wclass:NEW_IP_15_DAYS()
        and UrlsMatch(regex([[^[a-z\d]+\.(?:ml|ga|ru|cf)$]]),1)
    then
        SetPSAR('ar1107') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1107')
    end

    
    --ar1108
    --fe / #zarabotok
    --13.08.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,2000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and (features:IsAutoreg()
            or cmpr_lt(features:RepuserAge(),14))
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,2,true)
        and cmpr_btw(features:HtmlTagCount(),2,15)
        and cmpr_btw(features:TextLines(),2,7,true)
        and features:WordCount() > 20
        and features:WordsMixedRatio() > 7
        and cmpr_lt(features:DotCount(),5,true)
        and (not wclass:RUSSIAN_FROM_REALNAME() or wclass:NEW_IP_1_DAY())
        and (wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY() or features:RepIpComplRatioByLastHour() > 3)
        and wclass:NEW_IP_15_DAYS() 
        and UrlsMatch(regex([[^[a-z\d\-\.]+\.ru$]]),1)
    then
        SetPSAR('ar1108') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1108')
    end
    
    --ar1109		
    --fe #virus
    --23.08.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and (cmpr_btw(features:MsgSize(), 200000, 400000) or cmpr_btw(features:MsgSize(), 20000, 60000))
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_btw(features:HtmlTagCount(), 0, 20, true)
        and cmpr_btw(features:TextLines(), 2, 15, true)
        and cmpr_btw(features:WordCount(), 20, 250, true)
        and cmpr_gt(features:NumberCount(), 2, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words8bitRatio(), 70)
        and features:UserCreateTime()
        and ((cmpr_lt(features:RepuserAge(), 40) and cmpr_lt(features:UserCreateTime().days, 60)) or TermsMatchGroup(17297,100))
        and (wclass:ARCHIVE_WITH_ONE_FILE_INSIDE() or wclass:SOURCE_IP_IN_TOR_NODE())
        and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar1109')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1009')
    end
    
    --ar1110
	--svobodno

    --ar1111
    --mxs_other / #zarabotki
    --09.09.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        	or cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    		or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 500, 60000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_btw(features:UrlNormCount(), 1, 6, true) or cmpr_gt(features:UrlNormCount(), 50))
        and cmpr_btw(features:HtmlTagCount(), 10 , 500)
        and (cmpr_btw(features:TextLines(), 1, 30, true) or cmpr_btw(features:TextLines(), 70, 200, true))
        and cmpr_btw(features:WordCount(), 4, 1000)
        and (cmpr_gt(features:Words8bitRatio(), 40) or wclass:NO_TO() or cmpr_gt(features:WordsOtherRatio(), 20))
        and (cmpr_eq(features:Subject8bitOnly(), 1) 
    			or wclass:FAKE_REPLY_IN_SUBJECT() 
    			or wclass:ONLY_7BIT_WORDS()
				or wclass:DIFFERENT_REPLY_TO_AND_FROM()
				or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
				or wclass:HAS_HEADER_COREMAIL_ANTISPAM()
				or cmpr_gt(features:NumberCount(), 10))
        and (wclass:SPF_NOT_PASS()
                or wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
                or wclass:FAKE_REPLY_IN_SUBJECT()
                or not wclass:RUSSIAN_FROM_REALNAME()
        		or wclass:SUBJECT_MIXED_BADRATIO()
				or wclass:TERMS_ZARABOTOK_V_SETI()
    			or wclass:IP_URL()
    			or wclass:FAKE_MSG_ID()
				or wclass:FROM_LOCAL_PART_ONLY_NUMBERS())
        and wclass:PHP_URL()
        and UrlsMatch(regex([[\/i\/[a-zà-ÿ0-9]{3,}\.php$]]),1)
    then
        SetPSAR('ar1111')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1111')
    end
    
    --ar1112		
    --fe #EMS
    --25.08.16 / a.sokolov
    --2e2927ad26fca1a689450a0537dca7fa d4b3014b8029462e51e9bc15a95d30dc db68a8ae0f05af97c8e23e8ec9b0f2f2
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_btw(features:MsgSize(), 1000 ,5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0 ,30, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
        and cmpr_btw(features:TextLines(), 5, 25, true)
        and cmpr_btw(features:WordCount(), 50, 150)
		and (cmpr_gt(features:NumberCount(), 5) or wclass:NO_SUBJECT())
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 50)
		and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:MORE_THAN_N_RCPT() or wclass:FE_ENG_MSG())
        and (wclass:SHORTURL() or wclass:FREE_HOSTING())
    then
        SetPSAR('ar1112', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1112')
    end
    
    --ar1113
	--svobodno
        
    --ar1114
	--svobodno
    
	--ar1115
	--svobodno
        
    --ar1116
	--svobodno
    	
	--ar1117
	--svobodno
     	
    --ar1118
	--svobodno
    
 	--ar1119
	--svobodno
    
    --ar1120
	--svobodno
    
	--ar1121
    --mxs_mbp #pohudei
    --15.08.16 / a.sokolov
    --3ae39c02a010d1218399a24b5b9efa3d e43f68004b0098eae88601fa230e40f6 4e7f7b0aeadf439292d436a896f8c94a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:EmptyFrom(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 2, 10, true)
        and cmpr_btw(features:WordCount(), 10, 100)
        and wclass:EMPTY_HEADER()
        and wclass:UNENCODED_SUBJECT()
        and wclass:W8BIT_NO_CTE()
    then
        SetPSAR('ar1121')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1121')
    end   
    
   --ar1122
    --mxs_mbp #zarabotki #casino
    --15.08.16 / a.sokolov
    --07e8bdf592848d972ccc016e69f7b297 a5c3dc1c283a21761a698939a4608c6e 53efe11c40a9d85b0a6fed9e2e6cc172
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 100)
        and cmpr_btw(features:TextLines(), 5, 15, true)
        and cmpr_btw(features:WordCount(), 50, 200)
        and cmpr_eq(features:IsFromAol(), true)
        and wclass:MESSAGE_ID_NO_DOMAIN_SEEMS_BAD()
        and wclass:FROM_LOCALPART_IN_REALNAME()
        and wclass:XMAILER_NIMAILAGENT()
    then
        SetPSAR('ar1122')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1122')
    end 
    
    --ar1123
	--svobodno
    
    --ar1124
	--svobodno
    
    --ar1125
	--svobodno
    
    --ar1126
	--svobodno
    
    --ar1127
	--svobodno
    
    --ar1128
	--svobodno
    
    --ar1129
	--mxs_mbp / #vbei v google #esp
	--26.12.16 / a.sokolov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and (features:IsFromRambler()
    		or features:IsFromOtherMbp())
		and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and (wclass:UNAVAILABLE_IN_RECEIVED()
    		or wclass:SPF_NOT_PASS_FROM_MBP())
    	and UrlsMatchStr('app.getresponse.com')
	then
		SetPSAR('ar1129')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar1129')
    end
    
    --ar1130
	--svobodno
    
    --ar1131
    --mxs_other / #pohudei #bad_ct #bad_to
    --26.08.2016 / rassadovskiy(sokokik)
    --28403e364f26dab0fecafdd59e591a2b c297de20b6cb4840b3dd4993ce0846d2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 4, true)
        and features:NoUserAgent()
        and features:UrlCountWithoutMailRu() <= 4
        and features:HtmlTagCount() <= 20
        and cmpr_btw(features:TextLines(), 1, 40, true)
        and features:Word7bitCount() < 100
        and features:DotCount() < 10
    	and (wclass:FROM_INFORMATION_SERVICE() or wclass:SHORT_MESSAGE() or wclass:ONLY_7BIT_WORDS())
        --and (wclass:MULTIPLE_RCPT_WITH_DNSBL() or wclass:IP_IN_SPAMHAUS_AND_PTR_ERROR() or wclass:REMOTE_IP_IN_SPAMHAUS())
        --and wclass:HELO_IN_FROM()
    	and(wclass:ONE_RECEIVED() or wclass:PTR_ERROR())
        and (HeaderMatchRe('To',regex([[(?i)^[a-z\d]+\s[a-z\d\._-]+@[a-z-\d\._-]+\.[a-z]+]])) or wclass:LAST_AND_FIRST_BOUNDARY_DIFFERS())
    then
        SetPSAR('ar1131') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1131')
    end
    
    --ar1132
	--svobodno
    
    --ar1133
	--svobodno
    
    --ar1134
	--svobodno
    
    --ar1135
    --mxs / #zarabotok #@_in_url
    --17.08.16 / r.belyankin
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:MultipartNum(), 1)   
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 5, 50)
        and wclass:TO_IN_SUBJECT()
        and wclass:MS_MAILER()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_X_PHP_SCRIPT()
    then
        SetPSAR('ar1135')
    end
    
    --ar1136
	--svobodno
    
    --ar1137
    --fe / #virus #php #url
    --17.08.16 / veselitsky	
    --6abb962d12968319e71e928d348cd8e3 66d438950ebfd052aecf60a3c0b058d8 7ffde7beaf29e679b2cbba697f430a69
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_btw(features:MsgSize(), 300, 1500)
    	and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId()
		and features:NoRealNameTo()
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_lt(features:TextLines(), 4,true)
    	and wclass:USER_SENDING_MORE_THAN_50_PER_DAY()
    	and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
    	and (UrlsMatchStr('php',1) or UrlsMatchStr('.htm',1))
        and TermsMatchGroup(17289, 100)
    then
    	SetPSAR('ar1137')
    end
    
    
    --ar1138
    --fe / #zarabotok #1 url/xx/
    --26.12.2016 / razuvaev
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_btw(features:MsgSize(),2000,6000)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:Word8bitCount(),100)   
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and wclass:WORDS_TO_URLS_BADRATIO()  
        and UrlsMatch(regex([[.{1,50}\/.{1,50}]]),1)
    then
        SetPSAR('ar1138') 
    end
    
    --ar1139
	--svobodno
    
    --ar1140
	--svobodno

    --ar1141
	--svobodno
    
    --ar1142
	--svobodno
    
    --ar1143
	--svobodno
    
	--ar1144
    --fe / #virus #exe
	--16.09.16 / minina
	--556835c544ed86d0f7e4834583bd7d33
	--9daa95b44fee3ea22e5f0cba74e6c88d
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 1000000, 100000000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_gt(features:AttachAllCount(), 2, ture)
    	and cmpr_btw(features:TextLines(), 2, 20,true)
    	and cmpr_btw(features:WordCount(), 50, 250, true)
    	and cmpr_gt(features:SubjectWordCount(),2,true)
       	and cmpr_eq( features:UrlCountWithoutMailRu() , 0)
       	and cmpr_lt(features:RepuserAge(), 15, true)
    	and StrMatch(features:PartsFilenames(), '.exe')
    	and cmpr_gt(features:NumberCount(), 10, true)
    then
    	SetPSAR('ar1144',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1144' )
    end
    
    
    --ar1145
	--svobodno
    
    --ar1146
    --fe / #zarabotok_url
    --17.08.16 / r.belyankin
    --19727222a4a45d11dbbad38bfc6eeb9d 4510dbf5e19fdd9b771f666d74618bad
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_gt(features:MsgSize(), 500, 5000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 150)
        and cmpr_eq(features:MultipartNum(), 3)  
        and cmpr_lt(features:RepuserAge(), 5)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 30, true)
        and cmpr_eq(features:AbfIpWasChanged(), true)
        and cmpr_eq(features:NoRealNameTo(), 1)     
        and cmpr_btw(features:TextLines(), 5, 15, true) 
        and cmpr_btw(features:WordCount(), 5, 100, true)
        and cmpr_eq(features:DotCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 5, 25)   
        and not wclass:PHP_URL()
        and UrlsMatch(regex([[^[a-z\d-]+\.ru\/[a-zA-Z\d]+\/$]]),1)
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1146')
    end
    
    --ar1147
    --mxs / #zarabotok #img
    --15.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 2
        and features:TextLines() >= 10 and features:TextLines() <= 150
        and features:HtmlTagCount() >= 50 and features:HtmlTagCount() <= 250
        and (wclass:ONE_RECEIVED() or wclass:SUSP_IMAGE_NAME_3())
        and (wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and UrlsMatch(regex([[mailru\.dmstat\.ru]]),1)
    then
        SetPSAR('ar1147')
    end
    
    --ar1148
    --mxs / #zarabotok #html #php
    --03.01.17 / r.belyankin
    if not IsBlocked
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 150
		and features:MultipartNum() == 1
        and features:RepFromDomainSpamHitsByLastWeek() > 0
        and wclass:SUSP_FROM_AND_REPLY_TO()
        and not wclass:FROM_INFORMATION_SERVICE()
        and UrlsMatch(regex([[\/(?:[a-zA-Z]+|\.{2,}).(php|html)$]]),1)
        and not UrlsMatch(regex([[\/(index|order|load|post)\.php$]]),1)
    then
        SetPSAR('ar1148')
    end
    
    --ar1149
    --mbp / #zarabotok #pdf
    --27.12.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 1000)
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and StrMatch(features:PartsFilenames(), features:From())
    	and wclass:RAMBLER_FE()
    then
        SetPSAR('ar1149')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1149')
    end

    --ar1150
    --smtp / #zarabotok #sekret_deneg
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 100, true)
    	and cmpr_gt(features:WordCount(), 100, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and features:ToRealNameInToLocalPart()
    	and cmpr_lt(features:RepuserAge(), 5, true)
       	and (wclass:NEW_IP_30_DAYS() or cmpr_gt(features:RepIpComplRatioByLastWeek(), 3))
    	and (wclass:SUBJECT_MIXED_BADRATIO() or wclass:WORDS_OTHERS_BAD_RATIO())
    then
    	SetPSAR('ar1150')
    end
    
    --ar1151
    --fe / #virus #
	--18.08.16 / minina
	--ada20c65a82e50af6473a472b9a7b20d
	--bdba6ed118468c306671ba51b776bc8b
	--88fffe0bd9c22f2f33cb32c31321b0f4
	--cbc274c5369f798ba9d7ee094fd3e102
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
       	and cmpr_btw(features:MsgSize(),10,1000)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_btw(features:TextLines(),1,10,true)
    	and cmpr_btw(features:WordCount(),1,50,true)
    	and cmpr_btw(features:MultipartNum(),1,3,true)
      	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_eq(features:UrlNormCount(),1)
    	and wclass:PHP_URL()
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    	and (wclass:HAS_2_DAYS_GAP() or cmpr_btw(features:RepuserAge(),1,15,true))
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{8,15}\.\d{8,15}$]]))
    then
    	SetPSAR('ar1151',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1151' )
    end
    
    --ar1152
	--mxs_mbp / #vbei v google #narod
	--02.01.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        --and (features:IsFromOtherMbp() or features:IsFromRambler())
		and cmpr_btw(features:MsgSize(), 100, 200000)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:HasAttach(), 1)
    	and StrMatch(features:PartsFilenames(), '.txt')
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and (cmpr_eq(features:Subject7bitOnly(), 1) or cmpr_gt(features:SubjectWordOtherCount(), 0))
    	--and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:CT_ENCODED_FILENAME()
	then
		SetPSAR('ar1152')
    end
    
    --ar1153
    --mxs / #zarabotok #sparkpostmail #img
    --27.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 150000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 200 and features:UrlsTextSize() <= 700
        and features:TextLines() >= 10 and features:TextLines() <= 100
        and features:HtmlTagCount() >= 50 and features:HtmlTagCount() <= 250
        and (wclass:MS_MAILER() or wclass:RECEIVED_BAD_PATTERN_4())
        and (wclass:NEW_DKIM_30_DAYS() or wclass:NEW_IP_15_DAYS())
        and UrlsMatch(regex([[^go\.sparkpostmail(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar1153')
    end
    
    --ar1154
    --fe / #amsweb.php #zarabotok
	--29.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'smtp')
    	and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_gt(features:UrlNormCount(), 1, true)
       	and (wclass:MS_MAILER() or wclass:TO_LOCALPART_IN_SUBJECT() or wclass:TO_LOCALPART_IN_REALNAME())
    	and (wclass:LASTHELO_WITHOUT_DOMAIN_WE()
        	or features:LastHelo() and not StrMatch(features:LastHelo(), features:FromDomain()))
    	and UrlsMatchStr('/amsweb.php', 1)
    then
    	SetPSAR('ar1154')
    end
    
    --ar1155
    --mxs_other / / #MBS
    --29.12.2016 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 6000, 65000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 70)
        and cmpr_lt(features:UrlNormCount(), 10, true)
        and cmpr_btw(features:UrlsTextSize(), 300, 2000)
        and cmpr_eq(features:FreeHostingUrlCount(), 1)
        and cmpr_btw(features:TextLines(), 3, 90)
        and cmpr_btw(features:WordCount(), 10, 300)
        --and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EmailsCountInBody(), 1)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (mrasRepHasSendingGap(features:FromDomain(), 3, 30, 14) or wclass:NEW_FROMDOMAIN_30_DAY())
    then   
        SetPSAR('ar1155')
    end
    
    --ar1156
	--svobodno
 
	--ar1157
	--svobodno
    
    --ar1158	
	--svobodno
    
	--ar1159
	--svobodno
      
    --ar1160
	--svobodno
    
	--ar1161
	--svobodno
    
    --ar1162
    --mxs / #servis #popolare #bank #zarabotok
    --19.08.16 / r.kulpin
    --4e088876bc4e1e1cea3c5fabfb02c71e f8e25296d6d481cddf8042a2f96398ad d5ec5bf5346496bce6bbbf2cb002ce75
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 15000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)        
        and cmpr_eq(features:GetSubjectEncoding(), "UTF-8") 
        and features:Ptr3LevelDomain()
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and cmpr_gt(features:UrlCount(), 10)
        and features:HasUnsubscribeUrl()
        and cmpr_btw(features:TextLines(), 10, 25, true)
        and cmpr_btw(features:WordCount(), 40, 100, true)
        and cmpr_btw(features:Word7bitCount(), 1, 20, true)
        and cmpr_btw(features:HtmlTagCount(), 100, 200)  
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        and wclass:HAS_IMAGE_URL()
        and wclass:FROM_MATCH_WITH_URL()   
    then
        SetPSAR('ar1162')
    end
    
	--ar1163
	--svobodno
    
    --ar1164
	--svobodno
    
    --ar1165
    --fe / #baza #spravochnik 
    --19.08.16 / r.kulpin
    --415cd116015faecaa803bca216f2275e 9067f68303917fb12e5807884ea252bb c4ab6aa026ebb66a96f2126f03a50d33
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 500, 8000)
	   	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and features:NoRealNameTo()
        and features:Subject8bitOnly()
        and features:UserCreateTime()   
        and cmpr_lt(features:UserCreateTime().days, 7)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_lt(features:UrlCount(), 8, true)
        and cmpr_btw(features:TextLines(), 3, 25, true)
        and cmpr_btw(features:NumberCount(), 4, 20, true)
        and (cmpr_btw(features:NumbersToZeroRatio(), 5, 70, true)
           or cmpr_btw(features:WordsOtherRatio(), 5, 70, true))
    	and cmpr_btw(features:HtmlTagCount(), 3, 40) 
        and wclass:VERY_LONG_LOCALPART()  
        and (wclass:HAS_STD_URL_IN_SUBSCRIPTION() or wclass:COMPL_RATIO_BY_LAST_HOUR_MORE_THAN_15())
        and (wclass:REP_USER_SPAM_RATE_MORE_25()
           or TermsMatchGroup(17098,100) or wclass:USER_AGE_7())
    then
    	SetPSAR('ar1165')
    end
    
	--ar1166
	--smtp / #cpo #sro 
	--19.08.16 / veselitsky		
	--8c196a91e01f28c3125465a6cbf7e9ce 7d2bf1a574ec1507ccc83efd1cf147ac c7cd391c97cd4c115ee8910ec97dd0f0
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp' 
    	and cmpr_btw(features:MsgSize(), 800, 4000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
    	and features:NoRealNameTo() == 1
		and cmpr_btw(features:WordCount(), 20, 50)
    	and cmpr_btw(features:HtmlTagCount(), 10, 30)
    	and cmpr_gt(features:WordsOtherRatio(), 75)
    	and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and wclass:HAS_TAG_STYLE()
    	and wclass:HAS_TAG_META()
    then
    	SetPSAR('ar1166', true)
    end
    
	--ar1167
	--mxs_other / #zarabotok
	--03.11.16 / veselitsky(v.rass)(a.sokolov)
	--bda055ace930e9cf03e426ff3270e751 d64c4dac23c995d1b8301600184cf24f 51eca59eac6b8562950a7696d321b4f2
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
		and cmpr_btw(features:WordCount(), 50, 200)
        and cmpr_btw(features:HtmlTagCount(), 10, 25)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 5)
    	and wclass:NEW_FROMDOMAIN_7_DAYS()
    	and (wclass:TERMS_ZARABOTOK_V_SETI2()
    		or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH())
    	and wclass:HAS_TAG_STYLE()
    	and wclass:HAS_TAG_META()
        and (StrMatchRe(features:FromDomain(), regex([[^[a-z]{2,4}\d+\.zendesk\.com$]]))
    		or StrMatchRe(features:FromDomain(), regex([[^[a-z]{2,10}\.zendesk\.com$]])))
    then
    	SetPSAR('ar1167')
    end
    
    --ar1168
    --mxs_other #zarabotki #google_short_url
    --19.08.16 / a.sokolov
    --28e4af1d6fa6a1176eb54bf182fef732 518914080b6147040c2ae61f1e2a22c7 e930a65943af866346ccd306fdd0f96d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasDifferentFromAndReply(), 1)
        and cmpr_eq(features:HasShortUrl(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:TextLines(), 4, 15, true)
        and cmpr_btw(features:WordCount(), 20, 150)
        and cmpr_gt(features:NumberCount(), 8, true)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NAME_IN_BODY()
    then
        SetPSAR('ar1168')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1168')
    end
    
    --ar1169
	--svobodno
  
    --ar1170
	--svobodno

    --ar1171
	--svobodno
    
    --ar1172
    --test_rule
    --19.07.2016 / a.sokolov
    if cmpr_eq(features:RcvSrcExt(), "fe")
        and features:IsEnglishMessage()
        and HeaderMatch('To', '.de')
    then
		SetPSAR('ar1172', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1172')
	end   

    --ar1173
    --mxs_other #pohudei
    --22.08.16 / a.sokolov
    --f4929bf9a32722283d15b2ea7873a8d2 e90ac7e49862ceb1e1b8067b5f729b0c 7028da2b804ef6fefb69c9246cd2a6f7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and (cmpr_btw(features:UrlCountWithoutMailRu(), 0, 1, true) or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
        and cmpr_lt(features:HtmlTagCount(), 30)
        and cmpr_btw(features:TextLines(), 3, 80, true)
        and cmpr_btw(features:WordCount(), 30, 1000)
        and (cmpr_gt(features:NumberCount(), 20) or wclass:NO_URLS_WITH_HTML_TAGS())
        and cmpr_lt(features:DotCount(), 5)
        and cmpr_gt(features:Words8bitRatio(), 50)
        and (wclass:FROM_INFORMATION_SERVICE() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:SOFTFAIL_SPF())
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar1173')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1173')
    end
   
    --ar1174
	--svobodno
    
    --ar1175
	--svobodno
    
    --ar1176
	--svobodno
    
    --ar1177
    --mxs_other / #hair #lysina #volosy
    --20.08.2016 / rassadovskiy
    --ca3763bad2e5d964aa3069372bc08c90 dd137b0e923d9998db7c5305cbc78e6f 22f94b9cec13a434a17956796851803c
    if not IsBlocked
        and not wclass:EXCEPTIONS() 
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),5000,17000)
        and features:HasTextOnly() == 1
        and cmpr_gt(features:MultipartNum(),3,true)
        and features:NoRealNameTo()
        and features:EmailInToRealName()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:HtmlTagCount(),10,50,true)
        and cmpr_btw(features:TextLines(),20,50,true)
        and cmpr_lt(features:LinesToWordsRatio() , 50, true)
        and features:WhitespaceToWordRatio() > 300
        and cmpr_lt(features:DotCount(), 20)
        and features:Subject8bitOnly()
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME() or wclass:TO_REALNAME_DUBLICATE_TO_EMAIL())
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:NEW_IP_15_DAYS()
        --and wclass:DMARC_PASS()
    then
        SetPSAR('ar1177') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1177')
    end
    
	--ar1178
    --mxs_other / #franchise #dcolor
    --14.09.2016 / rassadovskiy
    --5ea8228ed53fdc575713563fc116dbba 44d0a38c847654f01f238a3bd459bc95
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),10000,15000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() >= 3
        and features:NoUserAgent()
        and features:NoRealNameTo()
        and features:UrlCountWithoutMailRu() == 1
        and cmpr_gt(features:HtmlTagCount(),30)
        and cmpr_btw(features:TextLines(),20,40)
        and cmpr_gt(features:WordCount(),100)
        and features:WhitespaceToWordRatio() > 300
        and wclass:NEW_IP_15_DAYS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:HAS_TAG_STYLE()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    then
        SetPSAR('ar1178') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1178')
    end
    
	--ar1179
	--svobodno
    
    --ar1180
    --mxs / #zarabotok #more_url
    --29.12.16 /zubr
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
        and features:MsgSize() >= 5000
        and features:UrlNormCount() >= 500
        and features:WordCount() >= 400
		and features:WordsToUrlsRatio() <= 5
    then
        SetPSAR('ar1180')
    end
    
	--ar1181
	--svobodno

	--ar1182
	--svobodno

	--ar1183
	--mxs_other / #zarabotok #dopdohod
	--05.09.16 / zubr	
	--25e925b29f40f5bfabfbffea8f6ff5c9 8b25e8baf724acab7a23272b29c5abdb 96b6c13ba540d5c93f725d944d72fdbf
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == 'mxs_other' 
		and features:MsgSize() >= 1000 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:HasFreeHosting() == 1
		and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 40
		and features:TextLines() >= 15 and features:TextLines() <= 45
		and features:WordCount() >= 50 and features:WordCount() <= 200
		and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS())
		and (wclass:MAIL_RU_MSGID_PATTERN() or wclass:DOMAINS_EQUAL())
		and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar1183')
	end
    
    --ar1184
    --fe / #flood #v-prikole
    --21.08.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),180,1200)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and (features:IsAutoreg()
            or cmpr_lt(features:RepuserAge(),5))
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlNormCount() == 0
        and features:HtmlTagCount() == 0
        and cmpr_btw(features:TextLines(),2,7,true)
        and cmpr_btw(features:WordCount(),7,60)
        and features:Word7bitCount() == 0
        and cmpr_lt(features:DotCount(),3,true)
        and features:Subject8bitOnly()
        and wclass:SOURCE_IP_IN_XBL_AND_SOURCE_IP_IN_DNSBL()
        and (wclass:NEW_IP_7_DAYS() or wclass:SOURCE_IP_IN_TOR_NODE())
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1184',true) 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1184')
	end
    
    --ar1185
    --mxs_other / #vk.com/doc #clous #dropbox #zarabotok
    --23.08.2016 / rassadovskiy(sokolik)
    --05604ad7bb9cc9ce17b358b9429dd1fd
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),2000,7000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:NoUserAgent()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:HtmlTagCount(),20,70,true)
        and cmpr_btw(features:TextLines(),10,50,true)
        and cmpr_btw(features:WordCount(),80,230)
        and cmpr_lt(features:DotCount(),10)
        and features:Words8bitRatio() > 75
        and features:ExclamationMarkInSubject()
        and wclass:SHORT_BOUNDARY()
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:HELO_IN_FROM() or wclass:HELO_IN_MSGID())
        and TermsMatchGroup(17293,100)
    then
        SetSpam('ar1185',false)
		CarbideSendStatsSum('rules_analyst', 'ar1185', 1)
        --SetPSAR('ar1185') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1185')
    end
    
    --ar1186
	--svobodno
    
    --ar1187
	--svobodno
    
    --ar1188
	--svobodno
    
    --ar1189
	--svobodno
    
    --ar1190
    --mxs_other #short #english
    --05.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 300, 20000)
        and (cmpr_eq(features:HasTextOnly(), 1)
            or (cmpr_btw(features:ImgNum(), 1, 3, true) and cmpr_eq(features:AttachAllCount(), 0)))
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_btw(features:TextLines(), 2, 10, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_btw(features:WordCount(), 20, 120)
        and not wclass:RUSSIAN_FROM_REALNAME()
        and wclass:ONLY_7BIT_WORDS()
        and (wclass:DIFFERENT_REPLY_TO_AND_FROM()
            or wclass:MANY_CC())
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar1190')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1190')
    end
    
    --ar1191
	--svobodno
    
	--ar1192
    --mxs_other #ems
    --22.08.16 / a.sokolov
    --40b2ef560fc7afcfa6548600e922079f 901cab323dbff0b4c672c0382a902d78 459650cf953e9e1e4006fb60a4edd68c
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:HasFreeHosting(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:SHORT_MESSAGE()
        and (wclass:SORTED_RECIPIENTS() 
            or wclass:DIFFERENCE_RCPTNUM_AND_TO()
            or wclass:TO_MISMATCH_ENVELOPE_TO())
        and (wclass:MORE_THAN_N_RCPT() 
            or wclass:MORE_1_EMAILS_IN_TO() 
            or wclass:FROM_REALNAME_ALL_MIXED())
    then
        SetPSAR('ar1192')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1192')
    end
    
    --ar1193
	--svobodno
    
    --ar1194
    --mxs_other #virus
    --22.08.16 / a.sokolov
    --58f9aa60e0c4e9046b6530ffbce7bd39 9f85b8a3141b052810947c2db652f63 ad90ad37d7f0185ea4950cbb50734834
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:InvalidFrom(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 100)
        and cmpr_btw(features:WordCount(), 30, 200)
        and cmpr_btw(features:WhitespaceCount(), 50, 400)
        and cmpr_gt(features:FromRealNameWordCount(), 3)
        and wclass:CAPS_IN_FROM_REAL_NAME()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_AND_MS_MAILER()
    then
        SetPSAR('ar1194')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1194')
    end
    
    --ar1195
    --fe / #zarabotki
    --22.08.16 / a.sokolov
    --08a51eefeedca979e1ad1cdf25398f24 3d216431764f7b0b00689c5800809430 7af52b85fdc380df11fc6ab6cf909941
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_btw(features:MsgSize(), 100, 1500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EmailsCountInBody(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:TextLines(), 3, 5, true)
        and cmpr_btw(features:WordCount(), 15, 60, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 400)
        and wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(17295,100)
    then
        SetPSAR('ar1195')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1195')
    end	
    
	--ar1196
	--mxs_mbp / #dubli #karti
	--29.12.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 700 and features:MsgSize() <= 5000
		and features:UrlNormCount() == 0
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and wclass:FROM_RAMBLER()
		and wclass:VERY_LONG_LOCALPART()
		and wclass:FROM_ENDS_IN_NUMS()
    	and TermsMatchGroup(10182,100)
	then
		SetPSAR('ar1196')
	end
    
    --ar1197
	--smtp / #smtp_out #chineese spam
    --29.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),100,10000)
        and not features:MailRuTo()
        and features:XMailerName()
        and features:XMailerName() == "Foxmail"
        and features:IsAutoreg()
        and (wclass:SUSP_SUBJECT_ENCODINGS_1()
    		or wclass:NEW_IP_1_DAY()
    		or UrlsMatchStr('baidu.com'))
    then
        SetPSAR('ar1197') 
    end
        
    --ar1198
    --mxs / #zarabotok #vk_doc
    --24.10.16 / r.kulpin(zubr)(sokolik)
    --7b67bd185e1770f67d3c09e309b3623a 7b640a21dab854db1a3160ca3c982344 2ca2d7e1f3a46151645c383f67e96100
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    		or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_btw(features:MsgSize(), 5000, 700000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_btw(features:ImgNum(), 1, 5 ,true) 
        and cmpr_gt(features:MultipartNum(), 5, true)
        --and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(), 1, 15, true)
        and cmpr_btw(features:TextLines(), 2, 70, true)
        and cmpr_btw(features:WordCount(), 2, 300, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 200)
        and (wclass:NEW_IP_30_DAYS()
            or wclass:IP_REP_GAP_MORE_14_DAYS())
        and (wclass:FAIL_SPF() 
        	or wclass:SPF_NOT_PASS()
			or wclass:HDR_X_MRU_PTR_VPS()
			or cmpr_eq(features:InvalidFrom(), 1))
        and (wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    		or wclass:INVALID_CHARS_IN_RAW_URLS()
			or wclass:PHOTO_HOSTING()
			or wclass:REPLY_TO_REALNAME_DUBLICATE_REPLY_TO_EMAIL()
			or wclass:ONE_GIF_IN_BODY()
			or wclass:MATH_SYMBOLS_IN_REALNAME_FROM()
			or wclass:ONLY_7BIT_WORDS()
    		or wclass:CYRILLIC_URL()
    		or wclass:NOREALNAME_FROM())
        and (wclass:WORDS_MIXED_RATIO() 
    		or wclass:MS_MAILER()
			or wclass:WHITESPACE_AND_SUSP_WORDS_OTHERS_RATIO()
    		or wclass:WHITESPACE_SUSP_RATIO())
        and (UrlsMatchStr('vk.com/doc',1) 
    		or UrlsMatch(regex([[[a-z]{2,5}\.vk\.com]]))
    		or UrlsMatchStr('vk.com/id',1)
			or wclass:NO_TO()
			or wclass:UNDISCLOSED())
    then
        SetPSAR('ar1198')
    end
    
    --ar1199
    --smtp / #tehrubez #img
    --10.01.17 / a.sokolov
    if not IsBlocked
        and false
        and features:RcvSrcExt() == "smtp"
        and cmpr_gt(features:MsgSize(), 100000)
    	and not features:IsPddUser()
    	and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:RepuserAge(), 20)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100, true)
    	and cmpr_lt(features:WordCount(), 30)
		and (wclass:FROM_ENDS_WITH_YEAR()
    		or wclass:SUSP_FROM_BY_FE_OR_SMTP()
    		or (cmpr_eq(features:FromRealNameWordCount(), 1) and wclass:RUSSIAN_FROM_REALNAME())
    		or cmpr_gt(features:FromRealNameWordCount(), 2))
    then 
        SetPSAR('ar1199')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar1199')
    end

    --ar1200
    --fe / #casino
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:WordCount(),100)
        and cmpr_lt(features:DotCount(), 6, true)
    	and cmpr_btw(features:HtmlTagCount(), 7, 20, true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FE_TOR_IP() 
    	and wclass:BAD_LINES_TO_WORD_RATIO()
    	and wclass:SUBJECT_WITH_CAPS()
    then
        SetPSAR('ar1200')
      	LogMsgToHadoop('dstat_sokolik_log', '#ar1200')
    end
        
    --ar1201
	--svobodno
    
    --ar1202
	--svobodno
    
	--ar1203
	--svobodno
      
    --ar1204
    --mxs_other #zarabotki #yandex_disk
    --23.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_btw(features:WordCount(), 1, 20, true)
        and wclass:REPLY_TO_IN_REAL_NAME_FROM()
        and wclass:YANDEX_DISC_AND_DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:MS_MAILER()
    then
        SetPSAR('ar1204')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1204')
    end
    
    --ar1205
	--mxs_mbp mxs_other / #zarabotok #attach #otchet
	--23.08.16 / minina
	--2290594d579af48636b66ca122e8ad91
	--657d7a6b10b15966bac31bb1e05f570f
	--80771558316a7bab2287c2df008b387e
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_other')
    	and cmpr_btw(features:MsgSize(),50000,500000)
    	and cmpr_eq(features:HasAttach(),1)
    	and cmpr_eq(features:AttachAllCount(),1)
      	and cmpr_btw(features:WordCount(),10,100,true)
    	and cmpr_btw(features:TextLines(),1,20,true)
    	and cmpr_gt(features:SubjectWordCount(),7,true)
    	and cmpr_gt(features:SubjectNumbersCount(),2,true)
       	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_eq(features:FilesExtensions(),'.pdf')
       	and wclass:SHORT_BOUNDARY()
      	and wclass:NO_USER_AGENT()
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    then
    	SetPSAR('ar1205')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1205' )
    end
    	
    --ar1206
	--svobodno
        
    --ar1207
	--svobodno
    
    --ar1208
	--svobodno
    
    --ar1209
    --smtp / #english #bad_url
    --29.12.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_lt(features:MsgSize(), 5000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_lt(features:RepuserAge(), 50)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 200, true)
    	and cmpr_btw(features:WordCount(), 10, 300)
       	and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and wclass:ONLY_7BIT_WORDS()
    then 
        SetPSAR('ar1209')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar1209')
    end

	--ar1210
	--fe / #webmailing
	--23.08.16 / veselitsky		
	--066733654dd45f330e0e412ac19d4c20 a2c7460d8d48e91184f4745baf288e1c 30e2120d7e83d9e0730af60b2df48fed
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 8000, 20000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and (features:AbfCountryWasChanged() or features:AbfCityWasChanged())
		and features:AbfIpWasChanged() 
		and cmpr_btw(features:WordCount(), 300, 800)
    	and cmpr_btw(features:HtmlTagCount(), 20, 50)
		and features:EmailsCountInBody() == 1
    	and TermsMatchGroup(10254, 200)
    	and wclass:HAS_TAG_STYLE()
    	and wclass:SOURCE_IP_IN_DNSBL()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
    	SetPSAR('ar1210')
    end
    
    --ar1211
	--svobodno
    	
    --ar1212
	--mxs_other / #zarabotok
	--23.08.16 / veselitsky		
	--2764a4e8f95747aa16951152496fb84d 075b0e39b00d6ccf87f58f3972daf9b4 fbdb5642cdfc1a3721c8ad1620a5b9f5
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other'
			or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 1500, 7000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
		and cmpr_btw(features:WordCount(), 100, 200)
     	and cmpr_btw(features:TextLines(), 25, 55)
    	and cmpr_btw(features:HtmlTagCount(), 15, 40)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 5)
    	and features:HasShortUrl() == 1
    	and wclass:IP_REP_GAP_MORE_14_DAYS()
    	and (wclass:CZ_URLS() or cmpr_gt(features:WordsMixedRatio(), 10))
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
    	SetPSAR('ar1212')
    end
   	
    --ar1213
	--mxs_other / #casino #vulkan 
	--23.08.16 / veselitsky		
	--cef7f044d80336de43aa98b388da2598 4db5343a615c19ec06ea86fd37a51e33 500254b75fc5e85a1612c65dd25f2f90 b61c27ec2948138d43f4df3d849928fd
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 10000, 120000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
		and cmpr_btw(features:WordCount(), 200, 2000)
     	and cmpr_btw(features:TextLines(), 20, 100)
    	and cmpr_btw(features:HtmlTagCount(), 30, 100)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 4)
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:RUS_DOMAIN_IN_MSGID()
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
    	SetPSAR('ar1213')
    end 
    	
    --ar1214
	--svobodno
    
    --ar1215
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 10, 45, true)
        and cmpr_btw(features:Words7bitRatio(), 1, 20, true)
        and cmpr_gt(features:LinesToWordsRatio(), 15)
        and features:MailRuTo()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and (wclass:NEW_IP_30_DAYS() or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY())
    then
        SetPSAR('ar1215')
    end
    
    --ar1216
	--mxs_mbp mxs_other / #virus
	--23.08.16 / minina
	--759192ac23f34578fef98bae051df63f
	--33142472849dc2bd56855b3f6805a911
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(),'mxs_other') or cmpr_eq(features:RcvSrcExt(),'mxs_mbp'))
    	and cmpr_btw(features:MsgSize(),100000,3000000)
    	and cmpr_eq(features:HasAttach(),1)
    	and cmpr_eq(features:AttachAllCount(),1)
    	and cmpr_eq(features:AttachArchiveCount(),1)
      	and cmpr_btw(features:WordCount(),50,250,true)
    	and cmpr_btw(features:TextLines(),5,50,true)
    	and cmpr_gt(features:MultipartNum(),3,true)
    	and cmpr_eq(features:UrlNormCount(),0)
       	and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
      	and (wclass:SHORT_BOUNDARY() or wclass:LONG_MSGID())
    	and StrMatch(features:PartsFilenames(),'Purchase') 
    then
    	SetPSAR('ar1216',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1216' )
    end
    	
    --ar1217
	--svobodno
    	
    --ar1218
	--svobodno
    
    --ar1219
	--mxs_mbp / #office #arenda
	--23.08.16 / minina
	--mfc_mf_yandex
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
    	and cmpr_btw(features:MsgSize(),1000,10000)
    	and cmpr_eq(features:HasTextOnly(),1)
       	and cmpr_btw(features:WordCount(),100,500,true)
    	and cmpr_btw(features:TextLines(),20,200,true)
       	and cmpr_eq(features:Subject7bitOnly(),1)
    	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_eq(features:UrlNormCount(),0)
    	and cmpr_btw(features:HtmlTagCount(),50,200,true)
       	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:MS_MAILER_WITH_ONE_RECEIVED()
    	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and  (wclass:IP_REP_GAP_MORE_7_DAYS() or wclass:IP_HAS_GAP_LAST_WEEK())
    then
    	SetPSAR('ar1219')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1219' )
    end
    	
    --ar1220
	--mxs_mbp / #zelen
	--23.08.2016 / veselitsky 
	--2af337c0b19ffb234b211d8a1e56ecb9 a56db86a96c400a9b11cbf37086a3a11 18254cac9f77d9776d0796330539dd2e
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
		and cmpr_btw(features:MsgSize(), 60, 120)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:IsFromFreeMail() == 1
    	and cmpr_btw(features:WordCount(), 5, 20)
    	and cmpr_btw(features:TextLines(), 0, 4)
    	and features:HtmlTagCount() == 0 
    	and features:UrlCountWithoutMailRu() == 1
    	and wclass:CYRILLIC_URL()
    	and wclass:SOFTFAIL_SPF()
    	and wclass:FAKE_FREE_MAIL()
	then
		SetPSAR('ar1220')
	end 
    	
    --ar1221
	--svobodno
    
	--ar1222
	--svobodno
    
    --ar1223
    --smtp / #text_me
    --30.12.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_gt(features:MsgSize(), 10000)
    	and not features:IsPddUser()
		and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_lt(features:Karma(), 0)
        and cmpr_lt(features:RepuserAge(), 3)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
		and wclass:SUBJECT_ONLY_WITH_IMAGE()
    	and wclass:MORE_THAN_N_RCPT()
    then 
        SetPSAR('ar1223')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar1223')
    end

    --ar1224
	--mxs_other / #english #spam
    --24.08.16 / r.kulpin
	--87806a8081654fb6395e06b14d10559e 1ebe3abbe6b8ec310acbe480a4c3aa2a db92cd852bb9cd40b18a0b36cbdd493e
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and features:NoRealNameTo()
    	and features:Subject7bitOnly()   	
    	and cmpr_btw(features:TextLines(), 70, 170)
        and cmpr_gt(features:NumberCount(), 50, true)
    	and cmpr_lt(features:LinesToWordsRatio(), 25)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)    	
    	and (wclass:FROM_MATCHES_WITH_URL_EU() or wclass:IMAGE_AND_FROM_MATCHES_WITH_URL_WITH_YOUNG_DOMAIN())
    	and wclass:FROM_REALNAME_IN_LOCALPART_AND_NONE_SPF()
        --and (wclass:ONE_RECEIVED() or wclass:LONG_MSGID())
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
    	SetPSAR('ar1224')
    end
        
	--ar1225
	--svobodno
     	
	--ar1226
	--svobodno
    
    --ar1227
	--svobodno
    	
    --ar1228
	--svobodno
    
    --ar1229
	--svobodno
       
    --ar1230
	--svobodno
    	
    --ar1231
	--svobodno
	
    --ar1232
	--mxs_other / #nabortextov #operatorali
	--24.08.16 / veselitsky	 
	--2fd61f438defaf15dac45c8128d38fcd 8baae7ad4a123704bf9022a9ffb6c9aa 2b806ae234e96edee2a8ae06ce3e3fa0 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 500, 2000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and cmpr_btw(features:TextLines(), 2, 10)
    	and cmpr_lt(features:LinesToWordsRatio(), 25, true)
		and cmpr_gt(features:BodyUpperLowerCaseRatio(), 5)
 		and features:UrlCountWithoutMailRu() == 1
        --and features:FromRealName() == "Aliexpress"
    	and (wclass:FROM_INFORMATION_SERVICE() or wclass:PTR_ERROR() or wclass:REMOTE_IP_IN_SPAMHAUS())
    	and wclass:NABORSCHIK_TERMS() 
    then
    	SetPSAR('ar1232')
    end
    
    --ar1233
	--svobodno
        
    --ar1234
	--mxs_other / #zarabotok
	--24.08.16 / veselitsky	
	--3d87054f555c509e999f5001e283f873 f321ad8839edcfe9643b1e4d314bedac f5d8c7bc5e8b99ff7fc6f871addd221f 9f7ba7d874bb0c701adae85084e0453e
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 500, 8000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
      	and cmpr_btw(features:WordCount(), 50, 500)
    	and cmpr_btw(features:TextLines(), 5, 50)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 14)
        and not features:FromMatchesWithUrl() 
       	and features:LastHelo()
        and (not StrMatch(features:LastHelo(), features:FromDomain())
       	 	or features:HasDifferentFromAndReply() == 1)
    	--and features:HasImageUrl() == 1
		and HasHeader('Organization')
        and StrMatchRe(GetHeaderVal('Organization'), regex([[[A-Z]{3,10}]]))
    	and (wclass:PTR_ERROR() or wclass:REMOTE_IP_IN_SPAMHAUS())
    	and wclass:HAS_TAG_META()
    then
    	SetPSAR('ar1234')
    end
    	
    --ar1235
	--fe / #seminar
	--23.08.16 / veselitsky		
	--638cc636a50621264099bab749ca185b ff3db78dcf2fad2940c1cc9de9dc5f7a
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 500000, 1500000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:MultipartNum() == 5 
    	and cmpr_lt(features:Karma(), 0)
		and features:AbfIpWasChanged() 
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
		and cmpr_btw(features:WordCount(), 10, 25)
    	and cmpr_btw(features:HtmlTagCount(), 10, 30)
		and features:Subject() == 'Fwd'
    	and wclass:TO_LOCALPART_IN_REALNAME()
		and wclass:CT_ENCODED_FILENAME()
    	and wclass:HAS_5_DAYS_GAP()
    then
    	SetPSAR('ar1235')
    end
        
    --ar1236
	--mxs_other / #zarabotok #sberbank
	--29.08.16 / veselitsky	
	--3d87054f555c509e999f5001e283f873 f321ad8839edcfe9643b1e4d314bedac f5d8c7bc5e8b99ff7fc6f871addd221f 9f7ba7d874bb0c701adae85084e0453e
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1000, 500000)
    	and features:HasNoAttach() == 1
    	and	features:ImgNum() == 1	
    	and features:MultipartNum() == 5
      	and cmpr_btw(features:WordCount(), 0, 150)
    	and cmpr_btw(features:TextLines(), 0, 30)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 10)
    	and (features:LastHelo() == 'helo=rt.ru' or wclass:EMAIL_IN_HDR_ORGANIZATION())
    	and (wclass:IP_URL() or wclass:HDR_X_MRU_PTR_VPS())
    	and (wclass:SPF_NOT_PASS() or wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:NEW_IP_7_DAYS())
    then
    	SetPSAR('ar1236')
    end
        
    --ar1237
	--svobodno
    
    --ar1238
	--fe / #docs.google.com #attach
	--24.08.16 / minina
	--f_fo_usage7
	if not IsBlocked
   		and (cmpr_eq(features:RcvSrc(),'fe') or cmpr_eq(features:RcvSrc(),'imap'))
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 200, 3000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 5, 50,true)
    	and cmpr_btw(features:WordCount(), 10, 150)
    	and cmpr_eq(features:NoSubject(), 1)
       	and cmpr_gt(features:UrlNormCount(), 3,true)
   		and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 30, true)
       	and (wclass:ONLY_7BIT_WORDS() or cmpr_lt(features:Words8bitRatio(), 50, true))
    	and wclass:HAS_FREE_HOSTING()
       	--and wclass:SOURCE_IP_IN_DNSBL() 
        and (features:IpCategory() == 'tiny' or features:IpCategory() == 'small')
    	and UrlsMatchStr('docs.google.com', 1) 
    then
    	SetPSAR('ar1238')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1238' )
    end
    	
    --ar1239
	--svobodno
    
    --ar1240
	--svobodno
    
    --ar1241
	--mxs_mbp  / #rambler
	--23.08.16 / minina
	--mfc_mf_rambler
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
    	and cmpr_btw(features:MsgSize(),5000,50000)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_btw(features:WordCount(),100,500,true)
    	and cmpr_btw(features:TextLines(),10,50,true)
    	and cmpr_eq(features:Subject8bitOnly(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_gt(features:UrlNormCount() ,5,true)
    	and cmpr_btw(features:HtmlTagCount(),50,170,true)
    	and cmpr_eq(features:FromDomain(),'rambler.ru')
    	and wclass:HAS_HEADER_SENDER()
      	and wclass:PHP_URL()
    	and wclass:PHOTO_HOSTING()
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()  
    then
    	SetPSAR('ar1241')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1241' )
    end
    
    --ar1242
	--mxs_other  / #pohudenie
	--25.08.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 50000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 3
		and features:UrlNormCount() == 0
		and features:TextLines() >= 2 and features:TextLines() <= 8
        and features:WordCount() > 400
		and wclass:RUSSIAN_FROM_REALNAME()
		and wclass:WORDS_OTHERS_BAD_RATIO()
		and (wclass:REMOTE_IP_IN_SPAMHAUS_WITH_SOFTFAIL_SPF() or wclass:IP_IN_SPAMHAUS_AND_NEW_IP_7_DAYS() 
			or wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO() 
			or wclass:IP_REP_GAP_MORE_30_DAYS() and wclass:REMOTE_IP_IN_SPAMHAUS())
		and wclass:NO_USER_AGENT()
	then
    	SetPSAR('ar1242')
    end
    
    --ar1243
	--svobodno
    
    --ar1244
    --fe / #zarabotok
	--25.08.16 / minina
	--1cba3f0516602fe6dfd62b67597b2fe2
    --8b728526fd1d5daca936f7c42e1b51c8
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),100,1000)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:TextLines(),1,15,true)
    	and cmpr_btw(features:WordCount(),1,50)
       	and cmpr_gt(features:UrlNormCount(),2,true)
    	and cmpr_eq(features:UserAge30(),1)
    	--and features:UserCreateTime()
       	--and cmpr_btw(features:UserCreateTime().days, 0, 30 ,true)
    	and features:AbfCityWasChanged()
    	and wclass:SOURCE_IP_IN_DNSBL()
    	and wclass:HAS_FREE_HOSTING()
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{8,15}\.\d{8,15}$]]))
    then
    	SetPSAR('ar1244',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1244' )
    end
    
	--ar1245
	--fe / #zarabotok
	--02.09.16 / veselitsky		
	--8bc1025bf0d1d9fa9b7f3300bffa7ec1 cfe863b66a4d0df05ba8716c1e3ec715 b7263b9cbb686bd76f0b1bc1d4a01595
 	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 15000, 250000)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:MultipartNum() == 5 
    	--and cmpr_lt(features:Karma(), 0, true)
		and (features:AbfIpWasChanged() or wclass:NEW_IP_7_DAYS())
		and cmpr_lt(features:RepuserAge(), 10)
    	--and features:MailRuTo() == 1
    	--and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
    	and features:NoRealNameTo() == 1
		and cmpr_btw(features:Word8bitCount(), 30, 90)
    	and cmpr_btw(features:HtmlTagCount(), 0, 15)
    	and (wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY() or wclass:MSGL_BAD_SPAM_RATIO() or wclass:REP_USER_COMPL_RATE_MORE_3())
    then
    	SetPSAR('ar1245', true)
    end
    	
    --ar1246
	--mxs_other / #zarabotok #8000
	--16.10.2016 / veselitsky(sokolik)
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_btw(features:HtmlTagCount(), 10, 60)
    	and cmpr_btw(features:TextLines(), 8, 50)
		and cmpr_btw(features:WordCount(), 20, 200)
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
	    and features:SPF() ~= 'pass'	
    	and (not features:FromMatchesWithUrl() or wclass:ORGANIZATION_IN_FROM())
    	and UrlsMatch(regex([[\.(top|win|link|review|pw|stream)$]]))
    	and (wclass:NEW_FROMDOMAIN_7_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:XMAILER_PHPMAILER() or wclass:WORDS_OTHERS_BAD_RATIO())
    	and wclass:HAS_TAG_META()
	then   
		SetSpam('ar1246')
        CarbideSendStatsSum('rules_analyst', 'ar1246', 1)
	end 
  
    --ar1247
	--fe / #zarabotok #qiwi
	--25.08.16 / minina
	--cb9d020fceb035e01520d0a0bab39063
    --7ff4e96ae164961d3d500709f6328c63
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),5000,50000,true)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:TextLines(),100,350,true)
    	and cmpr_btw(features:WordCount(),100,2000)
    	and (cmpr_eq(features:SubjectWord8bitCount(),0) or features:ReplyInSubject())
       	and cmpr_gt(features:UrlNormCount(),3,true)
    	and cmpr_gt(features:HtmlTagCount(),150,true)
    	--and HasHeader('Disposition-Notification-To')
    	and cmpr_eq(features:UserAge30(),1)
       	and (features:AbfCityWasChanged() or features:AbfIpWasChanged())
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:PHOTO_HOSTING() 	
    then
    	SetPSAR('ar1247',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1247' )
    end
    
    --ar1248
	--fe / #sumki #bags
	--25.08.16 / veselitsky	
	--46731ab8010b1f4f87fadd90e7869740 acb193672c89292fd8014133711815f0
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 50, 250)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 1
   		and features:RepuserAge() == 1
    	and features:AbfIpWasChanged()
		and	cmpr_btw(features:TextLines(), 0, 4)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and cmpr_gt(features:Words7bitRatio(), 60)
    	and features:UrlCountWithoutMailRu() == 1
    	and UrlsMatchStr('html', 1)
    	and wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY()
    then
    	SetPSAR('ar1248')
    end  
    
    --ar1249
	--mxs_mbp mxs_other / #casino #otchet #zarabotok
	--23.08.16 / minina
	--3dd4f4c2f56e13f3d74a3852fe763922
    --bc817c1d4517b9ba559878d5a762dd5b
    --acd0f8f2e148f9db6d275ce6fe75888e
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_other')
    	and cmpr_btw(features:MsgSize(),5000,15000)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_btw(features:WordCount(),200,500,true)
    	and cmpr_btw(features:TextLines(),40,100,true)
    	and cmpr_gt(features:MultipartNum(),3,true)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and HasHeader('Sender')
    	and cmpr_eq(features:GeoCode(),'DK') 
    	and cmpr_eq(features:EngRealNameFrom(),1)
       	and wclass:SPF_NOT_PASS()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:HELO_IN_MSGID()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
      	and wclass:FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE()
    then
    	SetPSAR('ar1249')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1249' )
    end
        
    --ar1250
	--svobodno
    
    --ar1251
	--smtp / #virus
	--25.08.16 / minina
	--4a8edf72ed30e6fce7a40cd4e2dc639a
   	--c373401c12434408ac6b9fbe8ba8aaca
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp') 
    	and cmpr_btw(features:MsgSize(),1000000,3000000)
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:HasAttach(),1)
    	and cmpr_eq(features:AttachArchiveCount(),1)
    	and cmpr_eq(features:FilesInArchiveNum(),2)
    	and cmpr_eq(features:MultipartNum(),5)
      	and cmpr_eq(features:WordCount(),50,200)
    	and cmpr_btw(features:TextLines(),5,20)
    	and cmpr_gt(features:Words8bitRatio(),70,true)
    	and cmpr_eq(features:UrlNormCount(),0)
    	and cmpr_btw(features:RepuserAge(),1,15,true)
    	and cmpr_eq(features:FilesExtensions(),'.zip') 
       	and wclass:SHORT_BOUNDARY()
    	and wclass:NEW_IP_15_DAYS()
    	and wclass:SOURCE_IP_IN_DNSBL()
    then
    	SetPSAR('ar1251',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1251' )
    end
    	
    --ar1252
	--svobodno
        
	--ar1253
	--svobodno
    
    --ar1254	
    --fe / #ntr #img #many_to
	--30.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_gt(features:MsgSize(), 5000)
    	and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_gt(features:MultipartNum(), 3, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_gt(features:RcptNum(), 2)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and (wclass:AUTOREG() or wclass:AUTOREG_FROM_NOT_TARGET_REGION())
       	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar1254')
    end
    
    --ar1255
	--mxs_other / #link #zarabotok
	--26.08.16 / minina(sokolik)
	--bec4099eb0f14daf64b419a43b84e534
    --a12e1e25feb26ad4c9846c350386aff4
	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (features:RcvSrcExt() == "mxs_other"
    		or features:RcvSrcExt() == "mxs_mbp")
    	and cmpr_btw(features:MsgSize(),1000,100000)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_btw(features:WordCount(),20,500,true)
    	and cmpr_btw(features:TextLines(),10,200,true)
    	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_gt(features:UrlNormCount(),2,true)
    	and cmpr_gt(features:WordsOtherRatio(),15,true)
    	and cmpr_btw(features:HtmlTagCount(), 0, 100)
    	and wclass:SUSP_SWIFT_BOUNDARY()
    	and (wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL() or wclass:HAS_EXTERNAL_IMG())
    	and (wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    		or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
      	and UrlsMatch(regex([[^link\.[a-z\d\._-]+(?:/[a-z\d._-]+){4,}$]]),1) 	 
    then
    	SetPSAR('ar1255')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1255' )
    end
    
    --ar1256
    --mxs_other #TrainTick
    --25.08.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_gt(features:MsgSize(), 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 50, 400)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NO_TO()
        and wclass:MORE_THAN_N_RCPT()
        and (wclass:INVALID_CHAR_FROM() or wclass:INVALID_CHAR_SUBJECT() or wclass:VERY_INVALID_FROM())
    then
        SetPSAR('ar1256')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1256')
    end
    
    --ar1257
	--svobodno
    
    --ar1258
	--mxs_other / #zarabotok
	--25.08.16 / veselitsky	
	--6a106db4eb971940a87160f39dad5cde 90de1ef231a3a7c1e77b2bf80c409d5c c0e77733cf34a2a999d431832477319d 286cd47073fc62a50519a7532175e75d 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 2000, 10000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1    
    	and cmpr_btw(features:WordCount(), 50, 200)
    	and cmpr_btw(features:HtmlTagCount(), 15, 80)
    	and features:UrlCountWithoutMailRu() == 1
    	and features:FromDomain() == features:SenderPtr()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:HELO_IN_MSGID()
    then
    	SetPSAR('ar1258', true)
    end 
    
	--ar1259
	--svobodno

    --ar1260
	--svobodno
    
    --ar1261
	--mxs_other  / #tinkoff
	--25.08.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 100000 
		and features:HasTextOnly() == 1
		and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
		and features:UrlCountWithoutMailRu() >= 2 and features:UrlCountWithoutMailRu() <= 8
		and features:HtmlTagCount() >= 50
		and features:HtmlUniqueTagCount() <= 25
		and features:TextLines() >= 15 and features:TextLines() <= 100
        and features:WordCount() >= 50 and features:WordCount() <= 900
		and features:WordsOtherRatio() >= 10
		and features:Words8bitRatio() >= 40
		and features:NumberCount() >= 5
		and features:DotRatio() == 0
		and features:SubjectWordCount() >= 3
		and wclass:FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
		and wclass:PRECEDENCE_BULK()
		and TermsMatchGroup(17301, 100)
	then
    	SetPSAR('ar1261')
    end
    
    --ar1262
	--fe  / #flud
	--25.08.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 300 and features:MsgSize() <= 1000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 3
		and features:HtmlTagCount() == 0
		and features:TextLines() >= 2 and features:TextLines() <= 5
        and features:WordCount() >= 10 and features:WordCount() <= 40
		and features:WordsOtherRatio() >= 5
		and features:Words8bitRatio() >= 60
		and features:DotCount() == 0
		and features:SubjectWordCount() >= 2
		and (wclass:AUTOREG_AND_FROM_ENDS_IN_NUMS() or wclass:HAS_5_DAYS_GAP_AND_AUTH_FROM_MANY_COUNTRIES_PER_MONTH()
			or wclass:AUTOREG() and wclass:HAS_5_DAYS_GAP() or wclass:MORE_THAN_10_RCPT())
		and wclass:BAD_KARMA()
		and wclass:RUSSIAN_FROM_REALNAME()
	then
    	SetPSAR('ar1262')
    end
   	
    --ar1263
	--svobodno
    
    --ar1264
	--svobodno

    --ar1265
	--svobodno
    
    --ar1266
	--mxs_other / #english #spam
    --24.08.16 / r.kulpin
    --ad04bba02276031e7d1c91f135bc8fd4 298fecfe727f22b9b82734ce21a7e52d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId()  	
    	and cmpr_btw(features:TextLines(), 10, 50)
        and cmpr_lt(features:NumberCount(), 50, true)
    	and cmpr_lt(features:LinesToWordsRatio(), 25)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true) 
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
    	SetPSAR('ar1266')
    end
    
 	--ar1267
	--svobodno
        
    --ar1268
	--svobodno
    
    --ar1269
	--svobodno
    
	--ar1270
	--mxs_mbp / #qip.ru
	--27.08.16 / zubr
	--c874cb16371b3909965a47a286e68d8a
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 100 and features:MsgSize() <= 2000
		and features:HasTextOnly() == 1
		and wclass:SPF_NOT_PASS()
		and (wclass:SHORTURL() or UrlsMatchStr('new.vk.com'))
		and StrMatch(features:FromDomain(), 'qip.ru')
	then
		SetPSAR('ar1270')
	end
    
    --ar1271
	--fe / #zarabotok #sendgrid.net
	--27.08.16 / r.kulpin
	--1c3233069dc99f7a42102e54272033c1 2acc5e232cfc506ff1cb7fa2ff61b2e8 a8e58065f307ccf4458ff8ef6147128f
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_btw(features:MsgSize(), 500, 5000)
       	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and features:NoRealNameTo()
    	and features:MailRuTo()
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 7, true)    
        and cmpr_btw(features:UrlNormCount(), 2, 5, true)
        and cmpr_gt(features:UrlsTextSize(), 40, true) 		
    	and cmpr_btw(features:WordCount(), 0, 100)
        and cmpr_gt(features:WhitespaceToWordRatio(), 500)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 5)
        and wclass:RUSSIAN_FROM_REALNAME()
    	and UrlsMatchStr('sendgrid.net', 1)
    then
    	SetPSAR('ar1271')
    end
    
    --ar1272
	--svobodno
    
    --ar1273
	--svobodno
    
    --ar1274
	--fe / #zarabotok #bitcoin_ferma #srazu50000
	--27.08.16 / r.kulpin	
	--38f7c9e1b9f846ae4536148af6d0d581 b23054e35ab049d0d941e5ee65002f0b
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 7000, 20000)
    	and features:HasTextOnly() == 1
    	and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
    	and features:AbfIpWasChanged()
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 7, true)
    	and cmpr_lt(features:Karma(), 0)
    	and features:Subject8bitOnly()
		and	cmpr_btw(features:TextLines(), 15, 40, true)
    	and cmpr_lt(features:LinesToWordsRatio(), 7, true)
    	and features:UrlCountWithoutMailRu() == 1
    	--and wclass:TERMS_ZARABOTOK_V_SETI2()
        and wclass:NEW_IP_15_DAYS()
        and StrMatchRe(features:From(), regex([[^.*\d.*@]]))
    then
    	SetPSAR('ar1274')
    end
    
    --ar1275
	--svobodno
        
    --ar1276
    --mxs_other / #mlsendru
    --10.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),30000,100000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_btw(features:MultipartNum(),1,3,true)
        and features:NoRealNameTo() == 1
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,5,true)
        and features:LinesToWordsRatio() >= 30
        and cmpr_btw(features:HtmlTagCount(),15,50)
        and cmpr_btw(features:TextLines(),1,15,true)
        and features:WhitespaceToWordRatio() > 1000
        and wclass:FROM_IS_EQUAL_TO_SENDER()
        and wclass:SHORT_BOUNDARY()
        and (UrlsMatchStr('mlsendru.com')
        	or UrlsMatchStr('mlnewsletterru.com'))
    then
        SetPSAR('ar1276') 
    end
	  
    	
    --ar1277
	--svobodno
    	
	--ar1278
	--mxs_mbp / #zarabotok #pdfmailru
	--28.08.2016 / veselitsky 
	--2453c63d7f64992a8a855895c905b503 734a0e551d99b7fd9b9481908c21125d 6492d25665cd8072085c727674ec4099
	if not IsBlocked
        and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
		and cmpr_btw(features:MsgSize(), 30000, 90000)
		and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachOfficeCount() == 1
    	and features:MultipartNum() == 3
		and features:HasDifferentFromAndReply() == 1
    	and cmpr_btw(features:WordCount(), 20, 100)
	   	and (StrMatchRe(features:PartsFilenames(), regex([[[A-Za-zÀ-ßà-ÿ\s\.\(\)]{2,35}\(\d+\)\.pdf]]))
        	or features:PartsFilenames() == 'âàøà áåçîïàñíàÿ ññûëêà.pdf')
    	--and wclass:HAS_X_PHP_SCRIPT()
	then
		SetPSAR('ar1278')
	end 
    	
	--ar1279
	--mxs_mbp / #zarabotok #podarok
	--30.08.2016 / veselitsky 
	--5f8b4f233431917a489ef468b24145b5 ac68e88c3269e6e410d584cbc6eafd36 5f793a46a1b6a0b1a141227516460140 
	if not IsBlocked
        and features:RcvSrcExt() == 'mxs_mbp'
		and cmpr_btw(features:MsgSize(), 100, 1000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:IsFromFreeMail() == 1
		and features:NoRealNameTo() == 1
		and features:NoRealNameFrom() == 1
    	and cmpr_btw(features:WordCount(), 3, 45)
	   	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	--and (UrlsMatch(regex([[(cloud\.mail\.ru|\.list\-manage)]])) or wclass:SHORTURL())
        and wclass:HELO_HAS3D_LVL_DOMAIN()
    	and wclass:FROM_NGS_RU()
	then
		SetPSAR('ar1279')
	end
    	
    --ar1280
	--mxs_mbp / #zarabotok #vacancy 
	--28.08.16 / veselitsky	
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 400, 2000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and features:HasDifferentFromAndReply() == 1
    	and	cmpr_btw(features:TextLines(), 3, 12, true)
    	and cmpr_btw(features:WordCount(), 15, 70)
      	and cmpr_btw(features:UrlNormCount(), 0, 3)
    	and wclass:PHP_URL()
    	and wclass:SUBJECT_MIXED_BADRATIO()
    then
    	SetPSAR('ar1280')
    end
        
    --ar1281
	--mxs_other / #zarabotok
	--07.09.16 / veselitsky	
	--9bd8d116886db761f26de0087a794578 4a813cb975039e2dc37ea6b2d29af584
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 800, 7000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1    
    	and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_btw(features:HtmlTagCount(), 15, 100)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 10)
        and not features:FromMatchesWithUrl() 
       	and features:LastHelo()
        and not StrMatch(features:LastHelo(), features:FromDomain())
    	and wclass:MSG_ID_WITHOUT_DOMAINPART()
    	--and wclass:INVALID_CHARS_IN_RAW_URLS()
    	and wclass:HDR_LIST_UNSUBSCRIBE()
    then
    	SetPSAR('ar1281')
    end 
    
    --ar1282
	--mxs_mbp / #googleform #partnership 
	--06.09.16 / veselitsky	
	--41fb3123e98b13b54b73f5aa4eb05c0f 7888071614950d2b216895c1aa8c2ee4 1e285431fc001a25e45766d1aaaa1d91
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 8000, 35000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1    
    	and features:NoRealNameFrom() == 1
    	and cmpr_btw(features:WordCount(), 100, 1500)
    	and cmpr_gt(features:Words8bitRatio(), 10)
    	and cmpr_btw(features:HtmlTagCount(), 50, 150)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 3, 11)
    	and (features:HasImageUrl() == 1 or wclass:HAS_EXTERNAL_IMG())
		and UrlsMatchStr('docs.google.com/forms', 1)
    	and (wclass:TERMS_ZARABOTOK_V_SETI2() or wclass:TERMS_STUDY_LANGUAGES())
        and wclass:FROM_ENDS_WITH_YEAR()
    	and wclass:HAS_INPUT_TAG()
    then
    	SetPSAR('ar1282')
    end 

    --ar1283
    --fe / #short #number
    --27.09.16 / a.sokolov
    if not IsBlocked       
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not wclass:EXCEPTIONS()
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 800)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 5, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 0 , 20, true)
        and cmpr_gt(features:NumberCount(), 5)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 10)
        and wclass:ONLY_7BIT_WORDS()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1283')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1283')
    end
    
    --ar1284
    --svobodno
    
    --ar1285
	--svobodno
    
    --ar1286
	--svobodno
    
    --ar1287
    --mxs_other #test #govno
    --09.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_eq(features:NoRealNameTo(), 1)
        and TermsMatchGroup(17360,100)
    	and not HeaderMatch('From', 'Cron Daemon')
    then
        SetPSAR('ar1287', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1287')
    end
        
    --ar1288
	--svobodno
    
    --ar1289
	--svobodno
    
    --ar1290
    --mxs_mbp #zarabotki #avito
    --03.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 80000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and features:IsFromGoogle() 
        and cmpr_btw(features:TextLines(), 5, 60, true)
        and cmpr_btw(features:WordCount(), 50, 800, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:HtmlTagCount(), 50, 700, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:FROM_EMAIL_IN_BODY()
    then
        SetPSAR('ar1290')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1290')
    end
    
    --ar1291
    --mxs_other / #flirt_alert #reply #profile_uncloced #CEcash
    --29.08.2016 / r.kulpin
    --b7041315d4bf65919ceaaf814e2e6c25 d84755201816a12fa3ca2e01d608671f c00923e9101aebc3a9c1a758457649ac
    if not IsBlocked
        and features:RcvSrc() == 'mxs'
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and features:MailRuTo()
        and cmpr_gt(features:HeaderNum(), 30)
        and cmpr_gt(features:FromDomainLevelCount(), 2)
        and cmpr_btw(features:TextLines(), 25, 80)
        and cmpr_lt(features:LinesToWordsRatio(), 30, true)
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
        and cmpr_btw(features:UrlNormCount(), 2, 4,true)
        and cmpr_gt(features:HtmlTagCount(), 30, true)
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:RANDOM_UPPER_LOWER_CASE_IN_FROM()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()    
    then
        SetPSAR('ar1291') 
    end
    
    --ar1292
	--svobodno
    	
    --ar1293
	--svobodno
    
    --ar1294
    --mxs_other / #Anton #biznes #es_p103 #s_oktiabria_2015
    --29.08.2016 / r.kulpin
    --ebf0c8e170214b2547b3bae520f2ef62 af9e6ea0c7ae15b9ae117be8a6bd18d6 d5b6e05999618cfcf493ab8e468c59c9
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and features:MailRuTo()
        and cmpr_gt(features:HeaderNum(), 30, true)
        and cmpr_eq(features:GetSubjectEncoding(), "UTF-8") 
        and cmpr_lt(features:TextLines(), 15)
        and cmpr_lt(features:LinesToWordsRatio(), 20, true)
        and cmpr_gt(features:WhitespaceToWordRatio(),400)
        and cmpr_btw(features:UrlNormCount(), 1, 2,true)
        and cmpr_btw(features:HtmlTagCount(), 10, 50, true)
        and (wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL() or wclass:FROM_INFORMATION_SERVICE())
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar1294') 
    end
    
    --ar1295
	--svobodno
    
    --ar1296
	--svobodno
     
    --ar1297
    --fe / #1url #zarabotok
	--30.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 80, true)
    	and cmpr_gt(features:WordCount(), 50, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 10, 100)
    	and cmpr_gt(features:Words8bitRatio() , 70)
    	and cmpr_lt(features:RepuserAge(), 30, true)
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
    	and wclass:REP_USER_SPAM_RATE_MORE_25()
    then
    	SetPSAR('ar1297')
    end
    
    --ar1298
	--svobodno
        
    --ar1299
	--svobodno
    
	--ar1300
	--mxs_mbp / #vbei v google
	--30.12.16 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "smtp")
        and features:MsgSize() >= 50000
    	and features:HasTextOnly() == 1
		and features:WordCount() <= 50
        and features:DotCount() >= 100
	then
		SetPSAR('ar1300')
	end
    
    --ar1301
	--svobodno
        
    --ar1302
	--svobodno
    	
    --ar1303
	--svobodno
    	
    --ar1304
	--svobodno
    
    --ar1305
	--svobodno
    
    --ar1306
    --mxs_other / #zarabotok #zolotoesolnce
    --29.08.2016 / r.kulpin
    --cd0ff6c56bf1b690d4663094ea3c2181 ce41016351f9d58459be5eb1624728eb 5161190d81ad806cbb85fc97c02dfc56
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 2000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:MailRuTo()
        and cmpr_btw(features:TextLines(), 20, 50, true)
        and cmpr_btw(features:LinesToWordsRatio(), 25, 40)
        and cmpr_gt(features:WhitespaceToWordRatio(), 300)
        and cmpr_btw(features:UrlNormCount(), 1, 2,true)
        and cmpr_btw(features:HtmlTagCount(), 10, 30, true)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:WORDS_OTHERS_BAD_RATIO() or wclass:WORDS_WITH_NOISE())
        and wclass:PRECEDENCE_BULK()
    then
        SetPSAR('ar1306')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1306')
    end
    
    --ar1307
	--mxs_other / #likvidaciya #doc
    --29.08.16 / veselitsky		
	--00832ecf558ea2c4bf037c5cf4b91554 2d13f06b5c22230951537f81bb2bedd9 bd7e512621949696af001ab797144c04 21b69e3a5664220f5996757945161e69 28de7b24b874fe9db227efc51151722f
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 20000, 80000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
    	and features:MultipartNum() == 5
       	and cmpr_btw(features:TextLines(), 10, 35)
    	and cmpr_btw(features:WordCount(), 100, 500)
    	and cmpr_btw(features:HtmlTagCount(), 2, 13)
    	and features:UrlNormCount() == 0
		and features:FilesExtensions() == '.doc' 
    	and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
     	and wclass:CT_ENCODED_FILENAME()
    	and wclass:TERMS_CARDS_DUBLICATES()
    then
		SetPSAR('ar1307')
	end 
    
    --ar1308
	--svobodno
    
    --ar1309
	--mxs_mbp / #spamskartinkoy
    --29.08.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 100000, 400000)
    	and features:HasNoAttach() == 1
		and features:ImgNum() == 1
    	and features:MultipartNum() == 4
        and features:NoSubject() == 1
       	and cmpr_btw(features:TextLines(), 0, 6)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and cmpr_btw(features:HtmlTagCount(), 5, 16)
    	and cmpr_gt(features:RcptNum(), 1)
    	and features:UrlNormCount() == 0
     	and wclass:FAKE_IN_REPLY_TO()
    	and wclass:ONLY_7BIT_WORDS()
    then
		SetPSAR('ar1309')
	end
    
    --ar1310
	--fe / #mp3_attach
    --10.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),1000)
        and (features:AttachAllCount() == 1 
            or UrlsMatchStr('calendar.mail.ru'))
        and features:NoRealNameTo()
        and cmpr_lt(features:RepuserAge(),20)
        and features:HtmlTagCount() > 0
        and (StrMatch(features:PartsFilenames(),'.mp3')
            or StrMatch(features:PartsFilenames(),'.wma')
            or StrMatch(features:PartsFilenames(),'.pub')
            or features:SubjectWordMixedCount() > 0 and TermsMatchGroup(18139,100))
        and not TermsMatchGroup(18202,100)
        and TermsMatchGroup(18139,100)
    then
        SetPSAR('ar1310') 
    end
    
    --ar1311
	--mxs_mbp / #zarabotok  
	--07.11.16 / zubr
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
    	and cmpr_btw(features:MsgSize(),800,5000)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_btw(features:WordCount(),10,50,true)
    	and cmpr_btw(features:TextLines(),2,10,true)
    	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_btw(features:UrlNormCount(), 2, 3, true)
    	and cmpr_gt(features:SubjectWordCount(), 2, true)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:NOREALNAME_TO()
    	and wclass:FREE_MAIL()
    	and UrlsMatchStr('docs.google.com/forms', 1) 
    then
    	SetPSAR('ar1311')
    end
    
    --ar1312
    --mxs_sender / #aukro  
    --29.08.16 / zubr
    --31377f2e6a4d1dc202cafbb5f65ac802 2f3b8ac670d5f504f37641e81a06d8ef
	if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_sender' or features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_esp' or features:RcvSrcExt() == 'mxs_other')
		and (features:FromDomain() == 'aukro.ua' or wclass:FROM_NGS_RU() or features:FromDomain() == 'turizm.ru' )
		and features:HasShortUrl() == 1
    then
    	SetPSAR('ar1312')
    end
    
    --ar1313
	--svobodno
    
    --ar1314
	--svobodno
    
    --ar1315
	--svobodno
    
    --ar1316
	--svobodno
    
    --ar1317
	--svobodno
    
    --ar1318
	--svobodno
        
    --ar1319
	--svobodno
    
    --ar1320
	--svobodno
    
    --ar1321
	--mxs_other / #Efremov
	--10.12.2016 / rassadovskiy
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        and wclass:NEW_IP_7_DAYS()
        and not TermsMatchGroup(18154,100)
    then
    	SetPSAR('ar1321') 
	end

    --ar1322
	--svobodno

    --ar1323
	--svobodno

    --ar1324
    --mxs_other / #shapilov #zaiavka #prover_account #shapilov #zarabotok
    --30.08.2016 / r.kulpin
    --797a5f391567f5f79003597317ee05e9 8b740e07c6ac12df2c8c2c7f4f899556 1dc3c88bf43a3d24ef7424e607be2cb3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId()
        and cmpr_gt(features:HeaderNum(), 30)
        and cmpr_btw(features:TextLines(), 15, 60, true)
        and cmpr_btw(features:LinesToWordsRatio(), 15, 35, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 300)
        and cmpr_btw(features:UrlNormCount(), 1, 4,true)   
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()    
        and wclass:QMAIL_IN_RECEIVED()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
        SetPSAR('ar1324') 
        LogMsgToHadoop('dstat_kulpin_log', '#ar1324')
    end
    
	--ar1325
	--mxs_mbp / #vacancy #pechkinspy
	--30.08.16 / veselitsky	 
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or features:RcvSrcExt() == 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 500, 3000) 
  		and features:HasTextOnly() == 1
     	and features:MultipartNum() == 3 
    	and cmpr_gt(features:RcptNum(), 1)
    	and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
    	and cmpr_btw(features:WordCount(), 5, 60)
       	and cmpr_btw(features:UrlNormCount(), 0, 3)	
    	and cmpr_btw(features:HtmlTagCount(), 0, 5)
	   	and (UrlsMatch(regex([[\.(ymlp|pechkinspy)]])) or wclass:US_URLS())
    	and wclass:UNKNOWN_GEO_CODE() 
    	and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
    then
    	SetPSAR('ar1325')
    end
    
    --ar1326
	--svobodno
    
    --ar1327
	--svobodno
    
    --ar1328
   	--fe / #znakomstva #autoreg
	--30.08.16 / minina
	--as6291_ntr
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),50,300,true)
    	and cmpr_eq(features:HasTextOnly(),1)
   		and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_btw(features:TextLines(),1,10,true)
    	and cmpr_btw(features:WordCount(),5,25,true)
       	and cmpr_eq(features:UrlNormCount(),0)
    	and cmpr_eq(features:HtmlTagCount(),0)
    	and cmpr_gt(features:SubjectWordCount(),2,true)
 		and features:UserCreateTime()
        and cmpr_btw(features:NumberCount(),6,15)
       	and cmpr_lt(features:UserCreateTime().days,30,true)
    	and wclass:SHORT_ENGLISH_MESSAGE()
		and wclass:WHITESPACE_SUSP_RATIO()
    then
    	SetPSAR('ar1328', true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1328' )
    end
    
    --ar1329
	--svobodno
    
    --ar1330
	--svobodno
    
    --ar1331
    --fe / #zarabotki #.pdf
    --30.08.16 / a.sokolov
    --bcc724441ec55e45c11f1f8285b53cbc 054e944abb0f435981490091840343d5 5125258d287544d6c64232981f04de04
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300000, 1000000)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 40, true)
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 6)
        and cmpr_btw(features:WordCount(), 5, 20, true)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 80)
        and wclass:FROM_ENDS_WITH_YEAR()
        and wclass:NAME_IN_BODY()
    then
        SetPSAR('ar1331', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1331')
    end
    
    --ar1332
	--svobodno
    
    --ar1333
    --fe / #virus #google_docs
    --30.08.16 / a.sokolov
    --56554151512abc989562e4e42b6470d9 d3b16a1cb59adaf8470fd977bb5c577a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:TextLines(), 1, 6)
        and cmpr_btw(features:WordCount(), 1, 20, true)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_eq(features:HasFreeHosting(), 1)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10)
        and wclass:FE_ENG_MSG()
    then
        SetPSAR('ar1333', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1333')
    end    

    --ar1334
    --mxs_other #seminar_attach
    --30.08.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
        and cmpr_btw(features:TextLines(), 10, 40, true)
        and cmpr_btw(features:WordCount(), 30, 300, true)
        and cmpr_gt(features:NumberCount(), 20)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and cmpr_eq(features:FilesExtensions(), ".doc")
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and wclass:SPF_NOT_PASS()   
    then
        SetPSAR('ar1334', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1334')
    end
    
    --ar1335
	--svobodno
        
    --ar1336
	--svobodno
    
    --ar1337
	--svobodno
    
    --ar1338
	--svobodno
    
	--ar1339
	--mxs_other / #virus #javascript #rostelecom
    --12.09.16 / veselitsky		
	--ed57b63898eeb81a63b2ee60a0c36eb2 c0f68e0d550dafc0c8add1d3d534e081 472a41435bd52da6081dcfb527c71590
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and features:HasAttach() == 1
    	and features:AttachAllCount() == 1
    	and features:AttachExecutableCount() == 1
		and features:ImgNum() == 0
       	and cmpr_btw(features:TextLines(), 0, 120)
    	and cmpr_btw(features:WordCount(), 0, 2000)
    	and features:FromDomain()
    	and (cmpr_lt(#features:FromDomain(), 8) or (features:Has3dLevelFromDomain() and cmpr_lt(#features:FromDomain(), 11)))
       	and StrMatch(features:FilesExtensions(), '.js')
    	and wclass:NO_MIME()
    then
		SetPSAR('ar1339')
	end 
    
    --ar1340
	--svobodno
    
	--ar1341
	--svobodno
    
    --ar1342
	--svobodno
	
    --ar1343
	--fe mxs / #virus #googledocs
    --14.09.16 / veselitsky		
	--9d6248820a9149dc6a3ab5e5954fd67c 59519d30047e2adcf7b103e76a0d04b4 
    if not IsBlocked
	   	and (features:RcvSrcExt() == 'fe' or features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 200, 1500)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1  	
    	and cmpr_btw(features:TextLines(), 0, 7)
    	and cmpr_btw(features:WordCount(), 3, 20)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 6)
    	and features:HasFreeHosting() == 1
		and (UrlsMatchStr("docs.google.com/uc?export=download", 1) or TermsMatchGroup(17361, 100))
    	and (wclass:SUBJECT_ENDS_WITH_NUMS() or features:NoSubject() == 1)
    then
		SetPSAR('ar1343')
	end
    
    --ar1344
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and wclass:PHP_URL()
        and wclass:WITH_HTTP()
        and UrlsMatchStr('ymlp', 1)
    then
        SetPSAR('ar1344')
    end
        
    --ar1345
	--mxs_other / #as7652
    --31.08.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 0, 6000)
		and features:Has3dLevelFromDomain() 
		and cmpr_btw(features:IpAge(), 0, 7)
    	and features:NoRealNameTo() == 1
    	and	features:FirstLevelFromDomain() == 'uk'
        and cmpr_gt(features:UrlNormCount(), 0) 
        and not features:FromMatchesWithUrl()
    then
        SetSpam('ar1345',false)
		CarbideSendStatsSum('rules_analyst', 'ar1345', 1)
		--SetPSAR('ar1345')
	end
    
    --ar1346
    --fe / #bazy
    --31.08.16 / a.lisitskaya
    --eeb98f32e8e1eb59300add9ef04619eb
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 100, 13000, true)
        and not features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(), 1)
        and not cmpr_gt(features:Words7bitRatio(), 80, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and (cmpr_eq(features:NoRealNameTo(), 1) or features:NoTo() or features:ToRealNameInToLocalPart())
    	and features:UserCreateTime().days
        and features:UserCreateTime().days <= 2
    	and cmpr_btw(features:RepuserAge(), -1, 7, true)
    	and TermsMatchGroup(17312, 100)
	then
		SetPSAR('ar1346')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1346')
	end 
    
    --ar1347
    --mxs_mbp / #google #image_zarabotok
    --14.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),100,1000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() == 1
        and features:MultipartNum() == 3
        and features:IsFromGoogle()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HasPhotoHosting()
        and cmpr_btw(features:HtmlTagCount(),1,5,true)
        and features:NoBodyTag() 
        and features:NoRealNameTo()
        and cmpr_btw(features:TextLines(),1,2,true)
        and wclass:ONLY_URLS_IN_BODY()
        and wclass:FROM_IS_EQUAL_TO_SENDER()
    then
        SetPSAR('ar1347') 
    end

    --ar1348
	--mxs_mbp / #zarabotok #biginvisibletext
    --31.08.16 / veselitsky		
	--250321e051c016d9b3e90b267b6add7b 1862266a2824104dbb9d6ead5d90559c d784172fecb3b07ed40b7d3bf165cde5
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 30000, 100000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and cmpr_btw(features:TextLines(), 50, 110)
    	and cmpr_btw(features:WordCount(), 200, 1200)
    	and cmpr_btw(features:HtmlTagCount(), 230, 650)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 4, 16, true)
    	and features:HasImageUrl() == 1
    	and wclass:OTHER_IP_IN_DNSBL()
    	and wclass:TO_MISMATCH_ENVELOPE_TO()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    then
		SetPSAR('ar1348')
	end
    
	--ar1349
	--svobodno
    
    --ar1350
    --smtp /#franshiza #120k #biznes #rinok #franchazi
    --31.08.2016 / r.kulpin
    --b23c1b01b5e2b80fde35974af42e7481 558ac862ee0835e8f5c677659a01e047 a020232a6c5b1a7b1b5ac2ce9aea31f5
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 10000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and features:NoUserAgent()
        and cmpr_gt(features:SubjectLen(), 50)
        and cmpr_lt(features:RepuserAge(), 7)
        and cmpr_eq(features:UrlNormCount(), 1)       
        and cmpr_gt(features:TextLines(), 80)
        and cmpr_lt(features:LinesToWordsRatio(), 25)
        and cmpr_gt(features:WhitespaceCount(), 1000)
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1350') 
        LogMsgToHadoop('dstat_kulpin_log', '#ar1350')
    end 
    
    --ar1351
    --smtp / #bags_boutique
	--31.08.16 / minina
	--sc_s_usage7
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),10000,20000,true)
    	and cmpr_eq(features:HasTextOnly(),1)
   		and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_btw(features:TextLines(),50,150,true)
    	and cmpr_btw(features:WordCount(),200,1000,true)
    	and cmpr_gt(features:Words8bitRatio(),75,true)
    	and cmpr_gt(features:SubjectWordCount(),5,true)
       	and cmpr_gt(features:UrlNormCount(),1,true)
    	and cmpr_eq(features:HtmlTagCount(),50,150,true)
 		and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days,90 ,true)
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:SHORT_BOUNDARY()
		and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar1351')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1351' )
    end
    
    --ar1352
    --mxs_other / #vacansy #zarabotok #doc
    --14.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 5000, 300000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 1, 100, true)
    	and cmpr_btw(features:WordCount(), 1, 300, true)
    	and cmpr_gt(features:WordsOtherRatio() , 10)
    	and cmpr_eq(features:UrlNormCount() , 0)
        and HasHeader('Disposition-Notification-To')
    	and cmpr_eq(features:FilesExtensions(),'.doc')
    	and wclass:NEW_FROMDOMAIN_30_DAY()
      	and wclass:SPF_NOT_PASS()
      	and wclass:SHORT_BOUNDARY()
    	and wclass:UNKNOWN_IN_RECEIVED()
    	and wclass:MORE_1_EMAILS_IN_TO()
	then
		SetPSAR('ar1352')
	end
       
    --ar1353
	--svobodno
    
    --ar1354
    --mxs_mbp / #zamuzhestvo
	--01.09.16 / minina
	--661d7a4578935319edca436edd2d42ca
    --ebaeb50664c16ca8ea1efb117e001a7a
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
    	and cmpr_btw(features:MsgSize(),10000,30000)
    	and cmpr_eq(features:HasTextOnly(),1)
      	and cmpr_btw(features:WordCount(),100,1000,true)
    	and cmpr_btw(features:TextLines(),25,100,true)
    	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_gt(features:UrlNormCount(),5,true)
    	and cmpr_eq(features:HasFreeHosting(),1)
    	and cmpr_gt(features:SubjectWordCount(),5,true)
    	and cmpr_gt(features:Words8bitRatio(),60,true)
    	and cmpr_btw(features:HtmlTagCount(), 50, 150)
    	and wclass:HAS_EXTERNAL_IMG()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:NO_USER_AGENT()
     	and wclass:WHITESPACE_SUSP_RATIO()
    	and wclass:NOREALNAME_FROM()
    	and UrlsMatchStr('docs.google.com/forms', 1)
    	and UrlsMatchStr('.blog', 1)
    then
    	SetPSAR('ar1354')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1354' )
    end
    
	--ar1355
	--svobodno
    	
	--ar1356
	--svobodno
    
    --ar1357
	--svobodno
    	
    --ar1358
	--svobodno
 
    --ar1359
	--svobodno
        
    --ar1360
	--svobodno
    
    --ar1361
	--svobodno
    
    --ar1362
    --mxs_other / #novostroiTV
	--18.12.2016 / rassadovskiy
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_sender')
    	and cmpr_btw(features:MsgSize(),5000,20000)
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:UrlNormCount(),1,2,true)
    	and features:ExternalImgNum() > 0
    	and features:WordCount() > 100
    	and features:WhitespaceToWordRatio() >= 500
    	and features:IpAge() < 15
        and TermsMatchGroup(18177,100)
    then
    	SetPSAR('ar1362') 
	end
    
    --ar1363
    --mxs_mbp / #ngs.ru  
    --01.09.16 / zubr
    --f8f47bc0b23802af21c91b0ae68827fe
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_mbp'
		and features:MsgSize() >= 100 and features:MsgSize() <= 500
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 3
		and features:NoBodyTag() == 1
		and features:NoHtmlTag() == 1
		and features:WordCount() >= 5 and features:WordCount() <= 20
		and features:NumberCount() >= 5
		and wclass:FROM_NGS_RU()
    then
    	SetPSAR('ar1363')
    end
    
    --ar1364
    --mxs_other / #rabota #CT_IN_BODY
    --30.12.16 / philip.karpov
    --28ff9504afda41e6c79a5f288c362ecc 2bd5173813e49d9a93a189e07e971547 d048926b1313135d5d6c6af9434df913
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50000, 5000000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and wclass:CT_IN_BODY()
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:NOREALNAME_FROM())
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
    then
        SetPSAR('ar1364')
    end
    
    --ar1365
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --d619fb54bbaed4dcb8292498d7c6c3a9 f67b3ed783c0bacd7619cd5256b262ee
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        --and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and cmpr_eq(features:NoSubject(), 1)
        and wclass:RU_RF_URLS()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:HAS_14_DAYS_GAP()
    then
        SetPSAR('ar1365')
    end


    --ar1366
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 1000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:HtmlTagCount(), 2, true)
        and cmpr_gt(features:SubjectNumbersCount(), 1, true)
        and (wclass:SOURCE_IP_IN_XBL() or 
            wclass:SOURCE_IP_IN_DNSBL() or 
            wclass:NEW_IP_30_DAYS())
        and wclass:WORDS_TO_URLS_BADRATIO()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar1366')
    end

    --ar1367
    --mxs_sender / #zarabotok  
    --03.09.16 / zubr(sokolik)
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 5000 and features:MsgSize() <= 80000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() <= 10
		and features:FreeHostingUrlCount() == 0
		and features:TextLines() >= 1 and features:TextLines() <= 30
		and features:WordCount() >= 500 and features:WordCount() <= 3000
		and features:SubjectWordCount() >= 2
		and (features:RcptNum() >= 10
    		or features:WordOtherCount() > 100)
		and wclass:PRECEDENCE_BULK()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
		and StrMatch(features:MsgIdDomain(), '.mail.ru')
		and HeaderMatchRe('Organization', regex([[^[A-Z]{4,10}$]]))
		and HeaderMatchRe('X-mailer', regex([[^[A-Z]{3,9}\-\d{2,5}]]))
    then
    	SetPSAR('ar1367')
    end

    --ar1368
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 3, 7, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 6, 10, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:HAS_FREE_HOSTING()
        and wclass:NEW_IP_30_DAYS()
    then
        SetPSAR('ar1368')
    end
    
    --ar1369
    --fe / #zarabotok
    --03.10.16 / r.belyankin
    --fc_f_hasurl
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and not wclass:EXCEPTIONS()
        and cmpr_gt(features:MsgSize(), 1000, 15000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_btw(features:ImgNum(), 3, 5, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 50, true)
        and cmpr_gt(features:MultipartNum(), 5) 
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_eq(features:IsAutoreg(), 1) or wclass:NEW_IP_7_DAYS())
        and cmpr_eq(features:NoRealNameTo(), 1)  
        and cmpr_btw(features:TextLines(), 1, 15, true) 
        and cmpr_btw(features:WordCount(), 10, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 25)
        and cmpr_eq(features:NumberCount(), 0)
        and TermsMatchGroup(17190, 20)
        and not wclass:PHP_URL()
        and HeaderMatchRe('Content-type', regex([[boundary="-{3,10}[a-zA-Z\d]{20,50}-[a-zA-Z0-9]{5,25}-[0-9]{5,15}"]]), 1)
    then
        SetPSAR('ar1369')
    end
    
    --ar1370
	--svobodno
    
    --ar1371
    --mxs_mbp #short #only_text
    --02.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and (wclass:MESSAGE_ID_NO_DOMAIN()
            or wclass:BRACKETS_IN_MSGID()
            or wclass:MAIL_RU_MSGID_PATTERN())
        and wclass:FREE_MAIL_AND_NO_CTE()
        and (wclass:ONLY_7BIT_WORDS()
            or wclass:SPF_NOT_PASS_FROM_MBP())
    then
        SetPSAR('ar1371')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1371')
    end
    
    --ar1372
    --mxs_other #zarabotki
    --01.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 3, 20, true)
        and cmpr_btw(features:WordCount(), 5, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_eq(features:InvalidFrom(), 1)
        and wclass:SPF_NOT_PASS()
        and wclass:PHP_URL()
        and HeaderMatch('From', 'usa.com')
    then
        SetPSAR('ar1372')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1372')
    end
    
    --ar1373
    --mxs / #otzivi
    --02.09.16 / r.belyankin
    --57f5ea71248bbac77fde8d96d62d392d 99a68353d2ed3c004af0a5fc0daf730c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 50)
        and cmpr_eq(features:MultipartNum(), 1)   
        and cmpr_btw(features:TextLines(), 1, 5)
        and cmpr_btw(features:WordCount(), 5, 50)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NumberCount(), 0)
        and wclass:OTHER_IP_IN_DNSBL()
        and (wclass:PTR_SEEMS_DYNAMIC() or wclass:HELO_SEEMS_DYNAMIC())
    then
        SetPSAR('ar1373')
    end
    
    --ar1374
    --mxs_mbp / #zarabotok #money-invest.info
    --02.09.16 / minina
    --mfc_mf_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 1, 25, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50,true)
    	and cmpr_eq(features:OneWordSubject(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
        and UrlsMatchStr('.html', 1)
        and wclass:HAS_X_PHP_SCRIPT()
        and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
        and wclass:SHORT_MESSAGE()
    	and wclass:NOREALNAME_FROM()
    then
        SetPSAR('ar1374')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1374' )
    end
    
    --ar1375
    --smtp / #shorturl #zarabotki
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_lt(features:RepuserAge(), 5)
    		or wclass:ONLY_7BIT_WORDS())
    	and cmpr_eq(features:UrlNormCount(), 1)
        and (cmpr_eq(features:NoRealNameFrom(), 1)
    		or not wclass:RUSSIAN_FROM_REALNAME())
		and wclass:SHORTURL()
    	and (wclass:TO_LOCALPART_IN_REALNAME()
    		or wclass:SMTP_HAS_INPUT_TAG())
    then 
        SetPSAR('ar1375')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar1375')
    end
    
    --ar1376
    --fe / #ask.fm/goto/
    --19.12.2016 / rassadovskiy(sokolik)
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 100000)
        and (features:HasTextOnly() == 1
    		or wclass:HAS_ATTACH())
        and features:NoTo()
        and cmpr_lt(features:RepuserAge(),20)
        and features:UrlCountWithoutMailRu() > 0
        and features:HtmlTagCount() > 0
        and UrlsMatchStr('l.ask.fm/goto/50aiCb',1)
    then
        SetPSAR('ar1376') 
    end
    
    --ar1377
    --fe / #zarabotok
    --30.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 500000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 3, 7, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 6, 10, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:HAS_FREE_HOSTING()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar1377')
    end
    
    --ar1378
    --smtp / #shorturl #zarabotki
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlNormCount(), 1)
      	and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:SMTP_HAS_INPUT_TAG()
    	and wclass:ONLY_7BIT_WORDS()
    then 
        SetPSAR('ar1378')         
       	LogMsgToHadoop('dstat_sokolik_log', '#ar1378')
    end
    
    --ar1379
    --fe / #drive #eng
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachExecutableCount(), 1)
        and cmpr_lt(features:RepuserAge(), 5)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and (wclass:URL_GOOGLEDRIVE()
    		or UrlsMatchStr('docs.google'))
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1379')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1379')
    end
    
    --ar1380
    --mxs_other #rabota #ask.fm
    --02.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 3, 20, true)
        and cmpr_btw(features:WordCount(), 5, 50, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 50)
        and cmpr_btw(features:UrlNormCount(), 2, 6, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:REDIRECTS_URL_PART()
        and wclass:NEW_FROMDOMAIN_1_DAY()
        and UrlsMatchStr('ask.fm', 1)
    
    then
        SetPSAR('ar1380')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1380')
    end
    
    --ar1381
	--svobodno
    
    --ar1382
	--svobodno
    
    --ar1383
	--svobodno
    
    --ar1384
	--svobodno

    --ar1385
	--svobodno

    --ar1386
	--svobodno
    
    --ar1387
	--svobodno

    --ar1388
    --mxs_other / #zarabotok #pidori
    --03.03.16 / r.kulpin
    --c74c4e5a6064e6e03653dd495df97301 65af510768443cc08acda2f0cc59ba78 75b049b982accbccdad5eedc33d6fc4c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 150000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:UrlCount(), 50, 250)
        and cmpr_gt(features:UrlsTextSize(), 1000)
        and cmpr_btw(features:TextLines(), 30, 100, true)
        and cmpr_lt(features:LinesToWordsRatio(), 50, true)
        and cmpr_btw(features:HtmlTagCount(), 100, 500, true)
        and cmpr_btw(features:HtmlUniqueTagCount(), 10, 50)
        and wclass:OTHER_IP_IN_DNSBL()
        and wclass:WHITESPACE_AND_SUSP_WORDS_OTHERS_RATIO()
        and wclass:HAS_IMAGE_URL()
        and wclass:NO_HTML_TAG()
    then
        SetPSAR('ar1388')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1388')
    end
    
    --ar1389
	--svobodno
    
	--ar1390
	--fe / #vbei v google
	--03.09.16 / zubr
	--061d6c2e9c3473376e53caf4a73e1299 9ff172fe8985e6fef112231be30e4cf8 e49e0791d840c239b7b232a146a1b5f9
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and features:RcvSrc() == "fe"
        and not features:IsPddUser()
        and not wclass:FROM_ENDS_WITH_YEAR()
        and features:MsgSize() >= 900 and features:MsgSize() <= 3000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
		and features:UserAge() >= 50
        and features:RepuserAge() <= 14
        and features:UrlNormCount() <= 1
		and features:HtmlTagCount() <= 30
        and features:TextLines() >= 2 and features:TextLines() <= 5
        and features:WordCount() >= 30 and features:WordCount() <= 60
		and features:WordOtherCount() >= 5
		and features:Words8bitRatio() >= 50
		and features:SubjectWordCount() >= 2
		and features:Karma() <= 0
		and features:IpCategory() == 'tiny'
        and wclass:NABERI_V_GOOGLE()
		and wclass:AUTOREG()
    then
        SetPSAR('ar1390')
    end
    
    --ar1391
    --mxs_other / #zarabotok #admin
    --04.09.16 / zubr
    --f19ff78db567fd6148946300b9687652
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
		and features:ExternalImgNum() >= 5
        and features:MultipartNum() == 1
        and features:NoRealNameTo() == 1
        and features:UrlNormCount() >= 2
        and features:TextLines() >= 50 and features:TextLines() <= 500
        and features:WordCount() >= 200 and features:WordCount() <= 600
		and wclass:HAS_IMAGE_URL()
		and StrMatchRe(features:FromRealName(), regex[[^a|Admin$]])
    then
        SetPSAR('ar1391')
    end
    
    --ar1392
	--mxs_other / #zarabotok
	--31.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'rpop' or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == "mxs"))
    	and features:HasTextOnly() == 1
        and not wclass:EXCEPTIONS()
		and features:DkimDomainRepipAge() <= 7
		and features:IpAge() <= 60
    	and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_7_DAYS())
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar1392')
					end
            
				elseif i2 and type(i2)=='number' then
				local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar1392')
					end
			end
	end
    
    --ar1393
    --mxs_mbp / #flud #english
    --04.03.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:NoRealNameTo() 
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_lt(features:TextLines(), 8, true)
        and cmpr_btw(features:WordCount(), 8, 30, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        and wclass:MX_INVALID_RATE_MORE_THAN_10()
        and (wclass:ENGLISH_LANGUAGE_MESSAGE() or cmpr_gt(features:Words7bitRatio(), 60, true))
        and (StrMatchRe(features:From(), regex([[^.*\d.*@]])) or features:IsAutoreg())
    then
        SetPSAR('ar1393')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1393')
    end
    
    --ar1394
    --mxs_sender / #zarabotok #smartresponder.ru #mariot 
    --04.09.16 / r.kulpin
    --017786f274124ea277ff2313b34ec1a1 3f970ef63955a11e1edb6c8ee1ef2040 beb456379e1b24b8d8feecc0cdd5ceb9
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
		and features:MsgSize() >= 5000 and features:MsgSize() <= 500000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() <= 12
		and features:FreeHostingUrlCount() == 0
		and features:TextLines() >= 1 and features:TextLines() <= 40
		and features:WordCount() >= 500 and features:WordCount() <= 3000
		and features:SubjectWordCount() >= 2
		and features:RcptNum() >= 5
		and wclass:PRECEDENCE_BULK()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
		and (StrMatch(features:MsgIdDomain(), '.mail.ru') or features:MsgIdDomain() == "smartresponder.ru") 
		and (HeaderMatchRe('Organization', regex([[^[A-Z]{4,10}$]])) or features:FromRealNameWordCount() == 1)
		and (HeaderMatchRe('X-mailer', regex([[^[A-Z]{3,9}\-\d{2,5}]]))) or
            (features:MessageId() and HeaderMatchRe('Message-ID', regex([[^\<\s[A-Z]{5,30}\.\s[A-Z]{5,35}\@[a-z]{7,15}\.ru\>$]])))
    then
    	SetPSAR('ar1394')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1394')
    end
     
    --ar1395
	--svobodno
    
    --ar1396
	--svobodno
    
    --ar1397
	--svobodno

    --ar1398
    --mxs_other #empty_message
    --04.09.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 100)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
        and wclass:EMPTY_MESSAGE()
    then
        SetPSAR('ar1398')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1398')
    end
    
    --ar1399
	--svobodno
    
    --ar1400
    --mxs_mbp / #chasy
    --05.09.16 / a.sokolov
    --f210e12c53c9a4c17bba8d9d59e54d5a 6236ff966d28ae6beef16b29a7713e70
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_btw(features:TextLines(), 1, 6, true)
        and cmpr_btw(features:WordCount(), 1, 20, true)
    	and cmpr_eq(features:NumberCount(), 0)
    	and cmpr_gt(features:WhitespaceCount(), 100, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 50, true)
        and wclass:FROM_RAMBLER()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and wclass:FROM_MISMATCH_SENDER()
    then
        SetPSAR('ar1400')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1400')
    end
    
    --ar1401
    --mxs_mbp #oriflame
    --05.09.16 / a.sokolov
    --829e379104be9f2c61dfa76759507e79 f775c11d7d06930dddcabe77179c9b69 5a8626cc3382e0330a32e3dd8a1a70e7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000, 300000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:IsFromGoogle()
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
    	and cmpr_gt(features:SubjectWordMixedCount(), 0)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 10, 30)
        and cmpr_gt(features:NumberCount(), 5)
        and cmpr_eq(features:NoRealNameTo(), 1)
        --and wclass:SUBJECT_ONLY_WITH_IMAGE()
        --and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:GIF_IN_BODY()
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar1401')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1401')
    end
    
    --ar1402
    --sender #vacancy
    --05.09.16 / a.sokolov
    if not IsBlocked
        and false
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 1, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 40, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:NumberCount(), 10)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_gt(features:Words8bitRatio(), 40)
        and HeaderMatch('Content-Transfer-Encoding', '7bit')
    then
        SetPSAR('ar1402')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1402')
    end
    
    --ar1403
    --svobodno
    
    --ar1404
    --mxs_mbp / #facebook_marketing
    --14.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 20000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 50, 150, true)
        and cmpr_btw(features:WordCount(), 300, 6000)
        and cmpr_gt(features:NumberCount(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)	
        and (wclass:PSEUDO_DMARK_AND_WORDS_OTHERS_BAD_RATIO()
            or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS())
        and (wclass:FAKE_FREE_MAIL()
            or wclass:SPF_NOT_PASS_FROM_MBP())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:PHP_URL_WITH_MS_MAILER()
            or wclass:HAS_PHP_SCRIPT_AND_MS_MAILER())
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then   
        SetPSAR('ar1404')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1404')
    end 
    
    --ar1405
    --mxs / #zarabotok
    --08.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 1
        and features:TextLines() >= 100 and features:TextLines() <= 500
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 50   
        and wclass:FAKE_REPLY_IN_SUBJECT()
        and wclass:HAS_TAG_META()
        and wclass:BADNET()
    then
        SetPSAR('ar1405')
    end
    
    --ar1406
	--svobodno
    	
    --ar1407
    --mxs / #zarabotok #pdf
    --31.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 150000
        and features:HasAttach() == 1
        and features:FilesExtensions() == '.pdf'
        and not features:DkimDomain()
        and features:TextLines() <= 5
        and features:WordCount() <= 5
        and features:HtmlTagCount() == 0  
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:NONE_SPF()
    then
        SetPSAR('ar1407')
    end
    
    --ar1408
    --mxs_esp / #Nadezhda_LAD
    --15.11.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
		and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 1000, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 200, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 20)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:SubjectWordCount(), 2)
        and cmpr_gt(features:Words8bitRatio(), 60, true)
		and features:DkimDomain() and StrMatch(features:DkimDomain(), ':')    	
    	and wclass:PHP_URL()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
		SetPSAR('ar1408')
	end
    
   	--ar1409
    --mxs / #watch #bags #shopping
    --14.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or features:ImapSubSrc() == 'mxs')
        and cmpr_gt(features:MsgSize(),3000)
        and features:HasNoAttach() == 1
        and features:MultipartNum() >= 3
        and features:NoTo()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,5,true)
        and features:HtmlTagCount() > 0
        and features:WhitespaceToWordRatio() > 300
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and wclass:HDR_NO_TO_AND_DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:SHORT_BOUNDARY()
        and TermsMatchGroup(17785,100)
    then
        SetPSAR('ar1409') 
    end

    
    --ar1410
	--svobodno
    
    --ar1411
	--svobodno
    
    --ar1412
	--svobodno
    
    --ar1413
    --sender #vacancy 
    --05.09.16 / minina
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
		and cmpr_btw(features:MsgSize(), 1000, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 200, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
      	and cmpr_gt(features:SubjectWordCount(), 3, true)
        and cmpr_gt(features:Words8bitRatio(), 60, true)
        and cmpr_eq(features:FromRealNameWordCount(), 2)
    	and HasHeader('List-Unsubscribe')
    	and HeaderMatch('List-Unsubscribe', features:To())
        and HeaderMatch('Precedence','bulk')
    	and cmpr_gt(features:WhitespaceToWordRatio(), 200, true)
    then
        SetPSAR('ar1413')
        LogMsgToHadoop('dstat_minina_log', '#ar1413')
    end
    
    --ar1414
	--svobodno
    
    --ar1415
    --mxs_mbp / #seminar #nalogi 
    --05.09.16 / minina
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 3000, 12000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 100, 1000, true)
    	and cmpr_btw(features:TextLines(), 1, 50, true)
    	and cmpr_gt(features:Words8bitRatio(), 70, true)
        and cmpr_gt(features:UrlNormCount(), 2, true)
		and cmpr_eq(features:HasPhotoHosting(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:HtmlTagCount(), 1, 100, true)
        and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and wclass:SHORT_BOUNDARY()
        and wclass:SUSP_HTML_TAG_RATIO()
    	--and wclass:DIFFERENCE_RCPTNUM_AND_TO()
    then
        SetPSAR('ar1415')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1415' )
    end
    
    
    --ar1416
    --mxs / #zarabotok #kredit #cash
    --04.07.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:GeoCode(), 'US')
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 40)
        and cmpr_btw(features:HtmlTagCount(), 1, 200)
        and cmpr_gt(features:WhitespaceToWordRatio(), 100)
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:RANDOM_DIGITS_LOWER_CASE_IN_HEADER()
    then
        SetPSAR('ar1416')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar1416')
    end
    
    --ar1417
    --mxs_other / #vacancy #zarabotok
    --05.09.2016 / rassadovskiy
    --8de61d13869a0fb310b70d43d16b07e8 9a95e87607d93715b266f4bad150c38b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),2000,10000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_btw(features:MultipartNum(),1,3,true)
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),3,10,true)
        and cmpr_gt(features:HtmlTagCount(),30)
        and cmpr_btw(features:TextLines(),25,80,true) 
        and cmpr_gt(features:WordCount(),80)
        and (features:LinesToWordsRatio() > 20 or features:LinesToWordsRatio() < 5)
        and wclass:XMAILER_IPHONE_MAIL()
        and (wclass:MSG_ID_WITHOUT_DOMAINPART() and wclass:SHORT_BOUNDARY()
            or wclass:LONG_MSGID() and wclass:IP_IN_SPAMHAUS_AND_PTR_ERROR() 
            or wclass:MORE_THAN_5_RCPT()
            or wclass:DIFFERENT_REPLY_TO_AND_FROM()
        	or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
            or wclass:MX_TRAPS_COUNT_MORE_THAN_0())
        and TermsMatchGroup(17321,100)
    then
        SetPSAR('ar1417') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1417')
    end
    
    --ar1418
    --mxs_mbp / #zarabotok #multi_cash
    --14.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 200000)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:AttachArchiveCount(), 0)
    	and (cmpr_eq(features:AttachOfficeCount(), 0) or cmpr_eq(features:FilesExtensions(), ".txt"))
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and cmpr_btw(features:TextLines(), 1, 300, true)
    	and cmpr_gt(features:WordCount(), 50, 3000,true)
    	and cmpr_btw(features:UrlNormCount() , 1, 15, true)
    	and cmpr_gt(features:UrlsTextSize(), 40)
    	and cmpr_btw(features:HtmlTagCount(), 1, 150, true)
    	and wclass:RAMBLER_FE()
      	and wclass:BOUNDARY_WITHOUT_LETTERS()
    	and wclass:NO_HTML_TAG()
   		and (wclass:HAS_EXTERNAL_IMG() or wclass:PHP_URL())
	then
		SetPSAR('ar1418')
	end
    
    --ar1419
	--svobodno
    
    --ar1420
    --mxs_other / #zarabotok
    --05.09.2016 / rassadovskiy
    --1d48bd2ccfea52b9303891e19e11104f 9f681ed9609bbc05497a27d5f097756a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),2000,5000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:ExternalImgNum() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and features:FromMatchesWithUrl()
        and cmpr_btw(features:UrlNormCount(),2,4,true)
        and cmpr_btw(features:HtmlTagCount(),10,30)
        and cmpr_btw(features:TextLines(),10,25,true)
        and cmpr_btw(features:WordCount(),50,120)
        and features:WhitespaceToWordRatio() > 200
        and features:Words8bitRatio() > 75
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:SHORT_BOUNDARY()
        and wclass:HAS_HEADER_SENDER()
    then
        SetPSAR('ar1420') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1420')
    end
    
    --ar1421
    --fe / #english #one_url
	--05.09.16 / minina
	--4d773ab40c4e1a79cdd9b465c11eeb72
	--b0051c8485fe33dea7fadd42ac31f171
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 10, 100)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 10, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq( features:MultipartNum(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 30, true)
    	--and features:AbfCityWasChanged()
    	and wclass:SHORT_MESSAGE()
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{8,15}\.\d{8,15}$]]))
    then
    	SetPSAR('ar1421')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1421' )
    end
    
    --ar1422
	--svobodno
    
    --ar1423
	--svobodno
    
    --ar1424
	--svobodno
    
    --ar1425
    --fe / #flud 
	--05.09.16 / minina
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),100,1000,true)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30, true)
    	and cmpr_eq(features:WordMixedCount(), 0)
      	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 30 ,true)
    	and (features:AbfCityWasChanged() or features:AbfIpWasChanged())
    	and wclass:SHORT_ENGLISH_MESSAGE()
    	and wclass:AUTOREG()
    then
    	SetPSAR('ar1425', true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1425' )
    end
    
    --ar1426
    --mxs_other / #vacancy #zarabotok
    --05.09.2016 / rassadovskiy
    --794375a74282941c7bb4d5654cd32e1a 654e4cbb05c11fec6cb1c2027614865f 962b95092119d00d3623d0217c2377bc
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),1000,50000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and cmpr_gt(features:RcptNum(),1)
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),1,5,true)
        and cmpr_gt(features:TextLines(),5,true)
        and cmpr_gt(features:WordCount(),20)
        and cmpr_gt(features:Words8bitRatio(),60)
        and TermsMatchGroup(17353,100)
    then
        SetPSAR('ar1426') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1426')
    end

    --ar1427
	--fe / #zarabotok #vertical #bilzerian
	--05.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(),100000,1000000,true)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 100, true)
       	and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30, true)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
      	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 30 ,true)
    	and (features:AbfCityWasChanged() or features:AbfIpWasChanged())
    	and wclass:FAKE_REPLY_IN_SUBJECT()
    	and wclass:AUTOREG()
    	and wclass:WHITESPACE_SUSP_RATIO()
    then
    	SetPSAR('ar1427')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1427' )
    end
    
    --ar1428
	--svobodno
    
    --ar1429
	--svobodno
    
    --ar1430
    --mxs / #amazon
    --05.09.16 / r.belyankin
    --8da1819c047aaaf573679ca0f3f76d2f a932037bde657c37d06631b01e754462
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 5, 20)
        and cmpr_eq(features:GeoCode(), 'US')
        and cmpr_btw(features:IpAge(), 0, 15, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 100, 700, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
        and cmpr_gt(features:Words7bitRatio(), 80)
        and (wclass:NEW_DKIM_15_DAYS() or wclass:NEW_IP_15_DAYS())
        and wclass:RECEIVED_BAD_PATTERN_4()
        and UrlsMatchStr('amazonaws.com')
    then
        SetPSAR('ar1430')
    end
    
    --ar1431
    --mxs / #zarabotok #platforma
    --05.09.16 / r.belyankin
    --9a0b2955e2f031c17dff638d2d28e92f 8bf0188c6ed05bd5bf6a1488ed00f1f4
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:ToRealNameInToLocalPart(), true)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:PRECEDENCE_BULK()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:BIZ_URLS()
    then
        SetPSAR('ar1431')
    end
    
    --ar1432
	--svobodno
    
    --ar1433
	--svobodno
    
    --ar1434
	--svobodno
    
    --ar1435
	--svobodno
    
    --ar1436
	--fe / #seminar 
	--06.09.16 / veselitsky	
	--21bafa4a740d6838b10d170d20b435ff d4b0c3133ddac7c9111cf843e59d997d
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 7000, 25000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
		and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 1)
		and	cmpr_btw(features:TextLines(), 45, 120)
    	and cmpr_btw(features:WordCount(), 300, 1500)
    	and features:EmailsCountInBody() == 1
		and features:UrlNormCount() == 0
    	and cmpr_lt(features:HtmlTagCount(), 100)   
    	and wclass:TERMS_SEMINAR()
    	and wclass:TERMS_SPAM_SEMINAR()
    	and wclass:SOURCE_IP_IN_DNSBL()
   	 	and (wclass:SOURCE_IP_IN_XBL() or wclass:NEW_IP_7_DAYS())
    then
    	SetPSAR('ar1436')
    end
    
    --ar1437
	--svobodno
    
    --ar1438
	--svobodno
    
    --ar1439
    --svobodno
    
	--ar1440
	--svobodno
    
    --ar1441
	--svobodno
    
    --ar1442
	--svobodno
    
    --ar1443
    --mxs_mbp mxs_other / #zarabotok #bilzerian
    --05.09.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
       	and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
       	and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 1, 50, true)
        and cmpr_eq(features:ToRealNameInToLocalPart(), true)
        and wclass:NO_USER_AGENT()
    	and wclass:WHITESPACE_SUSP_RATIO()
        and (wclass:REDIRECTS_URL_PART() or wclass:PHP_URL())
    then
        SetPSAR('ar1443',true)
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1443' )
    end
    
	--ar1444
	--svobodno
    
	--ar1445
    --fe / #zarabotok
	--30.10.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 5, 100, true)
        and cmpr_btw(features:WordCount(), 30, 1000)
        and cmpr_lt(features:Karma(), 0, true)
		and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
		and cmpr_eq(features:HtmlTagCount(), 0)		
        and cmpr_btw(features:Words8bitRatio(), 75, 95, true)
        and HeaderMatch('Received','tel.mail.ru')
		and (mrasRepHasSendingGap(features:SrcIp(), 0, 10, 5, 7) or wclass:NEW_IP_15_DAYS())
        and cmpr_gt(HeaderCount('X-Envelope-To'), 3)
    then
        SetPSAR('ar1445')
    end
    
    --ar1446
	--svobodno
    
    --ar1447
	--svobodno
    
	--ar1448
	--svobodno
    
    --ar1449
    --mxs_other / #zarabotok
    --20.09.16 / zubr
    --d338299f3d45da521bb6e346e01ff05c
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 20000 and features:MsgSize() <= 50000
        and features:ImgNum() == 0
		and features:AttachAllCount() == 1
		and features:AttachOfficeCount() == 1
        and features:MultipartNum() >= 5
        and features:NoRealNameTo() == 1
		--and features:EngRealNameFrom() == 1
        and features:UrlNormCount() == 0
		and features:TextLines() >= 3 and features:TextLines() <= 10
		and features:WordCount() >= 10 and features:WordCount() <= 50
		and features:NumberCount() == 0
		and features:DotCount() == 0
		and features:DomainRepipAge() <= 5
    then
        SetPSAR('ar1449')
    end
    
    --ar1450
	--svobodno
    
    --ar1451
    --mxs_other / #vacansy
    --06.09.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
       	and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 20, 100, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_gt(features:WordsMixedRatio(), 30, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:NO_USER_AGENT()
        and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
    then
        SetPSAR('ar1451')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1451' )
    end
    
    --ar1452
	--svobodno
    
    --ar1453
	--svobodno
    
    --ar1454
    --smtp / #zarabotok
    --06.09.16 / zubr
    --e89831c6b962f7cbe6fb4d57da32e103
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and features:MsgSize() >= 200 and features:MsgSize() <= 800
		and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo() == 1
		and features:NoSubject() == 1
		and features:RepuserAge() <= 3
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:HtmlTagCount() <= 10
		and features:TextLines() >= 1 and features:TextLines() <= 2
		and features:WordCount() >= 2 and features:WordCount() <= 10
		and features:NumberCount() == 0
		and features:DotCount() == 0
		and wclass:AUTOREG()
    then
        SetPSAR('ar1454')
    end
    
	--ar1455
    --fe / #zarabotok_url
    --06.09.16 / r.belyankin
    --6e1159ec1f3fa16de1be05b16d086ff8 ae46a9f76ab084baed8d8b75d63c6d8d
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 50000, 700000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_btw(features:ImgNum(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:UrlsTextSize(), 50,  400)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_lt(features:RepuserAge(), 5)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 15, true)
        and cmpr_eq(features:NoRealNameTo(), 1)    
        and cmpr_btw(features:TextLines(), 1, 50, true) 
        and cmpr_btw(features:WordCount(), 5, 500, true)     
        and not wclass:PHP_URL()
        and TermsMatchGroup(17190, 20)
        and (UrlsMatchStr('ask.fm') or UrlsMatchStr('mailerlite.com'))
    then
        SetPSAR('ar1455')
    end
    
    --ar1456
    --svobodno
    
	--ar1457
	--svobodno
    
    --ar1458
    --mxs / #vakansia
    --06.09.16 / r.belyankin
    --8fdbead8629c9bd9464843ce04f83a56 4ae084ae10793eaf88fb61a5190608f6
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 30, 100, true)
        and cmpr_btw(features:WordCount(), 100, 700, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:MESSAGE_ID_NO_DOMAIN()
    then
        SetPSAR('ar1458')
    end
    
    --ar1459
	--svobodno
    
    --ar1460
    --svobodno
    
    --ar1461
    --smtp / #sport #dogovornie_matchi
    --07.09.2016 / r.kulpin
    --546dba48c16cf1f3eb50f695d09dc357 91c89e6874bfbf818e3b17f1966ef976 9adb5782b855ac43c123fd14232f263c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 1000, 40000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and features:Subject8bitOnly()
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 7, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 120, true)
        and cmpr_btw(features:TextLines(), 2, 50, true)
        and cmpr_btw(features:WordCount(), 100, 1000, true)
        and cmpr_lt(features:WordMixedCount(), 30)
        and cmpr_lt(features:LinesToWordsRatio(), 10)
        and cmpr_lt(features:WhitespaceToWordRatio(), 300)
        and features:FromLocalPart()
        and HeaderMatch('Message-Id', features:FromLocalPart())
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:RUSSIAN_FROM_REALNAME()
    then 
        SetPSAR('ar1461') 
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar1461')
    end
        
    --ar1462
	--svobodno
    
    --ar1463
	--svobodno
    
    --ar1464
    --mxs_other / #zarabotok #gaminator
    --06.09.16 / minina
    --b2b1080a5b84ad27dde572903114fad9
   	--bdda0b07c03352e608ff92048257028e
    if not IsBlocked
        and not wclass:EXCEPTIONS() 
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 100, 1500, true)
    	and cmpr_btw(features:TextLines(), 10, 200, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_eq(features:HtmlTagCount(), 50, 150, true)
		and cmpr_gt(features:SubjectWordCount(), 2, true)
        and wclass:SUSP_SWIFT_BOUNDARY()
    	and (wclass:TO_REALNAME_DUBLICATE_TO_EMAIL() or wclass:NOREALNAME_TO()) 
        and wclass:HAS_EXTERNAL_IMG()
    	and (wclass:MESSAGE_ID_NO_DOMAIN_WE() or wclass:NEW_DKIM_30_DAYS())
		and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:ENVELOPE_FROM_MATCHES_WITH_URL())  
   	then
        SetPSAR('ar1464')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1464' )
    end
    
    --ar1465
	--svobodno
    
    --ar1466
	--svobodno
    
    --ar1467
	--mxs_other / #virus #archivå #eng 
    --07.09.16 / r.kulpin	
	--5e07096e0bf0f3124d79d7d60becf80e 527e5f7a978cbacca07d1d9f590e41a2
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 8000, 40000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_btw(features:AttachArchiveCount(), 1, 2, true)
		and features:EngRealNameFrom()
        and features:ToRealNameInToLocalPart()
       	and cmpr_btw(features:TextLines(), 0, 20)
    	and cmpr_btw(features:WordCount(), 20, 200)
    	and features:Word8bitCount() == 0
     	and wclass:IS_EXECUTION_FILE_IN_ARCHIVE()
    then
		SetPSAR('ar1467')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1467')
	end
            
    --ar1468
    --mxs_other / #porn #urlspam
    --07.09.16 /m.guryanov
    --58e8efcf5ed3e852a0d2f5d9d6d94a1d
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"            
		and cmpr_btw(features:MsgSize(), 10, 100)
		and features:HasTextOnly() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and features:HtmlTagCount() == 0
    	and cmpr_btw(features:TextLines(), 1, 4, true)
    	and cmpr_btw(features:WordCount(), 1, 5, true)
    	and features:Word8bitCount() == 0
    	and features:Subject7bitOnly() == 1
    	and cmpr_btw(features:SubjectWord7bitCount(), 1, 4, true)
    	and cmpr_btw(features:UrlsTextSize(), 5, 15, true)
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:DOLLAR_IN_MSGID()
    then      	
        SetPSAR('ar1468', true)
        LogMsgToHadoop('dstat_guryanov_log', '#ar1468')
    end
    
    --ar1469
	--svobodno
    
    --ar1470
	--svobodno
    
    --ar1471
	--svobodno
    
    --ar1472
	--svobodno
    
    --ar1473
	--svobodno
    
    --ar1474
	--svobodno
    
    --ar1475
	--svobodno
    
    --ar1476
    --mxs / #zarabotok #url_@
    --07.09.16 / r.belyankin
    --4385b4fafca4bdf9d98ba5a07e410d76 1f8357f7225dbbb70bd2c74cd1e63926
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:IpAge(), 0, 100, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 1, 250, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 50)
        and wclass:TO_IN_SUBJECT()
        and wclass:MS_MAILER()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar1476')
    end
    
    --ar1477
	--svobodno
    
    --ar1478
    --mxs / #zarabotok #NextPart
    --07.09.16 / r.belyankin
    --8bde3a0024d9cbd2ac571f5025a3d9f0 22e02c6186034df8b0fad7c99ba9bde8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 100)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:IpAge(), 0, 15, true)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 35)
        and wclass:PTR_ERROR()
        and wclass:MS_MAILER()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar1478')
    end
    
    --ar1479
	--svobodno
    
    --ar1480
	--svobodno
    
    --ar1481
	--svobodno
    
    --ar1482
    --fe / #zarabotok #only_url
    --08.09.16 / r.belyankin 
    --afd6b1a0d90d29ff399fd7ebcf9a4f61 7a3f8f94064e6ab97f0ea934ccad6a81
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 10, 500, true)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
		and features:UrlCountWithoutMailRu() >= 1 -- fix(zubr)
        and cmpr_btw(features:UrlsTextSize(), 5, 50)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:IsAutoreg(), 1)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 10)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_eq(features:NumberCount(), 0)
    then
        SetPSAR('ar1482')
    end
    
    --ar1483
    --mxs_other/ #kurs #denezhnyi #renta_planet #TicketAIR #esp_url
    --12.09.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
       	and cmpr_btw(features:MsgSize(), 5000, 500000)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(),10, 1000, true)
    	and cmpr_btw(features:TextLines(), 5, 300, true)
        and cmpr_gt(features:UrlNormCount(), 5, true)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 500, true)
        and (cmpr_eq(features:NoTo(), 1) or cmpr_eq(features:EmptyTo(), 1))
    	and cmpr_gt(features:WordsMixedRatio(), 10, true)
    	and wclass:SPF_NOT_PASS()
    	and (wclass:MSG_ID_LOCALPART_SEEMS_HASH() or wclass:HELO_IN_MSGID())
        and wclass:NO_USER_AGENT()
    	and wclass:HAS_EXTERNAL_IMG()
		and (wclass:PHP_URL() or UrlsMatchStr('bmetrack.com'))
    	and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
    then
        SetPSAR('ar1483')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1483' )
    end
    
    --ar1484
	--svobodno
    
	--ar1485
	--svobodno
    
    --ar1486
	--mxs_mbp / #googleform #aliexpress  
	--20.09.16 / veselitsky	
 	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_mbp' or (features:RcvSrcExt() == 'mxs_other' and StrMatch(features:FromDomain(), 'outlook.')))
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_btw(features:WordCount(), 10, 100)
    	and cmpr_btw(features:HtmlTagCount(), 0, 25)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 6)
    	and features:GeoCode() == 'US'
		and TermsMatchGroup(17361, 100)
    	and features:To()
    then
		local raw_to = GetHeaderVal('To')
    	local dog_count = 0
        if raw_to then 
            for email in string.gmatch(raw_to, "@") do
                dog_count  = dog_count + 1
            end
        	if cmpr_gt(dog_count, features:RcptNum()) then
        		SetPSAR('ar1486')
        	end
        end
    end
    
    --ar1487
	--svobodno
    
    --ar1488
    --mxs_other / #zarabotok
    --06.09.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
       	and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 70, true)
       	and wclass:ONE_RECEIVED()
    	and (wclass:TO_LOCALPART_IN_REALNAME() or wclass:NO_TO() or wclass:NOREALNAME_TO())
        and wclass:DOMAINS_EQUAL()
    	and not StrMatch(features:Helo(), features:FromDomain())
    	and wclass:NO_USER_AGENT()
        and wclass:PHP_URL()
    then
        SetPSAR('ar1488')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1488' )
    end
    
    --ar1489
	--svobodno
    
    --ar1490
	--mxs_other / #18+  
	--08.09.16 / zubr
	--999d375f43151a2d3fa0e697140f8a70 28e2124024625fd5124be50e02bca4b6
 	if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and features:MsgSize() >= 20 and features:MsgSize() <= 500
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and features:UrlCount() == 1
    	and features:TextLines() >= 1 and features:TextLines() <= 5
    	and features:WordCount() >= 2 and features:WordCount() <= 15
    	and wclass:MESSAGE_ID_NO_DOMAIN()
		and wclass:DOLLAR_IN_MSGID()
    then
    	SetPSAR('ar1490')
    end 
    
    --ar1491
    --mxs_other / #vk.com/doc #zarabotok
    --08.09.2016 / rassadovskiy
    --6fc64dbb973d2884559f2c0bf16702ad ff9eeb59e89b2c0180dbcb2fd2bb32ec
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),40,150)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and (features:RcptNum() > 1 or features:LastHelo() == "helo=smtpout.ngs.ru")
        and features:EmailsCountInCcHeader() > 5
        and features:NoRealNameFrom()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HtmlTagCount() == 0
        and cmpr_btw(features:TextLines(),1,5,true)
        and cmpr_btw(features:WordCount(),2,10,true)
        and features:WhitespaceToWordRatio() > 300
        and wclass:HDR_MANY_CC_AND_TO()
        and TermsMatchGroup(17293,100)
    then
        SetPSAR('ar1491') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1491')
    end
    
    --ar1492
	--svobodno
    
    --ar1493
	--svobodno
    
    --ar1494
	--mxs_sender / #sapfire #justclick
    --07.09.16 / veselitsky		
	--8caf5b717f1b9afcfaf601aaa3a894a7 
    if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
   	    and cmpr_btw(features:MsgSize(), 12000, 22000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and	features:NoRealNameReplyTo() == 1
        and cmpr_btw(features:DomainRepipAge(), 0, 30, true)
    	and features:Subject8bitOnly() == 1
        and cmpr_btw(features:TextLines(), 30, 50)
    	and cmpr_btw(features:WordCount(), 600, 950)
    	and cmpr_btw(features:HtmlTagCount(), 60, 100)
    	and cmpr_gt(features:HtmlUniqueTagCount(), 10)
    	and features:UrlNormCount() == 3
    	and StrMatch(features:FromDomain(), '.info')
    	and wclass:FROM_MATCH_WITH_URL()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
		SetPSAR('ar1494')
	end
    
    --ar1495
	--fe / #zarabotok #bigimgs 
	--07.09.16 / veselitsky	(zubr)
	--4016eb23c1501d08bcae1a9d44ef3dc8 329971030fc56b84faa15db0b4ec686a 4527eb58e3acf2c53920140945525683
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_gt(features:MsgSize(), 1000000, true)
    	and features:HasNoAttach() == 1
    	and cmpr_btw(features:ImgNum(), 0, 6)
    	and cmpr_btw(features:MultipartNum(), 4, 12)
    	and cmpr_lt(features:Karma(), 1)
		and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
		and	cmpr_btw(features:TextLines(), 1, 5)
    	and cmpr_btw(features:WordCount(), 30, 100)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 5)
    	and wclass:HAS_5_DAYS_GAP()
    	and (wclass:SOURCE_IP_IN_XBL() or wclass:AUTOREG())
    	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar1495')
    end
    
    --ar1496
	--svobodno
    
    --ar1497
    --svobodno
    
    --ar1498
	--svobodno
    
    --ar1499
    --mxs_other #zarabotki 
    --08.09.16 / a.sokolov
    --ec31c9f137510d5009a6c20e4d96bec3 3af731e7832ac8655ae1afeb10f67214 e1694a7a521199290e4bfc0b427e9339
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_gt(features:WordCount(), 2000)
        and cmpr_gt(features:WordOtherCount(), 100)
        and wclass:HDR_RECEIVED_VPS()
        and (wclass:MORE_THAN_20_RCPT()
            or wclass:INVALID_CHARS_IN_RAW_URLS())
        and wclass:NO_TO()
    then
        SetPSAR('ar1499')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1499')
    end
  
    --ar1500
    --fe / #zarabotok_url
    --09.09.16 / r.belyankin
    --57c723ee552c0389c166069d3935b883 a6e854482274284691a3149d197bd73c
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 100, 1500)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5)
        and cmpr_btw(features:UrlsTextSize(), 10, 70)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:IsAutoreg(), 1)
        and cmpr_lt(features:RepuserAge(), 5)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
        and cmpr_eq(features:NoRealNameTo(), 1) 
        and cmpr_btw(features:TextLines(), 3, 10, true) 
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:NumberCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and not wclass:PHP_URL()
    then
        SetPSAR('ar1500')
    end

    --ar1501
    --mxs_other #zarabotki 
    --09.09.16 / a.sokolov
    if not IsBlocked
        and false
        and not wclass:EXCEPTIONS() 
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 15000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 10, 50)
        and cmpr_btw(features:WordCount(), 10, 200)
        and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
        SetPSAR('ar1501')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1501')
    end
    
    --ar1502
	--svobodno
    
    --ar1503
    --fe / #docs.google #virus
    --09.09.2016 / rassadovskiy
    --869403b4e5fdb4b8fa54da70fc652868 4d862fbfc7c14faada7272b3ea0639fb db69ab75473fe16390da105277531282
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),800,1500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoSubject()
        and features:NoRealNameTo()
        and cmpr_lt(features:RepuserAge(),7)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,3,true)
        and cmpr_btw(features:TextLines(),2,5,true)
        and cmpr_btw(features:WordCount(),15,40)
        and cmpr_btw(features:NumberCount(),15,30)
        and features:Words8bitRatio() > 60
        and cmpr_btw(features:HtmlTagCount(),2,10)
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and wclass:AUTOREG()
        and TermsMatchGroup(17361,100)
    then
        SetPSAR('ar1503') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1503')
    end
    
	--ar1504
	--mxs_other / #zarabotok
	--09.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 20000
		and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:TextLines() >= 3 and features:TextLines() <= 150
		and features:WordCount() >= 10 and features:WordCount() <= 200
		and features:SubjectWords8bitRatio() >= 60
		and (features:IpAge() <= 30 or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_15_DAYS())
		and (wclass:TO_LOCALPART_IN_REALNAME() or features:NoTo())
		and wclass:DOMAINS_EQUAL()
		and wclass:ONE_RECEIVED()
		and wclass:PHP_URL()
        and HeaderMatchRe('Message-ID', regex([[^\<[A-Z\d]{20,40}\@]]))
    then
    	SetPSAR('ar1504')
    end

    --ar1505
	--svobodno
    
    --ar1506
    --mxs_other / #kp
    --09.09.2016 / rassadovskiy
    --70c3563bbc42b1e19b6ca6b67e1d8a97 a5ff26393161b7cc6aa3606663b40a7c 422b2aaa769dccdeecc59800c351dc56
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),1000) 
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:MultipartNum() == 5
        and features:RcptNum() > 10
        and features:NoUserAgent()
        and features:UrlNormCount() == 0
        and cmpr_btw(features:HtmlTagCount(),3,10,true)
        and cmpr_btw(features:TextLines(),2,5,true)
        and cmpr_btw(features:WordCount(),5,15)
        and features:Word7bitCount() <= 3
        and features:LinesToWordsRatio() > 25
        and wclass:SPF_NOT_PASS()
        and wclass:RUSSIAN_FROM_REALNAME()
        and StrMatchRe(features:PartsFilenames(),regex([[(?i)^[^a-z\d]+\.(?:docx?|pdf)$]]))
        and TermsMatchGroup(17362,100)
    then
        SetPSAR('ar1506') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1506')
    end

    --ar1507
	--svobodno
        
	--ar1508
	--mxs_other / #zarabotok
	--09.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 500 and features:MsgSize() <= 1000
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:NoRealNameTo() == 1
		and features:TextLines() >= 1 and features:TextLines() <= 4
		and features:WordCount() >= 5 and features:WordCount() <= 40
		and features:SubjectWordCount() >= 2
		and features:UrlNormCount() == 1
		and features:UrlsTextSize() >= 15 and features:UrlsTextSize() <= 50
		and (features:DomainRepipAge() <= 7 or mrasRepHasSendingGap(features:FromDomain(), 3, 40, 30, 5))
		and wclass:SHORT_BOUNDARY()
		and wclass:PHP_URL()
		and wclass:DOMAINS_EQUAL()
    then
    	SetPSAR('ar1508')
    end
        
    --ar1509
    --mxs_sender / #dropbox
    --09.09.2016 / rassadovskiy
    --3ae9d1b6c349b9c2b0236d1d47383e0b 39ab4252c258646b084ec71989b4b461 7191c9596aea2743a59fb3981b00edec
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp")) 
        and cmpr_btw(features:MsgSize(),7000,12000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:Ptr2LevelDomain() == "amazonses.com"
        and (features:FromDomain() == "dropbox.com"
            or features:FromDomain() == "dropboxmail.com")
        and cmpr_btw(features:ExternalImgNum(),2,5,true) 
        and cmpr_btw(features:UrlNormCount(),2,5,true)
        and features:NoRealNameTo()
        and (features:FromRealNameLen() > 50
            or features:FromRealName() == "Dropbox")
        and cmpr_gt(features:HtmlTagCount(),30)
        and features:WordCount() > 50
        and cmpr_btw(features:TextLines(),10,30)
        and features:WhitespaceToWordRatio() > 500
        and TermsMatchGroup(17321,50)
    then
        SetPSAR('ar1509') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1509')
    end
    
    --ar1510
    --mxs_other / #english 
    --09.09.2016 / rassadovskiy
    --82e8be81c7df4596af2b3ae8cc73d086 1d7ca31da466c24755b1c4e19d6fc228
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),50,150)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and features:EngRealNameFrom()
        and features:UrlNormCount() == 1
        and features:HtmlTagCount() == 0
        and features:TextLines() == 1
        and features:Words7bitRatio() == 100
        and cmpr_btw(features:WordCount(),3,7,true)
        and features:Subject7bitOnly()
        and wclass:DIFFERENCE_RCPTNUM_AND_TO()
        and wclass:SPF_NOT_PASS()
        and wclass:SUSP_EMAIL_IN_BODY()
        and TermsMatchGroup(17371,100)
    then
        SetPSAR('ar1510') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1510')
    end
    
    --ar1511
	--svobodno
    
    --ar1512
	--svobodno
    
    --ar1513
	--svobodno
    
    --ar1514
	--svobodno
    
    --ar1515
	--svobodno
    
    --ar1516
	--svobodno
    
    --ar1517
    --fe / #outcome #english #znakomstva
    --10.09.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe") or cmpr_eq(features:RcvSrcExt(), "smtp"))
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),150,200000)
        and features:HasTextOnly() == 1
        and (features:NoRealNameTo() and not features:MailRuTo() 
            or features:NoTo()
            or wclass:FROM_MATCH_TO()
            or features:ToLocalPart() == 'redacted')
        and cmpr_lt(features:RepuserAge(),7)
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() <= 2
        and cmpr_btw(features:TextLines(),1,25,true)
        and (cmpr_btw(features:WordCount(),15,150) or features:ImgNum() == 1)
        and cmpr_lt(features:HtmlTagCount(),70)
        and (wclass:MANY_CC() or features:NoSubject() or wclass:HDR_NO_TO_AND_MORE_RCPT_NUM() or wclass:FAST_AUTOREG() 
            or wclass:NEW_IP_1_DAY() or wclass:NEW_IP_NO_REP() or wclass:MORE_THAN_1_RCPT())
        and (TermsMatchGroup(17373,100) or TermsMatchGroup(17805,100))
        and (cmpr_lt(features:RepuserAge(),7) or HeaderMatch('X-Mru-User-Agent','Mozilla'))
    then
        SetPSAR('ar1517') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1517')
    end
    
    --ar1518
	--svobodno
    
    --ar1519
	--svobodno
    
    --ar1520
	--svobodno
    
    --ar1521
	--svobodno
        
    --ar1522
	--mxs_other / #vacancy #visiblehtmltags #nytimes.com #tk_rf #to:_in_to
	--10.09.16 / veselitsky	
	--94ad2c38e484fa30f23c93b4c6503e65 67bfbb72d2272e22e664a5e7bf6b0dc7
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1000, 15000)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and	cmpr_btw(features:TextLines(), 10, 100)
    	and cmpr_btw(features:WordCount(), 20, 250)
    	and cmpr_gt(features:HtmlTagsUnknownCount(), 0)
		and cmpr_btw(features:UrlNormCount(), 0, 6)
    	and features:ToRealName()
    	and StrMatch(features:ToRealName(), 'To:')
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    then
    	SetPSAR('ar1522')
    end
        
    --ar1523
	--mxs_sender / #zarabotok
	--15.09.16 / veselitsky	
	if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp")) 
    	and cmpr_btw(features:MsgSize(), 1000, 50000) 
		and features:HasTextOnly() == 1 
    	and cmpr_btw(features:WordCount(), 40, 500)
	    and cmpr_btw(features:UrlNormCount(), 0, 20)
   		and features:HasImageUrl() == 1
     	and features:ToRealName() == "Friend" 
    	and features:From()
        and (StrMatchRe(GetHeaderVal('From'), regex([[^\=\?[a-zA-Z0-9\-]+\?(?:Q|B)\?\?\=\s+\<]])) or wclass:TO_IN_SUBJECT() 
    		or features:HasDifferentFromAndReply() == 1 or TermsMatchGroup(16880, 100))
    	and (cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 20) or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 20))
    then
    	SetPSAR('ar1523', true)	
    end
        
    --ar1524
	--fe / #znakomstva #english
    --10.09.16 / veselitsky	
    if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
        and cmpr_btw(features:MsgSize(), 1000, 3000)
		and features:HasTextOnly() == 1
  		and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:WordCount(), 50, 125)
    	and cmpr_btw(features:HtmlTagCount(), 0, 50)
    	and cmpr_btw(features:TextLines(), 4, 20)
    	and features:FakeReplyInSubject() == 1	
    	and cmpr_btw(features:UrlNormCount(), 0, 5)
    	and	(features:HasShortUrl() == 1 or TermsMatchGroup(17260, 10))
    	and (wclass:FAST_AUTOREG() or features:RepuserAge() == 1)
    then
    	SetPSAR('ar1524')
    end
        
    --ar1525
	--svobodno
    
    --ar1526
	--mxs_mbp / #kredit
	--10.09.16 / veselitsky	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 2000, 8000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and features:NoRealNameTo() == 1
    	and features:IsFromGoogle() 
    	and cmpr_btw(features:WordCount(), 100, 350)
		and cmpr_btw(features:HtmlTagCount(), 0, 100)
		and features:UrlNormCount() == 0
		and TermsMatchGroup(16915,100)
		and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    then
    	SetPSAR('ar1526')
    end
        
    --ar1527
	--svobodno
    
    --ar1528
    --mxs_other / #teleinfo #nabor_sotrudnikov
    --11.09.2016 / r.kulpin
    --3d18cc858aebb470fa73f32cd0d01c78 1b8b0943faaa6a3d0d5950e4248e72c2 9ac532b6022929d9f48821c3979f2bd7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 3000, 8000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and features:MailRuTo()
        and cmpr_gt(features:HeaderNum(), 30)
        and cmpr_btw(features:TextLines(), 8, 40, true)
        and cmpr_btw(features:LinesToWordsRatio(), 40, 80, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 2000)
        and cmpr_btw(features:UrlNormCount(), 2, 4,true)
        and cmpr_btw(features:HtmlTagCount(), 20, 50, true)
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:TO_LOCALPART_IN_REALNAME_AND_FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE()  
    then
        SetPSAR('ar1528') 
        LogMsgToHadoop('dstat_kulpin_log', '#ar1528')
    end
    
    --ar1529
	--svobodno
    
    --ar1530
	--svobodno
    
    --ar1531
    --fe / #znakomstva #subj_s_ciframi
    --11.09.2016 / r.kulpin
    --3d48a8430e3a29402eeb85554134f456 bf8e38bd2f95a0328ad282cab7de8eee afa0bfacd3ba12fa149aac6f831813d9
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 50, 400,true)
    	and cmpr_eq(features:HasTextOnly(), 1)
   		and cmpr_eq(features:MultipartNum(), 1)
        and features:SubjectUtf8Base64()
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 7, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 5, 25, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:SubjectWordCount(), 2, true)
        and features:Words7bitRatio() > 30
        and (cmpr_btw(features:NumberCount(), 6, 15) or cmpr_btw(features:SubjectNumbersCount(), 2, 6, true))
        and wclass:WITH_HTTP()
        and (StrMatchRe(features:From(), regex([[^.*\d.*@]])) or features:IsAutoreg())
    then
    	SetPSAR('ar1531')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar1531' )
    end
    
    --ar1532
    --mxs_mbp / #zarabotok #ekstrennaia_novst #url_s_probela
    --11.09.16 / r.kulpin
    --d7a442e4e67e5e5f7e98b649638d81c2 e95d962b0c4a466b2ce1581724dbfcca d93d7f1768c71e02e84c93654cff4cd8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 300, 1500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:FromDomain() == "gmail.com" 
        and features:HeloInMsgId()
        and features:NoRealNameTo()
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:GeoCode(), 'US')
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 40)
        and cmpr_btw(features:HtmlTagCount(), 1, 50)
        and cmpr_gt(features:WhitespaceToWordRatio(), 100)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar1532')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar1532')
    end
    
    --ar1533
	--svobodno
    
    --ar1534
	--svobodno

    --ar1535
	--svobodno  
    
    --ar1536
    --mxs_other / #seminar #rf_nalog #1kartinka
    --11.09.2016 / r.kulpin
    --3f65b2a026acfc74f9bd620c26c4bcec 7d4907402d8062939809ab3a852ef0d0 7090152e761effa976072e735c990e73
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 80000)
        and features:HasNoAttach()
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_btw(features:TextLines(), 8, 20, true)
        and cmpr_btw(features:LinesToWordsRatio(), 1, 10, true)
        and cmpr_btw(features:WhitespaceToWordRatio(), 100, 200)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 10, 30, true)
        and wclass:PTR_ERROR()
        and wclass:ONE_GIF_IN_BODY() 
        and wclass:SUSP_SENDER_HELO_DOMAIN()
        and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()    
    then
        SetPSAR('ar1536') 
        LogMsgToHadoop('dstat_kulpin_log', '#ar1536')
    end 
    
    --ar1537
	--svobodno
    
    --ar1538
	--svobodno
    
    --ar1539
    --mxs_other / #avito_rabota
    --21.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 1000000)
        and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_gt(features:ImgNum(), 0)
        and cmpr_gt(features:UrlNormCount(), 1, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:HtmlTagCount(), 1, 100)
    	and (cmpr_btw(features:IpAge(), 0, 30, true) or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 14, 500))
    	and cmpr_gt(features:SubjectNumbersCount(), 2)
       	and wclass:SPF_NOT_PASS()
        and wclass:HAS_HDR_ORGANIZATION()
        and HeaderMatch('X-DMARC-Result', 'fail')
    then
        SetPSAR('ar1539')
    end
    
    --ar1540
	--svobodno
    
    --ar1541
	--svobodno
    
    --ar1542
	--svobodno
    
    --ar1543
	--smtp / #German
	--12.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "smtp"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:RcptNum() >= 50
		and features:TextLines() >= 5 and features:TextLines() <= 90
		and features:WordCount() >= 50 and features:WordCount() <= 700
		and features:SubjectWordCount() >= 5
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:RepuserAge() <= 3
		and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar1543')
    end
    
	--ar1544
	--MXS / #German
	--12.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 1000 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:TextLines() >= 5 and features:TextLines() <= 40
		and features:WordCount() >= 50 and features:WordCount() <= 200
		and features:SubjectWordCount() >= 5
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and wclass:MAILRU_FROM_MXS()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar1544')
    end
        
    --ar1545
	--mxs_mbp / #zarabotok
	--12.09.16 / veselitsky	
	--744d9419532710e6c5a23f6f1ca01798 1c703990810174572068894b0aeefefb c9c15dd10591645c6d1be56a6352cd80 
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1    
		and features:UrlNormCount() == 1
    	and features:IsFromGoogle()
    	and features:HasShortUrl() == 1
    	and features:HasBcc() == 1
    	and features:From()
    	and features:To()
    	and features:From() == features:To()
    then
    	SetPSAR('ar1545')
    end

    --ar1546
	--svobodno
        
    --ar1547
	--fe / #phishing
    --12.09.16 / veselitsky	
	--94a2d3300c97efea15b8059487ec0484 83e4fa30ce545a6e037f004a5060b00b
    if not IsBlocked
		and features:RcvSrcExt() == 'fe' 
   		and features:MsgSize() >= 3000 and features:MsgSize() <= 8000
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
  		and features:RepuserAge() == 1
		and cmpr_btw(features:TextLines(), 8, 20)
    	and cmpr_btw(features:WordCount(), 100, 170)
    	and cmpr_btw(features:UrlNormCount(), 1, 5)
		and features:HasFreeHosting() == 1
    	and features:From()
    	and features:To()
    	and features:From()	== features:To()
    	and TermsMatchGroup(10192, 100)
    then
    	SetPSAR('ar1547')
    end

    --ar1548
	--svobodno
   
    --ar1549
	--svobodno
    
    --ar1550
	--svobodno
    
    --ar1551
	--svobodno
        
    --ar1552
	--svobodno 
    
    --ar1553
    --fe / #upforsex
	--12.09.16 / minina
	if not IsBlocked
        and not wclass:EXCEPTIONS()	
    	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 100, 10000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_btw(features:WordCount(), 10, 100, true)
       	and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
    	and (cmpr_eq(features:Subject8bitOnly(), 1) or features:ForwardingSubject() or cmpr_eq(features:Subject7bitOnly(), 1))
    	and cmpr_gt(features:SubjectWordCount(), 1, true)
   		and cmpr_gt(features:SubjectLen(), 20, true)
    	and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 30, true)
       	and (wclass:ONLY_7BIT_WORDS() or wclass:CRASHED_BASE64_IN_SUBJECT())
    	and (wclass:FROM_ENDS_IN_NUMS() or StrMatchRe(features:FromLocalPart(), regex([[^[a-z]+\d+[a-z]+$]])))
    	and (wclass:SHORT_MESSAGE() or wclass:SHORT_BOUNDARY() or wclass:SOURCE_IP_IN_DNSBL() or wclass:RANDOM_DIGITS_LOWER_CASE_IN_HEADER())
    then
    	SetPSAR('ar1553',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1553' )
    end
    
    --ar1554
	--mxs_mbp / #greencard
    --12.09.16 / veselitsky		
	--651ffcbfdf448a5d39fae41eaae0386c 5c02c40eed2be5c11a81fb14cc3b8981 d000c2d32a82de15ce685c6bb955866d	
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 14000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and cmpr_btw(features:TextLines(), 2, 50)
		and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and cmpr_btw(features:HtmlTagCount(), 0, 100, true)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and UrlsMatchStr('.htm',1)
    	and features:ToRealNameInSubject()
    	and features:HasDifferentFromAndReply() == 1
    then
    	SetPSAR('ar1554')
    end
        
    --ar1555
	--svobodno
        
    --ar1556
	--smtp / #viagra
	--12.09.16 / veselitsky	
	if not IsBlocked
       	and features:RcvSrcExt() == 'smtp'
   		and features:MsgSize() >= 2000 and features:MsgSize() <= 8000
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:Words8bitRatio() == 0
    	and features:RemoteOS() == ''
    	and cmpr_gt(features:HtmlTagsUnknownCount(), 0)
    	and wclass:SOURCE_IP_IN_DNSBL()
    	and wclass:USER_SENDING_MORE_THAN_50_PER_DAY()
    	and wclass:SOURCE_IP_IN_XBL()
    	and wclass:IP_IN_HELO()
    	and wclass:HAS_TAG_META()
    then	
    	SetPSAR('ar1556')
    end
    
    
    --ar1557
    --fe / #zarabotok  #simple_url
    --30.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),5000,10000)
        and features:HasTextOnly() == 1 
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and features:RepuserAge() < 5
        and features:Karma() < 0
        and cmpr_btw(features:UrlNormCount(),1,2,true)
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_gt(features:WordCount(),200)
        and features:TextLines() > 20
        and features:Words8bitRatio() > 75
        and features:HtmlTags()['br']
        and (features:HtmlTags()['br']/features:HtmlTagCount()) > 0.3
        and (features:SubjectWordMixedCount() > 0 or TermsMatchGroup(18097,100))
    then
        SetPSAR('ar1557') 
    end
    
    --ar1558
	--mxs_other / #spameng
 	--12.09.2016 / razuvaev
        --dfa6aad06c84a1f91aa42464028c05c2 9c2bcedc900190573d2793611054ff1b

 if not IsBlocked
	      and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
          and cmpr_btw(features:MsgSize(), 2600, 3000) 
          and cmpr_eq(features:HasTextOnly(),1)
          and cmpr_eq(features:MultipartNum(),3)
          and cmpr_btw(features:TextLines(), 5, 7, true)
          and cmpr_btw(features:WordCount(),35,60)
          and cmpr_eq(features:Subject7bitOnly(),1)
          and cmpr_btw(features:SubjectLen(), 10,40)
          and cmpr_eq(features:UrlCount(),1)
          and cmpr_eq(features:NoUserAgent(),1)  
          and wclass:OTHER_IP_IN_DNSBL()
    then
		SetPSAR('ar1558')
	end
    
	--ar1559
	--svobodno
    
       --ar1560
	--mxs_other / #znakomstbaeng
 	--12.09.2016 / razuvaev

    if not IsBlocked
        and not wclass:EXCEPTIONS()	
		and cmpr_eq(features:RcvSrc(), "fe")
		and cmpr_btw(features:MsgSize(), 40, 5000)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_lt(features:UrlNormCount(), 5)
		and cmpr_btw(features:TextLines(), 0, 20)
		and cmpr_btw(features:WordCount(), 1, 300)
		and cmpr_lt(features:SubjectWordCount(), 15)
        and cmpr_eq(features:Subject7bitOnly(), 1) 
        and cmpr_gt(features:Words7bitRatio(), 50)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:RepuserAge(), 5)
		and TermsMatchGroup(17089, 100)
        and HeaderMatch('Received', 'by e.mail.ru')
    then
        SetPSAR('ar1560', true)
    end
    
    --ar1561
	--smtp / #viagra
	--12.09.16 / razuvaev fix 1556
	if not IsBlocked
       	and features:RcvSrcExt() == 'smtp'
   		and features:MsgSize() >= 2000 and features:MsgSize() <= 8000
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:Words8bitRatio() == 0
    	and features:RemoteOS() == ''
    	and cmpr_gt(features:HtmlTagsUnknownCount(), 0)
    	and wclass:USER_SENDING_MORE_THAN_50_PER_DAY()
    	and wclass:HAS_TAG_META()
    then	
    	SetPSAR('ar1561', true)
    end
    
    
         --ar1562
	--mxs_other / #spameng
 	--12.09.2016 / razuvaev
        --276a18808cd75d00084782c0f5db39f9


 if not IsBlocked
	      and cmpr_eq(features:RcvSrcExt(), "mxs_other")
          and cmpr_btw(features:MsgSize(), 2200, 3500) 
          and cmpr_eq(features:HasTextOnly(),1)
          and cmpr_eq(features:MultipartNum(),3)
          and cmpr_btw(features:TextLines(), 3, 7, true)
          and cmpr_btw(features:WordCount(),35,60)
          and cmpr_eq(features:Subject7bitOnly(),1)
          and cmpr_btw(features:SubjectLen(), 7,40)
          and cmpr_eq(features:UrlCount(),1)
          and cmpr_eq(features:NoUserAgent(),1)  
          and wclass:OTHER_IP_IN_DNSBL()
    then
		SetPSAR('ar1562')
	end
    
    
	--ar1563
	--svobodno
	
    --ar1564
	--svobodno
    
    --ar1565
    --mxs_mbp mxs_other / #zarabotok #dropbox #perevod
    --13.09.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 20, 200, true)
    	and cmpr_btw(features:TextLines(), 5, 50, true)
       	and cmpr_gt(features:UrlNormCount(), 2, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_gt(features:RcptNum(), 10)
    	and cmpr_eq(features:HasFreeHosting(), 1)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:UNDISCLOSED()
        and wclass:SHORT_BOUNDARY()
    	and wclass:HAS_HEADER_SENDER()
    	and UrlsMatchStr('dropboxusercontent')
    then
        SetPSAR('ar1565')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1565' )
    end
    
    --ar1566
	--svobodno
    
    
--ar1567
    --fe / #znakomstva #engl #no_url #flud
    --04.10.16 / minina
    if not IsBlocked
    	and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
       	and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 10, 50, true)
    	and cmpr_btw(features:TextLines(), 1, 15, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:HtmlTagCount(), 0, 50, true)
    	and  not features:MailRuTo()
    	and features:IpCategory() == 'tiny'
    	and (cmpr_lt(features:RepuserAge(), 15, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:FE_REGIONS_MISMATCH()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
     then
        SetPSAR('ar1567')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1567' )
    end
    
    --ar1568
	--svobodno
    
    --ar1569
	--svobodno
    
    --ar1570
	--svobodno
    
    --ar1571
    --mxs_other / #zarabotok #vacansy
	--28.09.16 / minina
	--bec4099eb0f14daf64b419a43b84e534
    --a12e1e25feb26ad4c9846c350386aff4
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 5000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:WordCount(), 50, 300, true)
    	and cmpr_btw(features:TextLines(), 10, 50, true)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and cmpr_gt(features:RcptNum(), 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100)
    	and wclass:DOMAINS_EQUAL()
    	and wclass:NO_USER_AGENT()
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and wclass:ONE_RECEIVED()
      	and (features:IpCategory() == 'tiny' or features:IpCategory() == 'small' or wclass:REMOTE_IP_IN_SPAMHAUS())
    then
    	SetPSAR('ar1571')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1571' )
    end
    
    --ar1572
    --mxs_other / #zarabotok #pidori
    --13.09.16 / zubr
    --d55988b09c49a1e35f4a1eafcbab60aa 3d3359f76b3f3c72f266a04e0cfa48d0 3b28a410a4cc35adb8e848fb77a87d3f
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 400000
        and features:ImgNum() == 1
		and features:HasNoAttach() == 1
        and features:MultipartNum() >= 4
        and features:NoRealNameTo() == 1
		and features:EngRealNameFrom() == 1
        and features:UrlNormCount() >= 6 and features:UrlNormCount() <= 15
		and features:HtmlTagCount() >= 40
		and features:HtmlUniqueTagCount() <= 20
		and features:TextLines() >= 20 and features:TextLines() <= 70
		and features:WordCount() >= 100 and features:WordCount() <= 400
		and features:Words7bitRatio() >= 10
		and features:WordsOtherRatio() >= 10
		and features:Words8bitRatio() >= 20
		and features:DotRatio() <= 1
		and features:IpAge() <= 5
		and wclass:SPF_NOT_PASS()
		and wclass:HAS_EXTERNAL_IMG()
    then
        SetPSAR('ar1572')
    end
    
    --ar1573
    --mxs_mbp / #zarabotok 
	--13.09.16 / minina
	--f94869535f31eb2a84e2532c7683f05a
    --d2d3f804863301bbc08fd967e3923a0e
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
    	and cmpr_btw(features:MsgSize(), 500, 3000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:WordCount(), 1, 50, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_eq(features:UrlNormCount(), 2)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_gt(features:SubjectWordCount(), 3, true)
    	and (features:ToRealNameInToLocalPart() or cmpr_eq(features:NoRealNameTo(), 1))
    	and wclass:DOMAINS_EQUAL()
    	and wclass:PHP_URL()
    	and wclass:ONE_RECEIVED()
    	and (wclass:FREE_MAIL() or wclass:SPF_NOT_PASS())
      	and wclass:NO_USER_AGENT()
    then
    	SetPSAR('ar1573')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1573' )
    end
    
    
    --ar1574
	--svobodno
    
    --ar1575
    --mxs_mbp / #zarabotok #eng 
	--13.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 5000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:WordCount(), 20, 100, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:UrlNormCount(), 2)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_gt(features:SubjectWordCount(), 3, true)
    	and cmpr_eq(features:DotCount(), 0)
    	and wclass:DIFFERENCE_RCPTNUM_AND_TO()
    	and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:SPF_NOT_PASS())
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:FROM_REALNAME_IN_LOCALPART()
    then
    	SetPSAR('ar1575',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1575' )
    end
    
	--ar1576
	--fe / #flud
	--13.09.2016 / zubr 
	if features:RcvSrc() == "fe" 
		and features:MsgSize() >= 20 and features:MsgSize() <= 10000
		and not features:IsPddUser()
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1
		and (features:RepuserAge() <= 14 or wclass:AUTOREG())
		and wclass:MOBILE_MAIL_RU()
		and wclass:NOREALNAME_TO()
		and SFKD('ar1576', ',ar1576', 60, 40)
	then
		SetPSAR('ar1576')
		LogMsgToHadoop( 'dstat_zubrilova_log', '#ar1576')
	end
    
    --ar1577
    --mxs_other / #virus #nalog.ru
    --13.12.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and features:FromDomain() == 'nalog.ru'
    	and (wclass:FAKE_ATTACH() or wclass:LINK_TO_ARCHIVE_FILE())
     	and HeaderMatch('X-DMARC-Result', 'fail')
    then
        SetPSAR('ar1577',true) 
    end
    
    --ar1578
    --fe / #zarabotok #kartinka
	--13.09.16 / minina
	--f3e8cf5b38055dfd18b7353d60936b46 c95f92247d374433cd76c30d01815159
	if not IsBlocked
    	and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 10000, 30000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 80, true)
    	and cmpr_btw(features:WordCount(), 100, 1000, true)
    	and cmpr_gt(features:SubjectWordCount(), 3, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and cmpr_gt(features:UrlNormCount(), 5, true)
       	and cmpr_btw(features:RepuserAge(), 1, 15, true)
    	and cmpr_eq(features:HasPhotoHosting(), 1)
    	and cmpr_gt(features:HtmlTagCount(), 150, true)
    	and wclass:NEW_IP_30_DAYS()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:WHITESPACE_SUSP_RATIO()
    then
    	SetPSAR('ar1578',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar1578' )
    end
    
	--ar1579
	--MXS / #english #fake mail.ru
	--30.12.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and wclass:MAILRU_FROM_MXS()
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:WordCount() >= 10
		and wclass:ONLY_7BIT_WORDS()
		and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar1579')
    end
    
	--ar1580
	--MXS / #english #fake mail.ru
	--30.12.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and wclass:MAILRU_FROM_MXS()
		and features:From()
		and features:To()
		and features:From() == features:To()
		and features:SPF() == 'softfail'
    then
        SetPSAR('ar1580')
    end
    
    --ar1581
    --mxs_mbp / #zarabotok #qip
	--13.09.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(),'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 20, 100, true)
    	--and cmpr_eq(features:NoRealNameTo(), 1)
       	and cmpr_gt(features:UrlNormCount(), 2, true)
	   	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:ONLY_7BIT_WORDS()
    	and (wclass:HDR_MANY_TO() or wclass:MORE_1_EMAILS_IN_TO())
    	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and wclass:DOLLAR_IN_MSGID()
    then
    	SetPSAR('ar1581')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1581' )
    end
    
    --ar1582
    --mxs / #pohydenie
    --13.09.16 / r.belyankin
    --9721e96c8587746dc1ed72e70d1563b4 cf7206c19ebc48ede569749262f2ef99
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 1, true)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_btw(features:TextLines(), 50, 500, true)
        and cmpr_btw(features:WordCount(), 200, 1000, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 25)
        and (wclass:PTR_ERROR() or wclass:DYNAMIC_PTR_IN_DNSBL() or wclass:REMOTE_IP_IN_SPAMHAUS())
        and wclass:ONE_RECEIVED()
        and StrMatchRe(features:FromLocalPart(), regex([[^info[a-z\d]{1,5}$]]))
    then
        SetPSAR('ar1582')
    end
    
    --ar1583
    --mxs / #zarabotok #google
    --13.09.16 / r.belyankin
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:FromDomain(), 'gmail.com')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 150, true)
        and cmpr_btw(features:WordCount(), 1000, 5000, true)
        and cmpr_gt(features:HtmlTagCount(), 100, true)
        and (wclass:SHORT_PHP_NAME_IN_URL() or wclass:OTHER_IP_IN_DNSBL())
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    then
        SetPSAR('ar1583')
    end
    
	--ar1584
	--svobodno
    
     --ar1585
    --fe / #vbei v google corotky
    --13.09.16 / razuvaev
    --928f47bd77067bdb5dfe5583ac6827b4
    if not IsBlocked
        and features:RcvSrc() == "fe"
        and not features:IsPddUser()
        and features:MsgSize() >= 300 and features:MsgSize() <= 2000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and features:RepuserAge() <= 15
        and features:UrlNormCount() == 0
		and features:HtmlTagCount() <= 10
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 5 and features:WordCount() <= 90
		and features:WordOtherCount() >= 3
		and features:Words8bitRatio() >= 15
		and features:SubjectWordCount() >= 2
		and wclass:AUTOREG_WITH_BAD_CARMA()
        and wclass:NABERI_V_GOOGLE()

    then
        SetPSAR('ar1585', true)
    end
    
    --ar1586
	--svobodno
    
    --ar1587
	--svobodno
    
    --ar1588
	--svobodno

    --ar1589
	--svobodno   
    
    --ar1590
    --mxs_other / #viagra #english
    --14.09.2016 / rassadovskiy
    --b8ecbaea605490ac11a7fef69a6c45a1 b162ed8a0e5160670cfba205726930ae b5aeca055e928f5eaee794c65eaa1e1b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),200,500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        --and features:EngRealNameFrom()
        and features:NoUserAgent()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HtmlTagCount() == 0
        and features:WordCount() > 20
        and cmpr_gt(features:NumberCount(),20)
        and wclass:MESSAGE_ID_NO_ANGLE_BRACKETS()
        and wclass:TERMS_FARMACY()
        and wclass:EMAIL_IN_MESSAGE_ID()
    then
        SetPSAR('ar1590') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1590')
    end
    
    --ar1591
	--svobodno

    --ar1592
    --mxs_other / #zarabotok
    --14.09.16 / r.kulpin
    --1bb75e4248bd9c35f3d24cb62aa01e94 e03e1d81ba4f19a087c93a747b9fd7e2 40bd3047b087601ec107fc332099652c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:HeloInMsgId()
        and cmpr_btw(features:TextLines(), 2, 20, true)
        and cmpr_lt(features:LinesToWordsRatio(), 40, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and features:HasShortUrl()
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:WORDS_MIXED_RATIO() 
        and wclass:TERMS_ZARABOTOK_V_SETI2()
        and wclass:GOOGLE_SU()
    then
        SetPSAR('ar1592')
        LogMsgToHadoop('dstat_kulpin_log', '#ar1592')
    end

    --ar1593
	--svobodno
    
    --ar1594
	--mxs_mbp / yadi.sk
	--21.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and cmpr_gt(features:WordCount(), 50)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30)
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and wclass:BASE64_TRANSFER_ENCODING()
    	and UrlsMatchStr('yadi.sk')
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{8,40}$]]))
    then
    	SetPSAR('ar1594',true)
    end
    
    --ar1595
    --fe / #virus
    --14.09.16 / a.lisitskaya (minina)
    --b48d9f7aff091088646e8a188c339a9c
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 500, 2000, true)
        and not features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:HasFreeHosting(), 1)
    	and (cmpr_eq(features:NoSubject(), 1) or cmpr_eq(features:Subject8bitOnly(),1))
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:Karma(), 0)
        and cmpr_btw(features:RepuserAge(), -1, 2, true)
    	and cmpr_eq(features:IsAutoreg(), 1)
        and features:Words8bitRatio() < 20
    	and cmpr_gt(features:AbfCountriesPerMonthNum(), 1)
    	and UrlsMatchStr('cloud.mail.ru', 1)
	then
		SetPSAR('ar1595')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1595')
	end      

    --ar1596
    --fe / #pdf
    --11.12.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),5000,200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:NoRealNameTo()
        and cmpr_lt(features:RepuserAge(),20)
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and features:WordCount() < 15
        and features:HtmlTags()['br']
        and (features:HtmlTags()['br']/features:HtmlTagCount()) > 0.3
        and StrMatchRe(features:PartsFilenames(),regex([[^[a-z\d\-]+\s\(\d+\)\.pdf]]))
    then
        SetPSAR('ar1596', true) 
    end
    
    --ar1597
    --svobodno

    --ar1598
    --svobodno
    
    --ar1599
	--svobodno
   
    --ar1600
	--svobodno
    
    --ar1601
    --fe / # test
    --14.09.16 / a.lisitskaya
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
		and cmpr_gt(features:RcptNum(), 20)
    	and cmpr_lt(features:RepuserAge(), 5) 
    	and HeaderMatch('X-Mru-User-Agent','Firefox/38.0')
	then
		SetPSAR('ar1601')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1601')
	end
    
    --ar1602
	--svobodno
    
    --ar1603
	--svobodno
    
    --ar1604
	--svobodno
    
    --ar1605
	--mxs_other / #casino #vulkan 
	--14.09.16 / rassadovskiy		
	--from CB
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_gt(features:MsgSize(), 10000)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3 
		and cmpr_gt(features:WordCount(), 200)
     	and cmpr_gt(features:TextLines(), 20)
    	and cmpr_gt(features:HtmlTagCount(), 30)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 0, 4)
		and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or features:MsgIdDomain() == "_")
    	and wclass:RUS_DOMAIN_IN_MSGID()
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    and wclass:NEW_FROMDOMAIN_7_DAYS()
    then
    	SetPSAR('ar1605')
    end
    
    --ar1606
	--svobodno
    
    --ar1607
	--svobodno
    
    --ar1608
    --fe / #google 
    --14.09.16 / r.sulimov
    --51c3737f8e7eeeb71a20a76a7614b9eb 38fddd6e2c4e94a1fa2781197631ff55
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 700, 4000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 80)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 8, 20, true)
        and cmpr_btw(features:WordCount(), 20, 60, true)
        and cmpr_btw(features:WhitespaceCount(), 10, 30)
        and cmpr_btw(features:HtmlTagCount(), 8, 200, true)
        and cmpr_lt(features:HtmlUniqueTagCount(), 5, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 4, true)
        and wclass:AUTOREG()
        and wclass:NABERI_V_GOOGLE()
    then
        SetPSAR('ar1608')
        LogMsgToHadoop('dstat_sulimov_log', '#ar1608')
    end
    
    --ar1609
	--svobodno
    
    --ar1610
	--svobodno
    
    --ar1611
    --mxs / #pochta-rf
    --15.09.16 / r.belyankin
    --7b574702783beb3286ce996d61d90bee 6e2782b6e44d68224202593ec2b86d9b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 50000, 300000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and features:ImgNum() == 1
        and features:FilesExtensions() == ".jpg" 
        and cmpr_eq(features:NoRealNameTo(), 1)
        --and cmpr_btw(features:DomainRepipAge(), 0, 30, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 1, 25, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS())
        and wclass:SHORT_BOUNDARY()
        and (wclass:OTHER_IP_IN_DNSBL() or wclass:REMOTE_IP_IN_SPAMHAUS())
    then
        SetPSAR('ar1611')
    end
    
    --ar1612
	--svobodno
    
    --ar1613
	--svobodno

 	--ar1614
	--svobodno
    
    --ar1615
	--svobodno
    
    --ar1616
	--svobodno
    
	--ar1617
	--mxs_other / #zarabotok
	--15.09.2016 / zubr
	--5fb7c65f64e95eb81fb26717991fb6c4 b6c7dc90816ed76aac580338cbdefbd9
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 500 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:HasDifferentFromAndReply() == 1
		and features:TextLines() >= 3 and features:TextLines() <= 15
		and features:WordCount() >= 10 and features:WordCount() <= 100
		and features:BodyUpperLowerCaseRatio() >= 70
		and features:SubjectWords8bitRatio() >= 60
		and (features:IpAge() <= 30 or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:RELAY_RECEIVED_FROM_FREEMAIL())
		and wclass:NOREALNAME_TO()
    then
    	SetPSAR('ar1617')
    end
    
	--ar1618
	--mxs_other / #zarabotok #false domen
	--15.09.2016 / zubr
	--1ddd1e3a792ebb1d71ae7efb1ae231b3
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_sender")
		and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
		and features:HasNoAttach() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 2
		and features:HtmlTagCount() >= 50
		and features:HtmlUniqueTagCount() <= 20
		and features:TextLines() >= 5 and features:TextLines() <= 150
		and features:WordCount() >= 50 and features:WordCount() <= 300
		and features:Words8bitRatio() >= 2
		and features:SubjectWordCount() >= 1
		and features:SubjectWords8bitRatio() >= 60
		and features:IpAge() <= 40
		and (UrlsMatchStr('dropboxusercontent.com') or UrlsMatchStr('drive.google.com'))
    then
    	SetPSAR('ar1618')
    end
    
	--ar1619
	--svobodno
    
	--ar1620
	--mxs_other / #kredit
	--15.09.2016 / zubr
	--cb792ed344f5cb595193a52fe3cf9b49
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 20000
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:InvalidReplyTo() == 1
		and features:InvalidFrom() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:TextLines() >= 10 and features:TextLines() <= 60
		and features:WordCount() >= 50 and features:WordCount() <= 300
		and features:DomainRepipAge() <= 7
		and features:DkimDomainRepipAge() <= 7
		and features:IpAge() <= 7
		and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
    then
    	SetPSAR('ar1620')
    end
    
	--ar1621
	--mxs_other / #viagra
	--15.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 15000 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and features:SPF() == "fail"
		and features:RcptNum() >= 10
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 7
		and features:HasImageUrl() == 1
		and features:HasPhotoHosting() == 1
		and features:TextLines() >= 10 and features:TextLines() <= 20
		and features:WordCount() >= 50 and features:WordCount() <= 150
		and features:Subject7bitOnly() == 1
		and features:Words7bitRatio() >= 80
		and features:DomainRepipAge() <= 3
    then
    	SetPSAR('ar1621')
    end
    
    --ar1622
    --mxs / #zarabotok #google
    --15.09.16 / r.belyankin
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:FromDomain(), 'gmail.com')
        and cmpr_eq(features:GeoCode(), 'US')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 150, true)
        and cmpr_btw(features:WordCount(), 300, 1000, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 50)
        and wclass:PHP_URL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar1622')
    end
    
    --ar1623
    --mxs_other / #zarabotok #gift_card
    --15.09.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 30, 200, true)
    	and cmpr_btw(features:TextLines(), 5, 100, true)
       	and cmpr_gt(features:UrlNormCount(), 2, true)
    	and cmpr_eq(features:MultipartNum(), 4)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_eq(features:HasPhotoHosting(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and features:Has3dLevelFromDomain()
    	and cmpr_gt(features:WordsOtherRatio(), 10, true)
       	and wclass:MS_MAILER()
    	and wclass:SPF_NOT_PASS() 
        and wclass:ONE_RECEIVED()
    	and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    then
        SetPSAR('ar1623')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1623' )
    end
    
	--ar1624
	--mxs_other / #zarabotok
	--15.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 3
		and features:InvalidFrom() == 1
		and features:ReplySubject() == 1
		and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 7
		and features:TextLines() >= 15 and features:TextLines() <= 40
		and features:WordCount() >= 50 and features:WordCount() <= 150
		and features:Words7bitRatio() >= 15
		and features:Words8bitRatio() >= 30
		and features:WhitespaceToWordRatio() >= 1000
		and features:SubjectWordCount() >= 2
		and features:DomainRepipAge() <= 3
		and wclass:TO_LOCALPART_IN_REALNAME()
    then
    	SetPSAR('ar1624')
    end
    
    --ar1625
	--svobodno   
    
    --ar1626
    --svobodno
    
    --ar1627
	--svobodno
    
    --ar1628
    --svobodno
    
    --ar1629
    --svobodno
    
    --ar1630
    --svobodno
    
    --ar1631
    --svobodno
    
    --ar1632
    --mxs / #zarabotok
    --16.09.2016 / rassadovskiy
    --7cb2ae70049ae7baeb8b9f91ee750721 abba5365d65ec6956b5b8859cb203561 5c315e79aec886581897991a23bdf264
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(),1000,20000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),2,6,true)
        and cmpr_btw(features:TextLines(),5,40,true)
        and cmpr_gt(features:WordCount(),30)
        and cmpr_gt(features:WhitespaceToWordRatio(),200)
        and TermsMatchGroup(17782,100)
    then
        SetPSAR('ar1632') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1632')
    end
    
    --ar1633
    --svobodno
    
    --ar1634
	--svobodno
    
    --ar1635
    --mxs_other / #virus 
    --16.09.16 / minina
    --205566628487bb9e89eb460fcfca48a8 905a2848a55b4352f1aa52faf9a30429
    if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrc(),'rpop') or cmpr_eq(features:ImapSubSrc(),'mxs'))
    	and cmpr_btw(features:MsgSize(), 5000, 20000)
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_eq(features:EngRealNameFrom(), 1)
    	and wclass:SHORT_BOUNDARY()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:SPF_NOT_PASS()
    	and wclass:FROM_ENDS_IN_NUMS()
        and wclass:FAKE_REPLY_IN_SUBJECT()
    	and StrMatch(features:PartsFilenames(),'.zip')
    then
        SetPSAR('ar1635')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar1635' )
    end
    
    --ar1636
	--svobodno
   
    --ar1637
    --mxs_other / #zarabotok
    --16.09.16 /m.guryanov
    --dfb9150c14d376babf1aa7c50587ea94
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"            
		and cmpr_btw(features:MsgSize(), 500, 4000)    	
		and features:HasTextOnly() == 1    	
    	and features:NoUserAgent() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:TextLines(), 3, 25)
    	and cmpr_btw(features:WordCount(), 10, 80, true) 
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    	and HeaderMatch('Received', 'uservoice.com')    		
    then      	
        SetPSAR('ar1637')
        LogMsgToHadoop('dstat_guryanov_log', '#ar1637')
    end 
	
    --ar1638
	--svobodno
    
    --ar1639
	--svobodno
    
    --ar1640
    --svobodno
    
    --ar1641
	--svobodno
    
    --ar1642
	--svobodno
    
    --ar1643
	--svobodno
    
    --ar1644
	--svobodno
        
    --ar1645
	--svobodno
    
	--ar1646
	--svobodno
    
    --ar1647
	--svobodno
    
    --ar1648
    --fe / #zarabotok #img
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	--and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 100, 2000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:TextLines(), 5, true)
    	and cmpr_lt(features:WordCount(), 10, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:HasImageUrl(), 1)
    	and cmpr_lt(features:RepuserAge(), 15)
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 20, 5)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and (cmpr_btw(features:IpAge(), 0, 30) or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 15, 100))
       	and wclass:ONLY_7BIT_WORDS()
    then
    	SetPSAR('ar1648')
    end
    
    --ar1649
    --fe / #zarabotok #one_url
    --17.09.2016 / rassadovskiy
    --e24d1037767d4160e778760bbb17bc33 15c6e5de1810705b698fd3cfb0cc5ad2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),300,1500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and features:IsAutoreg()
        and features:RepuserAge() < 15
        and cmpr_lt(features:Karma(),0,true)
        and features:UrlCountWithoutMailRu() == 1
        and features:HtmlTagCount() == 0
        and cmpr_btw(features:WordCount(),20,100)
        and cmpr_btw(features:TextLines(),3,15,true)
        and features:NumberCount() == 0
        and (features:RepIpComplRatioByLastMonth() > 5 or wclass:NEW_REP_IP_AND_SPAM_RATIO_BY_LAST_DAY())
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:MANY_SORTED_ENVELOPE_TO() or wclass:REP_USER_COMPL_RATE_MORE_10() or wclass:FROM_ENDS_WITH_YEAR() or wclass:SOURCE_IP_IN_DNSBL() or features:WordsMixedRatio() > 20
            or UrlsMatch(regex([[(?i)^[a-z\d\-]+\.[a-z]{2,4}/[a-z\d]+\.html$]]),1))
    then
        SetPSAR('ar1649') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1649')
    end
    
    --ar1650
	--svobodno
    
    --ar1651
	--svobodno
    
      --ar1652
	--fe / #deputat
    --17.09.17 / razuvaev
    --dd97e286eaad515d0606f9f276386bdf 873dca75043cea67ee8678f4322ddccc
    if not IsBlocked
       and cmpr_eq(features:RcvSrcExt(), "fe") 
       and cmpr_btw(features:MsgSize(), 500000, 4000000)
       and cmpr_eq(features:MultipartNum(),5)
       and cmpr_eq(features:IsAutoreg(),1)
       and cmpr_eq(features:ImgNum(),1)
       and cmpr_btw(features:SubjectWordCount(),7,15)
       and cmpr_eq(features:WordCount(),0)
       and cmpr_eq(features:NoRealNameTo(),1)
       and cmpr_lt(features:Karma(),0,true)
       and cmpr_lt(features:UserAge(),100)
    then
    	SetPSAR('ar1652')
    end
    
    --ar1653
	--svobodno
    
    --ar1654
	--svobodno
    
    --ar1655
	--svobodno    
    
    --ar1656
	--fe / #znakomstva #english
	--17.09.16 / razuvaev
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 20, 1000) 
		and	features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:RcptNum(), -1, 1, true)
    	and features:Subject7bitOnly() == 1
    	and features:Words8bitRatio() == 0
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	--and StrMatch(features:UserAgent(), 'Mozilla')
    	and cmpr_btw(features:HtmlTagCount(), 0, 10, true)
        and wclass:ENG_MSG_FROM_AUTOREG_WITHOUT_GOOD_KARMA()
    then
    	SetPSAR('ar1656', true)
    end 
    
    
     --ar1657
    --fe / #vbei v google 1day
    --17.09.16 /razuvaev
    --dd97e286eaad515d0606f9f276386bdf 873dca75043cea67ee8678f4322ddccc
    if not IsBlocked
        and features:RcvSrc() == "fe"
        and not features:IsPddUser()
        and features:MsgSize() >= 300 and features:MsgSize() <= 2000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo() == 1
        and features:RepuserAge() <= 15
        and features:UrlNormCount() == 0
		and features:HtmlTagCount() <= 10
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 5 and features:WordCount() <= 90
		and features:WordOtherCount() >= 3
		and features:Words8bitRatio() >= 15
		and features:SubjectWordCount() >= 2
	    and wclass:NEW_IP_1_DAY()
        and wclass:VERY_LONG_LOCALPART()

    then
        SetPSAR('ar1657', true)
    end
    
    --ar1658
	--svobodno
    
    --ar1659
	--mxs_other / #zarabotok
	--17.09.16 / zubr
	--6757d2d37952f6778981e2306545d1e8
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and features:MsgSize() >= 1000 and features:MsgSize() <= 5000
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:RcptNum() >= 3
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 6
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 2
    	and features:TextLines() >= 20 and features:TextLines() <= 50
    	and features:WordCount() >= 80 and features:WordCount() <= 150
    	and features:Words8bitRatio() >= 50
		and features:WordsOtherRatio() >= 10
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    	--and wclass:NO_USER_AGENT()
    then
    	SetPSAR('ar1659')
    end
    
	--ar1660
    --fe / #zarabotok #img #php_url
	--28.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 100, 200000)
    	and (cmpr_gt(features:ImgNum(), 0) or cmpr_eq(features:HasTextOnly(), 1))
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:TextLines(), 5, true)
    	and cmpr_lt(features:WordCount(), 150, true)
       	and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and cmpr_lt(features:RepuserAge(), 15)
    	and cmpr_gt(features:AbfCountriesPerMonthNum(),2)
       	and (wclass:PHP_URL() or wclass:URL_COUNT_0_WITH_HTTP())
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:AUTOREG()
    then
    	SetPSAR('ar1660')
    end
    
	--ar1661
	--svobodno
    
	--ar1662
	--svobodno
    
	--ar1663
	--mxs_other / #rassilki #pdf
	--17.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 80000 and features:MsgSize() <= 500000
		and features:ImgNum() == 0
		and features:HasAttach() == 1
		and features:MultipartNum() >= 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 0
		and features:TextLines() >= 1 and features:TextLines() <= 4
		and features:WordCount() >= 4 and features:WordCount() <= 30
		and features:DotCount() == 0
		and features:Words8bitRatio() >= 70
		and features:SubjectWordCount() >= 2
		and features:FilesExtensions() == ".pdf"
		and wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED_AND_CT_ENCODED_FILENAME()
		and wclass:DOMAINS_EQUAL()
		and wclass:SHORT_BOUNDARY()
    then
    	SetPSAR('ar1663')
    end
    
	--ar1664
    --svobodno
    
	--ar1665
    --svobodno
     
    --ar1666
	--mxs_mbp / #immigration
	--18.12.16 / razuvaev
    --edf466d0fa01bbbd24dbebcfbdef186e 52151ff8321c80292a194ad0c9cb36ad
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 3000)
    	and cmpr_lt(features:TextLines(),10)
        and cmpr_eq(features:UrlCount(),1)
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:PRECEDENCE_BULK()
        and wclass:FAKE_REPLY_IN_SUBJECT()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_AND_MS_MAILER()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
	then
		SetPSAR('ar1666')
	end
    
    --ar1667
	--svobodno
    
    --ar1668
	--svobodno
    
    --ar1669
	--mxs_sender / #shkolarosta 
	--19.09.16 / veselitsky	
	if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp")) 
    	and cmpr_btw(features:MsgSize(), 7000, 25000) 
		and features:HasTextOnly() == 1 
       	and cmpr_btw(features:TextLines(), 10, 35)
		and cmpr_btw(features:WordCount(), 100, 700)
	    and cmpr_btw(features:UrlNormCount(), 0, 4)
    	and features:EnvelopeFromDomain()
    	and StrMatch(features:EnvelopeFromDomain(), 'eml')
   		and UrlsMatchStr('srclick.ru/click/', 1)
    then
    	SetPSAR('ar1669')	
    end 
        
	--ar1670
	--mxs_other / #virus #javascript #rostelecom
    --28.09.16 / veselitsky		
	--ed57b63898eeb81a63b2ee60a0c36eb2 c0f68e0d550dafc0c8add1d3d534e081 472a41435bd52da6081dcfb527c71590
    if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or 
        	(features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 100, 500000) 
       	and cmpr_btw(features:TextLines(), 0, 200)
    	and cmpr_btw(features:WordCount(), 0, 2500)
        and cmpr_lt(features:SubjectLen(), 10)
    	and features:FromDomain()
    	and features:FromDomain() ~= 'bk.ru'
    	and (StrMatchRe(features:FromDomain(), regex([[^(?:[A-Za-z\d]{1,10}\.)*[A-Za-z\d]{2,4}\.(ru|net)$]])) or 
        	TermsMatchGroup(17288, 100))
    	and (cmpr_gt(features:UrlCount(), 0) or cmpr_gt(features:AttachUrlCount(), 0))
       	and (UrlsMatchStr('cloud.mail.ru/public', 1) or TermsMatchGroup(17803, 100))
    	and (wclass:NO_MIME() or wclass:MISSING_DATE())
    then
		SetPSAR('ar1670')
	end 
    
    --ar1671
    --mxs_other / #bad_recieved #test
    --20.09.16 /m.guryanov
    --a3998696aa0f35228fa9b064f625b2d1
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"            
		and HeaderMatch('Received', 'by : HOSTING RELAY : with SMTP')
	then      	
        SetPSAR('ar1671', true)
        LogMsgToHadoop('dstat_guryanov_log', '#ar1671')
    end 
    	
	--ar1672
	--mxs_other / #virus #javascript #rostelecom
    --29.09.16 / veselitsky		
	--92172fff7a38c0a4f5df5b90566e55eb 1cdb41adedcd10cd1c65b5d0dd965569
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 100, 100000)
		--and features:HasAttach() == 1 
       	and cmpr_btw(features:TextLines(), 0, 200)
    	and cmpr_btw(features:WordCount(), 0, 200)
    	and features:FromDomain()
    	and features:FromDomain() ~= 'bk.ru'
    	and StrMatchRe(features:FromDomain(), regex([[^(?:[A-Za-z\d]{1,10}\.)*[A-Za-z\d]{2,4}\.(ru|net)$]])) 
       	and TermsMatchGroup(17784, 100)
    	and (wclass:NO_MIME() or wclass:MISSING_DATE())
    then
		SetPSAR('ar1672')
	end 
    
    --ar1673
    --svobodno
    
    --ar1674
    --svobodno
    
    --ar1675
    --svobodno
    
    --ar1676
   	--mxs_mbp / #attach #pdf #visov_centr
	--30.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10000, 300000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:FilesExtensions(), ".pdf")
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum() , 3)
    	and cmpr_btw(features:WordCount(), 5, 100, true)
    	and cmpr_btw(features:TextLines(), 2, 30)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and features:RamblerSmtp()
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
		and wclass:HAS_X_PHP_SCRIPT()
   		and wclass:MORE_1_EMAILS_IN_TO()
	then
		SetPSAR('ar1676')
	end
    
	--ar1677
    --svobodno
    
    --ar1678
    --fe / #zarabotok  
    --22.09.16 / r.sulimov
    --4b73a2c86f248396c58b7efef270762d 1407547e21f11c22b092956fc2316b0f 
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
    	and cmpr_lt(features:RepuserAge(), 50, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:SubjectWord7bitCount(), 0)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 5, 30, true)
        and cmpr_btw(features:WordCount(), 70, 300, true)
        and cmpr_lt(features:HtmlTagCount(), 40)
		and cmpr_eq(features:DotRatio(), 0)
    	and cmpr_gt(features:SubjectWordCount(), 5, true)
        and wclass:AUTOREG()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    	and wclass:YEAR_IN_FROM_LOCAL_PART()
    then
        SetPSAR('ar1678')
        LogMsgToHadoop('dstat_sulimov_log', '#ar1678')
    end
    
    --ar1679
    --svobodno
    
    --ar1680
    --svobodno
    
    --ar1681
    --svobodno
    
    
	--ar1682
    --svobodno
    
     --ar1683
    --svobodno

    --ar1684
	--mxs_mbp / #flood 
    --26.09.16 / veselitsky		
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 30, 300)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
    	and	features:NoRealNameTo() == 1
    	and features:NoRealNameFrom() == 1
    	and features:IsFromRambler()
    	and features:UnavailableInReceived()
       	and cmpr_btw(features:TextLines(), 0, 3)
    	and cmpr_btw(features:WordCount(), 0, 10)
    	and features:HtmlTagCount() == 0
    	and features:UrlNormCount() == 0
     	and wclass:FROM_ENDS_WITH_YEAR()
    	and wclass:IP_IN_HELO()
    then
		SetPSAR('ar1684')
	end

	--ar1685
    --mxs_mbp / #niger #no_text_body #realname_spam
    --28.09.16 /m.guryanov
    --b5d2099e49bdb07b8176dff5e23b3c14
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 1, 50, true)  
		and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 0
    	and features:WordCount() == 0
    	and features:HtmlTagCount() == 0
    	and cmpr_lt(features:SubjectLen(), 7, true)
    	and features:HasFromRealName()
    	and cmpr_gt(features:FromRealNameLen(), 20, true)
    	and features:FromRealnameSuspPattern()
    	and StrMatchRe(features:FromRealName(), regex([[\d+.{1,3}0+.{1,3}\d+]]))
	then      	
        SetPSAR('ar1685')
        LogMsgToHadoop('dstat_guryanov_log', '#ar1685')
    end 
    
    --ar1686
	--svobodno
    
    --ar1687
	--svobodno
    
    --ar1688
    --svobodno

    --ar1689
    --mxs / #zarabotok #google
    --12.08.16 / r.belyankin
    --mfc_mf_g,ail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and cmpr_btw(features:UrlsTextSize(), 400, 700)
        and cmpr_eq(features:FromDomain(), 'gmail.com')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 50, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 100, 200)
        and (wclass:EMAIL_IN_FROM_REAL_NAME() or wclass:NOREALNAME_FROM())
        and wclass:HAS_INPUT_TAG()
        and wclass:HAS_IMAGE_URL()
        and wclass:FREE_HOSTING()
    then
        SetPSAR('ar1689')
    end
    
    --ar1690
    --svobodno

    --ar1691
    --mxs_other / #pidori
    --26.09.16 / philip.karpov
    --20368a1fdb741bc6be0316977ec9b624 6d313289787cc1dfe13d89e604cbabac 0512946afc93b8018717b151844582ed
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 300000, 15000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 2, 6)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:IP_URL()
        and (wclass:NEW_FROMDOMAIN_30_DAY() or wclass:NEW_IP_30_DAYS())
        and wclass:NO_BODY_TAG()
        and wclass:NO_CTE()
    then
        SetPSAR('ar1691')
    end
    
    --ar1692
    --svobodno
    
    --ar1693
    --svobodno

    --ar1694
    --mxs / #borodina
    --27.09.16 / r.belyankin
    --mfc_mf_g,ail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 1, true)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 10, 150, true)
        and cmpr_lt(features:Word8bitCount(), 10)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:LinesToWordsRatio(), 50)
        and wclass:CT_IN_BODY()
    then
        SetPSAR('ar1694')
    end
    
    
    --ar1695
    --svobodno
    
    --ar1696
	--svobodno
    
    --ar1697
    --mxs_other / #zarabotok #8000
    --27.09.16 / philip.karpov
    --7d06461b4e1c035239dada00deed8e61 7de8a41cc328d18a151c03e72a4b6363 d1e786d7358fc7582e2d78703cad6cf1
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:TextLines(), 5, 30)
        and cmpr_btw(features:UrlCount(), 2, 10)
        and cmpr_btw(features:UrlNormCount(), 1, 6)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and (cmpr_eq(features:UrlsInFromRealName(), true) or cmpr_eq(features:UrlsInSubject(), 1))
        and wclass:SPF_NOT_PASS()
        and wclass:NEW_IP_30_DAYS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    then
        SetPSAR('ar1697')
    end
    
	--ar1698
	--svobodno
    
    --ar1699
    --mxs / #vakansia
    --27.09.16 / r.belyankin
    --a23f4177b94e90e7f661c634d223db58 a581de4ae199b8a01ae8900c5f590351
    if not IsBlocked
        and not wclass:EXCEPTIONS() 
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and features:NoRealNameTo()== 1
        and features:IpAge() >= 0 and features:IpAge() <= 100
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 50, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 50)
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:HDR_LIST_UNSUBSCRIBE()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
        SetPSAR('ar1699')
    end
    
    --ar1700
	--svobodno
    
    --ar1701
    --mxs_mbp / #zarabotok
    --28.09.16 / philip.karpov
    --5a3383e4a8736bd8c2343a348d5c8455 d058937ccad2d17ab6dbdd0ddb7f5360 01cf64fccea16da3a2af14bdd7dee70c
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 10000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 100, 250)
        and cmpr_gt(features:LinesToWordsRatio(), 25)
        and cmpr_btw(features:UrlCount(), 30, 80)
        and cmpr_btw(features:UrlNormCount(), 10, 30)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and (wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL() or wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM())
        and wclass:SUSP_EMAIL_IN_BODY()
        and wclass:HTML_BODY_HEAD()
        and wclass:PHP_URL()
    then
        SetPSAR('ar1701')
    end
    
    --ar1702
	--svobodno

    --ar1703
	--svobodno
        
    --ar1704
	--svobodno
    
    --ar1705
    --svobodno
        
    --ar1706
	--svobodno
    
	--ar1707
	--svobodno
        
    --ar1708
	--svobodno
       
    --ar1709
	--svobodno
    
    --ar1710
    --svobodno
    
    --ar1711
	--svobodno

    --ar1712
    --fe / #zarabotok  
    --28.09.16 / r.sulimov
    --fc_f_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 7000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:UserAge(), 50)
    	and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
		and cmpr_gt(features:SubjectLen(), 35)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 5, 30, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
		and cmpr_gt(features:AbfCitiesPerDayNum(), 1)
        and wclass:VERY_LONG_LOCALPART()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
        SetPSAR('ar1712')
    end
    
    --ar1713
	--svobodno
    
    --ar1714
	--mxs_mbp / #bazi #katalogpredpriyatiy
	--29.09.16 / veselitsky	
	--8d04c803d2669cc06bad5819d11190fd f3d02bd86dd09e369ae31ca95522d71a
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 1000, 4000) 
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and features:NoRealNameFrom() == 1
    	and cmpr_btw(features:WordCount(), 30, 80)
    	and cmpr_btw(features:TextLines(), 0, 15)
    	and TermsMatchGroup(10124, 50)
		and wclass:SOFTFAIL_SPF()
    	and wclass:WORDS_WITH_NOISE()
    	and wclass:MAILRU_FROM_MXS()
    then
    	SetPSAR('ar1714')
    end
        
    --ar1715
	--svobodno
    	
    --ar1716
	--mxs_other / #phishing
	--29.09.16 / veselitsky	
	--6f8efa909ca3b87e34369736b9753685 be27a3c5742dc51d672b7cde8cd7e5a9 c4f4ed9a499fa40d37ed01da23aad1e1
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1500, 5000)
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 2
    	and features:HasDifferentFromAndReply() == 1
		and features:NoRealNameTo() == 1
    	and cmpr_btw(features:TextLines(), 0, 12)
    	and cmpr_btw(features:WordCount(), 5, 25)
    	and cmpr_btw(features:UrlNormCount(), 0, 8)
		and features:HasPhotoHosting() == 1
		and features:HasFreeHosting() == 1
    	and features:ToEmailInBody() 
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:NEW_FROMDOMAIN_7_DAYS()
    	and wclass:HAS_X_PHP_SCRIPT()
		and wclass:PHP_URL()
   	then
    	SetPSAR('ar1716')
    end
        
    --ar1717
	--mxs_sender / #zarabotokesp #friend
	--29.09.16 / veselitsky	
	if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_sender") or  cmpr_eq(features:RcvSrcExt(), "mxs_esp")) 
    	and cmpr_btw(features:MsgSize(), 2000, 10000) 
		and features:HasTextOnly() == 1 
    	and cmpr_gt(features:SubjectNumbersCount(), 3)
       	and cmpr_btw(features:TextLines(), 8, 14, true)
		and cmpr_btw(features:WordCount(), 50, 150)
	    and cmpr_btw(features:UrlNormCount(), 0, 8)
    	and wclass:IP_URL()
    	and features:ToRealName() == "Friend" 
    then
    	SetPSAR('ar1717')	
    end
        
    --ar1718
    --mxs_other / #vk.com/doc #zarabotok
    --29.09.2016 / veselitsky
    --ec15c38542776c5a11767b5b25da5316 d50306b65e1f52c97896d25d73406fec bab9d80a65ffe93adc8aeefa462f71d3 8a6e7cf10be1640e430e19ec18354c5b
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and cmpr_btw(features:MsgSize(), 800, 2500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
		and cmpr_btw(features:WordCount(), 10, 50)
    	and cmpr_gt(features:WordsMixedRatio(), 10)	
    	and features:UrlCountWithoutMailRu() == 1
        and TermsMatchGroup(17828, 100)
    then
        SetPSAR('ar1718') 
    end
    	
    --ar1719
	--svobodno
    
    --ar1720
    --mxs / #zarabotok
    --29.09.16 / r.belyankin
    --mcc_mc_ip7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 100, 300)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:IpAge(), 0, 1, true)
        and features:MultipartNum() == 1
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 25)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:FROM_INFORMATION_SERVICE()
    then
        SetPSAR('ar1720')
    end
    	
    --ar1721
	--svobodno
    
	--ar1722
	--mxs_other / #pidori
	--30.09.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 500
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and (features:HasTextOnly() == 1 or features:ImgNum() == 1)
		and features:NoTo() == 1
		and features:WordCount() >= 10
		and features:SubjectWords8bitRatio() >= 10
		and wclass:SPF_NOT_PASS()
		and (wclass:CT_IN_BODY() or wclass:NEW_IP_7_DAYS()
			or (features:Helo() and #features:Helo() > 0 and #features:Helo() <= 6))
		and SFKD('ar1722', ',ar1722', 60, 20)
	then
		SetPSAR('ar1722')
	end
    	
    --ar1723
	--svobodno

    --ar1724
	--svobodno
    
    --ar1725
    --mxs_other / #Card Ratings Editor #my.com
    --30.09.2016 / r.kulpin
    --5631f038d8a29050399e29eee7c18a59 3e10364b6fdc2c2e28c6cb52a862ebd7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:NoRealNameTo()
        and cmpr_btw(features:TextLines(), 3, 20, true)
		and cmpr_btw(features:WordCount(), 3, 30, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4,true)
        and cmpr_btw(features:HtmlTagCount(), 5, 30, true)
        and wclass:HAS_IMAGE_URL()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and (wclass:SHORT_WITH_MANY_URLS() or wclass:HAS3D_LVL_DOMAIN())
     then
        SetPSAR('ar1725')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar1725' )
     end
    
    --ar1726
    --mxs_other / #borodina
    --03.10.16 / philip.karpov(sokolik)
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and ((cmpr_btw(features:TextLines(), 1, 20) and cmpr_btw(features:WordCount(), 3, 50))
    		or (cmpr_gt(features:TextLines(), 100) and cmpr_btw(features:WordCount(), 200, 500)))
        and wclass:NO_BODY_TAG()
        and (wclass:PTR_ERROR() 
    		or wclass:PTR_SEEMS_DYNAMIC()
			or wclass:MSG_ID_WITHOUT_DOMAINPART())
        and wclass:HAS_ONE_VIRT_PART()
        and wclass:NO_HTML_TAG()
    then
        SetPSAR('ar1726')
    end
    
    --ar1727
	--svobodno
    
    --ar1728
	--svobodno
    
    --ar1729
	--svobodno
    
    --ar1730
	--svobodno
    
    --ar1731
	--svobodno
    
    --ar1732
	--svobodno
    
    --ar1733
    --mxs_other / #english #number
    --01.10.16 / a.sokolov
    --90de8bfaff9c996c2e902d19399bfaea
    --d3a88b720b4ee2af8bbf4e7b223fc037
    --0553df57ed5795064ae1f91ce90dc50d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 10, 60)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and (wclass:XMAILER_APPLE_MAIL()
        	or HeaderMatch('X-Mailer','iPad Mail'))
        and wclass:ONLY_7BIT_WORDS()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then   
        SetPSAR('ar1733')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1733')
    end 
    
    --ar1734
    --mxs_other / #Salary  #zarabotok #english
    --19.09.2016 / rassadovskiy
    --178412ce34da39f415d4aa91f0bdfc46 ce14290a99acd0a509178c12538dd5a7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),700,5000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameFrom()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_gt(features:TextLines(),5)
        and features:Words7bitRatio() > 80
        and features:NumberCount() > 10
        and wclass:SUSP_WORDPRESS_URL()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:HAS_TAG_META()
        and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar1734') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1734')
    end
    
    --ar1735
	--svobodno
    
    --ar1736
	--svobodno
    
    --ar1737
	--svobodno
    
     --ar1738
    --fe / #zarab #ask
    --01.10.16 / razuvaev
	--950422ce248ae7cae25c88c26f5533ec 075fbc3e48b8c8f9ef4c14ff44a30f47 8d3186b815d2068ca21b1b8ceabdd929
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 200000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:FilesExtensions(), '.mp3.mp3')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_btw(features:WordCount(), 40, 80, true)
        and wclass:REDIRECTS_URL_PART()
    then
        SetPSAR('ar1738')
    end

    --ar1739
	--fe / #zarab url
	--01.10.2016 / razuvaev
    --732e3e71b23a9a2e25505e999d2dbc41 598436a512999fa186de7da30dcc5e24
	if not IsBlocked
		and cmpr_eq(features:RcvSrc(), 'fe')
		and cmpr_btw(features:MsgSize(), 700, 800)
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
	    and cmpr_btw(features:WordCount(),15,40)
        and cmpr_btw(features:TextLines(),1,3,true)
        and cmpr_lt(features:RepuserAge(),10)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:Word7bitCount(),1,5,true)
        and cmpr_btw(features:SubjectWordCount(),2,8,true)
        and wclass:SUBJECT_MIXED_BADRATIO()
	then
		SetPSAR('ar1739')
	end
    
    --ar1740
	--svobodno
    
    --ar1741
    --mxs_mbp / #2000rub
    --02.10.16 / a.razuvaev
    --2645e1be040614892358e6aaea31f44f d3b1f53402cc7b17789ae40b1f6608e8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 40000,130000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(),5)
        and cmpr_eq(features:UrlsHashString(),'blogspot.ru^blogspot.ru')
        and cmpr_eq(features:UrlCount(), 2)
        and cmpr_eq(features:TextLines(),4)
        and cmpr_lt(features:WordCount(),8, 15)
        and wclass:FAIL_SPF()
    then
        SetPSAR('ar1741')
    end

    --ar1742
	--svobodno

    --ar1743
	--svobodno
    
    --ar1744
    --mxs_other / #discount #bad_CT
    --02.10.2016 / rassadovskiy
    --27a5b9d1a30331297ae815eb01b98a99 8136fe81c8f49213f697318c03781fde
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),15000,40000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and features:MultipartNum() >=3
        and features:FromRealNameInFromLocalPart()
        and features:NoUserAgent()
        and cmpr_btw(features:HtmlTagCount(),1,10,true)
        and cmpr_btw(features:WordCount(),30,200)
        and cmpr_btw(features:TextLines(),1,3,true)
        and features:NumberCount() > 300
        and features:WhitespaceToWordRatio() > 500
        and features:SourceTextSize() > 3000
    then
        SetPSAR('ar1744') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1744')
    end
    
    --ar1745
	--svobodno
    
    --ar1746
    --mxs_other / #skidka
    --02.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 20000, 40000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_btw(features:WordCount(), 1, 40)
        and cmpr_gt(features:NumberCount(), 200)
        and cmpr_lt(features:WhitespaceCount(), 40)
        and wclass:FROM_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar1746')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1746')
    end
        
    --ar1747
    --mxs_other / #skidka
    --03.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 20000, 40000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20)
        and cmpr_btw(features:TextLines(), 70, 300)
        and cmpr_btw(features:WordCount(), 100, 400)
        and (wclass:FROM_LOCALPART_IN_REALNAME()
            or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
            or wclass:PTR_ERROR())
        and (wclass:DISCOUNT_IN_SUBJECT()
            or wclass:REMOTE_IP_IN_SPAMHAUS())
        and wclass:NO_URLS_WITH_HTML_TAGS()
    then
        SetPSAR('ar1747')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1747')
    end
    
    --ar1748
    --mxs_mbp / #zarabotok
    --02.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and (HeaderMatch('X-Mailer','PocoMail 3.1')
        	or HeaderMatch('X-Mailer','Outlook-Express/7.0')
        	or HeaderMatch('X-Mailer','Mozilla/5.0'))
    then   
        SetPSAR('ar1748')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1748')
    end
    
    --ar1749
	--svobodno
    
	--ar1750
    --fe / #zarabotok #rabota #googleusercontent
    --03.10.16 / r.belyankin
    --fc_f_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 100, 250)
        and cmpr_eq(features:HasPhotoHosting(), 1)
        and (cmpr_lt(features:Karma(), 0, true) or wclass:AUTOREG())
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 1, 10)
        and cmpr_btw(features:WordCount(), 5, 50)
        and cmpr_btw(features:HtmlTagCount(), 1, 40)
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:FROM_EMAIL_IN_BODY()
        and UrlsMatchStr('googleusercontent.com')
    then
        SetPSAR('ar1750')
    end

    --ar1751
	--svobodno
    
    --ar1752
    --svobodno
    
    --ar1753
	--svobodno
        
    --ar1754
	--svobodno
    
    --ar1755
	--svobodno
    
    --ar1756
    --mxs_other / #18+
    --02.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:SHORTURL()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:ONLY_7BIT_WORDS()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1756')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1756')
    end
    
    --ar1757
    --mxs_other / #clother
    --02.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:ONLY_7BIT_WORDS()
        and UrlsMatchStr('.trade',1)    
    then
        SetPSAR('ar1757')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1757')
    end
    
    
   	--ar1758
	--svobodno
    
    --ar1759
	--svobodno
    
    --ar1760
    
	--ar1761

	--ar1762
    --mxs / #zarabotok #afrodita #pdf
    --03.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100000, 1000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:IsFromRambler(), true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        --and cmpr_gt(features:RcptNum(), 5)
        and cmpr_btw(features:TextLines(), 0, 5, true)
        and cmpr_btw(features:WordCount(), 0, 20, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
    	and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar1762')
    end

	--ar1763
	--svobodno

	--ar1764
	--svobodno
	
    --ar1765
    --mxs_other #android24 #vps.agava.net
    --03.10.16 / minina
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and cmpr_btw(features:MsgSize(), 700, 5000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and cmpr_btw(features:HtmlTagCount(), 5, 150)
        and cmpr_btw(features:TextLines(), 5, 20)
        and cmpr_btw(features:WordCount(), 10, 100)
    	and cmpr_btw(features:UrlNormCount(), 1, 4)
    	and not HeaderMatch('Date', '0300')
		and HeaderMatch('Received', '0300')
       	and wclass:HDR_RECEIVED_VPS()
    	and wclass:IP_REP_GAP_MORE_30_DAYS()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar1765')
    end

    --ar1766
	--fe / #zarabotok #only_words 
	--03.10.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe' 
    	and cmpr_btw(features:MsgSize(), 200, 1000, true)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
		and	cmpr_btw(features:TextLines(), 1, 10)
    	and cmpr_btw(features:WordCount(), 10, 80, true)
		and features:UrlNormCount() == 0
    	and cmpr_eq(features:HtmlTagCount(), 0)
       	and features:MailRuTo()
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
    	and cmpr_gt(features:SubjectWordCount(), 2, true)
		and cmpr_gt(features:SubjectNumbersCount(), 3, true)
    	and wclass:AUTOREG()
    	and (wclass:HAS_2_DAYS_GAP() or cmpr_lt(features:RepuserAge(), 5, true))
		and wclass:RUSSIAN_FROM_REALNAME()
    	
    then
    	SetPSAR('ar1766')
    end

	--ar1767
    --fe / #zarabotok #pdf
    --03.10.16 / r.belyankin
    --5e62fc0490d5199ef265929e0d84ef7d 5f5d24244660635f1d369efe9f05d20c
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'fe')
        and not wclass:EXCEPTIONS()
        and cmpr_gt(features:MsgSize(), 500000, 1500000)
        and not features:IsPddUser()
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:UrlCount(), 0)
        and (cmpr_eq(features:IsAutoreg(), 1) or cmpr_lt(features:Karma(), 0, true))
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true) 
        and cmpr_btw(features:WordCount(), 1, 25, true)
        and cmpr_lt(features:Words8bitRatio(), 10, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
        and cmpr_eq(features:NumberCount(), 0)    
        and (wclass:NEW_IP_7_DAYS() or wclass:NEW_IP_NO_REP())
    then
        SetPSAR('ar1767')
    end

    --ar1768
    --mxs_other #zarabotki 
    --03.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 50000, 600000)
        and cmpr_gt(features:MultipartNum(), 3)
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_btw(features:TextLines(), 20, 100, true)
        and cmpr_btw(features:WordCount(), 100, 400, true)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_lt(features:HtmlUniqueTagCount(), 30)
        and cmpr_gt(features:NumberCount(), 10)
        and cmpr_gt(features:WordOtherCount(), 20)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 15, true)
        and (wclass:MS_MAILER()
            or wclass:PHOTO_HOSTING())
        and wclass:SOFTFAIL_SPF()
        and wclass:HAS_EXTERNAL_IMG()
    then
        SetPSAR('ar1768')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1768')
    end
    
    --ar1769
    --mxs_other #zarabotki 
    --03.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 200, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_gt(features:Words8bitRatio(), 50)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:URL_FROM_BODY_IN_FROM()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1769')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1769')
    end

    --ar1770
    --mxs_other #zarabotki #nalog
    --03.10.16 / a.sokolov
    --c117948cb8675a943a840b8ce2a28fac
    --a8afd5582f071c111baf3adffb1e29a2
    --679f81ff8059490535110e754ead69fe
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 10, 75, true)
        and cmpr_btw(features:WordCount(), 500, 2500, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10)
        and cmpr_gt(features:NumberCount(), 10)
        and cmpr_gt(features:WhitespaceCount(), 500)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:UNKNOWN_IN_RECEIVED()
        and HeaderMatchRe('X-cg-sid', regex([[WEB-[a-z]{1,}[0-9]{1,}\/.{3,}$]]), 1)
    then
        SetPSAR('ar1770')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1770')
	end
    
    --ar1771
    --smtp / #english
    --04.10.16 / r.belyankin
    --s_sm_aol
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), 'smtp')
        and cmpr_btw(features:MsgSize(), 100, 1500)
        and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:IsAutoreg(), 1)
        --and cmpr_btw(features:RepuserAge(), 0, 5, true)
        and cmpr_btw(features:TextLines(), 3, 15, true)
        and cmpr_btw(features:WordCount(), 10, 150)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and cmpr_eq(features:NumberCount(), 0)
        and wclass:XMAILER_PHPMAILER()
        and wclass:NEW_IP_15_DAYS()
    then
        SetPSAR('ar1771')
    end
    
    --ar1772
	--svobodno
    
    --ar1773
	--svobodno
    
    --ar1774
    --mxs_other #AMAZONAWS
    --04.10.16 / a.sokolov
    --a8a58d0b89105b4a77899df5ff234c2e
    --92f6c09899b3ed7b7ae22ff8f7d53b4d
    --ae5990a890a23c2a3f58999a515bcfd9
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:MS_MAILER()
        and wclass:RECEIVED_AMAZONAWS()
    then
        SetPSAR('ar1774')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1774')
    end
    
    --ar1775
    --smtp / #fas 
    --04.10.16 / a.lisitskaya
    --1cb17bb75945f0244ae6f6d3b45f8498
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'smtp')
		and cmpr_btw(features:MsgSize(), 40000, 180000, true)
    	and cmpr_eq(features:ImgNum(), 1)
    	and (features:FilesExtensions() == ".gif" or features:FilesExtensions() == ".jpg" or wclass:HAS_EXTERNAL_IMG())
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and wclass:MS_MAILER()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and wclass:SUBJECT_LONGER_THEN_BODY()
	then
		SetPSAR('ar1775')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1775')
	end 
    
    --ar1776
	--fe / #casino
	--04.10.16 / a.lis
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 10000, 200000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and (cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)  or features:AbfIpWasChanged())
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:SubjectWordCount(), 3)	
    	and cmpr_gt(features:WordCount(), 500, true)
        and cmpr_lt(features:TextLines(), 10)
    	and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
  		and wclass:SHORT_BOUNDARY()
		--and wclass:NEW_IP_7_DAYS()
    	and wclass:FE_TOR_IP()
    then
    	SetPSAR('ar1776')
    end
    
    --ar1777
    --fe / #bazy 
    --04.10.16 / a.lis
    --78b53f5593a7fb121b80a3e4896b1489
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 1500, 10000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	--and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:RepuserAge(), -1, 2, true)
    	and features:UserCreateTime()
		and features:UserCreateTime().days
        and features:UserCreateTime().days <= 5
    	and TermsMatchGroup(17845, 100)
	then
		SetPSAR('ar1777')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1777')
	end 
    
    --ar1778
    --fe / #virus
    --04.10.16 / a.lis
    --8ded455068f64bf897e933b14a9cccb8
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 700, 1500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:NoSubject(), 1)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_eq(features:IsAutoreg(), 1)
    	and cmpr_eq(features:RepuserAge(), 1)
    	and TermsMatchGroup(17846, 100)
	then
		SetPSAR('ar1778')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1778')
	end 
    
    --ar1779
    --fe / #bazy 
    --10.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 1500, 10000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0)
    	and (cmpr_btw(features:RepuserAge(), -1, 2, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 7))
    	and TermsMatchGroup(17845, 100)
	then
		SetPSAR('ar1779')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1779')
	end 
    
    --ar1780
    --fe / #bazy 
    --10.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 100, 1500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_lt(features:TextLines(), 4)
    	and wclass:NO_SUBJECT()
    	and wclass:ONLY_7BIT_WORDS()
		and HeaderMatch('Reply-To', '0JHQsNC30LAg0LTQsNC90L3Ri9GF')
	then
		SetPSAR('ar1780')
	end

    --ar1781
	--svobodno
    
    --ar1782
	--svobodno
    
    --ar1783
	--mxs_mbp / #ded_moroz #img
	--13.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10000, 500000)
    	and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
        and not StrMatchRe(features:ToDomain(),regex([[^(?:mail.ru|inbox.ru|bk.ru|list.ru)$]]))
	then
		SetPSAR('ar1783',true)
	end
    
    --ar1784
	--fe / #img #pochta_rf
	--04.10.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other' 
    	and cmpr_btw(features:MsgSize(), 50000, 500000, true)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and features:MultipartNum() == 3
		and features:NoRealNameTo() == 1
   		and	cmpr_lt(features:TextLines(), 5)
    	and cmpr_lt(features:WordCount(), 15)
		and features:UrlNormCount() == 0
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:Words8bitRatio(), 80, true)
      	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and wclass:SHORT_BOUNDARY()
   		and wclass:NO_USER_AGENT()
    	and wclass:NEW_FROMDOMAIN_30_DAY()
    	and StrMatch(features:PartsFilenames(), '.jpg')
    then
    	SetPSAR('ar1784')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1784' )
    end
    
    --ar1785
    --mxs_mbp / #engl #list_manage #ngs
	--04.10.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_lt(features:TextLines(), 10, true)
    	and cmpr_lt(features:WordCount(), 50)
       	and cmpr_gt(features:UrlNormCount(), 2, true)
       	and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
  		and wclass:MISC_SUSP_MAILERS()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:NO_BODY_TAG()
    	and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
    	and HeaderMatch('X-Mru-Authenticated-Sender','@ngs.ru',1)
    	and UrlsMatchStr('list-manage')	      
    then
    	SetPSAR('ar1785')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1785' )
    end
    
    --ar1786
    --mxs / #vacansy #text
    --15.09.16 / minina
    --2120433a994695d54df61d852d2e9357 464dc7971c68aed22da1b23212f10129
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(),0)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 100, 1000, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and cmpr_eq(features:SubjectWordCount(), 2)
    	and cmpr_gt(features:Words8bitRatio(), 70, true)
    	and wclass:XMAILER_APPLE_MAIL()
        and wclass:ONE_RECEIVED()
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    	and wclass:HAS_TAG_META()
    then
        SetPSAR('ar1786')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1786' )
    end

    --ar1787
	--fe / #one_url #poselok
	--04.10.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
        and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 100, 5000, true)
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_lt(features:RepuserAge(), 15, true)
		and	cmpr_btw(features:TextLines(), 1, 15, true)
    	and cmpr_btw(features:WordCount(), 5, 50, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
		and cmpr_gt(features:WordsOtherRatio(), 70, true)
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:AUTOREG()
    	and wclass:SHORT_MESSAGE()
		and (wclass:SOURCE_IP_IN_DNSBL() or wclass:BADNET())
    then
    	SetPSAR('ar1787')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1787' )
    end
    
    --ar1788
    --mxs_mbp / #zarabotok #bitkoin-generator #otchet
    --04.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 20, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
    	and cmpr_gt(features:SubjectWordCount(), 5, true)
    	and cmpr_gt(features:SubjectNumbersCount(), 3, true)
    	and cmpr_gt(features:SubjectWord7bitCount(), 1, true)
        and wclass:MS_MAILER()
       	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and UrlsMatchStr('/track/click', 1)
    then
        SetPSAR('ar1788')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1788' )
    end
    
	--ar1789
	--svobodno
    
    --ar1790
    --mxs_other / #zarabotok #bizTV 
    --04.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 50, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
    	--and cmpr_gt(features:SubjectLen(), 20, true)
    	--and cmpr_gt(features:SubjectNumbersCount(), 5, true)
		and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_eq(features:HasImageUrl(), 1)
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:ONE_RECEIVED()
    	and (wclass:IP_REP_GAP_MORE_7_DAYS() or wclass:NEW_IP_30_DAYS())
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
       	and UrlsMatchStr('html', 1)
    then
        SetPSAR('ar1790')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1790' )
    end
    
    --ar1791
    --mxs_mbp / #zarab_S_google #seminar #gmail
    --25.09.2016 / r.kulpin
    --80346dd976ef337bacc8dd80264d9ae1 d116627378763e42605b88af7a0c046a 95e9c8f39d66499b2be7ed9cda81b1be
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:HeloInMsgId() 
        and features:NoRealNameTo()
        and features:MsgIdDomain() == "google.com"
        and cmpr_eq(features:GetSubjectEncoding(), "UTF-8") 
        and features:FromRealName()
        and features:FromLocalPart()
        and cmpr_btw(features:TextLines(), 50, 500, true)
        and cmpr_btw(features:SubjectLen(), 15, 70, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 25, true)
        and cmpr_btw(features:WhitespaceToWordRatio(), 200, 600, true)
        and cmpr_btw(features:UrlNormCount(), 2, 7, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 150, true)  
        and wclass:PHP_URL()
        and wclass:NO_USER_AGENT()
        and wclass:SHORT_BOUNDARY()
        and (wclass:FROM_LOCALPART_IN_REALNAME() or wclass:FROM_ENDS_IN_NUMS() )
    then
        SetPSAR('ar1791')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar1791')
    end
    
    --ar1792
	--svobodno

    --ar1793
	--svobodno
    
    --ar1794
	--svobodno

    --ar1795
	--svobodno
    
    --ar1796
    --mxs_mbp / #rabota_doma
    --25.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 1, 200)
        and (wclass:SPF_NOT_PASS_FROM_MBP()
            or wclass:SUBJECT_MIXED_BADRATIO()
            or cmpr_eq(features:IsFromRambler(), true))
        --and wclass:FAKE_MSG_ID()
        and UrlsMatchStr('.blogspot.')
    then   
        SetPSAR('ar1796')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1796')
    end 
    
    --ar1797
	--svobodno
    
    --ar1798
    --svobodno
    
    --ar1799
    --mxs / #viagra
    --05.10.16 / r.belyankin
    --d25a547298ec3541d979a4e12bcbd566 a469cf64a951eb924b8d94e288b6eb7d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 4, 15, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)  
        and cmpr_btw(features:TextLines(), 5, 15, true)
        and cmpr_btw(features:WordCount(), 30, 150)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:HAS_X_PHP_SCRIPT()
        and wclass:UNENCODED_SUBJECT()
        and wclass:W8BIT_NO_CTE_AND_NO_MIME()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:TERMS_FARMACY()
    then
        SetPSAR('ar1799')
    end
    
    --ar1800
    --fe / #zarabotok #pdf
    --05.10.16 / philip.karpov
    --f5b5ead5d4f078eeca004b9784369098 8479d7adea06c9fa7ac5589971de360f c42dffcfc612983ead7c9ea80f56126a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:MsgSize(), 250000)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_btw(features:WordCount(), 5, 20)
        and cmpr_btw(features:TextLines(), 2, 7, true)
        and cmpr_eq(features:Word7bitCount(), 0)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:HtmlTagCount(), 0, 15, true)
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and wclass:CT_ENCODED_FILENAME()
        and wclass:WITH_HTTP()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:ONE_ATTACH_FROM_FE_WITH_LITTLE_AMOUNT_OF_WORDS()
    then
        SetPSAR('ar1800',true)
    end
    
    --ar1801
    --mxs_mbp / #zarabotok #vk.com/doc
    --05.10.2016 / rassadovskiy
    --8ea6e2ca91b6df8fa41d026292261eb4 6edcb71ce302ec33dd333c1924c2196d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),300,5000)
        and features:HasTextOnly() == 1
        and features:IsFromRambler()
        --and features:FromEndsWithYear()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:WordCount(),10,100)
        and features:Words7bitRatio() <= 15
        and wclass:RAMBLER_FE()
        and (UrlsMatchStr('.vk.com/doc',1)
        	or UrlsMatchStr('.blogspot.',1))
    then
        SetPSAR('ar1801') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1801')
    end
    
    --ar1802
    --mxs_mbp / #tendery #image_spam
    --05.10.2016 / rassadovskiy
    --c44774cbf202f622aec2b3ac8aa3c952 882ce364fbdc13bc7fed70d5be40ec32
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_gt(features:MsgSize(),50000)
        and features:ImgNum() == 1
        and features:HasNoAttach()
        and features:MultipartNum() >= 3
        and features:IsYahooIp()
        and features:NoRealNameFrom()
        and features:UrlCount() == 1
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and cmpr_btw(features:WordCount(),1,5,true)
        and features:FilesExtensions() == ".jpg"
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
        SetPSAR('ar1802') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1802')
    end
    
    --ar1803
	--svobodno
    
    --ar1804
  	--svobodno
    
    --ar1805
    --svobodno
    
    --ar1806
	--svobodno
   
	--ar1807
	--mxs_mbp / #zarabotok
	--28.12.2016 / zubr
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
    	and features:UrlCount() >= 25
		and features:UrlNormCount() >= 25
		and features:WordCount() >= 700
		and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
		and features:Date()
	then
		local i1 = string.find(features:Date(), '+')
		local i2 = string.find(features:Date(), '-')
			if i1 and type(i1)=='number' then
				local timezone = string.sub(features:Date(), i1)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
					then
						SetPSAR('ar1807')
					end
            
				elseif i2 and type(i2)=='number' then
				local timezone = string.sub(features:Date(), i2)
            
					if HasHeader('Received') 
						and timezone and #timezone > 0 
						and not HeaderMatch('Received', timezone)
						and math.random(0, 100) < 20
					then
						SetPSAR('ar1807')
					end
			end
	end
    
    --ar1808
    --mxs_other / #seminary
    --05.10.2016 / minina
    --36106415f69c65472c89244eb6df30ff ef6113d34e810d6950efe80d6cabfa63
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(), 5000, true) 
        and (features:HasTextOnly() == 1 or features:AttachOfficeCount() > 0)
       	and cmpr_gt(features:MultipartNum(), 3 , true)
        and cmpr_lt(features:UrlNormCount(), 5, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100)
        and cmpr_gt(features:WordCount(), 100, true)
    	and wclass:HAS_HEADER_SENDER()
    	and wclass:SHORT_BOUNDARY()
        and features:FromDomain()
        and (StrMatchRe(features:FromDomain(),regex([[^(.+)?tend(.+)?\.ru$]])) or StrMatchRe(features:FromDomain(),regex([[^seminar\d+[a-z]+\.ru$]])))
    then
        SetPSAR('ar1808') 
        LogMsgToHadoop('dstat_minina_log', '#ar1808')
    end
    
	--ar1809
    --mxs / #pidori #volosnya
	--04.10.2016 / minina 
	if not IsBlocked
        and false
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and cmpr_btw(features:MsgSize(), 1000, 100000)
		and features:HasTextOnly() == 1
		and cmpr_btw(features:MultipartNum(), 1, 5, true)
		and cmpr_btw(features:UrlNormCount(), 0, 10, true)
		and cmpr_btw(features:WordCount(), 5, 5000)
		and cmpr_gt(features:Words8bitRatio(), 50, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
		and (wclass:ONE_RECEIVED() or wclass:X_MAILRU_FORWARD())
        and (wclass:LONG_MSGID() or wclass:MESSAGE_ID_NO_DOMAIN() or StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{8,15}\.\d{8,15}$]])))
        and features:Date()
		and not StrMatchRe(features:Date(),regex([[(?:\+|\-)[0-1][0-9]00]]))
    	and not StrMatch(features:Date(), 'GMT')
		and HeaderMatch('Received', '0300')
	then
		SetPSAR('ar1809')
        LogMsgToHadoop('dstat_minina_log', '#ar1809')
	end
    
  
    --ar1810
	--svobodno
    
    --ar1811
	--fe / #noise #zarabotok
	--03.10.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
       	and cmpr_gt(features:SubjectWordCount(), 5)
    	and cmpr_btw(features:WordCount(),100, 1000, true)
        and cmpr_lt(features:TextLines(), 30)
    	and cmpr_gt(features:WordsMixedRatio(), 40, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
  		and (wclass:NEW_IP_15_DAYS() or wclass:SOURCE_IP_IN_DNSBL())
		and wclass:WORDS_WITH_NOISE()
    	and wclass:AUTOREG()
    	and wclass:SUBJECT_MIXED_BADRATIO()
    then
    	SetPSAR('ar1811')
        LogMsgToHadoop('dstat_minina_log', '#ar1811')
    end
    
	--ar1812
	--svobodno
    
    
    --ar1813
    --svobodno

	--ar1814
    --fe / #virus
    --06.10.16 / r.sulimov
	--f_fo_abf_cid
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 200000)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and (cmpr_eq(features:NoRealNameTo(), 1)
			or wclass:TO_LOCALPART_IN_REALNAME())
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 5, 200, true)
        and cmpr_btw(features:HtmlUniqueTagCount(), 0, 5, true)
		and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
    	and wclass:IS_EXECUTION_FILE_IN_ARCHIVE()
    	and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
    	and wclass:CT_ENCODED_FILENAME()
    	and HeaderMatchRe('Content-type', regex([[boundary="-{3,10}[a-z]{20,50}-[a-zA-Z0-9]{5,25}-[0-9]{5,20}"]]), 1)
    then
        SetPSAR('ar1814')
    end
    
    --ar1815
    --mxs_other / #znakomstva #eng
    --06.10.16 / philip.karpov
    --ad3a0523b887f25b554e103045a5ce11 d4239fd678e627fdb67277660b6991c1 9b09cc21f5a10e7b2e6cdb958d90a093
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 2, 8)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:OneWordSubject(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and wclass:XYZ_URLS()
        and wclass:PHP_URL()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:DOMAINS_EQUAL()
    then
        SetPSAR('ar1815')
    end
    
    --ar1816
    --mxs_other / #virus
    --06.10.16 / philip.karpov
    --7456d2c5693102894205af65d40f55f8 e9d97af050220fb5788037556950d227 d1cc19cc4ad8fd305d8eb197c64c8398
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 4, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:HAS_X_PHP_SCRIPT()
        and (wclass:NEW_FROMDOMAIN_30_DAY() or wclass:NEW_IP_30_DAYS())
        and wclass:NO_USER_AGENT()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar1816',true)
    end

    --ar1817
    --mxs / #green_card
    --06.10.16 / r.belyankin
    --mfc_mf_other
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 50, 150)
        and cmpr_eq(features:MultipartNum(), 1)  
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 5, 150)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:PRECEDENCE_BULK()
        and wclass:HAS_PHP_SCRIPT_AND_MS_MAILER()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
    then
        SetPSAR('ar1817')
    end
    
    --ar1818
    --mxs_other / #volosi
    --06.10.16 / philip.karpov
    --2210b04829e0968295f71b224b754ccc 4339b2482ac471d16f1cf8c574b00e34 87d56146a66654b94bd8f0ba4aaa8f69
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 10, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_gt(features:WordCount(), 250)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_eq(features:LinesToWordsRatio(), 0)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:HELO_IN_FROM()
        and wclass:HELO_IN_MSGID()
        and wclass:ONE_RECEIVED()
        and wclass:NO_USER_AGENT()
        and wclass:DOMAINS_EQUAL()
    then
        SetPSAR('ar1818')
    end
    
    --ar1819
	--svobodno
    
    --ar1820
    --mxs_other / #madmimi.com #kurs #master_class
    --06.10.2016 / minina
    --a2682b90f0cf3f07e0f7c4e9a761bb5f 12c32ed0b966669216c3e02a621b135a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 100000, true) 
        and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:UrlNormCount(), 5, true)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_btw(features:WordCount(), 100, 500, true)
    	and cmpr_btw(features:TextLines(), 20, 250, true)
    	and wclass:LONG_MSGID()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:RECEIVED_BAD_PATTERN_4()
        and wclass:PRECEDENCE_BULK()
    	and UrlsMatchStr('madmimi', 1)
    	and HeaderMatchRe('Content-Type', regex([[boundary="--==_mimepart_[a-z\d_]{20,45}"]]))
    then
        SetPSAR('ar1820') 
        LogMsgToHadoop('dstat_minina_log', '#ar1820')
    end
    
    --ar1821
    --mxs_mbp / #zarabotok #vacansy #na_google
    --06.10.2016 / minina
    --254d165614e166a7689018c8ef0ec93e 295d0d53fc106058c1acb8e0ab02e9c6 9a425c8b5a7b06223a48585da9fd2bfb
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 5000, true) 
        and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:UrlNormCount(), 5, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100)
        and cmpr_btw(features:WordCount(), 20, 80, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and features:ToUndisclosed()
    	and wclass:NOREALNAME_FROM()
    	and wclass:HAS_EXTERNAL_IMG()
        and wclass:MISC_SUSP_MAILERS()
    	and HeaderMatch('X-Mru-Authenticated-Sender','@ngs.ru',1) 
    then
        SetPSAR('ar1821') 
        LogMsgToHadoop('dstat_minina_log', '#ar1821')
    end
    
	--ar1822
    --mxs_mbp / #zarabotok #rambler #url
    --06.10.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 10000, true) 
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(),1))
       	and cmpr_btw(features:MultipartNum(), 1, 5, true)
        and cmpr_gt(features:UrlNormCount(), 2, true)
        and cmpr_lt(features:HtmlTagCount(), 50)
        and cmpr_lt(features:WordCount(), 50)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_gt(features:EmailsCountInToHeader(), 1)
        and cmpr_eq(features:Has3dLevelDomain(), 1)
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:DOLLAR_IN_MSGID()
        and wclass:FROM_RAMBLER()
    	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    then
        SetPSAR('ar1822') 
        LogMsgToHadoop('dstat_minina_log', '#ar1822')
    end
    
    --ar1823
	--svobodno
    
    --ar1824
	--svobodno
    
	--ar1825
	--mxs_mbp / #8k v den
	--06.10.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 900 and features:MsgSize() <= 5000 
		and features:HasTextOnly() == 1 
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:UrlsTextSize() <= 60
		and features:WordCount() >= 20 and features:WordCount() <= 100 
		--and features:WordsMixedRatio() >= 3
		and features:SPF() == 'neutral'
		and wclass:SPF_NOT_PASS_FROM_MBP()
		and wclass:HAS_HDR_ORGANIZATION()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
	then
		SetPSAR('ar1825')
	end
    
    --ar1826
	--svobodno
    
    --ar1827
	--svobodno
    
    --ar1828
	--fe / #casino
	--03.10.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 15, true)
    	and features:MailRuTo() 
    	and cmpr_btw(features:WordCount(), 10, 5000, true)
        and cmpr_btw(features:TextLines(), 1, 500, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 500, true)
    	and (cmpr_gt(features:SubjectLen(), 40) or cmpr_eq(features:SubjectWordCount(), 1))
    	and (cmpr_gt(features:Words8bitRatio(), 70, true) or cmpr_gt(features:WordsOtherRatio(), 20))
  		and wclass:FE_TOR_IP()
    	and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 30, 10) or cmpr_eq(features:IpCategory(), "tiny"))
    	and wclass:SHORT_BOUNDARY()
    then
    	SetPSAR('ar1828')
        LogMsgToHadoop('dstat_minina_log', '#ar1828')
    end
    
	--ar1829
	--mxs_other / #zarabotok
	--06.10.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 900 and features:MsgSize() <= 5000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:HasDifferentFromAndReply() == 1
		and features:InvalidFrom() == 1
		and features:NoRealNameFrom() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:WordCount() >= 20 and features:WordCount() <= 100
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		--and wclass:TERMS_ZARABOTOK_V_SETI()
		and wclass:INVALID_CHAR_IN_REPLY_TO_REALNAME()
		and wclass:PRECEDENCE_BULK()
		--and wclass:PHP_URL()
	then
		SetPSAR('ar1829')
	end
    
	--ar1830
    --smtp / #flud
    --11.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 10, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:WordCount(), 15, true)
    	and cmpr_eq(features:NoRealNameFrom(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and features:MsgIdDomain() == 'email.android.com'
    	and (wclass:AUTOREG() or wclass:FROM_ENDS_IN_NUMS() or cmpr_lt(features:Karma(), 0, true))
    then
        SetPSAR('ar1830') 
    end
    
    --ar1831
    --svobodno 
    
	--ar1832
	--svobodno
    
	--ar1833
	--svobodno
    
	--ar1834
    --mxs_mbp / #autoreg #email.android.com
    --06.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 20, 200)
		and features:HasTextOnly() == 1
    	and cmpr_eq(features:MultipartNum(),1)
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:WordCount(), 2, 10, true)
    	and cmpr_eq(features:TextLines(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:UrlNormCount(),0)
    	and features:NoRealNameFrom() == 1
		and cmpr_eq(features:DotCount(), 0)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:SubjectWordCount() , 3, true)
    	and features:MsgIdDomain() == 'email.android.com'
    	and wclass:NOREALNAME_FROM() 
    	and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar1834')
        LogMsgToHadoop('dstat_minina_log', '#ar1834')
    end 
    
    --ar1835
	--svobodno

	--ar1836
	--mxs_other / #zarabotok
	--06.10.2016 / zubr
	--a390451f723a4872d822f4b94db41810
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 90000 and features:MsgSize() <= 200000 
		and features:HasNoAttach() == 1
		and features:ImgNum() >= 2
		and features:MultipartNum() >= 5
		and features:DKIM() == "fail"
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:ImgLinkExtesionCount() >= 1
		and features:TextLines() >= 5 and features:TextLines() <= 20
		and features:WordCount() >= 50 and features:WordCount() <= 150
		and features:NumberCount() >= 30
		and features:SubjectWordCount() >= 3
		and wclass:NEW_FROMDOMAIN_7_DAYS()
		and wclass:HDR_LIST_UNSUBSCRIBE_AND_DIFFERENT_REPLY_TO_AND_FROM()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
		and wclass:PHP_URL()
	then
		SetPSAR('ar1836')
	end
    
    --ar1837
    --svobodno
    
    --ar1838
	--svobodno

    --ar1839
	--svobodno
    
    --ar1840
    --svobodno

    --ar1841
    --mxs_other #govno_vps_body
    --06.10.16 / a.sokolov
    --5672b815e75717987995646eeedb20dc
    --e3a5effed668837786549f02376c2c62
    --c8133f29aabf4b408d1ba5c8f73d08fa
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 100, true)
        and cmpr_btw(features:WordCount(), 1, 500, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and (wclass:FAIL_SPF()
            or wclass:DKIM_FAIL()
            or wclass:SOFTFAIL_SPF())
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and UrlsMatchStr('vps.agava.net/goto/', 1)
    then
        SetPSAR('ar1841')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1841')
    end

    --ar1842
	--svobodno

    --ar1843
    --mxs_other #fail_from
    --06.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_gt(features:MsgSize(), 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and wclass:VERY_INVALID_FROM()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NO_CTE()
    then
        SetPSAR('ar1843')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1843')
    end

    --ar1844
    --mxs_other / #vacancy
    --06.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 30000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 100, 600)
        and cmpr_gt(features:HtmlTagCount(), 0)
	    and cmpr_eq(features:FromRealNameWordCount(), 1)
        and wclass:XMAILER_APPLE_MAIL()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then   
        SetPSAR('ar1844')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1844')
    end 

    --ar1845
    --svobodno

    --ar1846
    --mxs_other / #caps_from
    --06.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 5, 20, true)
        and cmpr_btw(features:WordCount(), 20, 150)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and wclass:FROMDOMAIN_STARTS_WITH_CAPITAL_LETTERS()
        and wclass:MANY_CAPITALS_IN_FROM()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and HeaderMatchRe('Organization', regex([[@[A-Z-0-9]{3,}\.]]))
    then   
        SetPSAR('ar1846')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1846')
    end 
    
    --ar1847
    --svobodno
    
    --ar1848
    --svobodno

    --ar1849
    --fe/ #vbei_v_google
    --16.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:RepuserAge(), 15, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MailRuFrom(), 1)
        and cmpr_btw(features:TextLines(), 1, 2, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
        and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:AUTOREG() or wclass:VERY_LONG_LOCALPART())
        and (wclass:NEW_IP_30_DAYS() or wclass:SOURCE_IP_IN_DNSBL())
    	and (wclass:NABERI_V_GOOGLE() or cmpr_gt(features:WordsOtherRatio(), 20))
    then
        SetPSAR('ar1849',true)
    end
    
    --ar1850
	--svobodno
    
    --ar1851
    --svobodno
    
    --ar1852
    --fe / #KZ #seminar #img
	--10.10.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 5000, 1500000, true)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:SubjectWordCount(), 4, true)
    	and cmpr_btw(features:WordCount(), 50, 1000)
    	and cmpr_btw(features:TextLines() , 2, 200)
       	and cmpr_eq(features:UrlNormCount(), 0)
       	and features:NotMailRuEmailInBody() == 1
       	and wclass:CRASHED_BASE64_IN_SUBJECT()
    	and wclass:SOURCE_IP_IN_DNSBL()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and HeaderMatchRe('Content-Type', regex([[boundary="--ALT--[a-z]{25,40}\d{7,15}"$]])) 
    then
    	SetPSAR('ar1852')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1852' )
    end
    
    --ar1853
    --mxs_other / #phishing 
    --07.10.16 / a.lis
    --b52c4b4f4ceb3783c67b25375390addf 49eb95745fb256a8af4eefa1578a32e4
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 40000, 100000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 8, true)
    	and cmpr_eq(features:FromDomain(), 'corp.mail.ru', 1)
    	and wclass:SPF_NOT_PASS()
    	and wclass:NEW_FROMDOMAIN_15_DAYS()
    	and HeaderMatch('From','ñîrð.màil.ru')
	then
		SetPSAR('ar1853')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1853')
	end 
    
    --ar1854
    --svobodno

    --ar1855
    --smtp / #kniga
    --16.01.17 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'smtp')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:MsgSize(), 5000, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:WordCount(), 300, true)
    	and cmpr_gt(features:TextLines() , 50, true)
    	and cmpr_gt(features:WordsOtherRatio(), 15, true)
    	and cmpr_gt(features:SubjectWordMixedCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 20, 200)
    	and (cmpr_lt(features:RepuserAge(), 7, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 15))
    	and wclass:NEW_IP_30_DAYS()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
	then
		SetPSAR('ar1855')
	end

    
    --ar1856
    --fe / #zarabotok
    --07.10.16 / a.lis
    --125dca74e4b101e52c7fe20a30c36887 9e3c6f8236705b38473270caf19bf93a 184cf08d8bfebafc498e85d4a884ee7a
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 900, 2500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:IsAutoreg(), 1)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and (cmpr_btw(features:RepuserAge(), -1, 2, true)
            or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 10, 4))
    	and TermsMatchGroup(17862, 100)
	then
		SetPSAR('ar1856')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1856')
	end 
    
    --ar1857
    --fe / #seo
    --19.12.16 / a.lis(sokolik)
    --8124bce59c524e7da48d9c158aa9487e
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 20, 500, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:RepuserAge(), -1, 5, true)
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and (UrlsMatchStr('.xyz') 
    		or wclass:ONLY_URLS_IN_BODY()
			or wclass:FROM_ENDS_IN_NUMS())
    	and HeaderMatch('Received','m.mail.ru')
	then
		SetPSAR('ar1857')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1857')
	end
    
    --ar1858
    --svobodno
    
    --ar1859
    --svobodno
    
    --ar1860
	--svobodno
    
    --ar1861
    --mxs_mbp / #zarabotok #google #short #pw_urls
    --07.10.2016 / rassadovskiy
    --339d2a75df40c838e7299550cadbcd3d 6facda156c1b406c249549894c217932
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),15000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:IsFromGoogle()
        and features:NoRealNameFrom()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and cmpr_btw(features:UrlCountWithoutMailRu(),0,10,true)
        and cmpr_gt(features:HtmlTagCount(),100)
        and cmpr_gt(features:WordCount(),300)
        and features:FromEmailInBody()
        and wclass:HAS_TAG_META()
        and (wclass:URL_COUNT_0_WITH_HTTP() or wclass:FAKE_HTML_URLS() or wclass:SHORTURL())
    then
        SetPSAR('ar1861') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1861')
    end
    
    --ar1862
    --mxs_other / #zrenie_recover
    --07.10.16 /m.guryanov
    --a98749d2c31e26b3bc66e8cbe35ae070 805ff905403efc871758d8c6132d5138 794a52ca7c25c0b64edf58b8f5b9e405
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 500, 15000, true)  
		and features:HasTextOnly() == 1  
  		and features:NoRealNameTo() == 1
    	and features:NoUserAgent() == 1
    	and features:MultipartNum() == 1
    	and cmpr_btw(features:UrlNormCount(), 3, 10, true)    	
    	and cmpr_btw(features:TextLines(), 6, 17, true)
    	and cmpr_btw(features:WordCount(), 30, 100, true)
    	and cmpr_gt(features:WhitespaceCount(), 300, true)
    	and cmpr_gt(features:HtmlTagCount(), 1, true) 
    	and wclass:FAKE_FOTO_MAIL_RU()
    	and wclass:SPF_NOT_PASS()
	then      	
        SetPSAR('ar1862')
        LogMsgToHadoop('dstat_guryanov_log', '#ar1862')
    end 
    
	--ar1863
    --svobodno
    
    --ar1864
    --fe / #niger 
    --07.10.16 / philip.karpov
    --fd0cce813b5d2e36cd4b67c10eaaef45 d52771e2f595935466ca2b3d67388a0e 75a6cfe1f18ee83f69a579f69601865c 5492bb79b5196769e42e1eb1fa6938a9
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 15000)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_eq(features:HasAttach(), 1)
        and (cmpr_eq(features:AttachOfficeCount(), 1) or cmpr_gt(features:ImgNum(), 1, true))
        and cmpr_lt(features:WordCount(), 50)
        and cmpr_lt(features:TextLines(), 10, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 15, true)
        and wclass:CT_ENCODED_FILENAME()
        and TermsMatchGroup(17866, 100)
    then
        SetPSAR('ar1864')
    end
    
	--ar1865
	--mxs_other / #zarabotok
	--07.10.2016 / zubr
	--e9298dc9a39f3e4170ecc8107bc20736
	if not IsBlocked
		and features:RcvSrc() == "mxs"
		and features:FromDomain() == 'teamo.ru'
		--and wclass:SPF_NOT_PASS()
		and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() or wclass:DKIM_FAIL())
	then
		SetPSAR('ar1865')
	end
    
	--ar1866
	--mxs_other / #zarabotok
	--08.10.2016 / zubr
	--febc18bd622a95a0afa86639be026fa9 c2167b8bcb973b676817c0c048e588fc
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 5000 and features:MsgSize() <= 500000 
		and features:HasTextOnly() == 1
		and features:UrlNormCount() <= 40
		and features:HtmlTagCount() <= 5
		and features:NoHtmlTag() == 1
		and features:TextLines() >= 1 and features:TextLines() <= 200
		and features:WordCount() >= 3 and features:WordCount() <= 1500
		--and features:WordsOtherRatio() >= 7
		and features:SubjectWordCount() >= 2
		and features:Subject8bitOnly() == 1
		and features:DomainRepipAge() <= 20
		and wclass:SPF_NOT_PASS()
		and (wclass:HOSTING_RELAY_IN_RECEIVED() or wclass:RECEIVED_MICROSOFT_SMTP_SERVER() or wclass:MISSING_DATE() 
			or wclass:NEW_IP_7_DAYS() or wclass:SHORT_PHP_NAME_IN_URL())
	then
		SetPSAR('ar1866')
	end
    
	--ar1867
	--svobodno
    
	--ar1868
	--mxs_other / #zarabotok
	--08.10.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 50000 
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 7
		and features:TextLines() >= 30 and features:TextLines() <= 80
		and features:WordCount() >= 100 and features:WordCount() <= 300
		and features:SubjectWordCount() >= 6
		and features:Subject8bitOnly() == 1
		and wclass:NEW_FROMDOMAIN_AND_DKIM_7_DAYS()
		and wclass:NEW_FROMDOMAIN_7_DAYS()
		and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
		and wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL()
	then
		SetPSAR('ar1868')
	end
    
    --ar1869
	--svobodno
    
    --ar1870
	--svobodno
    
	--ar1871
	--svobodno
    
    --ar1872
    --mxs_other / #bad_CT
    --08.10.2016 / rassadovskiy
    --a5d4bdb3274b7a480a425bf3b9503fa4
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),1000,10000) 
        and features:HasTextOnly() == 1
        and features:MultipartNum() > 3
        and features:NoRealNameTo()
        and features:UrlNormCount() <= 2
        and cmpr_btw(features:HtmlTagCount(),2,10)
        and (cmpr_btw(features:WordCount(),10,50,true) or cmpr_gt(features:WordCount(),150))
        and features:SourceTextSize() > 1500
        and (features:LinesToWordsRatio() > 20 or features:LinesToWordsRatio() < 5)
        and features:NumberCount() >= 8
        and features:SubjectLen() > 30
        and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT() and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{25,50}$]]))
            or StrMatchRe(features:MsgIdLocalPart(),regex([[^(?:[a-z\d]{7,}\-){2}\d{7,}$]])))
    then
        SetPSAR('ar1872') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1872')
    end
    
    --ar1873
    --mxs_mbp / #spf_not_pass #english #url_business
    --08.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp") 
        and cmpr_btw(features:MsgSize(),100,10000)
        and features:HasNoAttach()
        and features:MultipartNum() == 1
        --and features:IsFromRambler()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_btw(features:TextLines(),2,10,true)
        and cmpr_btw(features:WordCount(),10,70)
        and features:Words7bitRatio() > 80
        and cmpr_gt(features:WhitespaceToWordRatio(),150)
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:MORE_5_EMAILS_IN_TO()
        and wclass:DOLLAR_IN_MSGID()
        and UrlsMatch(regex([[(?i)^(?:[a-z\d\-]+\.){2}[a-z]{2,4}\/[a-z\d]+$]]),1)
    then
        SetPSAR('ar1873') 
    end
    
    --ar1874
    --svobodno
    
	--ar1875
	--mxs_other / #znakomstva
	--09.10.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 20000
		and features:HasNoAttach() == 1
		and features:ImgNum() == 1
		and wclass:TO_LOCALPART_IN_REALNAME()
		and features:UrlNormCount() == 1
		and features:HasShortUrl() == 1
		and features:TextLines() >= 2 and features:TextLines() <= 20
		and features:WordCount() >= 20 and features:WordCount() <= 300
		and features:Word8bitCount() == 0
		and features:Subject7bitOnly() == 1
		and wclass:SHORT_BOUNDARY_AND_MAILRU_MSG_ID_PATTERN()
	then
		SetPSAR('ar1875')
	end
    
	--ar1876
	--mxs_other / #rasprodaja
	--09.10.2016 / zubr
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and features:HasTextOnly() == 1
        and features:UrlNormCount() <= 8
        and features:TextLines() >= 1 and features:TextLines() < 200
		and features:Words7bitRatio() >= 80
        and (wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED() or wclass:NEW_IP_30_DAYS_WITH_5_DAY_GAP())
	--	and wclass:RUSSIAN_FROM_REALNAME()
		and (HeaderMatchRe('Message-Id', regex([[\<\d{25,40}\@]]..features:FromDomain())) or features:MsgIdDomain() == '')
    then   
        SetPSAR('ar1876')
    end
    
	--ar1877
	--mxs_other / #vakansiya
	--07.12.2016 / zubr(sokolik)
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and cmpr_btw(features:MsgSize(), 3000, 50000)
        and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
        and features:UrlNormCount() <= 8
        and features:TextLines() >= 3 and features:TextLines() < 70
        and (wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED()
    		or wclass:NEW_IP_15_DAYS()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and wclass:INVALID_CHARS_IN_RAW_URLS()
		and (HeaderMatch('Mime-Version', '1.0 (1.0)') or HeaderMatchRe('Message-ID', regex([[\<\d{1,4}[a-z]{1,4}\d{3,9}\.\d{5,10}\@]])) or TermsMatchGroup(17867, 100))
    then   
        SetPSAR('ar1877')
    end
    
    --ar1878
    --mxs_other / #pohudei #bad_ct #priroda_ne_dala
    --16.08.2016 / rassadovskiy
    --28403e364f26dab0fecafdd59e591a2b c297de20b6cb4840b3dd4993ce0846d2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and features:SourceTextSize() > 10000
    	and features:DotCount() < 10
        and HeaderMatchRe('To',regex([[(?i)^[a-z\d]+\s[a-z\d\._-]+@[a-z-\d\._-]+(?:\.[a-z]+)+$]]))
    then
        SetPSAR('ar1878') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1878')
    end
    
    --ar1879
	--svobodno
    
    --ar1880
	--mxs_mbp / #zarabotok
    --09.10.16 / razuvaev	
	--mfc_mf_yandex
    if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 300, 3000)
    	and features:HasTextOnly() == 1
    	and features:IsFromFreeMail() == 1
    	and features:NoRealNameTo() == 1
    	and (features:Subject8bitOnly() == 1 or cmpr_gt(features:SubjectWordMixedCount(), 0) or wclass:TO_IN_SUBJECT())
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 70, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 8)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:MANY_CC_AND_MORE_THAN_5_RCPT()
    then
    	SetPSAR('ar1880')
    end

    
    --ar1881
	--svobodno
    
    --ar1882
    --svobodno
    
    --ar1883
	--svobodno
    
    --ar1884
	--svobodno
 
    --ar1885
    --fe / #short #flud
    --09.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and not wclass:EXCEPTIONS()
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 1, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 1 , 50, true)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 5)
		and cmpr_eq(features:FromRealNameWordCount(), 1)
        and not wclass:RUSSIAN_FROM_REALNAME()
		and wclass:NO_MIME()
		and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar1885')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1885')
    end
    
    --ar1886
	--svobodno 
    
    --ar1887
	--svobodno
    
    --ar1888
    --mxs / #zarabotok
    --10.10.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:ExternalImgNum(), 1)
        and cmpr_btw(features:UrlsTextSize(), 100, 350)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 25, true)
        and cmpr_btw(features:WordCount(), 10, 100)
        and cmpr_btw(features:HtmlTagCount(), 5, 25)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:NEW_DKIM_15_DAYS()
        and wclass:NEW_FROMDOMAIN_15_DAYS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    then
        SetPSAR('ar1888')
    end
    
    --ar1889
	--svobodno
    
    --ar1890
    --mxs / #virus #url #other_domain #rostelekom #2Multipart
    --15.09.16 / minina
    --2120433a994695d54df61d852d2e9357 464dc7971c68aed22da1b23212f10129
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 25000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 1, 800, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 100)
       	and (wclass:SPF_NOT_PASS() or HeaderMatch('Received-SPF', 'fail'))
        and wclass:NO_MIME()
    	and wclass:SHORT_BOUNDARY() 
    	and (wclass:RUSSIAN_FROM_REALNAME() or wclass:FROM_MATCH_WITH_URL())
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH())
       	--and (StrMatch(features:FromDomain(), '.rt.ru') or wclass:FIRST_LVL_DOMAIN_NET() or TermsMatchGroup(17788,100))
    then
        SetPSAR('ar1890')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1890' )
    end
    
    --ar1891
	--svobodno
    
	--ar1892
    --mxs / #virus #url #other_domain #rostelekom #sberbank
    --10.10.16 / minina /fix a.lis
    --2120433a994695d54df61d852d2e9357 464dc7971c68aed22da1b23212f10129
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
        and cmpr_btw(features:MsgSize(), 500, 35000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 40, true)
        and cmpr_btw(features:WordCount(), 1, 2000, true)
        --and cmpr_btw(features:HtmlTagCount(), 1, 100)
      	and (wclass:SPF_NOT_PASS()
        	or (features:SpfDomain() and features:SpfDomain() ~= features:FromDomain()))
        and wclass:NO_MIME()
    	and (wclass:SHORT_BOUNDARY() or wclass:DIFFERENCE_MSGID_AND_ORIGMSGID())
    	and (wclass:RUSSIAN_FROM_REALNAME() or wclass:FROM_MATCH_WITH_URL())
        and wclass:LINK_TO_ARCHIVE_FILE()
    then
        SetPSAR('ar1892')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1892' )
    end
    
    --ar1893
	--svobodno
    
    --ar1894
    --mxs / #visacard #blogspot #docs.google.com
    --10.10.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 1, 30, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 20, true)
        and (wclass:RUSSIAN_FROM_REALNAME() or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL())
    	and wclass:BASE64_TRANSFER_ENCODING() 
        and (UrlsMatchStr('blogspot',1) or UrlsMatchStr('docs.google.com',1))
    	and UrlsMatchStr('.html',1)
    then
        SetPSAR('ar1894')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1894' )
    end
    
    --ar1895
    --mxs_other / #zarabotok #img
    --10.10.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 10000, 200000)
        and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 1)
        and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:TextLines(), 2, 25, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
    	and cmpr_gt(features:Words8bitRatio(), 50, true)
    	and cmpr_gt(features:Word7bitCount(), 2, true)
    	and wclass:SPF_NOT_PASS()
    	and (wclass:MS_MAILER() or wclass:NO_USER_AGENT())
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and (wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY() or wclass:SHORT_BOUNDARY())
    then
        SetPSAR('ar1895')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1895' )
    end
    
    --ar1896
	--svobodno
    
    --ar1897
    --fe / #virus #.z
	--03.11.16 / minina(sokolik)
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
      	and (cmpr_btw(features:MsgSize(), 2000, 20000, true) or cmpr_btw(features:MsgSize(), 1000000, 2000000, true))
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 50, true)
    	and cmpr_btw(features:WordCount(), 1, 400, true)
       	and cmpr_eq(features:UrlNormCount(), 1)   	
		and (features:FilesExtensions() == ".z" or features:FilesExtensions() == ".gz")
       	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:CT_ENCODED_FILENAME()
    	and (wclass:COMPL_RATIO_BY_LAST_HOUR_MORE_THAN_15() or wclass:SOURCE_IP_IN_XBL() or wclass:WORDS_MIXED_RATIO())
    	and features:FromRealName()
    	and (cmpr_eq(features:SubjectNumbersCount(), 6) or StrMatchRe(features:From(), regex([[^.*\d.*@]])) or features:IsAutoreg()
           or cmpr_eq(#features:FromRealName(), 9))
        and (cmpr_lt(features:Karma(), 0, true) or StrMatchRe(features:From(), regex([[^.*\d.*@]])) or features:IsAutoreg())
    then
    	SetPSAR('ar1897')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1897' )
    end
    
    --ar1898
    --fe / #anketa_polzovatelya
    --10.10.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:MsgSize(), 10000, 1000000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_gt(features:WordCount(), 2000, true)
    	and cmpr_btw(features:TextLines() , 2, 500, true)
      	and (cmpr_lt(features:RepuserAge(), 7, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
    	and (wclass:SOURCE_IP_IN_DNSBL() or wclass:NEW_IP_30_DAYS() or cmpr_eq(features:IpCategory(), "tiny"))
    	and UrlsMatchStr('.xyz') 
	then
		SetPSAR('ar1898')
		LogMsgToHadoop('dstat_minina_log', '#ar1898')
	end
    
    --ar1899
    --mxs_other/mbp / #buhgalter
    --10.10.2016 / rassadovskiy
    --8e7466e58a60939b9567aaabbbe7499a
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(),20,50000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:UrlNormCount(),0,5,true)
        and features:FromRealNameWordCount() == 1
        and (TermsMatchGroup(17871,200) or TermsMatchGroup(17871,100) and features:SubjectWordMixedCount() > 0)
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH() or wclass:HAS_ATTACH())
    then
        SetPSAR('ar1899') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1899')
    end
    
    --ar1900
	--svobodno
    
  	--ar1901
    --mail.com
    if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_esp"))
        and features:FromDomain() == 'mail.com'
        and not (wclass:HAS_HEADER_IN_REPLY_TO() or wclass:SHORT_ENGLISH_MESSAGE() and wclass:HAS_IMAGE_URL())
    	and not TermsMatchGroup(17873,100)
        and (wclass:HOSTING_RELAY_IN_RECEIVED() 
            or wclass:FAIL_SPF() 
        	or wclass:WORDS_MIXED_RATIO()
        	or wclass:DKIM_FAIL()
    		or UrlsMatchStr('madmimi.com'))
	then
		SetPSAR('ar1901') 
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar1901')
    end 
    
    --ar1902
    --mxs_other / #zarabotok #enum.ru
    --10.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
  		and cmpr_eq(features:FromDomain(), 'enum.ru')
    	and ((features:SPF() and features:SPF() ~= 'pass') 
        	or (features:SpfDomain() and features:SpfDomain() ~= features:FromDomain()))
    	and not wclass:DKIM_PASS()
    then
        SetPSAR('ar1902')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1902' )
    end
    
    --ar1903
    --mxs_mbp / #rambler #zarabotok
    --25.11.16 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(), 3000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and features:IsFromRambler()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,3,true)
    	and features:HtmlTagCount() > 0
    	and features:OneWordSubject()
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
    	and features:To()
        and (cmpr_eq(features:ToRealName(),'') or wclass:BOUNDARY_WITHOUT_LETTERS())
        and UrlsMatch(regex([[^[a-z\d\-\.]+\.[a-z]{1,3}/[a-z\d]+/$]]),1)
    then
        SetPSAR('ar1903')
    end
    
    --ar1904
    --svobodno

    --ar1905
    --mxs_other #penis
    --10.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 20000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 30, 300, true)
        and cmpr_btw(features:WordCount(), 50, 500, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and (wclass:MESSAGE_ID_NO_DOMAIN()
            or wclass:DIFFERENCE_MSGID_AND_ORIGMSGID())
        and (wclass:SUBJECT_MIXED_BADRATIO()
            or wclass:BAD_LINES_TO_WORD_RATIO())
    then
        SetPSAR('ar1905', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar1905')
    end

	--ar1906
    --svobodno

    --ar1907
	--svobodno
    
    --ar1908
    --mxs / #pidori
    --10.10.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 250000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:FilesExtensions(), '.txt')
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 200, 1500)
        and cmpr_btw(features:WordCount(), 500, 2500, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:ONE_RECEIVED()    
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:DISCOUNT_IN_SUBJECT()
    then
        SetPSAR('ar1908')
    end 
        
    --ar1909
    --mxs_other / #visa #blogspot
    --23.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_lt(features:MsgSize(), 3000)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 100, true)
        --and cmpr_eq(features:Subject8bitOnly(), 1) 
        and (wclass:FAKE_MSG_ID()
            or TermsMatchGroup(17894, 100)
            or wclass:REPLY_TO_REALNAME_DUBLICATE_REPLY_TO_EMAIL()
            or wclass:SUBJECT_MIXED_BADRATIO()
            or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
            or wclass:CTE_7BIT_WITH_CONTENT_8BIT()
            or wclass:DIFFERENT_REPLY_TO_AND_FROM())
        and (UrlsMatchStr('.blogspot.')
            or UrlsMatchStr('.livejournal.com/', 1)
            or UrlsMatchStr('.wordpress.com'))
    then   
        SetPSAR('ar1909')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1909')
    end 
        
    --ar1910
    --svobodno

    --ar1911
    --fe / #google 
    --11.10.16 / r.sulimov
    --73602a692f54e1e98503beaac939d8cf bf7fd09b9fb901e9521415e4144aed6a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 3000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 150)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 1, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 400, 5000, true)
        and cmpr_lt(features:HtmlUniqueTagCount(), 5, true)
        and cmpr_lt(features:RepuserAge(), 150, true)
    	and cmpr_gt(features:SubjectWordCount(), 5)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and wclass:AUTOREG()
        and wclass:SHORT_BOUNDARY()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    	and wclass:HAS_HEADER_IN_REPLY_TO()
    then
        SetPSAR('ar1911')
    end
    
    --ar1912
    --mxs / #pohydenie
    --11.10.16 / r.belyankin
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:FromDomain(), 'gmail.com')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_eq(features:HasBcc(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 50, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 15)
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{2,10}[a-zA-Z\d]{20,50}]]), 1)
        and HeaderMatchRe('Received', regex([[^from\s*[a-z\d]+\.ru\s*\(]]))
    then
        SetPSAR('ar1912')
    end
    
    --ar1913
	--svobodno

    --ar1914
	--svobodno
    
    --ar1915
	--svobodno
    
    --ar1916
	--svobodno
    
    --ar1917
	--svobodno
    
    --ar1918
	--svobodno
    
    --ar1919
	--svobodno

    --ar1920
	--svobodno
    
    --ar1921
	--svobodno
    
    --ar1922
	--svobodno
    
	--ar1923
    --mxs_mbp / #zarabotok_6kk #attach #rambler 
    --11.10.16 /m.guryanov
    --94a5e76b3350162a7ee42713e48a5e8d 422e27f42b85267f7cf1da82d288b1df be44ed2f83ab5fde0af8d310c2c09cd8
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 400000, 850000, true)  
		and features:HasAttach() == 1
    	and features:ImgNum() == 0
    	and features:FromDomain() == "rambler.ru"
    	and features:UrlNormCount() == 0
    	and (features:MultipartNum() == 5 or features:MultipartNum() == 3)
    	and features:NoRealNameTo() == 1 
    	and cmpr_btw(features:SubjectWordCount(), 2, 10, true)
   		and features:Subject7bitOnly() == 1
    	and cmpr_btw(features:WordCount(), 0, 10, true)    	
    	and cmpr_btw(features:TextLines(), 0, 5, true)
    	and features:FilesExtensions() == ".pdf"
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and (wclass:SUBJECT_ONLY_WITH_ATTACH() or wclass:SUBJECT_LONGER_THEN_BODY())
	then      	
        SetPSAR('ar1923')
        LogMsgToHadoop('dstat_guryanov_log', '#ar1923')
    end
    
    --ar1924
    --fe / #zarabotok
    --11.10.16 / a.lis
    --629d6176a53482b130952d8b8d83c091 d0e2492b944ccfbe6f03be5222bf4af8
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 50000, 140000, true)
    	and cmpr_btw(features:ImgNum(), 1, 5, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
		and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 6)
    	and cmpr_gt(features:AbfCitiesPerDayNum(), 1, true)
    	and wclass:PHP_URL()
	then
		SetPSAR('ar1924')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1924')
	end 
    
    --ar1925
	--svobodno
    
    --ar1926
	--svobodno

	--ar1927
	--svobodno

	--ar1928
	--svobodno
    
    --ar1929
	--svobodno
    
    --ar1930
    --mxs_mbp / #zarabotok_6kk #attach #rambler 
    --11.10.16 /a.lis
    --94a5e76b3350162a7ee42713e48a5e8d 422e27f42b85267f7cf1da82d288b1df be44ed2f83ab5fde0af8d310c2c09cd8
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 400000, 850000, true)  
		and features:HasAttach() == 1
    	and features:ImgNum() == 0
    	and features:FromDomain() == "rambler.ru"
    	and features:UrlNormCount() == 0
        and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:NoRealNameTo() == 1 
    	and cmpr_btw(features:WordCount(), 0, 10, true)    	
    	and cmpr_btw(features:TextLines(), 0, 5, true)
    	and features:FilesExtensions() == ".pdf"
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and (wclass:SUBJECT_ONLY_WITH_ATTACH() or wclass:SUBJECT_LONGER_THEN_BODY() or cmpr_eq(features:NoSubject(), 1))
	then      	
        SetPSAR('ar1930')
    end
    
    --ar1931
	--svobodno
    
	--ar1932
	--svobodno
    
    --ar1933
	--svobodno
    
    --ar1934
    --mxs_mbp / #zarabotok #im
    --10.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 2, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 80, true)
    	and cmpr_gt(features:EmailsCountInCcHeader(), 5)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and features:MailRuFeMsgId()
    	and wclass:SHORT_MESSAGE() 
    then
        SetPSAR('ar1934')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1934' )
    end

    --ar1935
	--svobodno
    
    --ar1936
	--svobodno
    
	--ar1937
    --svobodno
	
    --ar1938
    --svobodno
    
    --ar1939
    --fe / #zarabotok #posobie
    --11.10.16 / philip.karpov
    --fc_f_m20k
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:WordCount(), 45, 220)
        and cmpr_btw(features:TextLines(), 15, 35, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Words7bitRatio(), 10)
        and wclass:AUTOREG()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:WORDS_TO_URLS_BADRATIO()
    then
        SetPSAR('ar1939')
    end
    
    --ar1940
	--svobodno
    
    --ar1941
	--svobodno

    --ar1942
    --mxs / #visa #zarabotok
    --11.10.16 / r.belyankin
    --mfc_mf_other
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 50)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 5, 50, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and UrlsMatch(regex([[^[a-z\d-_]+\.blogspot\.(?:[a-z]{2}|[a-z]{2,3}\.[a-z]{2})]]),1)
    then
        SetPSAR('ar1942')
    end
    
    --ar1943
	--svobodno
    
    --ar1944
    --mxs / #magiy
    --12.10.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 2, 5, true)
        and cmpr_btw(features:UrlsTextSize(), 50, 150)
        and cmpr_eq(features:GeoCode(), 'US')
        and cmpr_btw(features:TextLines(), 30, 150, true)
        and cmpr_btw(features:WordCount(), 200, 1000, true)
        and cmpr_btw(features:HtmlTagCount(), 30, 100)
        and wclass:PRECEDENCE_BULK()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_X_PHP_SCRIPT()
        and wclass:PTR_SEEMS_DYNAMIC()
        and UrlsMatch(regex([[\/web\-content\/configuration\/\d{1,3}\.htm$]]),1)
    then
        SetPSAR('ar1944')
    end
    
    --ar1945
    --mxs / #zarabotok #search.rambler
    --12.10.16 / r.belyankin
    --mcc_mc_dkim30
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 3)
        and cmpr_btw(features:UrlsTextSize(), 10, 70)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        --and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and (wclass:MORE_5_EMAILS_IN_TO() or wclass:X_PHP_SCRIPT_AND_NEW_IP())
        and UrlsMatchStr('search.rambler.ru')
    then
        SetPSAR('ar1945')
    end
    
    --ar1946
	--svobodno
    
    --ar1947
	--svobodno
    
    --ar1948
	--svobodno

    --ar1949
    --mxs / #pidori #two_urls #no_img
    --24.07.16 / r.belyankin
    --83449d6c7b05c48ad81b5fa91f1057d6 77e42b3d152ab6dc87888255e57fc33c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and (cmpr_eq(features:NoRealNameTo(), 1) 
            or cmpr_eq(features:ToRealNameInToLocalPart(), true) 
            or cmpr_eq(features:FromRealNameInFromLocalPart(), true))
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS() or wclass:FAIL_SPF())
        and wclass:MORE_1_EMAILS_IN_TO()
        and wclass:DIFFERENCE_RCPTNUM_AND_TO()
    then
        SetPSAR('ar1949')
    end

	--ar1950
    --fe / #virus #zagruz #nakladnaya
    --12.10.16 / minina
    --c5f03cee0400a809c733c4771a15a62f 05db9b39d4b5c5c256ed585547e1e72c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 1000, 30000)
        and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 5, true) 
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
   		and cmpr_btw(features:TextLines(), 0, 10, true)
    	and cmpr_btw(features:WordCount(), 0, 50, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 200, true)
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
        and (wclass:WEB_ATTACH() or wclass:HAS_ARCHIVE_ATTACH())
        and wclass:CT_ENCODED_FILENAME()
    	and HeaderMatchRe('Content-Type', regex([[boundary="\-+[a-z]{5,40}\-[\dA-Za-z]{10,20}\-\d{5,15}"$]]))
    	and not UrlsMatchStr('files.mail.ru', 1)
    then
        SetPSAR('ar1950')
    end
    
    --ar1951
    --mxs_mbp / #virus #.zip #buhgalter
    --21.12.16 / minina /fix a.lis
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') 
        and cmpr_btw(features:MsgSize(), 1000, 500000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
        and cmpr_btw(features:UrlNormCount(), 0, 5,  true)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH())
    	and UrlsMatch(regex([[^.+akt\d+\.zip\d*$]]), 1)
    then
        SetPSAR('ar1951')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1951' )
    end
    
    --ar1952
    --mxs_other / #test_sberbank1
    --12.10.16 /m.guryanov    
    if features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 20000, 200000, true)    		 
   		and features:NoTo() == 1
    	and UrlsMatchStr('sberbank.link.sendsay.ru')    	
	then      	
        SetPSAR('ar1952', true)
        LogMsgToHadoop('dstat_guryanov_log', '#ar1952')
    end 
    
    --ar1953
    --svobodno
    
    --ar1954
    --svobodno
    
    --ar1955
    --svobodno
    
    --ar1956
    --svobodno
    
    --ar1957
    --svobodno
    
    --ar1958
    --svobodno
    	
    --ar1959
    --svobodno
    
    --ar1960
	--svobodno
    
    --ar1961
    --12.10.16 / a.lis
    --myrambler
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and (cmpr_eq(features:FromDomain(), 'myrambler.ru') or cmpr_eq(features:FromDomain(), 'autorambler.ru'))
    	and wclass:SPF_NOT_PASS()
	then
		SetPSAR('ar1961')
    	LogMsgToHadoop('dstat_lisitskaya_log', '#ar1961')
	end
    
    --ar1962
    --svobodno
    
    --ar1963
    --svobodno 
    
    --ar1964
	--svobodno
    
    --ar1965
    --12.10.16 / a.lis
    --noreply
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and features:RcvSrcExt() == "mxs_mbp" 
    	and not features:DkimDomain()
        and wclass:SPF_NOT_PASS()
		and not HeaderMatch('From', '@cloud.mail.ru') 
		and HeaderMatch('From', 'noreply@') 
	then
		SetPSAR('ar1965')
    	LogMsgToHadoop('dstat_lisitskaya_log', '#ar1965')
	end 
    
	--ar1966
    --mxs_other / #zarabotok #ugly_urls
    --10.10.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_esp'))
        and cmpr_btw(features:MsgSize(), 100, 50000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 2, 15, true)
        and cmpr_btw(features:WordCount(), 1, 30, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and cmpr_gt(features:Words8bitRatio(), 50, true)
    	and cmpr_eq(features:SubjectWordCount(), 1)
    	and cmpr_eq(features:EmailInSubject(), 1)
        and cmpr_btw(features:UrlsTextSize(), 150, 500)
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and (wclass:NO_USER_AGENT() or wclass:MS_MAILER())
    then
        SetPSAR('ar1966')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1966' )
    end
    
    --ar1967
    --mxs_other / #potenciya #img
    --10.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 200000)
        and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 1 )
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 1, 5, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
      	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
        and wclass:HAS_HEADER_SENDER()
    	and wclass:EMAIL_IN_HDR_ORGANIZATION()
    	and wclass:NEW_DKIM_7_DAYS()
    then
        SetPSAR('ar1967')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1967' )
    end
    
    --ar1968
    --fe / #zarabotok #1url #eng
    --06.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_lt(features:WordCount(), 100)
        and cmpr_lt(features:HtmlTagCount(), 20)
    	and cmpr_gt(features:Words7bitRatio(), 60)
    	and features:AbfIpWasChanged()
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 5, 50)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    then
        SetPSAR('ar1968') 
    end
    
    --ar1969
    --mxs_other / #potenciya #img
    --10.10.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')) 
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
     	and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 20, true)
      	and cmpr_eq(features:Words8bitRatio(), 60, true)
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
    	and cmpr_eq(features:XMailerName(), 'Rambler WebMail')
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
      	and UrlsMatchStr('search.rambler.ru', 1)
    then
        SetPSAR('ar1969')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1969' )
    end
    
	--ar1970  
    --smtp / #img #pdd
    --15.12.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 2000000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_gt(features:ImgNum(), 0)
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7) 
        and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_lt(features:WordCount(), 20)
        and cmpr_lt(features:HtmlTagCount(), 20)
    	and features:From() and features:ReplyTo()
    	and features:From() ~= features:ReplyTo() 
		and features:FromRealName() and features:ReplyToRealName()
		and features:FromRealName() == features:ReplyToRealName()
    	and (wclass:ONLY_7BIT_WORDS() or wclass:WHITESPACE_SUSP_RATIO())
    then
        SetPSAR('ar1970') 
        LogMsgToHadoop('dstat_minina_log', '#ar1970')
    end


    --ar1971
    --fe / #virus #.zip #buhgalter
    --12.01.17 / minina 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 1000, 500000)
        and cmpr_gt(features:ImgNum(), 0)
        and cmpr_btw(features:UrlNormCount(), 0, 5,  true)
    	--and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH())
    	and TermsMatchGroup(18248,100)
    	and UrlsMatch(regex([[(?i)^(?:[a-z\d_-]+\.)+[a-z]+/(?:[a-z\d_-]+/)+[a-z\d]+$]]),1)
    then
    	SetPSAR('ar1971')
    end
    
    --ar1972
    --mxs / #zarabotok
    --12.10.16 / r.belyankin
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 5, 50)
        and cmpr_gt(features:RcptNum(), 5)
        and cmpr_btw(features:TextLines(), 10, 55, true)
        and cmpr_btw(features:WordCount(), 50, 250, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 50, true)
        and wclass:MANY_CC()
        and not wclass:PHP_URL()
        and TermsMatchGroup(17190, 20)
    then
        SetPSAR('ar1972')
    end
    
    --ar1973
    --mxs / #zarabotok #ark.html
    --12.10.16 / r.belyankin
    --57629667e4d5ed16c81979091aedafea 412937f6391c0175072605234251408b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 5, 70)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 50)
        and cmpr_btw(features:WordCount(), 10, 150, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()    
        and UrlsMatch(regex([[^(?:[a-z\d-_]+\.)?[a-z\d-_]+\.[a-z]{2,3}\/ark\.html$]]),1)
    then
        SetPSAR('ar1973')
    end 
    
    --ar1974
    --mxs / #rabota #yahoo
    --12.10.16 / r.belyankin
    --mfc_mf_yahoo
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromRealNameInFromLocalPart(), true)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 20, 150, true)
        and cmpr_btw(features:WordCount(), 100, 1000, true)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and wclass:LOWERCASE_REPLY_TO()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
        and wclass:SUSP_EMAIL_IN_BODY()
        and (wclass:XMAILER_APPLE_MAIL() or wclass:MS_MAILER())
    then
        SetPSAR('ar1974')
    end
    
    --ar1975
    --mxs / #virus #sberbank
    --13.10.16 / r.belyankin
    --moc_mo_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 5, 150)
        and cmpr_eq(features:NoRealNameTo(), 1) 
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 25, true)
        and wclass:LINK_TO_ARCHIVE_FILE()     
        and wclass:FAKE_ATTACH()
        and wclass:OTHER_IP_IN_DNSBL()
    then
        SetPSAR('ar1975')
    end
    
    --ar1976
    --fe / #virus
    --13.10.16 / philip.karpov
    --f_fo_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:MsgSize(), 3000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:WordCount(), 1, 200)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_lt(features:HtmlTagCount(), 10, true)
        and cmpr_eq(features:WordMixedCount(), 0)
        and HeaderMatch('X-Mru-User-Agent','Mozilla')
        and wclass:HAS_ARCHIVE_ATTACH()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar1976', true)
    end
    
    --ar1977
    --fe / #zarabotok
    --13.10.16 / philip.karpov
    --f_fo_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 40, true)
        and cmpr_btw(features:WordCount(), 50, 200, true)
        and cmpr_eq(features:WordMixedCount(), 0)
        and cmpr_gt(features:WhitespaceRatio(), 10, true)
        and cmpr_eq(features:SubjectWord7bitCount(), 0)
        and (wclass:DOT_SPLIT_LOCALPART() or wclass:FROM_ENDS_IN_NUMS())
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar1977',true)
    end
    
	--ar1978
    --fe / #zarabotok
	--13.10.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
       	and cmpr_btw(features:MsgSize(), 1000, 10000,true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 30, true)
    	and cmpr_btw(features:WordCount(), 1, 300, true)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_gt(features:Words8bitRatio(), 60, true)
        and cmpr_gt(features:SubjectWordCount(), 3)
       	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 30 ,true)
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5)
    	and cmpr_gt(features:EmailsCountInCcHeader() , 5)
      	and (wclass:AUTOREG() or wclass:VERY_LONG_LOCALPART())
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then 
        SetPSAR('ar1978') 
        LogMsgToHadoop( 'dstat_minina_log', '#ar1978')
    end
	
    --ar1979
    --mxs_other / #zarabotok
    --10.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
     	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 100, 1500, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 50, true)
      	and cmpr_eq(features:Words8bitRatio(), 60, true)
    	and cmpr_gt(features:SubjectWordCount(), 5)
    	and cmpr_gt(features:SubjectNumbersCount(), 3, true)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
		and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:SHORT_BOUNDARY()
    	and wclass:HAS_TAG_META()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
      	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
        SetPSAR('ar1979')
        LogMsgToHadoop( 'dstat_minina_log', '#ar1979' )
    end
        
    --ar1980
    --fe / #44fz #seminar
    --12.01.17 / minina 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:MsgSize(), 10000)
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and wclass:MOBILE_MAIL_RU()
        --and wclass:NEW_IP_30_DAYS()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and TermsMatchGroup(18249,100)
    then
    	SetPSAR('ar1980')
    end
    
	--ar1981
    --fe / #bazi #img 
	--12.01.17 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MsgSize(), 1000, 1000000)
        and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_lt(features:RepuserAge(), 7)
		and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
    	and cmpr_btw(features:TextLines(), 2, 40)
    	and cmpr_btw(features:WordCount(), 10, 100)
    	and TermsMatchGroup(17286,100)
    then
		SetPSAR('ar1981')
	end
	
    --ar1982 
    --mxs_mbp / #virus #.zip #buhgalter
    --13.01.17 / minina 
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
        and cmpr_btw(features:MsgSize(), 1000, 500000)
        and cmpr_gt(features:ImgNum(), 0)
        and cmpr_btw(features:UrlNormCount(), 0, 5,  true)
    	--and wclass:UNKNOWN_IN_RECEIVED()
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH())
    	and TermsMatchGroup(18248,100)
    	and UrlsMatch(regex([[(?i)^(?:[a-z\d_-]+\.)+[a-z]+/(?:[a-z\d_-]+/)+[a-z\d]+$]]),1)
    then
    	SetPSAR('ar1982')
    end
    
    --ar1983
    --fe / ## #https://./
	--15.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 100, 5000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_btw(features:SubjectLen(), 1, 20, true)
       	and wclass:ONLY_7BIT_WORDS()
    	and TermsMatchGroup(18161,100)
    then
    	SetPSAR('ar1983')
    end
    
    --ar1984
	--svobodno
    
    --ar1985
    --fe / #zarabtok 
    --13.10.16 / a.lis
    --9bd0197b8596888471c427da5e128c12
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_btw(features:MsgSize(), 20000, 70000, true)
    	and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
    	and (RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 10) or cmpr_lt(features:RepuserAge(), 10))
    	and UrlsMatchStr('.php', 1)
	then
		SetPSAR('ar1985')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar1985')
	end 
    
    --ar1986
    --smtp / #img #not_pdd
    --30.12.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 2000000)
        and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_gt(features:ImgNum(), 0)
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7) 
        and cmpr_lt(features:RepuserAge(), 15, true)
    	and cmpr_lt(features:WordCount(), 10)
        and cmpr_lt(features:HtmlTagCount(), 20)
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
        SetPSAR('ar1986') 
    end    
    
    --ar1987
	--svobodno
    
    --ar1988
    --fe / #eng_znakomstva
    --13.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 5, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 5, 20, true)
        and cmpr_btw(features:WordCount(), 25, 200)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20)
        and wclass:FE_ENG_MSG()
        and not wclass:RUSSIAN_FROM_REALNAME()
        and StrMatchRe(features:FromRealName(), regex([[^[a-z]{2,}\s[a-z]{2,}$]]))
    then
        SetPSAR('ar1988')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1988')
    end
    
    --ar1989
	--svobodno
    
    --ar1990
    --fe / #bazi
    --13.12.16 / a.sokolov
    if not IsBlocked
		and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 40000)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MailRuFrom(), 1)
        and (cmpr_btw(features:RepuserAge(), 0, 100, true)
    		or wclass:SUBJECT_MIXED_BADRATIO())
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 10, 200)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 30)
        and TermsMatchGroup(17887,20)
    then
        SetPSAR('ar1990')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1990')
    end
    
    --ar1991
    --mxs_other #zarabotki
    --14.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and not wclass:EXCEPTIONS()
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:TextLines(), 5)
        and cmpr_gt(features:WordCount(), 10)
        and cmpr_gt(features:HtmlTagCount(), 10)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and wclass:NEW_DKIM_15_DAYS()   
        and wclass:NEW_FROMDOMAIN_15_DAYS()
        and (wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
            or wclass:WORDS_MIXED_RATIO())
        and (wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
            or cmpr_eq(features:FromRealNameWordCount(), 1))
    then
        SetPSAR('ar1991')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1991')
    end
    
    --ar1992
    --fe / #seo
    --13.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:MobileMailRu(), 1)
        and cmpr_lt(features:MsgSize(), 200)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and wclass:ONLY_URLS_IN_BODY()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:MORE_THAN_N_RCPT()
    then
        SetPSAR('ar1992')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1992')
    end
    
    --ar1993
    --mxs_other #zarabotki
    --10.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 100, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:MS_MAILER()
        and wclass:SPF_NOT_PASS()
        and wclass:ONLY_7BIT_WORDS()
        and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar1993')
        LogMsgToHadoop('dstat_sokolik_log', '#ar1993')
    end
    
	--ar1994
    --fe / #znakomstva fe rus/eng
    --13.10.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and not wclass:EXCEPTIONS()
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and (cmpr_eq(features:FromMailToSuspDomain(), true)
			or cmpr_gt(features:EmailsCountInCcHeader(), 1, true)
    		or wclass:HDR_MANY_ENVELOPE_TO()
			or wclass:FROM_MATCH_TO())
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 5)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 0 , 150, true)
        and (cmpr_btw(features:SubjectWords8bitRatio(), 5, 25, true)
    		or wclass:EMPTY_SUBJECT()
    		or cmpr_eq(features:Subject7bitOnly(), 1))
        --and wclass:RUSSIAN_FROM_REALNAME()
		and wclass:SHORT_BOUNDARY()
    	and HeaderMatch('X-Mru-User-Agent','Mozilla/4.0')
    then
        SetPSAR('ar1994')
    end
    
    --ar1995
    --mxs_mbp / #zarabotok
    --13.10.16 / philip.karpov
    --cdcf46db1d74e7f013b0689e208e40b3 df486ebb7ecfb5bcb75dbf76c3d1986c 905f037dc4646f4aeaa0530f1d430bc2 67d53633bf7378ba2dc13fc0c6b221e6
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 10, 25)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:OneWordSubject(), 1)
        and cmpr_gt(features:WordMixedCount(), 5)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:SHORT_BOUNDARY()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:FROM_ENDS_IN_NUMS()
        and wclass:NO_USER_AGENT()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
    then
        SetPSAR('ar1995')
    end

    --ar1996
    --fe / #zarabotok  
    --13.10.16 / r.sulimov
    --18200048e372e0aba810f78c7b7273de cf895ef7d6afe0d38bb027eb3200d456
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 400000)
        and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_btw(features:UserAge(), 30, 150)
    	and cmpr_lt(features:RepuserAge(), 80, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 6)
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
    	and wclass:CT_ENCODED_FILENAME()
        and wclass:PHP_URL()
    	and wclass:FE_WITH_ATTACH()
    then
        SetPSAR('ar1996')
    end
    
    --ar1997
	--svobodno

	--ar1998
    --fe / #zarabotok  
    --14.10.16 / r.sulimov
    --60782fcdc85d17e3122d24cadaf0c514 31114adf002774a0dbdbc5a297a5d5d1
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 4000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UserAge(), 40, 80)
    	and cmpr_lt(features:RepuserAge(), 3, true)
    	and cmpr_eq(features:HtmlUniqueTagCount(), 0)
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 7, 25, true)
		and cmpr_btw(features:WordCount(), 70 , 200, true)
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
		and HeaderMatch('Received','tel.mail.ru')
    then
        SetPSAR('ar1998')
    end

     --ar1999
    --fe / #shum #attach #php #zarabotok
    --06.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 50000)
        and (cmpr_eq(features:HasAttach(), 1) or cmpr_gt(features:ImgNum(), 0))
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:HtmlTagCount(), 10)
    	and features:AbfIpWasChanged()
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:UrlsTextSize(), 5, 50)
    	and wclass:CT_ENCODED_FILENAME()
    	and (wclass:SOURCE_IP_IN_XBL() or wclass:NEW_IP_30_DAYS() or cmpr_eq(features:IpCategory(), "tiny"))
    	and UrlsMatch(regex([[/ok/[a-z\d]+\.php$]]),1)
    then
        SetPSAR('ar1999') 
    end
    
    --ar2000
    --mxs_other / #igerman
    --14.10.16 / philip.karpov
    --8093ed1e922ea3d9a833c01d49d87ce9 38eac9217cdc273845f17e5d3c5e8764
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 15000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 3, 7, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:GeoCode(), "US")
        and cmpr_gt(features:WordsToUrlsRatio(), 100)
        and cmpr_gt(features:TextLines(), 50)
        and cmpr_btw(features:HtmlTagsUnknownCount(), 0, 3, true)
        and wclass:LIST_UNSUBSCRIBE_WITHOUT_URL_OR_ADRESS()
        and wclass:HAS_PHP_SCRIPT_AND_MS_MAILER()
        and wclass:NEW_IP_15_DAYS()
        and wclass:FROM_MATCH_WITH_URL()
    then
        SetPSAR('ar2000')
    end
    

	--ar2001
	--svobodno
    
    --ar2002
	--svobodno
    
    --ar2003
	--fe / #casino
	--14.10.16 / a.lis
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 10000,80000, true)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 3, 25, true)
    	and cmpr_btw(features:HtmlTagCount(), 3, 25, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:WordCount(), 500, 6000, true)
    	and wclass:HAS_5_DAYS_GAP()
    	and wclass:FE_TOR_IP()
    then
    	SetPSAR('ar2003')
    end

    --ar2004
	--svobodno
    
    --ar2005
    --mxs / #zarabotok
    --14.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,2500)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:IsMarosnetIp()
        and features:EnvelopeFromMatchesWithUrl()
        and features:NoRealNameReplyTo()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HasImageUrl()
        and features:LinesToWordsRatio() > 20
        and cmpr_gt(features:WordCount(),30)
        and features:HtmlTagCount() > 10
        and cmpr_gt(features:WhitespaceToWordRatio(),300)
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
    then
        SetPSAR('ar2005') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2005')
    end
    
    --ar2006
    --mxs_other / #antikrisis #remont
    --14.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),3000,7000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() == 1
        and features:MultipartNum() == 3
        and features:EnvelopeFromMatchesWithUrl()
        and features:NoRealNameReplyTo()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_gt(features:HtmlTagCount(),5)
        and features:WordMixedCount() > 10
        and features:WordsMixedRatio() > 20
        and wclass:DMARC_PASS()
        and TermsMatchGroup(17820,100)
    then
        SetPSAR('ar2006') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2006')
    end
    
    --ar2007
    --mxs_other / #karta #visa
    --14.10.2016 / rassadovskiy
    --467ddfa4a713716a6ddaee01eda027d6 7b7019eb61848240d01b54a84c553937
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),30,5000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and cmpr_btw(features:Word8bitCount(),1,15,true)
        and cmpr_btw(features:UrlNormCount(),1,5,true)
        and features:TextLines() <= 10
        and (features:HtmlTagCount() == 0 or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL())
        and (wclass:SPF_NOT_PASS() or wclass:FREE_HOSTING())
        and UrlsMatchStr('.blogspot.')
    then
        SetPSAR('ar2007') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2007')
    end
    
    --ar2008
    --fe / #zarabotok #url/noise #english_realmane
    --14.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000,15000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:NoRealNameTo()
        and cmpr_lt(features:RepuserAge(),5, true)
        and cmpr_lt(features:Karma(),0)
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HtmlTagCount() == 0
        and cmpr_gt(features:WordCount(),50)
        and features:LinesToWordsRatio() < 20
        and (wclass:NEW_IP_NO_REP() or features:RepIpComplRatioByLastMonth() > 2)
        and (not wclass:RUSSIAN_FROM_REALNAME() or wclass:NEW_IP_15_DAYS() or wclass:VERY_LONG_LOCALPART() or wclass:WORDS_TO_URLS_BADRATIO())
        and UrlsMatch(regex([[^[a-z\d\-]{5,}\.ru/[a-z\d]{5,}$]]),1)
    then
        SetPSAR('ar2008') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2008')
    end

    --ar2009
    --smtp / #pdd
    --13.12.16 / minina
    if cmpr_eq(features:RcvSrcExt(), "smtp")
        and features:IsPddUser()
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and features:FromDomain()
    	and features:FromLocalPart()
 		and (wclass:ABF_FAST_CITY_CHANGE() or wclass:ABF_FAST_IP_CHANGE() or wclass:REP_USER_SPAM_RATE_MORE_10())
    	and SFKD('ar2009', {features:FromDomain()}, 60, 5)
    then
         if checkSuspEntityWithSFKD('ar2009', features:FromDomain(), features:FromLocalPart(), 3, 300) then
         SetPSAR('ar2009')
         end
    end

    --ar2010
    --mxs_mbp / #rabota #zarabotki
    --17.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 10000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IsFromGoogle(), true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:TextLines(), 20, 40, true)
        and cmpr_btw(features:WordCount(), 200, 450)
		and cmpr_gt(features:WhitespaceCount(), 200)
   		and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        --and wclass:ONE_WORD_SUBJECT()		
   		and UrlsMatchStr('.ru/',1)
    then   
        SetPSAR('ar2010')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2010')
    end 
    
    --ar2011
    --smtp / #manibot
    --11.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 1, 5, true)
        and (cmpr_lt(features:RepuserAge(), 5, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and cmpr_eq(features:UrlNormCount() , 1)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and cmpr_gt(features:SubjectNumbersCount(), 2)
    	and wclass:AUTOREG()
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
    	and wclass:SOURCE_IP_IN_XBL()
    then
        SetPSAR('ar2011') 
    end

    --ar2012
    --fe / #anketa
    --16.10.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe")
            or cmpr_eq(features:RcvSrcExt(), "smtp"))
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 5, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20)
        and wclass:SUBJECT_ONLY_WITH_IMAGE()
        and (not wclass:RUSSIAN_FROM_REALNAME()
            or wclass:MORE_THAN_N_RCPT())
        and (cmpr_eq(features:NoRealNameFrom(), 1)
            or StrMatchRe(features:FromRealName(), regex([[^[a-z]{2,}\s[a-z]{2,}$]])))
    then
        SetPSAR('ar2012')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2012')
    end
    
    --ar2013
    --smtp / #pdd #seminari
    --11.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_lt(features:RepuserAge(), 5, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and features:Has3dLevelFromDomain()
    	and cmpr_gt(features:WordCount(), 500)
    	and (wclass:HDR_LIST_UNSUBSCRIBE() or HasHeader('Disposition-Notification-To'))
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
    	and wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS()
    then
        SetPSAR('ar2013') 
    end

	--ar2014
    --smtp / sranyi#pdd #bizml
    --09.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
        and cmpr_lt(features:RepuserAge(), 2, true)
    	and (features:Has3dLevelFromDomain() 
            	or wclass:NO_TO() 
        	   	or wclass:DIFFERENT_REPLY_TO_AND_FROM()
    			or cmpr_gt(features:RcptNum(), 4)
				or wclass:HDR_LIST_UNSUBSCRIBE()
    			or wclass:LASTHELO_WITHOUT_DOMAIN_WE()
        		or wclass:MS_MAILER())
    	and (wclass:ABF_FAST_CITY_CHANGE() or wclass:ABF_FAST_IP_CHANGE() or wclass:REP_USER_SPAM_RATE_MORE_10())
        and not TermsMatchGroup(18114, 100)
    then
        SetPSAR('ar2014') 
    end
    
	--ar2015
    --smtp / #pdd #young
    --11.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_btw(features:DomainRepipAge(), 1, 30, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and (wclass:ABF_FAST_CITY_CHANGE() or wclass:ABF_FAST_IP_CHANGE())
    then
        SetPSAR('ar2015') 
    end

    --ar2016
    --smtp / #rublev_bezlim #zarabotok #pechkin
    --09.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 60)
    	and cmpr_gt(features:SubjectWord7bitCount(), 0)
    	and cmpr_gt(features:Word7bitCount(), 3, true)
    	and (wclass:ABF_FAST_CITY_CHANGE() or wclass:ABF_FAST_IP_CHANGE() or wclass:MS_MAILER())
    	and (wclass:PHP_URL() or UrlsMatchStr('sereport'))
    then
        SetPSAR('ar2016') 
    end 
       
    --ar2017
    --fe / #uvedomlenie #simple_url
    --15.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe") or cmpr_eq(features:RcvSrcExt(), "imap"))
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),200,4000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,2,true)
        and cmpr_btw(features:TextLines(),1,15,true)
        and (features:HtmlTagCount() == 0 or features:Has3dLevelDomain())
        and features:WordCount() >= 15
        and (features:WordsMixedRatio() >= 20 or features:RepIpComplRatioByLastMonth() > 5 or UrlsMatchStr('ymlp') or UrlsMatchStr('pechkinwatch.ru'))
        and features:FromRealNameWordCount() == 2
        and (features:SubjectNumbersCount() > 0 or features:NoSubject() or cmpr_gt(features:SubjectLen(), 20,true) or features:FromEndsWithYear())
        and TermsMatchGroup(17892,100)
    then
        SetPSAR('ar2017') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2017')
    end
    
    --ar2018
   	--svobodno
    

    --ar2019
	--mxs_mbp/ #instabunch #pdf
	--16.10.2016 / razuvaev
	--mfc_mf_rambler
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 400000 and features:MsgSize() <= 1000000 
		and features:HasAttach() == 1
		and features:ImgNum() == 0
		and features:MultipartNum() >= 3 
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:UrlNormCount() == 0 
		and features:TextLines() >= 2 and features:TextLines() <= 20 
		and features:WordCount() >= 5 and features:WordCount() <= 100
		and StrMatchRe(features:PartsFilenames(), regex([[(?i)\s*[A-Z\d\-]{1,10}(?:\-|\s)[\dA-Z\-]{2,10}\.pdf$]]))
        and wclass:HELO_IN_MSGID()
        and wclass:NO_HTML_TAG()
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
	then
		SetPSAR('ar2019')
	end
    
    --ar2020
	--svobodno
    
    --ar2021
	--fe / #casino
	--16.10.16 / razuvaev
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 5000,80000, true)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 3, 25, true)
    	and cmpr_btw(features:HtmlTagCount(), 3, 25, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:WordCount(), 100, 6000, true)
     	and wclass:SHORT_BOUNDARY()
        and wclass:SUSP_CHARS_IN_SUBJ_SEEMS_NORMAL()
    	and wclass:FE_TOR_IP()
    then
    	SetPSAR('ar2021')
    end
    
    
    --ar2022
    --smtp / #znakomstva #english #su
    --16.10.16 / razuvaev (r.sulimov)
    --s_sm_hotmail
    if not IsBlocked
        and (cmpr_eq(features:RcvSrc(), 'smtp') or cmpr_eq(features:RcvSrcExt(), "fe"))
        and not features:IsPddUser()
        --and cmpr_btw(features:MsgSize(), 10, 2000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
        and (not features:MailRuTo() or cmpr_gt(features:RcptNum(), 10, true))
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_lt(features:WordCount(), 200)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and (TermsMatchGroup(17260, 10) or cmpr_gt(features:NumberCount(), 4, true))
        and (wclass:ABF_FAST_IP_CHANGE() or wclass:FAST_AUTOREG())
        and wclass:CAPS_HELO()
        and (wclass:USER_AGE_1() or wclass:SMALL_AGE_REPUSER_1())
    then
        SetPSAR('ar2022')
    end
    
	--ar2023
	--svobodno
    
    --ar2024
	--svobodno
    
    --ar2025
	--svobodno
    
    --ar2026
    --fe / #zarabotok #attach_noise
    --14.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(),5000,50000)
        and TermsMatchGroup(18039,100)
        and features:HasAttach()
        and features:AttachAllCount() == 1
        and features:AttachOtherCount() == 1
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),0,2,true)
        and cmpr_btw(features:HtmlTagCount(),3,20)
        and features:WordCount() > 30
        and features:LinesToWordsRatio() > 20
        and wclass:SHORT_BOUNDARY()
        and features:FromRealNameWordCount() == 2
        and (not wclass:RUSSIAN_FROM_REALNAME() or wclass:AUTOREG_WITH_BAD_CARMA())
    then
        SetPSAR('ar2026') 
    end
    
    --ar2027
    --mxs_mbp / #reklama #zashumlenie
    --16.10.16 / razuvaev
    --mfc_mf_mailru
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 2000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:FromRealNameLen(),10,30)
        and cmpr_btw(features:TextLines(), 20, 100, true)
        and cmpr_btw(features:NumberCount(),80,300)
        and cmpr_gt(features:WordCount(),100)
        and cmpr_lt(features:WhitespaceRatio(),30)
        and cmpr_btw(features:SubjectLen(),60,150)
        and wclass:SOFTFAIL_SPF_AND_NO_USER_AGENT()
        and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar2027')
    end

    --ar2028
	--svobodno

    --ar2029
	--svobodno
    
    --ar2030
    --mxs_other #pohudei
    --16.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
      	and cmpr_btw(features:TextLines(), 50, 300)
        and cmpr_btw(features:WordCount(), 100, 600)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 0, 5, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words7bitRatio(), 70)
        and (wclass:FROM_LOCALPART_IN_REALNAME()
            or wclass:REMOTE_IP_IN_SPAMHAUS()
            or wclass:NEW_IP_1_DAY()
            or wclass:SUBJECT_8BBIT_AND_BODY_7BIT())
        and not wclass:RUSSIAN_FROM_REALNAME()
        --and TermsMatchGroup(17889, 100)  
    then
        SetPSAR('ar2030')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2030')
    end
    
    --ar2031
   	--svobodno
        
    --ar2032
    --svobodno
 
    --ar2033
	--svobodno
    
    --ar2034
    --mxs_other #pohudei
    --16.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and	cmpr_btw(features:TextLines(), 1, 300)
        and cmpr_btw(features:WordCount(), 1, 800)
        and cmpr_btw(features:HtmlTagCount(), 0, 30, true)
        and cmpr_btw(features:UrlNormCount(), 0, 3, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words7bitRatio(), 40)
        and (wclass:FROM_LOCALPART_IN_REALNAME()
            or wclass:REMOTE_IP_IN_SPAMHAUS()
            or wclass:NEW_IP_1_DAY()
            or wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
            or wclass:NEW_FROMDOMAIN_30_DAY())
        and not wclass:RUSSIAN_FROM_REALNAME()
        and HeaderMatchRe('Message-ID', regex([[@mail.ru>|@gmail.ru>$]]))
        --and TermsMatchGroup(17889, 100)  
    then
        SetPSAR('ar2034')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2034')
    end
    
    --ar2035
	--svobodno
    
    --ar2036
    --svobodno

    --ar2037
    --ssvobodno

    --ar2038
    --svobodno

    --ar2039
    --mxs_other #empty_from
    --21.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
   		and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 25)
        and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 5)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:HasImageUrl(), 1)
  		and cmpr_eq(features:ExternalImgNum(), 3)
        and wclass:NO_CTE()
        and wclass:ONLY_7BIT_WORDS()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar2039')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2039')
    end
    
    --ar2040
    --svobodno
    
    --ar2041
	--svobodno

    --ar2042
    --svobodno
    
    --ar2043
    --mxs_other / #virus
    --17.10.16 / a.lis 
    --d8be61f1f071ddd5ec8d985d672fb390 fe6ec03ec1f019764d7dcaa412e3a9f1
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 200000, 450000, true)
    	and cmpr_lt(features:TextLines(), 10)
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_gt(features:MultipartNum(), 2)
    	and cmpr_eq(features:FilesExtensions(), '.com')
    	and cmpr_eq(features:HasDifferentFromAndReply(), 1)
    	and wclass:SPF_NOT_PASS()
    	and HeaderMatchRe('Message-ID', regex([[\@[a-z]{2,6}\>]]))
	then
		SetPSAR('ar2043')
		LogMsgToHadoop('dstat_lisitskaya_log', '#ar2043')
	end 

    --ar2044
	--svobodno
    
	--ar2045
    --fe / #zarabotok #only_attach
	--10.10.16 / minina
	if not IsBlocked
		and not wclass:EXCEPTIONS()
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
       	and cmpr_btw(features:MsgSize(), 200000, 1000000, true)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 1)
    	and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:WordCount(), 20, 100)
    	and cmpr_btw(features:TextLines() , 2, 20)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and (cmpr_lt(features:RepuserAge(), 5) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 14))
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
    	and features:FilesExtensions() == '.pdf'
       	and wclass:AUTOREG()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and wclass:NEW_IP_30_DAYS()
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
    	SetPSAR('ar2045', true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar2045' )
    end
    
	--ar2046
	--svobodno
    
    --ar2047
    --fe / #zarabotok #material
	--17.10.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
       	and cmpr_btw(features:MsgSize(), 5000, 30000, true)
    	and cmpr_eq(features:HasNoAttach(), 1)
        and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:WordCount(), 10, 80)
    	and cmpr_btw(features:TextLines() , 2, 20)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words8bitRatio(), 50)
       	and cmpr_btw(features:UrlNormCount(), 1,4, true)
    	and cmpr_lt(features:RepuserAge(), 5)
       	and wclass:AUTOREG()
    	and wclass:PHP_URL()
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:SOURCE_IP_IN_DNSBL()
    then
    	SetPSAR('ar2047')
        LogMsgToHadoop( 'dstat_minina_log', '#ar2047' )
    end
    
    --ar2048
	--svobodno
    
    --ar2049
	--svobodno
    
	--ar2050
	--svobodno

    --ar2051
	--svobodno
    
    --ar2052
    --fe / #aukcion
    --17.10.16 / r.sulimov
	--f_fm_yahoo
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe") or cmpr_eq(features:RcvSrcExt(), "smtp"))
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 0, 5, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
    	and wclass:SU_PRECONDITION()
    	and wclass:HDR_MANY_ENVELOPE_TO()
    	and wclass:ONLY_URLS_IN_BODY()
    	and wclass:HDR_MANY_TO()
    	and wclass:WHITESPACE_SUSP_RATIO()
		and HeaderMatch('X-Mru-User-Agent', 'MRMail')
    then
        SetPSAR('ar2052')
	end
    
    --ar2053
    --mxs_mbp / #rabota #zarabotki
    --17.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_btw(features:MultipartNum(), 1, 5, true)
    	--and cmpr_eq(features:IsFromFreeMail(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 100, true)
   		and cmpr_eq(features:Subject7bitOnly(), 1)
        and (wclass:HDR_X_EMAIL_COUNT()
  			or wclass:TO_LOCALPART_IN_REALNAME()
        	or wclass:DOLLAR_IN_MSGID()
        	or wclass:HDR_X_NO_RELAY()
			or wclass:OTHER_IP_IN_DNSBL())
    	and wclass:FAKE_FREE_MAIL()
    	and (wclass:FROM_REALNAME_IN_LOCALPART()
    		or wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
        	or wclass:NO_LETTERS_IN_REALNAME()
    		or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
   		and wclass:ONLY_7BIT_WORDS()
    then   
        SetPSAR('ar2053')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2053')
    end

    --ar2054
	--svobodno

    --ar2055
	--svobodno
        
    --ar2056
    --mxs_mbp / #blogspot #script #zarabotki
    --17.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IsFromGoogle(), true)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 100)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        --and wclass:OUTLOOK_WITH_BAD_MESSAGE_ID()
        and UrlsMatchStr('.blogspot.')
    then   
        SetPSAR('ar2056')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2056')
    end 

    --ar2057
	--svobodno
    
    --ar2058
	--svobodno
    
    --ar2059
	--svobodno

	--ar2060
	--svobodno
    
    --ar2061
	--svobodno
    
    --ar2062
	--svobodno

    --ar2063
	--svobodno

    --ar2064
    --mxs / #pidori
    --18.10.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:SubjectLen(), 15, 55)
        and cmpr_btw(features:TextLines(), 10, 500)
        and cmpr_btw(features:WordCount(), 10, 1500, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 10, true)
        and (HeaderMatchRe('Content-type', regex([[boundary=\"\-{2,6}[A-Za-z\d]{20,45}\-[A-Za-z]{10,30}\-\d{5,15}\"]]), 1)
            or HeaderMatchRe('Message-Id', regex([[^\<[a-z\d]{5,15}(?:\.|\-)[a-z\d]{10,25}(?:\.|\-)\d{10,25}\@]])))
        and TermsMatchGroup(17898, 10)
    then
        SetPSAR('ar2064')
    end 
    
    --ar2065
    --mxs / #zarabotok
    --18.10.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 180)
        and cmpr_btw(features:TextLines(), 1, 25, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 25)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:RUSSIAN_FROM_REALNAME()
        and UrlsMatch(regex([[\/webdirect\.php$]]),1)
    then
        SetPSAR('ar2065')
    end
        
    --ar2066
	--svobodno

    --ar2067
	--svobodno
    
    --ar2068
    --mxs_mbp / #flud #ct_in_body
    --17.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 500, 3000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:IsFromGoogle(), true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	--and wclass:EMPTY_SUBJECT()
    	and wclass:CT_IN_BODY()
    	and (wclass:FROM_AND_REPLYTO_SPELLING_MISMATCH()
    		or wclass:DIFFERENCE_RCPTNUM_AND_TO())
   		and (wclass:MORE_THAN_N_RCPT()
			or wclass:MORE_1_EMAILS_IN_TO())		
    then   
        SetPSAR('ar2068')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2068')
    end 
    
    --ar2069
	--svobodno
    
    --ar2070
	--svobodno

    --ar2071
	--svobodno
    
    --ar2072
	--svobodno

	--ar2073
    --fe / #zarabotok
	--01.11.16 / r.kulpin
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 100000)
    	and (HeaderMatch('Received','tel.mail.ru') 
           or HeaderMatch('Received','touch.mail.ru')
           or cmpr_gt(features:RcptNum(), 10, true)
           or (features:IsAutoreg() and cmpr_lt(features:Karma(), 0, true))
           or (cmpr_lt(features:Karma(),0,true) or wclass:FROM_ENDS_WITH_YEAR())
    	   or wclass:SUSP_FROM_BY_FE_OR_SMTP())
    	and features:UrlsInFromDomain() == false
    	and features:HasFreeHosting() == false
    	and cmpr_eq(features:ShortUrlCount(), 0)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and cmpr_eq(features:UrlCount(), features:UrlCountWithoutMailRu())
    	and cmpr_lt(features:UrlsTextSize(), 60)
    	and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-zA-Z0-9]{3,15}$]]),1)
        and ( cmpr_eq(features:HasTextOnly(), 1) or cmpr_btw(features:ImgNum(), 1, 5, true) )
        --and (cmpr_btw(features:Words8bitRatio(), 75, 98, true) or cmpr_btw(features:Words8bitRatio(), 10, 40, true))
		and (mrasRepHasSendingGap(features:SrcIp(), 0, 10, 5, 7) 
           or wclass:NEW_IP_15_DAYS()
           or cmpr_lt(features:RepIpTotalHitsByLastWeek(), 150)
           or wclass:REP_USER_SPAM_RATE_MORE_50() or wclass:BADNET())  
        and (cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 0.95) 
           or cmpr_gt(features:RepIpComplHitsByLastWeek(), features:RepIpHamHitsByLastWeek())
    	   or (wclass:REP_USER_SPAM_RATE_MORE_25() and wclass:HDR_MANY_ENVELOPE_TO())
    	   or wclass:ABF_FAST_CITY_CHANGE())
        and not UrlsMatchStr('vk.com')
        and not (wclass:GOOD_KARMA() or wclass:GOOD_KARMA_AND_BAD_MESSAGE())
    then
        SetPSAR('ar2073')    --esli folzit, postav na sbor i otpishi!!!!
    	LogMsgToHadoop('dstat_kulpin_log', '#ar2073')
    end

	--ar2074
    --mxs_other / #zarabotok #holodno_stalo
    --18.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 1000000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	--and cmpr_btw(features:WordCount(), 1, 3000, true)
    	--and cmpr_btw(features:TextLines(), 1, 500, true)
       	and cmpr_gt(features:UrlNormCount(), 50, true)
    	and cmpr_gt(features:HtmlTagCount(), 150, true)
       	and wclass:SPF_NOT_PASS()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:FROM_TLD_IS_SUSP()
    then
        SetPSAR('ar2074')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2074' )
    end
    
    --ar2075
	--mxs_other / #pidori #korr_figury #skidki
	--18.10.2016 / minina
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
        and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 500)
    	and cmpr_btw(features:WordCount(), 1, 1000, true)
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:WordsOtherRatio(), 0, 15, true)
    	and features:MsgIdLocalPart()
		and cmpr_gt(#features:MsgIdLocalPart(), 30, true) 
    	and wclass:ONLY_7BIT_WORDS()
   		and (wclass:ONE_RECEIVED() or wclass:X_MAILRU_FORWARD())
    	and wclass:NOREALNAME_TO()
    then   
        SetPSAR('ar2075')
        LogMsgToHadoop('dstat_minina_log', '#ar2075')
    end

    --ar2076
	--svobodno

    --ar2077
    --mxs / #pidori #noch_bol
    --18.10.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and wclass:ONE_RECEIVED()
        and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT() or (cmpr_gt(features:LinesToWordsRatio(), 30, true) and features:Subject8bitOnly()))
        and HeaderMatchRe('Subject', regex([[^\[.+\]$]]))
    then
        SetPSAR('ar2077')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar2077')
    end   
    
    --ar2078
	--svobodno
    
    --ar2079
	--svobodno
    
   	--ar2080
    --mxs_mbp / #pidori
    --20.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 100, 5000, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:ONE_RECEIVED()
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and (cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true) or wclass:LONG_MSGID())
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^\d{10,30}$]]))
	then
		SetPSAR('ar2080')
	end
    
    --ar2081
	--svobodno
    
	--ar2082
    --mxs_other / #zarabotok #img>2
    --18.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_btw(features:ImgNum(), 2, 6, true)
    	and cmpr_gt(features:MultipartNum(), 5, true)
    	and cmpr_btw(features:WordCount(), 50, 500, true)
    	and cmpr_btw(features:TextLines(), 5, 100, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_gt(features:HtmlTagCount(), 150, true)
    	and not StrMatch(features:Helo(), features:FromDomain())
    	and cmpr_gt(features:NumberCount(), 15, true)
       	and wclass:MS_MAILER()
        and wclass:CT_ENCODED_FILENAME()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:DIFFERENT_RES_IMAGES()
    then
        SetPSAR('ar2082')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2082' )
    end

    --ar2083
    --mxs / #zarabotok
    --18.07.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:HeloInMsgId()
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:SimpleType(), 'text') 
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 10, 100)
        and cmpr_btw(features:HtmlTagCount(), 0, 50, true)
        and wclass:IP_REP_GAP_MORE_30_DAYS()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
        SetPSAR('ar2083')
        LogMsgToHadoop('dstat_kulpin_log', '#ar2083')
    end 
    
    --ar2084
	--mxs_other / #otbelivanie
	--18.10.16 / razuvaev
	--f5b34f4af76e4c2d32ecef452d034855 9edb1a69a7a123a12ea9a8c934c89117
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 5000, 1500000)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and features:MultipartNum() == 1
    --	and features:SubjectWordCount() == 2
		and	cmpr_btw(features:TextLines(), 20, 80)
    	and cmpr_btw(features:WordCount(), 1000, 2000)
    	and features:UrlCountWithoutMailRu() == 1
        and TermsMatchGroup(17901, 20)
		and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
    	SetPSAR('ar2084')
    end 
    
     --ar2085
	--mxs_esp / #dostup
	--18.10.16 / razuvaev
	--cc5f829125837707a532faa4e24d7880 08870c9f7d8170c5f48f1ca54990993c
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_esp')
    	and cmpr_btw(features:MsgSize(), 15000, 25000)
        and cmpr_eq(features:MsgIdDomain(),"mlsendru.com")
    	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
        and cmpr_eq(features:ExternalImgNum(),1)
        and cmpr_gt(features:SubjectWordCount(),2,true)
		and	cmpr_btw(features:TextLines(), 10, 30)
    	and cmpr_btw(features:WordCount(), 80, 150)
        and cmpr_eq(features:UrlCount(),6)
        and cmpr_btw(features:UrlsTextSize(),500,900)
    then
    	SetPSAR('ar2085')
    end 
    
    --ar2086
	--svobodno
    
    --ar2087
	--svobodno
    
    --ar2088
	--svobodno

	--ar2089
	--svobodno
    
	--ar2090
	--svobodno
    
    --ar2091
	--svobodno
    
    --ar2092
	--mxs / #rostelekom #virus #from_computer
	--21.12.16 / minina
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
    	and cmpr_btw(features:MsgSize(), 500, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:TextLines(), 5)
       	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
       	and cmpr_btw(features:MultipartNum(), 2, 3, true)
       	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and UrlsMatchStr('.htm', 1)
    	and (HeaderMatchRe('Received', regex([[(?i)from computer]])) or wclass:NO_MIME())
    then
    	SetPSAR('ar2092')
    end
    
    --ar2093
	--svobodno
    
    --ar2094
	--svobodno
    
    --ar2095
	--svobodno

	--ar2096
	--svobodno

	--ar2097
	--svobodno
    
	--ar2098
	--svobodno
    
    --ar2099
	--svobodno
    
	--ar2100
	--mxs_other / #zarabotok #search.rambler
	--19.10.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
		and features:MsgSize() >= 5000 and features:MsgSize() <= 10000 
		and features:HasTextOnly() == 1 
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:RcptNum() >= 3 
		and features:TextLines() >= 10 and features:TextLines() <= 20
		and features:WordCount() >= 30 and features:WordCount() <= 70 
		and features:WordsOtherRatio() >= 10
		and features:WordsMixedRatio() >= 10
		and features:SubjectWordCount() >= 4 
		and features:UrlNormCount() >= 3 and features:UrlNormCount() <= 8
		and features:UrlsInFromDomain() == true
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
	then
		SetPSAR('ar2100')
	end
    
    --ar2101
    --mxs_other / #partnerki #walwe
    --19.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_gt(features:MsgSize(),30000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() > 5
        and features:MultipartNum() == 3
        and features:MsgIdDomain() == "swift.generated" 
        and features:EnvelopeFromDomain() == "out13.citymailing.com" 
        and features:NoRealNameTo()
        and cmpr_gt(features:HtmlTagCount(),200)
        and cmpr_gt(features:WordCount(),300)
        and features:LinesToWordsRatio() >= 20
        and features:WhitespaceToWordRatio() >= 500
    then
        SetPSAR('ar2101') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2101')
    end
    
    --ar2102
    --mxs_mbp_other / #zarabotok #ngs
    --16.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(),100,3000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:LastHelo() == "helo=smtpout.ngs.ru"
        and features:XMailerName() == "CommuniGate Pro WebUser Interface v"
        and cmpr_gt(features:HtmlTagCount(),0)
        and features:NoBodyTag()
        and features:NoHtmlTag()
        and wclass:FROM_ENDS_IN_NUMS()
    then
        SetPSAR('ar2102') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2102')
    end
    
    --ar2103
    --mxs_esp / #zarabotok #mlsendru
    --19.10.16 / minina
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_esp"
		and cmpr_btw(features:MsgSize(), 5000, 30000, true)
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 3)
		and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 100, true)
    	and cmpr_btw(features:WordCount(), 10, 500, true)
		and cmpr_btw(features:UrlNormCount(), 1, 6, true)
		and cmpr_eq(features:FreeHostingUrlCount(), 0)
		and cmpr_gt(features:SubjectWordCount(), 4, true)
    	and cmpr_btw(features:HtmlTagCount(), 40, 250, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 20, true)
     	and cmpr_gt(features:WhitespaceToWordRatio(), 1000, true)
    	and cmpr_btw(features:MsgTypeRepipAge(), 1, 15, true)
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and HeaderMatch('Date', '+0000')
    	and HeaderMatchRe('Content-Type', regex([[(?i)boundary="b1_]]))
    then
    	SetPSAR('ar2103')
        LogMsgToHadoop( 'dstat_minina_log', '#ar2103' )
    end
    
    --ar2104
	--svobodno

	--ar2105
    --mxs_esp / #zarabotok #getresponse.com
    --11.11.16 / minina
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameReplyTo(), 1)
        and cmpr_eq(features:MsgIdDomain(), "getresponse.com")
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_btw(features:HtmlTagCount(), 10, 80)
        and cmpr_btw(features:TextLines(), 2, 30)
        and cmpr_btw(features:WordCount(), 20, 150)
        and cmpr_gt(features:Words8bitRatio(), 60)
        and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
    	and cmpr_eq(features:EmailsCountInBody(), 0)
    	and features:HasDifferentFromAndReplyEmails()
    	and HeaderMatch('Date', '+0000')
    then
        SetPSAR('ar2105')
    end 
    
    --ar2106
    --mxs_other mxs_mbp / #zarabotok #mobile.yandex
    --19.10.16 / minina
    if (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
        and features:LastHelo() == "helo=mobile.yandex.ru"
		and wclass:SPF_NOT_PASS()
        and not wclass:DKIM_PASS()
	then
        SetPSAR('ar2106')
        LogMsgToHadoop( 'dstat_minina_log', '#ar2106' )
	end 
    
    --ar2107
    --mxs_esp / #BiS #LiK #school
    --19.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(),7000,20000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() > 0
        and features:MultipartNum() >= 3
        and features:FromMatchesWithUrl()
        and cmpr_btw(features:UrlNormCount(),2,6,true)
        and features:UrlInListUnsubscribe() == "trusteml.com"
        and features:NoRealNameTo()
        and cmpr_gt(features:HtmlTagCount(),30)
        and features:WhitespaceToWordRatio() >= 300
        and cmpr_gt(features:WordCount(),100)
        and TermsMatchGroup(17907,100)
    then
        SetPSAR('ar2107') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2107')
    end
    
    --ar2108
	--svobodno
    
   	--ar2109
    --mxs_esp / #zarabotok #getresponse #efremov
    --10.11.16 / minina
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_esp"
		and cmpr_btw(features:MsgSize(), 1000, 200000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_eq(features:ToRealName(), "Friend")
    	and cmpr_btw(features:TextLines(), 1, 50, true)
    	and cmpr_btw(features:WordCount(), 10, 500, true)
		and cmpr_btw(features:UrlNormCount(), 1, 10, true)
		and cmpr_gt(features:SubjectWordCount(), 2, true)
    	and cmpr_btw(features:HtmlTagCount(), 20, 150, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 20, true)
     	and cmpr_gt(features:WhitespaceToWordRatio(), 2000, true)
    	and cmpr_btw(features:PostmasterMsgTypeRepipAge(), 0, 5, true)
    	and cmpr_eq(features:HasImageUrl(), 1)
		and (cmpr_eq(features:EngRealNameFrom(),1) or cmpr_gt(features:FromRealNameWordCount(), 1))
    	and cmpr_eq(features:EmailsCountInBody(), 0)
    	and HeaderMatch('Date', '+0000')
    then
    	SetPSAR('ar2109',true)
        LogMsgToHadoop( 'dstat_minina_log', '#ar2109' )
    end
    
    --ar2110
    --fe / #vbei_v_google
	--19.10.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
       	and cmpr_btw(features:MsgSize(), 5000, 50000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:WordCount(), 500, true)
    	and cmpr_gt(features:TextLines() , 1000, true)
        and cmpr_gt(features:WordsOtherRatio(), 50)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:HtmlTagCount(), 500, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 10)
       	and (wclass:AUTOREG() or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO() )
    	and (wclass:NEW_IP_30_DAYS() or wclass:NEW_IP_NO_REP() or wclass:SOURCE_IP_IN_DNSBL())
    then
    	SetPSAR('ar2110')
        LogMsgToHadoop( 'dstat_minina_log', '#ar2110' )
    end
    
	--ar2111
	--mxs_other / #mobile.yandex
	--19.10.2016 / zubr 
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
		and not features:DkimDomain()
		and wclass:SPF_NOT_PASS()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
		and (wclass:NEW_IP_15_DAYS() or wclass:FAIL_SPF() or wclass:SOFTFAIL_SPF())
		and (features:HasSuspEspUrl() or TermsMatchGroup(17925, 100))
	then
		SetPSAR('ar2111')
	end

    --ar2112
    --mxs / #zarabotok #blogspot
    --13.01.17 / r.belyankin(sokolik)
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 2, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 50)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and (wclass:OTHER_IP_IN_DNSBL()
    		or wclass:W8BIT_NO_CTE())
        and UrlsMatch(regex([[^[a-z\d-_]+\.blogspot\.(?:[a-z]{2,3}\.)?[a-z]{2}]]),1)
    then
        SetPSAR('ar2112')
    end
    
    --ar2113
    --fe / #zarabotok  
    --19.10.16 / r.sulimov
    --af6f1260cd033230c4197b455e968845 bc896ba70a411143711f936db261f4a7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 400000)
        and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_btw(features:UserAge(), 30, 300)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 6)
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
    	and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:CT_ENCODED_FILENAME()
    	and (wclass:CRASHED_BASE64_IN_SUBJECT()
    		or wclass:HAS_5_DAYS_GAP())
    then
        SetPSAR('ar2113')
    end

    --ar2114
	--svobodno
    
    --ar2115
	--svobodno

    --ar2116  
    --fe /  #zarabotok #metod-online.ru #invest-team #Ignatov
    --14.07.16 / r.sulimov
    --30fce158f4983213b683abeecdc418de 49ad8c67eac29c23d464bc0d7da24625
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 1000, 300000)
        and (cmpr_gt(features:ImgNum(), 1, true) or cmpr_eq(features:AttachAllCount(), 1))
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_btw(features:WordCount(), 10, 80, true)
        and cmpr_eq(features:HtmlUniqueTagCount(), 3)
		and (cmpr_eq(features:Subject8bitOnly(), 1) or cmpr_gt(features:SubjectLen(), 35))
		and (cmpr_btw(features:UserAge(), 20, 80) or cmpr_lt(features:RepuserAge(), 80))
		and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
		and HeaderMatchRe('Content-type', regex([[boundary="-{4}[a-zA-Z0-9]{28,55}-[a-zA-Z0-9]{12,20}-[0-9]{8,12}"]]), 1)
	then
        SetPSAR('ar2116')
    end

	--ar2117
	--svobodno

 	--ar2118
	--svobodno
    
    --ar2119
	--svobodno
    
    --ar2120
    --mxs / #ugg #adidas
    --19.10.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 10, 250, true)
        and cmpr_eq(features:Word8bitCount(), 0)
        and wclass:NEW_FROMDOMAIN_15_DAYS()
        and (wclass:TO_REALNAME_DUBLICATE_TO_EMAIL() or wclass:NOREALNAME_TO())
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:NEW_IP_15_DAYS())
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2120')
    end

    --ar2121
	--svobodno
    
    --ar2122
	--svobodno
    
    --ar2123
	--svobodno

    --ar2124
    --mxs / #zarabotok #drive.google.com
    --20.10.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and cmpr_btw(features:UrlsTextSize(), 10, 100)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 250, true)
        and cmpr_btw(features:HtmlTagCount(), 15, 50)
        and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_7_DAYS())
        and wclass:SHORT_BOUNDARY()
        and UrlsMatchStr('drive.google.com')
    then
        SetPSAR('ar2124')
    end
    
	--ar2125
    --mxs_mbp / #virus #onedrive
    --20.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 2, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 100, true)
    	and cmpr_gt(features:Words7bitRatio(), 60, true)
        --and cmpr_gt(features:SubjectWordCount(), 5)
    	and cmpr_eq(features:EngRealNameFrom(), 1)
    	and cmpr_gt(features:NumberCount(), 25)
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    	and wclass:FREE_MAIL()
    	and wclass:LONG_MSGID()
    	and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
    then
        SetPSAR('ar2125')
        LogMsgToHadoop( 'dstat_minina_log', '#ar2125' )
    end

    --ar2126
    --mxs_esp / #getresp #podrobnosti
    --20.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(),15000,20000)
        and features:HasTextOnly() == 1
        and features:ExternalImgNum() > 0
        and features:MultipartNum() == 1
        and features:HasDifferentFromAndReply()
        and features:ToRealName() == "Friend" 
        and features:NoRealNameReplyTo() 
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:UrlInListUnsubscribe() == "getresponse.com"
        and cmpr_gt(features:HtmlTagCount(),30)
        and cmpr_gt(features:WordCount(),70)
        and cmpr_btw(features:TextLines(),20,30,true)
        and features:WhitespaceToWordRatio() >= 300
        and features:IsReplyToFreeMail()
        and features:GidRepipAge() < 2
    then
        SetPSAR('ar2126') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2126')
    end
    
    --ar2127
	--svobodno
    
	--ar2128
	--fe / #zarabotok
	--19.12.2016 / zubr(sokolik) 
	--918e46177cef8882f822d4a6fae4713b 25091f56bbb3fce1f0b1570aa0b44ba7
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 700 and features:MsgSize() <= 10000
		and (features:MultipartNum() >= 1 or features:MultipartNum() <= 3)
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		--and features:EmailsCountInBody() == 0
		and features:WordCount() >= 10 and features:WordCount() <= 1000
		and features:Words8bitRatio() >= 30
		and features:RepuserAge() <= 7
		and (wclass:AUTOREG() or wclass:HAS_SUSP_URLS() or wclass:NEW_IP_15_DAYS() 
			or wclass:SOURCE_IP_IN_XBL() or wclass:SOURCE_IP_IN_DNSBL() or wclass:INVALID_CHAR_IN_FROM_REALNAME())
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 8
		and (features:HasSuspEspUrl() or TermsMatchGroup(17925, 100))
	then
		SetPSAR('ar2128')
	end
    
    --ar2129
	--svobodno
    
	--ar2130
	--smtp / #zarabotok #dostup
	--20.10.2016 / minina  
	--045ed04e20f3777e4d0e638abaa8daa9
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "smtp"
		and cmpr_btw(features:MsgSize(), 1000, 100000)
		and cmpr_btw(features:MultipartNum(), 1, 5, true)
		and cmpr_btw(features:WordCount(), 10, 500)
		and cmpr_gt(features:Words8bitRatio(), 70, true)
		and cmpr_lt(features:RepuserAge(), 5)
		and (wclass:AUTOREG() or wclass:SOURCE_IP_IN_DNSBL())
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
		and features:HasSuspEspUrl()
	then
		SetPSAR('ar2130')
        LogMsgToHadoop('dstat_minina_log', '#ar2130')
	end
    
	--ar2131
	--svobodno
    
	--ar2132
	--mxs_esp
	--20.10.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_esp"
		and features:DomainRepipAge() <= 3
		and features:RepFromDomainTotalHitsByLastDay() >= 10000
	then
		SetPSAR('ar2132')
	end
    
	--ar2133
	--svobodno
  
	--ar2134
	--mxs_esp
	--20.10.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_esp"
		and features:DomainRepipAge() <= 3
		and TermsMatchGroup(10206, 200)
	then
		SetPSAR('ar2134')
	end
    
	--ar2135
	--svobodno

    --ar2136
	--svobodno

	--ar2137
    --smtp / #ero #pdd #goo.gl
    --11.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_lt(features:WordCount(), 100)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and features:ToRealNameInToLocalPart()
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:WORDS_MIXED_RATIO()
    	and wclass:SOURCE_IP_IN_XBL()
    then
        SetPSAR('ar2137') 
    end
    
    --ar2138
    --mxs_esp / #avto-zarabotok
    --20.10.16 / philip.karpov
    --mec_la_getresponse_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(), 10000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 3, 13)
        and cmpr_btw(features:WordCount(), 10, 45)
        and cmpr_btw(features:LinesToWordsRatio(), 25, 45, true)
        and cmpr_btw(features:UrlCount(), 5, 9, true)
        and cmpr_btw(features:UrlNormCount(), 3, 7, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:NumberCount(), 3, 10, true)
        and cmpr_eq(features:HasFromRealName(), true)
        and cmpr_lt(features:DomainRepipAge(), 7)
    then
        SetPSAR('ar2138')
    end

    --ar2139
    --fe / #flud #english
	--20.10.16 / r.sulimov
    --f_fo_abf_cid
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "fe") or cmpr_eq(features:RcvSrcExt(), "smtp"))
        and cmpr_btw(features:MsgSize(), 10, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_eq(features:NoRealNameTo(), 1)
        or cmpr_eq(features:NoTo(), 1))
        and cmpr_btw(features:TextLines(), 4, 8, true)
        and cmpr_btw(features:WordCount(), 5, 20)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_btw(features:UserCreateTime().days, 35, 55)
        and wclass:ONLY_7BIT_WORDS() 
        and wclass:SUSP_LINES_TO_WORD_RATIO()
        and wclass:FE_CHANGE_CITIES_PER_DAY_MORE_THAN_2()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar2139')
    end

   	--ar2140
    --mxs_other/ #zarabotok #homebank.gazprombank.ru
    --18.11.16 /minina
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
    	and cmpr_btw(features:MsgSize(), 500, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 2, 100, true)
    	and cmpr_btw(features:WordCount(), 2, 2000)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
       	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 250)
       	and (wclass:WORDS_WITH_NOISE() 
        		or wclass:WORDS_OTHERS_BAD_RATIO() 
        		or wclass:UNENCODED_SUBJECT()
    			or wclass:CRASHED_BASE64_IN_SUBJECT()
    			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
    	and (wclass:FAKE_FREE_MAIL() 
        		or wclass:SPF_NOT_PASS() 
        		or wclass:ONE_RECEIVED()
    			or wclass:MISC_SUSP_MAILERS())
    	and (not wclass:DKIM_PASS() or wclass:FROM_NGS_RU())
    	and (UrlsMatchStr('homebank.gazprombank.ru') or UrlsMatchStr('online.sberbank.ru'))
    	and not TermsMatchGroup(18114, 100)
    then
    	SetPSAR('ar2140')
    end
    
    --ar2141
    --mxs_other #novosti
    --21.10.16 / a.sokolov
    --10fdf82d5cc8f52293d82f139fd7f41c
    --1dbe2db2dd94cb8360478604b74327c3
    --610771d4c3ffd77f7f979ad58fe44212
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 20000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and	cmpr_btw(features:TextLines(), 50, 300)
        and cmpr_btw(features:WordCount(), 150, 1500)
        and cmpr_btw(features:HtmlTagCount(), 100, 500)
        and cmpr_btw(features:UrlNormCount(), 3, 25, true)
        and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_gt(features:WordOtherCount(), 30)
        and cmpr_gt(features:NumberCount(), 10)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_lt(features:SubjectLen(), 40)
        and (wclass:NEW_FROMDOMAIN_7_DAYS()
            or wclass:SOFTFAIL_SPF_AND_NO_USER_AGENT()
            or wclass:UNENCODED_SUBJECT())
        and wclass:PHP_URL()
        and (wclass:URLS_ENDS_ON_2_OR_MORE_PUNCTUATION_MARKS()
            or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO())
    then
        SetPSAR('ar2141', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2141')
    end
    
    --ar2142
    --mxs_other #miroshkin
    --20.10.16 / a.sokolov
    --c1494171e0819e359aabd96a2adce465
    --60701274e54d483ef77a173eee86d71d
    --a6ac9f29481d28449776912259ad5713
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and	cmpr_btw(features:TextLines(), 3, 20)
        and cmpr_btw(features:WordCount(), 50, 300)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_gt(features:WordOtherCount(), 10)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-z0-9]{2,}\.html$]]),1)
    then
        SetPSAR('ar2142')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2142')
    end
    
    --ar2143
    --mxs_esp / #zarabotok
    --20.10.16 / philip.karpov
    --mec_la_getresponse_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(), 3000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_gt(features:UrlCount(), 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_gt(features:NumberCount(), 3, true)
        and cmpr_eq(features:ToRealName(), 'Friend')
        and cmpr_lt(features:DomainRepipAge(), 7)
        and UrlsMatchStr('getresponse', 1)
    then
        SetPSAR('ar2143', true)
    end
    
    --ar2144
    --mxs_other #miroshkin
    --20.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and	cmpr_btw(features:TextLines(), 5, 30)
        and cmpr_btw(features:WordCount(), 10, 150)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and (wclass:SUBJECT_MIXED_BADRATIO()
            or wclass:FROM_REALNAME_ALL_MIXED())
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar2144')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2144')
    end
    
	--ar2145
    --svobodno
    
    --ar2146
    --mxs_other / #english #znakomstva
    --25.10.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
    		or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_gt(features:MultipartNum(), 1, true)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 1, 150, true)
   		and cmpr_eq(features:Subject7bitOnly(), 1)
        --and (cmpr_eq(features:FromRealNameWordCount(), 1)
    		--or wclass:SUSP_IP_IN_RECEIVED())
		and (wclass:NEW_FROMDOMAIN_7_DAYS()
    		or wclass:FROM_SINAMAIL()
			or wclass:QMAIL_IN_RECEIVED()
			or wclass:OTHER_IP_IN_DNSBL()
            or wclass:SPF_NOT_PASS()
    		or wclass:MORE_1_EMAILS_IN_TO()
			or wclass:NEW_IP_7_DAYS()
			or wclass:DOLLAR_IN_MSGID())
   		and wclass:ONLY_7BIT_WORDS()
    	and not wclass:RUSSIAN_FROM_REALNAME()
        and (HeaderMatchRe('Message-ID', regex([[<[a-z0-9]{3,}\$[a-z0-9]{3,}\$[a-z0-9]{3,}\$@]]), 1)
    		or (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() and cmpr_eq(features:FromRealNameWordCount(), 1)))
    then   
        SetPSAR('ar2146')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2146')
    end
    
    --ar2147
	--svobodno
 
    --ar2148
    --mxs_other / #superslots
    --03.11.16 / a.sokolov
	--3f6173019d498aae40a4c08b89ede887
	--05e6fbf3fd594ed4eff977ca5db4d6cf
	--5ac11b550b80369026fb190360c696d8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4)
        and cmpr_btw(features:TextLines(), 5, 100, true)
        and cmpr_btw(features:WordCount(), 10, 500, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and cmpr_eq(features:HasImageUrl(), 1)
  		--and cmpr_eq(features:Subject8bitOnly(), 1)
        and UrlsMatchStr('.amazonaws.com/', 1)
		--and (wclass:FROM_MISMATCH_SENDER()
    		--or wclass:SUSP_SWIFT_BOUNDARY())
    	and wclass:HDR_BIZ_DOMAIN_IN_FROM()
    then   
        SetPSAR('ar2148')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2148')
    end
    
    --ar2149
	--svobodno
 
    --ar2150
	--fe / #virus #.z -test sbor
    --17.10.16 / r.kulpin	
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and features:RcvSrcExt() == 'fe'  
    	and not features:IsPddUser()
    	and features:HasAttach()
		and features:AttachArchiveCount()
    	and features:FilesExtensions() == ".z" 
        and wclass:CT_ENCODED_FILENAME()
        and wclass:NO_SUBJECT()
    then
    	SetPSAR('ar2150')
    	LogMsgToHadoop('dstat_kulpin_log', '#ar2150')
    end
    
    --ar2151
	--svobodno
    
	--ar2152
	--mxs_other / #zarabotok
	--21.10.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 60000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and not features:DkimDomain()
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 15
		and features:TextLines() >= 5 and features:TextLines() <= 70  
		and features:WordCount() >= 50 and features:WordCount() <= 600
		and features:WordsOtherRatio() >= 8
		and features:Words8bitRatio() >= 30
		and (wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL() or wclass:MAIL_RU_MSGID_PATTERN() or wclass:MESSAGE_ID_NO_DOMAIN()
			or wclass:NEW_IP_7_DAYS() or wclass:NEW_FROMDOMAIN_30_DAY())
		and wclass:SPF_NOT_PASS()
		and not wclass:HDR_LIST_UNSUBSCRIBE()
		and (UrlsMatch(regex([[\.list\-manage\d?\.[a-z\d]{4,15}\.com(?:.{2,3})?\/]]), 1)
			or UrlsMatch(regex([[[a-z\d\-]{2,7}\.[a-z\d\-]{2,20}\.[a-z\d\-]{2,20}\.[a-z]{2,3}]]), 1)
			or StrMatchRe(features:UrlsRawHashString(), regex([[\.ru(?:\/\^.{2,})?\/\^[a-z\d]{5,20}\.com\/[a-z\d]{3,8}\.php]])))
	then
		SetPSAR('ar2152')
	end

	--ar2153
    --mxs_other / #zarabotok 
    --21.10.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 1, 1000, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 80, true)
       	and wclass:SPF_NOT_PASS()
        and wclass:MISSING_DATE()
    	and wclass:NOREALNAME_FROM()
    	and wclass:MAIL_RU_MSGID_PATTERN() 
    then
        SetPSAR('ar2153',true)
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2153' )
    end

    --ar2154
	--svobodno
    
    --ar2155
	--svobodno

    
    --ar2156
	--svobodno
    
    --ar2157
	--svobodno
    
    --ar2158
    --fe / #znakomstva #eng
    --21.10.16 / philip.karpov
    --s_sm_yahoo
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 80, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 25, 100, true)
        and wclass:IP_IN_HELO()
        and (wclass:MORE_THAN_N_RCPT() or wclass:NEW_IP_7_DAYS())
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
        SetPSAR('ar2158',true)
    end
    
   	--ar2159
    --mxs_other / #zarabotok 
    --23.10.16 / sokolik
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 3000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:WordCount(), 100, 1000)
    	and cmpr_btw(features:TextLines(), 5, 100)
        and cmpr_btw(features:UrlNormCount(), 2, 10, true)
    	and cmpr_gt(features:HtmlTagCount(), 30)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
   		and cmpr_gt(features:WhitespaceCount(), 1000)
   		and (cmpr_gt(features:NumberCount(), 100)
    		or wclass:MESSAGE_ID_NO_DOMAIN())
        and (wclass:NEW_IP_7_DAYS()
    		or wclass:EMAIL_IN_MESSAGE_ID()
			or wclass:HAS_MARK_SPAM_ANTISPAM_SYSTEM()
			or wclass:MESSAGE_ID_SUSP_TLD()
			or wclass:SHORTURL()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or wclass:OTHER_IP_IN_DNSBL()
			or wclass:URLS_ENDS_ON_2_OR_MORE_PUNCTUATION_MARKS()
			or wclass:NEW_FROMDOMAIN_30_DAY())
    	and wclass:SPF_NOT_PASS()
        and wclass:HAS_TAG_STYLE()
        and HeaderMatchRe('From', regex([[@[a-z]{5}\.[a-z]{2,}]]), 1)
    then
        SetPSAR('ar2159')
    	LogMsgToHadoop( 'dstat_sokolik_log', '#ar2159' )
    end
    
    --ar2160
	--svobodno

    --ar2161
    --mxs_mbp / #ct_in_body
    --21.10.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 2, true)
        and cmpr_eq(features:IsFromGoogle(), true)
        and cmpr_gt(features:SubjectLen(), 5)
        and (cmpr_lt(features:WordCount(), 50) or cmpr_gt(features:WordCount(), 150))
        and (wclass:NO_MIME() or wclass:FROM_ENDS_IN_NUMS())
        and (wclass:MORE_THAN_N_RCPT() or wclass:HAS_HEADER_BCC() or wclass:DIFFERENCE_RCPTNUM_AND_TO() or wclass:NOREALNAME_TO())
        and wclass:CT_IN_BODY()
        and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    then
        SetPSAR('ar2161')
    end
    
    --ar2162
    --mxs_other #cn
    --28.11.16 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        	or cmpr_eq(features:RcvSrcExt(), 'mxs_sender'))
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 10, 200)
        and cmpr_btw(features:WordCount(), 50, 1000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 10, true)
        and (cmpr_eq(features:Subject7bitOnly(), 1)
    		or cmpr_eq(features:NoSubject(), 1))
		and (wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    		or wclass:FAKE_CONTENT_TYPE_3())
    	and (wclass:NEW_DKIM_7_DAYS()
        	or wclass:NEW_FROMDOMAIN_30_DAY()
			or wclass:ENGLISH_TEXT_AND_CTE_8BIT())
        and TermsMatchGroup(17917, 100)
    then
        SetPSAR('ar2162')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2162')
    end
    
    --ar2163
    --mxs_other #empty_from
    --22.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
   		and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and wclass:NOT_EMAIL_IN_FROM()
        and wclass:NO_MIME()
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar2163')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2163')
    end

    --ar2164
    --mxs_other #getresponse #esp
    --22.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_esp')
        and cmpr_btw(features:MsgSize(), 3000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 10, 40)
        and cmpr_btw(features:WordCount(), 50, 500)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 5)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and UrlsMatchStr('getresponse.com')
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar2164')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2164')
    end
    
    --ar2165
    --mxs_other #vbei_v_google
    --22.10.16 / a.sokolov
	--2ccb3d673167370dd673619b1fb7ded0
	--3734dc16713637e0d69b934bfd3866d0
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 3000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and (cmpr_btw(features:TextLines(), 5, 20, true)
    		or cmpr_gt(features:TextLines(), 1000))
        and (cmpr_btw(features:WordCount(), 100, 500, true)
    		or cmpr_gt(features:WordCount(), 5000))
        and cmpr_gt(features:HtmlTagCount(), 0)
   		and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:WordOtherCount(), 30)
   		and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
        SetPSAR('ar2165')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2165')
    end
    
    --ar2166
    --mxs_other / #bad msgId
    --22.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_sender"))
        and cmpr_btw(features:MsgSize(),50,500)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and TermsMatchGroup(17911,100)
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^(?:[a-z\d]{3,20}\$){3}$]]))
        and UrlsMatch(regex([[^(?:[a-z\d\-]+\.){2,}[a-z]{2,5}/[a-z\d]+/\d+]]),1)
    then
        SetPSAR('ar2166') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2166')
    end
        
    --ar2167
	--svobodno
    
    --ar2168
	--mxs_mbp / #borodina
	--22.10.2016 / razuvaev
	--mfc_mf_gmail
	if not IsBlocked
     and features:RcvSrcExt() == "mxs_mbp"
	 and cmpr_btw(features:MsgSize(),500,3000) 
  	 and cmpr_eq(features:HasTextOnly(),1) 
	 and cmpr_eq(features:MultipartNum(),3)
	 and cmpr_eq(features:NoRealNameTo(),1)
     and cmpr_eq(features:UrlNormCount(),0)
	 and cmpr_eq(features:HtmlTagCount(),0)
	 and cmpr_btw(features:TextLines(),3,100)
 	 and cmpr_btw(features:WordCount(),3,100)
	 and cmpr_lt(features:WhitespaceToWordRatio(),50)
     and wclass:CT_IN_BODY()
     and wclass:HAS_X_RECEIVED()
     and wclass:BAD_LINES_TO_WORD_RATIO()
	then
		SetPSAR('ar2168')
	end

    --ar2169
    --mxs_mbp #vbei_v_google
    --22.10.16 / razuvaev
	--ef664412fca01bb25282117cb61f32ae
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 1000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and (cmpr_btw(features:TextLines(), 5, 20, true)
    		or cmpr_gt(features:TextLines(), 1000))
        and (cmpr_btw(features:WordCount(), 100, 500, true)
    		or cmpr_gt(features:WordCount(), 5000))
        and cmpr_gt(features:HtmlTagCount(), 0)
   		and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:WordOtherCount(), 30)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:MAILRU_FROM_MXS()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:VERY_LONG_LOCALPART()   
    then
        SetPSAR('ar2169')
    end
    
    --ar2170
	--mxs_mbp / #borodina_many_urls
	--22.10.2016 / razuvaev
	--mfc_mf_gmail
	if not IsBlocked
     and features:RcvSrcExt() == "mxs_mbp"
	 and cmpr_btw(features:MsgSize(),500,100000) 
  	 and cmpr_eq(features:HasTextOnly(),1) 
	 and cmpr_eq(features:NoRealNameTo(),1)
	 and cmpr_gt(features:UrlNormCount(),300)
	 and cmpr_btw(features:HtmlTagCount(),5,16)
	 and cmpr_btw(features:TextLines(),3,40)
	 and cmpr_btw(features:WordCount(),3,500) 
	 and cmpr_gt(features:WhitespaceToWordRatio(),1000)
     and (wclass:HAS_HEADER_BCC() or wclass:BCC_WITH_RELAY_RECEIVED_FROM_FREEMAIL())
	then
		SetPSAR('ar2170')
	end
    
    --ar2171
	--svobodno
    
    --ar2172
	--svobodno
    
    --ar2173
	--svobodno
    
    --ar2174
	--svobodno
    
    --ar2175
    --mxs_other / #kartini #karta
    --23.10.16 / philip.karpov
    --7de41b577013561e6792a2f9b429f8ba c87b10ad990e99ffa5f7d6799627b0eb 9c185e485f694a016df2c9ae9e196a4d 1181f28dfcb3d7d2915cc3cac66ca903
    if not IsBlocked
        and cmpr_eq(features:RcvSrc(), "mxs")
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:WordCount(), 3, 25, true)
        and cmpr_btw(features:TextLines(), 2, 12, true)
        and cmpr_gt(features:Words8bitRatio(), 65)
        and cmpr_eq(features:NoSubject(), 1)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and wclass:NO_MIME_AND_SPF_NOT_PASS()
        and wclass:NO_CONTENT_TYPE()
        and not UrlsMatchStr('odnoklassniki.ru')
    then
        SetPSAR('ar2175')
    end

    --ar2176
    --fe / #get_your_million #zarabotok
    --06.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:SubjectWordCount(), 4)
    	and cmpr_eq(features:IpCategory(), "tiny")
    	and wclass:CRASHED_BASE64_IN_SUBJECT()
    	and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2176',true) 
    end

    --ar2177
	--mxs_mbp / #borodina_many_urls
	--23.10.2016 / zubr
	--mfc_mf_gmail
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and cmpr_gt(features:UrlNormCount(),100)
		and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
		and (wclass:HAS_HEADER_BCC() or wclass:MORE_THAN_N_RCPT())
		and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar2177')
	end

    --ar2178
    --mxs / #zarabotok #search.rambler
    --23.10.16 / r.kulpin (zubr)
    --mcc_mc_dkim30
    if not IsBlocked
		and (cmpr_eq(features:RcvSrc(), 'smtp') or cmpr_eq(features:RcvSrc(), 'fe'))
		and cmpr_btw(features:MsgSize(), 1000, 50000)
		and cmpr_eq(features:HasNoAttach(), 1)
		and cmpr_btw(features:UrlNormCount(), 3, 20, true)
		and cmpr_gt(features:MultipartNum(), 3, true)
		and cmpr_btw(features:TextLines(), 1, 70, true)
		and cmpr_btw(features:WordCount(), 1, 200, true)
		and features:RepuserAge() <= 7
        and (UrlsMatchStr('m.search.rambler.ru') or UrlsMatchStr('.ymlp51.net'))
    then
        SetPSAR('ar2178')
        LogMsgToHadoop( 'dstat_kulpin_log', '#ar2178')
    end 
    
    --ar2179
	--svobodno

    --ar2180
	--svobodno

    --ar2181
    --mxs_other / #adultcontent
    --23.10.16 / razuvaev
    --a5749847552c7c410a9ce39a6c52ff9a 3c3a040f9a2dea5cae8954409f34add2
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
        and cmpr_btw(features:MsgSize(), 30000, 70000)
        and cmpr_btw(features:ExternalImgNum(),7,15)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlNormCount(), 3, 7, true)
        and cmpr_btw(features:TextLines(), 10,120)
        and cmpr_btw(features:Word7bitCount(), 80, 400)
        and cmpr_btw(features:WordOtherCount(),10, 80) 
        and cmpr_btw(features:NumberCount(),20,50)
        and cmpr_gt(features:SubjectWordCount(),6)
        and wclass:SHORT_BOUNDARY()
        and wclass:SUBJECT_WITH_CAPS()
    then   
        SetPSAR('ar2181')
    end

	--ar2182
	--mxs_other / #chasi
	--23.10.2016 / razuvaev
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlNormCount(), 2, 5, true)
        and cmpr_btw(features:TextLines(), 1,3,true)
        and cmpr_lt(features:WordCount(), 20)
        and cmpr_btw(features:SubjectWordCount(),3,7,true)
        and cmpr_eq(features:SubjectWord7bitCount(),0)
      	and wclass:PHOTO_HOSTING_WITH_SHORT_TEXT()
        and wclass:DKIM_FAIL()
        and wclass:MANY_CAPITALS_IN_FROM()
        and wclass:LONG_MSGID()
	then
		SetPSAR('ar2182')
	end

	--ar2183
	--mxs_other / #privet #1kanal
	--23.10.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 30000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 0 and features:UrlNormCount() <= 5
		and features:TextLines() >= 3 and features:TextLines() <= 200
		and features:WordCount() >= 80 and features:WordCount() <= 1000
		and (features:Words8bitRatio() >= 10 or features:SubjectWords8bitRatio() >= 50)
		and features:DkimDomainRepipAge() <= 5
		and features:DomainRepipAge() <= 7
		and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
	then
		SetPSAR('ar2183')
	end
    
	--ar2184
	--svobodno

    --ar2185
	--svobodno
    
    --ar2186
	--svobodno
    
    --ar2187
	--svobodno

    --ar2188
	--svobodno

    --ar2189
	--svobodno
     
	--ar2190
	--svobodno  
    
	--ar2191
	--svobodno

	--ar2192
	--svobodno

    --ar2193
	--svobodno

	--ar2194
	--svobodno
    
    --ar2195
    --mxs_other #zarabotki #cloud.mail.ru
    --24.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
       	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 10, 200)
        and cmpr_btw(features:WordCount(), 50, 500)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and UrlsMatchStr('cloud.mail.ru/public/', 1)
        and wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
    then
        SetPSAR('ar2195')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2195')
    end

	--ar2196
    --mxs_mbp / #zarabotok #molchanovsky
    --28.11.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
       	and cmpr_btw(features:MsgSize(), 10000, 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 50, 5000, true)
    	and cmpr_btw(features:TextLines(), 1, 20, true)
       	and cmpr_btw(features:UrlNormCount(), 0, 50, true)
    	and cmpr_gt(features:HtmlTagCount(), 150, true)
    	and cmpr_lt(features:HtmlUniqueTagCount(), 20)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and wclass:UNKNOWN_IN_RECEIVED()
    	and wclass:NO_USER_AGENT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and (wclass:CRASHED_BASE64_IN_SUBJECT() or wclass:TERMS_ZARABOTOK_V_SETI2())
    then
        SetPSAR('ar2196')
    end	
    
   --ar2197
    --fe/ #zarabotok #rambler #otvet
    --16.11.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 5000, 2500000)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_gt(features:ImgNum(), 0)
      	and cmpr_gt(features:TextLines(), 5, true)
    	and cmpr_btw(features:WordCount(), 5, 5000)
       	and cmpr_btw(features:UrlNormCount(), 1, 30, true)
       	and cmpr_gt(features:MultipartNum(), 3)
    	and wclass:RAMBLER_FE()
    	and wclass:PHP_URL()
    	and wclass:NO_BODY_TAG()
       	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
		and (wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO() or wclass:WHITESPACE_SUSP_RATIO())
    then
    	SetPSAR('ar2197')
    end
    
    --ar2198
    --mxs_other #zarabotki #html
    --24.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
   		and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1) 
        and wclass:MORE_1_EMAILS_IN_TO()
        and wclass:ONLY_7BIT_WORDS()
    	and not wclass:RUSSIAN_FROM_REALNAME()
        and UrlsMatchStr('.html', 1)
    then
        SetPSAR('ar2198')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2198')
    end

    --ar2199
	--svobodno

	--ar2200
	--svobodno
    
    --ar2201
	--svobodno
    
    --ar2202
	--svobodno
    
    --ar2203
    --mxs_other / #zarabotok #bad_from #image
    --24.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),50000)
        and features:ImgNum() > 0
        and features:InvalidFrom()
        and features:ToUndisclosed()
        and features:UrlNormCount() > 5
        and features:HtmlTagCount() > 100
        and features:WhitespaceToWordRatio() >= 500
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar2203') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2203')
    end
    
    --ar2204
    --mxs_other / #zarabotok #image #many_urls
    --24.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_sender") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_gt(features:MsgSize(),40000)
        and features:ImgNum() > 0
        and features:ExternalImgNum() > 0
        and features:NoTo()
        and features:UrlNormCount() >= 3
        and features:WordCount() > 50
        and features:RcptNum() >= 50
        and wclass:RECIPIENT_EMAIL_IN_BODY()
    then
        SetPSAR('ar2204') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2204')
    end
    
    --ar2205
    --mxs_other/mbp / #zadolzhennost'
    --24.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_gt(features:MsgSize(),1000)
        and features:HasNoAttach()
        and features:NoRealNameTo()
        and features:HtmlTagCount() > 10
        and features:NoBodyTag()
        and features:UrlCountWithoutMailRu() > 0
        and cmpr_btw(features:TextLines(),3,20)
        and wclass:HAS_TAG_MAP()
        and wclass:DOUBLE_SUBJECT()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar2205') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2205')
    end
    
    --ar2206
    --mxs_other / #okna
    --24.10.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),2000,10000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:EnvelopeFromMatchesWithUrl()
        and features:HasDifferentFromAndReply()
        and features:ExternalImgNum() > 0
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_gt(features:HtmlTagCount(),10)
        and features:WordCount() > 20
        and features:LinesToWordsRatio() > 30
        and wclass:SUSP_SWIFT_BOUNDARY()
    then
        SetPSAR('ar2206') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2206')
    end
    
	--ar2207
	--mxs_mbp / #borodina
	--24.10.2016 / zubr 
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 30000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 0
		and features:TextLines() >= 3 and features:TextLines() <= 50
		and features:WordCount() >= 50 and features:WordCount() <= 2000
		and features:RcptNum() >= 2
		and wclass:CT_IN_BODY()
		and wclass:FREE_MAIL()
	then
		SetPSAR('ar2207')
	end

	--ar2208
	--mxs_other / #chasi
	--24.10.2016 / zubr 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 500000 
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1
		and features:TextLines() >= 4 and features:TextLines() <= 100
		and features:WordCount() >= 30 and features:WordCount() <= 3000
		and features:IpAge() <= 14
		and wclass:MISSING_DATE()
	then
		SetPSAR('ar2208')
	end

    --ar2209
	--svobodno

    --ar2210
    --mxs_mbp / #zarabotok
	--24.10.2016 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 200 and features:MsgSize() <= 2000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 1 and features:MultipartNum() <= 3
		and (features:NoRealNameTo() == 1 or wclass:TO_LOCALPART_IN_REALNAME())
		and features:TextLines() >= 1 and features:TextLines() <= 5
		and features:WordCount() >= 5 and features:WordCount() <= 200
		and features:FromDomain() == "gmail.com"
		and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
		and features:Subject()
		and features:SubjectLen() >= 2
		and (features:UrlNormCount() == 1 or features:UrlsInSubject() == 1 or StrMatchRe(features:Subject(), regex([[\.[a-z]{2,3}\/[a-z]{2,}]])))
		and HeaderMatch('Received', 'from Outlook')
	then
        SetPSAR('ar2210')
	end
    
    --ar2211
	--svobodno
    
    --ar2212
	--svobodno

    --ar2213
	--svobodno

    --ar2214
    --mxs / #zarabotok
    --24.10.16 / r.belyankin
    --93e58bfe77e3925279ddec6d85d1512b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 150000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCount(), 1, 15, true)
        and features:MultipartNum() == 1
        and cmpr_btw(features:TextLines(), 30, 200, true)
        and cmpr_btw(features:WordCount(), 100, 2000, true)
        and wclass:HAS_IMAGE_URL()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        --and wclass:UNSUBSCRIBE_MAILTO_LONGLOCALPART_AND_BODY_WITHOUT_UNSUBSCRIBE()
        and StrMatchRe(features:FromLocalPart(), regex([[^[a-z]{2,4}$]]))
    then
        SetPSAR('ar2214')
    end
    
    --ar2215
    --mxs / #ugg #adidas
    --24.10.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:UrlsTextSize(), 10, 70)
        and cmpr_gt(features:MultipartNum(), 4, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_btw(features:TextLines(), 15, 150, true)
        and cmpr_btw(features:WordCount(), 100, 500, true)
        and cmpr_eq(features:Word8bitCount(), 0)
        and wclass:NEW_FROMDOMAIN_7_DAYS()
        and wclass:X_PHP_HACKED()
    then
        SetPSAR('ar2215')
    end
    
	--ar2216
	--svobodno
    
    --ar2217
	--svobodno

    --ar2218
	--svobodno
    
    --ar2219
    --mxs_other #xyz_and_other
    --25.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:IsFromGoogle()
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
   		and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and (wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
    		or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL())
    	and wclass:THE_BAT_MAILER()
    then
        SetPSAR('ar2219')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2219')
    end

    --ar2220
	--svobodno
    
	--ar2221
    --smtp / #zarabotok #pdf
    --24.10.16 / r.sulimov
    --s_so_autoreg
    if not IsBlocked
         and cmpr_eq(features:RcvSrcExt(), 'smtp')
        and cmpr_btw(features:MsgSize(), 300000, 5000000)
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 0)
    	and cmpr_eq(features:FilesExtensions(), ".pdf" )
    	and cmpr_eq(features:UrlNormCount(), 0)
		and cmpr_eq(features:MultipartNum(), 3)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
    	and cmpr_lt(features:RepuserAge(), 15, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
		and cmpr_gt(features:SubjectLen(), 30)
		and cmpr_gt(features:SubjectNumbersCount(), 5)
        and cmpr_btw(features:TextLines(), 5, 25, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:NEW_IP_7_DAYS()
		and (wclass:ABF_FAST_IP_CHANGE()
			or wclass:VERY_SHORT_LASTHELO())
    then
        SetPSAR('ar2221')
    end

	--ar2222
	--svobodno

    --ar2223
	--svobodno
    
	--ar2224
	--svobodno
    
    --ar2225
	--svobodno
    
    --ar2221
    --mxs / #virus
    --25.10.16 / r.belyankin
    --moc_mo_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
        and wclass:OTHER_IP_IN_DNSBL()     
        and wclass:RU_RF_URLS()
        and StrMatch(features:PartsFilenames(),'.doc')
        and UrlsMatch(regex([[\/iindex\.html$]]),1)
    then
        SetPSAR('ar2221')
    end

	--ar2230
    --mxs_mbp / #trash_sign-?
    --25.10.16 /m.guryanov
    --2a35d1711fe3d5d7ed31d3b9777eed37 2cf3abe0a180da02d5513729637db4f2
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 5, 100, true) 		
   		and features:HasTextOnly() == 1    	 
    	and features:NoRealNameTo() == 1
    	and features:NoRealNameFrom() == 1
    	and features:NoUserAgent() == 1
    	and features:MultipartNum() == 1
    	and features:HtmlTagCount() == 0
    	and features:UrlNormCount() == 0    	
    	and cmpr_btw(features:WordCount(), 1, 15, true)
    	and cmpr_btw(features:TextLines(), 1, 4, true) 
		and features:Word7bitCount() == 0
		and features:Word8bitCount() == 0
    	and cmpr_btw(features:SubjectWordCount(), 1, 15, true)
    	and features:SubjectWord7bitCount() == 0
    	and features:SubjectWord8bitCount() == 0	
		and (wclass:SUBJECT_MANY_SYMBOLS_SUCCESSIVELY() or StrMatchRe(features:Subject(),regex([[\?+\s+\?+]])))
	then      	
        SetPSAR('ar2230')        
    end     

    --ar2231
    --mxs_other / #virus #nakladnaya
    --25.10.16 /m.guryanov
    --e43c627c6d5bfee54ec10594b08ddb48 90cadc3b42ecc2921951de308fe336c5
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 500, 7000, true) 		
   		and features:HasAttach() == 1
    	and features:ImgNum() == 0 	    	
    	and features:NoRealNameTo() == 1
    	and features:MultipartPartCount() == 2
    	and features:UrlNormCount() == 0  
 		and features:NoSubject() == 1
    	and cmpr_btw(features:WordCount(), 5, 70, true)
    	and cmpr_btw(features:TextLines(), 3, 10, true) 
    	and cmpr_gt(features:HtmlTagCount(), 20, true)
    	and features:FilesExtensions() == ".html"
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
	then      	
        SetPSAR('ar2231')        
    end 
    
	--ar2232
    --mxs_mbp / #zarabotok #dostup
    --25.10.16 /m.guryanov
    --240f8014fe7795a049059eceb481e876 4c909dfdbfb45e6fabe516913787425f 89dd7b31712458d9477d55458b157c6c
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 500, 2500, true) 		
   		and features:HasTextOnly() == 1   
    	and features:EnvelopeFromDomain() == "gmail.com"
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)    	
    	and cmpr_btw(features:WordCount(), 20, 100, true)
    	and cmpr_btw(features:TextLines(), 8, 25, true) 
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))		
    	and wclass:FAKE_FREE_MAIL()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:SUBJECT_MIXED_BADRATIO()
		and wclass:WORDS_MIXED_RATIO()
    	and wclass:HAS_X_PHP_SCRIPT()
	then      	
        SetPSAR('ar2232')        
    end  

	--ar2233
	--svobodno

    --ar2234
	--svobodno
    
    --ar2235
	--svobodno
    
    --ar2236
    --mxs_other / #zarabotok #bad_recieved
    --25.10.16 /m.guryanov
    --3aa79c1a4451de0a1769f64e00229682 88519b035c726cfed875bbe30c260a3c fbc9a67e7f1a7af2a907fff30f0136d3
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 1000, 10000, true) 	   		   	
		and features:HasTextOnly() == 1		
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:NoRealNameTo() == 1
  		and cmpr_btw(features:UrlNormCount(), 1, 3, true)   
    	and cmpr_btw(features:WordCount(), 30, 200, true)
    	and cmpr_btw(features:TextLines(), 8, 50, true)
    	and wclass:RECEIVED_BAD_PATTERN_4()
    	and wclass:FAKE_MSG_ID()
    	and wclass:SHORT_BOUNDARY()
	then      	
        SetPSAR('ar2236')     	
    end 
    
    --ar2237
	--svobodno
    
	--ar2238
    --mxs_other / #zarabotok #bad_recieved #test
    --25.10.16 /m.guryanov
    --3aa79c1a4451de0a1769f64e00229682 88519b035c726cfed875bbe30c260a3c fbc9a67e7f1a7af2a907fff30f0136d3
    if features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 1000, 10000, true) 	   		   	
		and features:HasTextOnly() == 1		
    	and cmpr_gt(features:MultipartNum(), 3, true)    	
  		and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+;\s.*\(envelope-from\s\<.*\>\)]]))   	
    	and wclass:SHORT_BOUNDARY()
	then      	
        SetPSAR('ar2238', true)
    	LogMsgToHadoop('dstat_guryanov_log', '#ar2238')
    end 

    --ar2239
	--svobodno
    
     --ar2240
	--svobodno

	--ar2241
    --mxs_mbp / #ofisy #arenda
    --25.10.16 /m.guryanov
    --6bb3548b7e3fcc8983a8e5ffb882f0c6 761450aee651d0a0571f5f5fa964ef32
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 2000, 20000, true) 		
   		and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 0
    	and features:Subject7bitOnly() == 1
    	and cmpr_gt(features:TextLines(), 15, true)
    	and cmpr_btw(features:Word7bitCount(), 70, 200)
		and cmpr_btw(features:Word8bitCount(), 50, 200)
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))
		and wclass:FAKE_FREE_MAIL()
    	and (wclass:TERMS_ZARABOTOK_V_SETI2() or wclass:BADNET())
	then      	
        SetPSAR('ar2241')        
    end
    
    --ar2242
	--svobodno
    
    --ar2243
    --fe / #pdf #instabunch #zarabotok #
    --25.09.2016 / razuvaev
    --99afa63bf8293a61e2786b4d206f6983 8afb053d0b0b31f6544fd378bf9955e7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_gt(features:MsgSize(),200000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:MultipartNum() == 5
        and (features:NoRealNameTo() or features:NoTo())
        and cmpr_lt(features:Karma(),0,true)
        and (cmpr_lt(features:RepuserAge(),20) or cmpr_eq(features:AbfCityWasChanged(), true))
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:TextLines(),2,30,true)
        and cmpr_btw(features:WordCount(),5,200)
        and (features:Words7bitRatio() == 0 or TermsMatchGroup(17789,100))
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and (TermsMatchGroup(17807,100) or StrMatchRe(features:FromLocalPart(), regex([[^.+\d{1,5}[a-z]{1,5}$]])) or features:FromEndsWithYear())
        and StrMatchRe(features:PartsFilenames(), regex([[(?i)^[a-zÀ-ßà-ÿ¸\d\s\-]{5,}\.pdf$]]))
    then
        SetPSAR('ar2243', true) 
    end
    
    --ar2244
    --fe / #zarabotok
    --25.10.16 / philip.karpov
    --9c77cfdcc56e5a4fc49032ed708561f2 5a3f4c049675d2bb9d30a1dee518cacf 0cc264d3dded006324672e1efca26428
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:MsgSize(), 5000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and (cmpr_eq(features:HasIpUrls(), 1) or wclass:CYRILLIC_URL())
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
        and cmpr_btw(features:TextLines(), 7, 20, true)
        and cmpr_gt(features:WordCount(), 250, true)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WITH_HTTP()
        and wclass:AUTOREG()  
    then
        SetPSAR('ar2244')
    end
    
    --ar2245
	--svobodno
    
    --ar2246
	--svobodno
    
    --ar2247
	--svobodno
    
    --ar2248
    --fe / #zarabotok #automoney
    --25.10.16 / philip.karpov
    --8226fb1b8f76434ff61f5b1398f78a1f 9381d42687afd42e523777ee0c89be06 3f1354a2308656c95f1c39b97a48e0da
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_btw(features:MsgSize(), 3000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
        and cmpr_btw(features:TextLines(), 7, 20, true)
        and cmpr_btw(features:WordCount(), 150, 400, true)
        and cmpr_lt(features:Karma(), 1, true)
        and cmpr_gt(features:NumberCount(), 25)
        and wclass:NEW_IP_15_DAYS()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar2248')
    end
    
    --ar2249
	--svobodno
    
    --ar2250
    --mxs / #zarabotok #more_html_tag
    --26.10.16 / r.belyankin
    --moc_mo_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 300000, 1000000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:SimpleType(), 'text')
        and cmpr_btw(features:TextLines(), 1, 2, true)
        and cmpr_btw(features:WordCount(), 100, 1000, true)
        and cmpr_btw(features:HtmlTagCount(), 500, 2500, true)
        --and (wclass:NEW_IP_15_DAYS() or wclass:OTHER_IP_IN_DNSBL())
        --and (wclass:PTR_ERROR() or wclass:PTR_SEEMS_DYNAMIC())
    then
        SetPSAR('ar2250')
    end
    
    --ar2251
    --mxs / #visa #zarabotok
    --11.10.16 / r.belyankin
    --mfc_mf_other
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_btw(features:UrlsTextSize(), 10, 150)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 20, 100, true)
        and cmpr_btw(features:WordCount(), 100, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100)
        and wclass:FROM_RAMBLER()
        and UrlsMatch(regex([[^[a-z\d-_]+\.blogspot\.(?:[a-z]{2}|[a-z]{2,3}\.[a-z]{2})]]),1)
    then
        SetPSAR('ar2251')
    end
    
    --ar2252
    --mxs / #zarabotok
    --26.10.16 / r.belyankin
    --mcc_mc_ip60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:UrlsTextSize(), 5, 50, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:FromRealName() == features:To()
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 100, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
        and wclass:ONE_RECEIVED()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar2252')
    end
    
    --ar2253
    --mxs_esp / #zarabotok #attach_pdf
    --26.10.16 / philip.karpov
    --mec_la_getresponse_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(), 3000, 200000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_btw(features:ExternalImgNum(), 2, 4, true)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_gt(features:UrlCount(), 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_gt(features:NumberCount(), 3, true)
        and cmpr_eq(features:ToRealName(), 'Friend')
        and cmpr_eq(features:IsFromYandex(), true)
        and UrlsMatchStr('getresponse', 1)
    then
        SetPSAR('ar2253')
    end

    --ar2254
	--svobodno
    
    --ar2255
	--svobodno
    
    --ar2256
    --mxs_other / #zarabotok #bad_recieved #to
    --25.10.16 /razuvaev
    --71e0bb4d15b7cf704f51f381649329a9
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"     		   		   	
		and cmpr_gt(features:ImgNum(), 1, true)
		and features:HasNoAttach() == 1  	
    	--and (wclass:NO_TO() or wclass:UNDISCLOSED())
        and HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+\sfor\s\<[a-z\d_\.-]+@(?:mail|bk|list|inbox)\.ru\>;\s.*\(envelope-from\s\<.*\>\)]]))
        and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))
	then
        SetPSAR('ar2256', true) 
    	LogMsgToHadoop('dstat_razuvaev_log', '#ar2256')
    end 
    
    --ar2257
	--svobodno
    
    --ar2258
	--svobodno
    
    --ar2259
	--svobodno
    
    --ar2260
	--fe / #virus
	--26.10.2016 / razuvaev 
    --fee9d6865aa3ac138cdbab861e06a1f5 fd94b0d3dcd0803e30ae78653b037fbd
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 5000 
		and features:HasAttach() == 1
		and features:AttachArchiveCount() == 1
		and features:NoRealNameTo() == 1
        and features:UserCreateTime()
		and features:UserCreateTime().days
        and features:UserCreateTime().days <= 60
		and features:RepuserAge() <= 30
		and features:UrlNormCount() == 0
		and features:TextLines() >= 1 and features:TextLines() <= 10
		and features:WordCount() >= 4 and features:WordCount() <= 80
		and (features:WordsMixedRatio() >= 10 or features:RepuserAge() <= 15)
		and wclass:CT_ENCODED_FILENAME()
     --   and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
        and wclass:NO_SUBJECT()
	then
		SetPSAR('ar2260')
	end

    --ar2261
	--svobodno
    
    --ar2262
    --mxs_mbp / #zarabotok #amazon
	--26.10.2016 / zubr
	--3302c6171e722105e90696111b1b4ee5 2cc2c1eb3cea954a3b74cffecc60e100 3ec8a5714e24d3cf8f3113d6d90954c2
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_esp" or features:RcvSrcExt() == "mxs_sender")
		and features:MsgSize() >= 10000 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 3
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 8
		and features:HtmlTagCount() >= 90
		and features:HtmlUniqueTagCount() <= 30
		and features:TextLines() >= 10 and features:TextLines() <= 40
		and features:WordCount() >= 100 and features:WordCount() <= 400
		and features:WordsOtherRatio() >= 10
		and features:Words8bitRatio() >= 30
		and features:SubjectWordCount() >= 4
		and features:IsFromFreeMail() ~=1
		and HasHeader('From')
		and (HeaderMatch('From', 'Amazon')
            or HeaderMatch('From', 'Àìàçîí'))
	then
        SetPSAR('ar2262')
	end
    
    --ar2263
	--svobodno
    
    --ar2264
	--svobodno
    
	--ar2265
	--svobodno
    
    --ar2266
    --mxs_other / #virus $sud
    --26.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),300)
        and features:HasNoAttach()
        and features:NoRealNameTo()
        and features:UrlNormCount() > 0
        and features:HtmlTagCount() > 5
        and features:NoBodyTag()
        and features:SubjectWordMixedCount() > 0
        and cmpr_btw(features:TextLines(),2,20)
        and wclass:BOUNDARY_LESS_15()
        and wclass:HAS_TAG_MAP()
    then
        SetPSAR('ar2266') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2266')
    end
    
    --ar2267
	--svobodno
    
	--ar2268
	--mxs / #zarabotok #seminari
	--23.09.2016 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_esp" or features:RcvSrcExt() == "mxs_sender" or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 3000 and features:MsgSize() <= 300000
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 6
		and features:WordCount() >= 30
		and features:HasUnsubscribeUrl() == 1
		and features:DkimDomain()
		and features:EmailsCountInBody() <= 1
		and features:SPF() == "softfail" 
		and TermsMatchGroup(17797, 100)
	then
		local cnt = 0
		local DkimTbl = split(':', features:DkimDomain())
		if #DkimTbl >= 2 then
			SetPSAR('ar2268')
		end
	end
    
    --ar2269
    --mxs_other predict novosti
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and not wclass:HAS_HEADER_IN_REPLY_TO()
        and (wclass:PHP_URL() or TermsMatchGroup(17951,100))
        and wclass:NEW_FROMDOMAIN_30_DAY()
        and TermsMatchGroup(17921,100)
    then
        SetPSAR('ar2269') 
        if math.random(0,100)  < 10 then
        	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2269')
        end
    end
    
    --ar2270
    --mxs_other novosti
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and not wclass:HAS_HEADER_IN_REPLY_TO()
        and features:MsgSize() > 20000
        and (wclass:PHP_URL() or TermsMatchGroup(17951,100))
        and wclass:SPF_NOT_PASS()
        and wclass:HDR_LIST_UNSUBSCRIBE()
        and TermsMatchGroup(17921,100)
    then
        SetPSAR('ar2270') 
        if math.random(0,100)  < 10 then
        	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2270')
        end
    end
    
    --ar2271
    --mxs_mbp / #news #7days #borodina
    --26.10.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),500)
        and features:HasTextOnly() == 1
        and cmpr_gt(features:MultipartNum(),3,true)
        and features:IsFromGoogle()
        and features:EmailEndWithNum()
        and features:SubjectLen() > 30
        and (wclass:CT_IN_BODY() or wclass:HAS_HEADER_BCC())
    	and TermsMatchGroup(17922,100)
    then
        SetPSAR('ar2271') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2271')
    end
    

    --ar2272
    --fe / #zarabotok
	--26.10.16 / r.sulimov
    --751f1678e6f7bbf72b11dd177df33c41 8962b5f8eed7cf0e3f4be0a742a33e0b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UserAge(), 1, 70)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_btw(features:TextLines(), 3, 50, true)
        and cmpr_btw(features:WordCount(), 100, 5000)
        and (wclass:IP_URL()
			or wclass:CYRILLIC_URL())
		--and wclass:MORE_THAN_1_RCPT()
        and HeaderMatch('Received','tel.mail.ru')
    then
        SetPSAR('ar2272')
    end

    --ar2273
	--svobodno
    
	--ar2274
	--svobodno

	--ar2275
	--svobodno
    
    --ar2276
	--svobodno
    
    --ar2277
	--svobodno

	--ar2278
    --smtp / #rassilki
    --27.10.16 / r.sulimov
    --s_sob_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'smtp')
        and not features:IsPddUser()
		and not features:ReplyInSubject()
        and cmpr_gt(features:ImgNum(), 3)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:Karma(), 0, true)
        --and cmpr_eq(features:Word7bitCount(), 1)
		and not (features:MailRuTo()
			or cmpr_eq(features:NoTo(), 1))
		and cmpr_gt(features:WhitespaceToWordRatio(),1000)
    	and wclass:NAME_IN_BODY()
		and wclass:HELO_WITHOUT_DOMAIN()
    then
        SetPSAR('ar2278')
		LogMsgToHadoop( 'dstat_sulimov_log', '#ar2278')
    end

    --ar2279
    --smtp / #TESTrassilki
    --27.10.16 / r.sulimov
    --s_sob_usage7
		if cmpr_eq(features:RcvSrcExt(), 'smtp')
        and not features:IsPddUser()
        and cmpr_gt(features:ImgNum(), 1)
        and cmpr_lt(features:RepuserAge(), 30, true)
		and not (features:MailRuTo()
			or cmpr_eq(features:NoTo(), 1))
		and cmpr_lt(features:Karma(), 0)
		and cmpr_gt(features:WhitespaceToWordRatio(),500)
		--and wclass:NAME_IN_BODY()
		and wclass:HELO_WITHOUT_DOMAIN()
    	and wclass:FROM_ENDS_WITH_YEAR()
    then
        SetPSAR('ar2279')
		LogMsgToHadoop( 'dstat_sulimov_log', '#ar2279_TEST')
    end

    --ar2280
    --smtp / #TestWhitespace
    --27.10.16 / r.sulimov
    --s_sob_usage7
		if (cmpr_eq(features:RcvSrcExt(), 'smtp')
			or cmpr_eq(features:RcvSrcExt(), "fe"))
        and not features:IsPddUser()
        and not features:MailRuTo()
        and cmpr_lt(features:RepuserAge(), 50, true)
		and cmpr_gt(features:WhitespaceToWordRatio(),1000)
    	and wclass:HELO_WITHOUT_DOMAIN()
        and TermsMatchGroup(18000,10)
    then
        SetPSAR('ar2280')
		LogMsgToHadoop( 'dstat_sulimov_log', '#ar2280_TEST')
    end
    
    --ar2281
	--svobodno
    
	--ar2282
	--svobodno
    
    --ar2283
    --mxs_mbp / #zarabotok #blogspot
    --27.10.16 / philip.karpov
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 25000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:WordCount(), 100, 500, true)
        and cmpr_btw(features:TextLines(), 20, 80, true)
        and cmpr_lt(features:SubjectLen(), 35)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_gt(features:NumberCount(), 10, true)
        and UrlsMatchStr('blogspot', 1)
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:RAMBLER_FE()
        and wclass:NO_HTML_TAG()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar2283')
    end
    
    --ar2284
	--svobodno

    --ar2285
    --mxs / #blogspot
    --27.10.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:MsgSize() >= 10 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:HtmlTagCount() == 0
        and UrlsMatch(regex([[^[a-z\d-_]+\.blogspot\.(?:[a-z]{2,3}\.)?[a-z]{2}]]),1)
        and HeaderMatchRe('Received',regex([[^\s?from\s?localhost]]))
    then
        SetPSAR('ar2285')
    end

    --ar2286
    --mxs / #zarabotok #sparkpostmail
    --20.12.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 200 and features:UrlsTextSize() <= 700
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 50)
        and wclass:TO_LOCALPART_IN_REALNAME()
        and (wclass:NEW_DKIM_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_FROMDOMAIN_15_DAYS())
        and UrlsMatch(regex([[^go\.sparkpostmail(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar2286')
    end
    
    --ar2287
	--svobodno
    
    --ar2288
	--svobodno

    --ar2289
    --mxs_other / #casino
    --27.10.16 / razuvaev
    --2c25f3c930376946e9b763536a6fd92b 0ce7514b059bd6fffeccf9cb766fa5b2
    if not IsBlocked
       and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 5000, 25000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
     	and cmpr_btw(features:LinesToWordsRatio(),10,40)
        and cmpr_btw(features:TextLines(), 30,120)
        and cmpr_btw(features:WordCount(),100,700)
        and cmpr_gt(features:UrlCount(),10) 
        and cmpr_eq(features:UrlNormCount(),1) 
        and cmpr_btw(features:UrlsTextSize(),300,1000)
        and cmpr_btw(features:HtmlTagCount(),50,150)
        and cmpr_eq(features:HtmlTagsUnknownCount(),2)
        and wclass: NO_MIME_AND_SPF_NOT_PASS()
        and wclass:TO_LOCALPART_IN_REALNAME_AND_FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE()
        and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar2289')
    end
    

    --ar2290
	--fe / #seminar #1img
	--27.10.16 / razuvaev
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 10000, 1500000)
        and cmpr_eq(features:ImgNum(),1)
       -- and features:FromRealNameWordCount() == 1
        and cmpr_gt(features:MultipartNum(),2)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_lt(features:TextLines(),10)
        and cmpr_gt(features:SubjectWordCount(),4, true)
        and cmpr_lt(features:WordCount(),50)
        and TermsMatchGroup(17923,100)
    then
    	SetPSAR('ar2290')
    end


    --ar2291
	--svobodno
    
    --ar2292
	--svobodno
    
    --ar2293
	--svobodno

	--ar2294
	--svobodno
    
	--ar2295
	--fe / #virus #archive
	--27.10.2016 / veselitsky
	if not IsBlocked
		and features:RcvSrcExt() == 'fe'
		and features:MsgSize() >= 5000 
		and features:HasAttach() == 1
		and features:AttachArchiveCount() == 1
    	and features:IsExecNameInArchive()
        and cmpr_lt(features:Karma(), 0, true)
		and features:NoRealNameTo() == 1
		and features:RepuserAge() <= 1
		and features:UrlNormCount() == 0
		and StrMatchRe(features:PartsFilenames(), regex([[^[^\d]+\d{4,}\.zip$]]))
	then
		SetPSAR('ar2295')
	end 
    
    --ar2296
	--mxs_mbp / #kartini mbp
	--05.06.2016 / razuvaev
    --fkd_mx3
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_mbp"
		and wclass:MISSING_DATE()
		and wclass:ONE_RECEIVED()
		and wclass:NO_MIME_AND_SPF_NOT_PASS()
		and wclass:NO_CONTENT_TYPE()
		and wclass:NO_TO()
    then 
		SetPSAR('ar2296')
	end 
    
	--ar2297
	--fe / #zarabotok #pdf #pdd
	--27.10.2016 / veselitsky
	if not IsBlocked
		and features:RcvSrcExt() == 'fe'
     	and features:IsPddUser()
		and features:MsgSize() >= 50000 
		and features:HasAttach() == 1
		and features:AttachOfficeCount() == 1
		and features:DomainRepipAge()
    	--and features:DomainRepipAge() < 30
    	and features:WordCount() < 100
		and features:FilesExtensions() == '.pdf' 
    	and StrMatchRe(features:FromLocalPart(), regex([[[a-z]+\d{2,}[a-z]+]]))
    	and StrMatchRe(features:PartsFilenames(), regex([[[a-z]+\s\d+\s]]))
    	and wclass:CT_ENCODED_FILENAME()
	then
		SetPSAR('ar2297')
	end 

    --ar2298
	--svobodno
    
    --ar2299
	--svobodno
    
    --ar2300
	--fe/ #zarabotok #pdf
	--27.10.2016 / razuvaev
	--2fe467357dfe8bc26b75eecf0606ba47 887e2b4e3c3baecc7b45acbab98ec40d
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
	    and cmpr_btw(features:MsgSize(),100000, 300000) 
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_lt(features:TextLines(),20)
        and cmpr_lt(features:WordCount(),50)
        and cmpr_eq(features:NoRealNameTo(),1)
		and StrMatchRe(features:PartsFilenames(), regex([[^[0-9]{1,5}\s[(]{1}[0-9]{1,5}[)]{1}.pdf$]]))
        and wclass:CT_ENCODED_FILENAME()
        and wclass:AUTOREG()
        and wclass:SUSP_LINES_TO_WORD_RATIO()
	then
		SetPSAR('ar2300')
	end
    
    --ar2301
    --mxs_mbp / #zarabotok #shorturl
    --27.10.16 / razuvaev
    --5a91ea76ee88fe1a92ba17a57398b22d 85582e6d96301e244629c21483b8f4ec
    if not IsBlocked
       and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 10, 500)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:NumberCount(),2,80,true)
        and cmpr_lt(features:TextLines(), 5)
        and cmpr_lt(features:WordCount(),15)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_lt(features:UrlsTextSize(),50)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass: HAS_X_RECEIVED()
        and wclass: SUSP_EMAIL_IN_BODY()
    then
        SetPSAR('ar2301')
    end
    
    --ar2302
    --mxs / #trump
    --27.10.16 / razuvaev
    --3e92addb4b77013f1e5b2f0c5bcef5cc
    if not IsBlocked
         and cmpr_eq(features:RcvSrc(), 'mxs')
       	and cmpr_btw(features:MsgSize(), 500, 3000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:TextLines(),20)
        and cmpr_gt(features:SubjectWordCount(),4,true)
        and cmpr_btw(features:WordCount(),30,80)
        and cmpr_btw(features:WhitespaceCount(),50,200)
        and cmpr_btw(features:UrlCount(),1,5,true)
        and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and TermsMatchGroup(17926,100)
    then
        SetPSAR('ar2302')
    end
    
    --ar2303
	--svobodno

    --ar2304
	--svobodno
    
	--ar2305
    --fe / #zarabotok
	--16.12.16 / r.sulimov(sokolik)
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 5, 100, true)
        and cmpr_btw(features:WordCount(), 30, 1000)
        and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_eq(features:HtmlTagCount(), 0)
		and cmpr_eq(features:MultipartNum(), 1)
		and (UrlsMatchStr('.ru', 1) or wclass:CYRILLIC_URL())
        and cmpr_btw(features:Words8bitRatio(), 75, 95, true)
        and (HeaderMatch('Received','tel.mail.ru')
    		or HeaderMatch('Received','light.mail.ru'))
        and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:NO_TO()
    then
        SetPSAR('ar2305')
    end
    
    --ar2306
	--svobodno

    --ar2307
    --fe / #TESTzarabotok
	--27.10.16 / r.sulimov
    --85acd2d5d326de73dfcfa63b66cc406e 3fa41f9dbfeefe90cc962532cb7802d0
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 1, true)
		and cmpr_gt(features:UrlNormCount(), 1, true)
		and not TermsMatchGroup(17932,10)
 		and HeaderMatch('Received','tel.mail.ru')
		and (cmpr_gt(features:RepIpComplRatioByLastWeek(), 15, true) 
        	or cmpr_gt(features:RepIpComplRatioByLastMonth(), 15, true) 
        	or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 15, true) 
        	or wclass:NEW_IP_1_DAY())
        and features:Words7bitRatio() < 30
    then
        SetPSAR('ar2307')
		LogMsgToHadoop( 'dstat_sulimov_log', '#ar2307')
    end

    --ar2308
    --fe / #zarabotok
	--27.10.16 / r.sulimov
    --fb21795f4353f702429ec17e3f6aff02 3fa41f9dbfeefe90cc962532cb7802d0
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 5, 100, true)
        and cmpr_btw(features:WordCount(), 30, 1000)
        and cmpr_lt(features:Karma(), -1, true)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_eq(features:HtmlTagCount(), 0)
		and cmpr_eq(features:MultipartNum(), 1)
        and (UrlsMatch(regex([[\.ru\/[\d\w]+$]]), 1)
        	or wclass:PHP_URL()
			or UrlsMatch(regex([[\.com\/[\d\w]+$]]), 1))
        and HeaderMatch('Received','tel.mail.ru')
		and (cmpr_lt(features:RepuserAge(), 5, true) or mrasRepHasSendingGap(features:SrcIp(), 0, 10, 5, 5))
    then
        SetPSAR('ar2308')
    end
    
    --ar2309
    --mxs_other / #paraziti
    --28.10.16 / philip.karpov
    --d47694fafd9fd37d4331bffb2aed055c 3b497c81c1ecb3040cae3cf191803d51 6e6e2ae6c75b0998afd1367ec15d0af8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlCount(), 0, 4, true)
        and cmpr_btw(features:WordCount(), 150, 250, true)
        and cmpr_btw(features:TextLines(), 7, 15, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 75)
        and cmpr_eq(features:FromLocalPart(), "noreply")
        and cmpr_gt(features:NumberCount(), 15)
        and wclass:HELO_IN_MSGID()
        and wclass:HELO_IN_FROM()
        and wclass:NO_USER_AGENT()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    then
        SetPSAR('ar2309')
    end
    
    --ar2310
	--svobodno
    
    --ar2311
    --mxs_other / #zarabotok
    --28.10.16 / philip.karpov
    --moc_mo_hasurl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_lt(features:WordCount(), 60, true)
        and cmpr_btw(features:TextLines(), 5, 9, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 100)
        and cmpr_gt(features:NumberCount(), 5)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:HELO_IN_FROM()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2311')
    end

    --ar2312
	--svobodno

    --ar2313
    --mxs_other / #zarabotok #bad_recieved 
    --28.10.16 /m.guryanov
    --afeddc30507afc83bc615280a8bee807 3a971f4fd047bd76e07c35512960a387 084d1e21da506d6e3c4a09191dc14286
    if features:RcvSrcExt() == "mxs_other"   	    	
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_gt(features:ImgNum(), 1, true)
    	and HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+;\s.*\(envelope-from\s\<.*\>\)]])) 	    	
	then      	
        SetPSAR('ar2313', true)
    	LogMsgToHadoop('dstat_guryanov_log', '#ar2313')
    end 
    
    --ar2314
	--svobodno
    
	--ar2315
    --mxs_other / #zarabotok #bad_recieved 
    --28.10.16 /m.guryanov    
    if features:RcvSrcExt() == "mxs_other"
    	and features:HasAttach() == 1
    	and cmpr_gt(features:ImgNum(), 1, true)
    	and features:HtmlTags()['div'] 
    	and features:HtmlTags()['div'] >= 20
    	and (features:SPF() == "softfail" or features:SPF() == "fail")
	then      	
        SetPSAR('ar2315', true)
    	LogMsgToHadoop('dstat_guryanov_log', '#ar2315')
    end 
    
	--ar2316
	--mxs_mbp / #borodina_many_urls
	--23.10.2016 / zubr
	--mfc_mf_gmail
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:IsFromGoogle() == true
		and cmpr_gt(features:UrlNormCount(), 200)
	then
		SetPSAR('ar2316')
	end
    
    --ar2317
	--svobodno

    --ar2318
    --mxs_other / #zarabotok #bad_recieved #spf_fail
    --28.10.16 /m.guryanov    
    if features:RcvSrcExt() == "mxs_other"
    	and (features:HasAttach() == 1 or cmpr_gt(features:ImgNum(), 1, true))
    	and (features:SPF() == "softfail" or features:SPF() == "fail")
    	and (HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+;\s.*\(envelope-from\s\<.*\>\)]])) 	
        or HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+\sfor\s\<[a-z\d_\.-]+@(?:mail|bk|list|inbox)\.ru\>;\s.*\(envelope-from\s\<.*\>\)]])))
	then      	
        SetPSAR('ar2318', true)
    	LogMsgToHadoop('dstat_guryanov_log', '#ar2318')
    end 
    
    --ar2319
    --mxs_other / #zarabotok #bad_recieved #spf_pass
    --28.10.16 /m.guryanov    
    if features:RcvSrcExt() == "mxs_other"
    	and (features:HasAttach() == 1 or cmpr_gt(features:ImgNum(), 1, true))
    	and features:SPF() == "pass"
    	and (HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+;\s.*\(envelope-from\s\<.*\>\)]])) 	
        or HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+\sfor\s\<[a-z\d_\.-]+@(?:mail|bk|list|inbox)\.ru\>;\s.*\(envelope-from\s\<.*\>\)]])))
	then      	
        SetPSAR('ar2319', true)
    	LogMsgToHadoop('dstat_guryanov_log', '#ar2319')
    end
    
    --ar2320
    --mxs_mbp / #zarabotok
    --23.10.2016 / zubr
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "mxs_other")
		and features:MsgSize() >= 100000 and features:MsgSize() <= 300000
		and features:HasTextOnly() == 1
		and features:ExternalImgNum() >= 100
		and features:UrlNormCount() <= 1
    then   
        SetPSAR('ar2320')
    end

	--ar2321
    --mxs_mbp / #zarabotok #rambler
    --28.10.16 /m.guryanov (v.rass)
    --1b4ae58e97e8f8dba0e8f4c567a4fb87 33c90856ae7eaa75231f8f6598822973 87e35660d27e6e723e51553991193531
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 500, 7000, true) 		
   		and features:HasTextOnly() == 1
    	and features:IsFromRambler() 
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and cmpr_btw(features:WordCount(), 10, 100)	
		and StrMatchRe(features:FromLocalPart(), regex([[^[a-z]{5,20}[\d]{6,10}[a-z\d]{1,6}$]]))
	then      	
        SetPSAR('ar2321')        
    end

	--ar2322
	--mxs_other / #popular tovar
	--28.10.2016 / zubr
	--2ddd96e3ecfb219acb79aea54a49383c
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and (features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == "mxs")
		and features:MsgSize() >= 500 and features:MsgSize() <= 3000 
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 4
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 0 and features:UrlNormCount() <= 2
		and features:HtmlTagCount() <= 10
		and features:TextLines() >= 1 and features:TextLines() <= 20
		and features:WordCount() >= 2 and features:WordCount() <= 100
		and features:SubjectWordCount() >= 2
		and features:SubjectWords8bitRatio() >= 50
		and wclass:RUSSIAN_FROM_REALNAME()
		and wclass:NO_USER_AGENT()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
		and features:FromLocalPart() == "noreply"
		and features:FromRealName()
		and #features:FromRealName() >= 1 and #features:FromRealName() <= 8
	then
		SetPSAR('ar2322')
	end
    
	--ar2323
	--svobodno

	--ar2324
	--svobodno

	--ar2325
	--mxs_mbp / #spam
	--28.10.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and (features:RcvSrc() == "smtp" or (features:RcvSrcExt() == "mxs_mbp" and wclass:FAKE_FREE_MAIL()))
		and features:MsgSize() >= 100 and features:MsgSize() <= 500
		and features:SubjectWordCount() >= 2
		and features:SubjectWordMixedCount() >= 3
 		and not HeaderMatch('Subject', 'Fwd:')
 		and not features:ReplyInSubject()
	then
		SetPSAR('ar2325')
	end

	--ar2326
	--svobodno

	--ar2327
	--mxs_mbp / #zarabotok
	--28.10.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 500000 
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 0
		and features:TextLines() >= 3
		and features:WordCount() >= 18
		and features:SourceTextSize() >= 5000
		and features:SourceTextSize()/features:WordCount() >= 130
		and features:RcptNum() >= 1
		and (wclass:SHORT_BOUNDARY() or wclass:HAS_X_RECEIVED())
		and wclass:FREE_MAIL()
		and HeaderMatchRe('Received', regex([[from\s+[A-Za-z]{4,20}\s+\(\[[A-Fa-f\d]{4}\:[A-Fa-f\d]{4}\:]]))
	then
		SetPSAR('ar2327')
	end

    --ar2328
	--svobodno
    
    --ar2329
	--svobodno
    
    --ar2330
    --mxs_other #many_urls
    --28.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 300, 1000)
   		and cmpr_gt(features:UrlNormCount(), 200)
        and cmpr_gt(features:HtmlTagCount(), 500)
    then
        SetPSAR('ar2330')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2330')
    end
    
    --ar2331	
	--mxs_esp
	--28.10.2016 / sokolik
    --malo_teksta_mnogo_urlov_no_attach_with_address
	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and features:RcvSrcExt() == "mxs_esp"
		and features:IsFromFreeMail() == 1
		and features:HasTextOnly() == 1
        and features:ShingleTextSize() < 1000
		and features:UrlCount() > 3
        and cmpr_eq(features:FromRealNameWordCount(), 1) 
        and wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(17929, 100)
    then
     	SetPSAR('ar2331')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2331')
    end
    
    --ar2332
    --fe / #znakomstva #sex #eng
    --29.10.16 / philip.karpov
    --f_fob_m200
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 0, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        --and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 30, true)
        and cmpr_btw(features:TextLines(), 1, 9, true)
        and cmpr_lt(features:WordCount(), 50, true)
        and not features:MailRuTo()
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and wclass:FE_ENG_MSG()
        and (wclass:SOURCE_IP_IN_DNSBL() or wclass:NEW_IP_30_DAYS() or wclass:ABF_FAST_IP_CHANGE())
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar2332')
    end
    
    --ar2333
    --fe / #pjqq777
    --29.10.16 / philip.karpov
    --f_fob_imgurl
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_eq(features:MultipartNum(), 3) or cmpr_eq(features:MultipartNum(), 1))
        and (cmpr_btw(features:UrlCount(), 1, 30, true) or cmpr_gt(features:RcptNum(), 5, true))
        --and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 200, true)
        and cmpr_btw(features:WordCount(), 10, 900, true)
        and cmpr_lt(features:Word8bitCount(), 5)
        and (cmpr_gt(features:NumberCount(), 7, true) or cmpr_gt(features:WhitespaceToWordRatio(), 75))
        and (wclass:BAD_LINES_TO_WORD_RATIO() or wclass:BAD_LINES_TO_WORD_AND_WORDS_OTHER_RATIOS())
    then
        SetPSAR('ar2333')
    end
    
	--ar2334	
	--mxs_esp
	--29.10.2016 / sokolik
    --zarabotki
	if features:RcvSrcExt() == "mxs_esp"
    	and features:IsFromGoogle()
		and features:HasTextOnly() == 1
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and features:ShingleTextSize() < 500
    	and wclass:FROM_ENDS_IN_NUMS()
        and wclass:RUSSIAN_FROM_REALNAME()
     	and wclass:TO_LOCALPART_IN_REALNAME()
        and UrlsMatchStr('.stat-pulse.com/', 1)
    then
        SetSpam('ar2334',false)
		CarbideSendStatsSum('rules_analyst', 'ar2344', 1)
     	--SetPSAR('ar2334')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2334')
    end
    
    --ar2335
	--svobodno
    
    --ar2336
	--svobodno

    --ar2337
    --mxs_mbp / #zarabotoknerf
    --29.10.16 / razuvaev
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 70000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 25, 2000)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_gt(features:NumberCount(), 5, true)
        and cmpr_btw(features:TextLines(), 3, 40)
        and features:FromLocalPart()
        and wclass:FROM_RAMBLER()
        and (wclass:RELAY_RECEIVED_FROM_FREEMAIL_WITH_OTHER_IP_IN_DNSBL() 
			or wclass:TERMS_ZARABOTOK_V_SETI2_AND_HAS_SUSP_URLS())
        and StrMatchRe(features:FromLocalPart(), regex([[[a-z]{6,}\d{4,}\w+$]]))
    then
        SetPSAR('ar2337')
    end

    --ar2338
    --mxs_mbp / #zarabotokrf
    --29.10.16 / razuvaev
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 70000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 25, 2000)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_gt(features:NumberCount(), 5, true)
        and cmpr_btw(features:TextLines(), 3, 40)
        and features:FromLocalPart()
        and wclass:FROM_RAMBLER()
        and UrlsMatchStr('.ðô',1)
        and StrMatchRe(features:FromLocalPart(), regex([[[a-z]{6,}\d{4,}\w+$]]))
    then
        SetPSAR('ar2338')
    end
    
    --ar2339
	--fe / #buhgalter #url
	--09.12.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:IpCategory(), "tiny")
    	and cmpr_gt(features:RepIpSpamRatioByLastMonth(), 20)
        and features:FromRealName()
    	and SFKD('ar2339', {features:FromRealName()}, 60, 5)
    then
    	SetPSAR('ar2339')
    end
    
    --ar2340
    --fe / #znakomstva #eng
    --31.12.16 / philip.karpov
    --f_fm_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 1500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:TextLines(), 2)
        and not features:MailRuTo()
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_eq(features:NoSubject(), 1)
        and wclass:FE_ENG_MSG()
        and wclass:FE_REGIONS_MISMATCH() 
        and wclass:TO_LOCAL_PART_DIGITS_ONLY()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar2340')
    end
    
    --ar2341
	--svobodno
    
    --ar2342
    --mxs_mbp / #zarabotok
    --30.10.16 / philip.karpov
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 5, 100)
        and cmpr_btw(features:UrlCount(), 0, 3, true)
        and cmpr_btw(features:UrlNormCount(), 0, 2, true)
        and cmpr_gt(features:NumberCount(), 5, true)
        and cmpr_btw(features:TextLines(), 3, 20)
        and features:FromLocalPart()
        and wclass:FROM_RAMBLER()
        and wclass:WITH_HTTP()
        and StrMatchRe(features:FromLocalPart(), regex([[[a-z]{9,}\d{6,}\w+$]]))
    then
        SetPSAR('ar2342')
    end
    
    --ar2343
	--svobodno

    --ar2344
    --mxs_other / #engspam #urli
    --30.10.16 /razuvaev
    --18938385abaa8a962e1789c29b24d827 ce992b27284e425e7289b3895d25822f

    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"   
        and cmpr_btw(features:MsgSize(),200,1000)   
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_lt(features:TextLines(),15)
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and cmpr_lt(features:WordCount(),30)    
        and cmpr_eq(features:Word8bitCount(),0)     
        and cmpr_btw(features:UrlCount(),4,9,true) 
        and cmpr_btw(features:UrlsTextSize(),250,350)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_EXTERNAL_IMG()
	then
        SetPSAR('ar2344') 
    end 

	--ar2345
	--svobodno
    
    --ar2346
	--svobodno
    
    --ar2347
	--svobodno
    
    --ar2348
	--svobodno

    --ar2349
    --mxs_other #kolgotki
    --30.10.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
   		and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_btw(features:WordCount(), 10, 500, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
    then
        SetPSAR('ar2349')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2349')
    end
    
    --ar2350
	--svobodno
    
    --ar2351
    --mxs_mpb / #pohudenie
    --31.10.16 / r.sulimov
    --mfc_mf_mailru
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10, 5000)
        and features:HasTextOnly() == 1
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_btw(features:TextLines(),1,10,true)
        and cmpr_lt(features:Word7bitCount(),3, true)
        and cmpr_btw(features:WordCount(),20, 100)
        and cmpr_eq(features:FromRealNameWordCount(),1)
		and wclass:CRASHED_BASE64_IN_SUBJECT()
		and wclass:SUSP_MAILERS_5()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass: MAILRU_FROM_MXS()
    then
        SetPSAR('ar2351')
    end
   
    --ar2352
	--svobodno

    --ar2353
	--svobodno
    
    --ar2354
	--svobodno

    --ar2355
	--svobodno

    --ar2356
    --fe / #casino
    --31.10.16 / razuvaev
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
       	and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
     	and cmpr_btw(features:LinesToWordsRatio(),0,40, true)
        and cmpr_btw(features:TextLines(), 5,120)
        and cmpr_gt(features:WordCount(),500)
        and cmpr_lt(features:Word7bitCount(),15)    
        and cmpr_eq(features:UrlCount(),1) 
        and cmpr_lt(features:UrlsTextSize(),50) 
        and cmpr_btw(features:HtmlTagCount(),5,20)
        and cmpr_lt(features:RepuserAge(),50)     
        and cmpr_eq(features:LastHelo(),'')
        and (wclass:HAS_5_DAYS_GAP_AND_NO_SUBJECT() or wclass:BAD_KARMA_AND_NO_SUBJECT())
        and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar2356')
    end
    
    --ar2357
	--mxs_mbp / #bazi #katalogpredpriyatiy
	--01.11.16 / r.kulpin	
	--fc_fb_usage7
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_mbp'
    	and cmpr_btw(features:MsgSize(), 500, 3000) 
		and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
   		and features:FromDomain() == 'gmail.com'
    	and features:NoRealNameTo() == 1
    	and features:HasBcc() == 1
    	and features:GeoCode() == '' 
    	and cmpr_btw(features:WordCount(), 30, 150)
    	and cmpr_btw(features:TextLines(), 4, 20)
    	and (wclass:WORDS_MIXED_RATIO() or wclass:MX_INVALID_RATE_MORE_THAN_5())
    	and wclass:PLUS_IN_MESSAGE_ID()
    then
    	SetPSAR('ar2357')
    	LogMsgToHadoop('dstat_kulpin_log', '#ar2357')
    end
    
    --ar2358
	--svobodno
   
    --ar2359
	--svobodno
    
    --ar2360
	--svobodno
    
    --ar2361
    --mxs_mbp / #zarabotok
    --29.10.16 / razuvaev
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 70000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 25, 2000)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 3, 40)
        and features:FromLocalPart()
        and wclass:FROM_RAMBLER()
        and (wclass:RELAY_RECEIVED_FROM_FREEMAIL_WITH_OTHER_IP_IN_DNSBL() 
			or wclass:SHORT_BOUNDARY_WITHOUT_LETTERS())
        and StrMatchRe(features:FromLocalPart(), regex([[[a-z]{6,}\d{4,}\w+$]]))
    then
        SetPSAR('ar2361')
    end
    
    --ar2362
	--svobodno
    
    --ar2363
	--smtp / #thebat
    --31.10.16 / razuvaev
	--4306f6517babb3ba828d5cb5ec80e4a1 2ae368a5ef5e5ce0681eb2e088b8950d
    if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_btw(features:MsgSize(), 10000, 500000)
    	and cmpr_eq(features:ImgNum(),1)
        and StrMatchRe(features:FromLocalPart(), regex([[^[A-Za-z]{1,20}\-[0-9]{1,20}\-[A-Za-z]{1,20}]]))
        and TermsMatchGroup(17943,100) 	
    then
    	SetPSAR('ar2263')
    end
    
    --ar2364
	--svobodno
    
	--ar2365
    --fe / #eng_znakomstva
    --31.10.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 2000)
		and not features:MailRuTo()
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 30, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 2, 20, true)
        and cmpr_btw(features:WordCount(), 25, 200)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50)
        and wclass:FE_ENG_MSG()
        and StrMatchRe(features:FromRealName(), regex([[^[a-z]{2,}\s[a-z]{2,}$]]))
		and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    then
        SetPSAR('ar2365')
    end

    --ar2366
	--svobodno
    
	--ar2367
    --fe / #zarabotok
	--31.10.16 / r.sulimov
	--fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50000, 300000)
        --and cmpr_eq(features:ImgNum(), 1)
        and cmpr_btw(features:TextLines(), 50, 300, true)
        and cmpr_btw(features:WordCount(), 20, 1000)
    	and cmpr_eq(features:FromRealNameWordCount(),2)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 300, true)
		and cmpr_btw(features:UrlNormCount(), 2, 8, true)
		and cmpr_gt(features:HtmlTagCount(), 100)
		and cmpr_gt(features:WhitespaceToWordRatio(), 200)
		and UrlsMatchStr('svyaznoy.ru', 1)
    then
        SetPSAR('ar2367')
    end
    
    --ar2368
    --mxs / #pidori
    --31.10.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_eq(features:UrlNormCount(), 0)
        and features:NoRealNameTo() == 1
        and features:MultipartNum() == 4
        and features:Subject8bitOnly() == 1
        and features:SubjectLen() >= 15 and features:SubjectLen() <= 30
        and cmpr_btw(features:TextLines(), 1, 25, true)
        and cmpr_btw(features:WordCount(), 10, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
        and wclass:ONE_RECEIVED()
        and TermsMatchGroup(17898, 10)
    then
        SetPSAR('ar2368')
    end

    --ar2369
	--svobodno

    --ar2370
    --mxs / #znakomsyva #english #subject()
    --31.10.16 / r.belyankin
    --0659e8b0be6a52502af6a78296ad7f4b
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrc() == "imap")
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:Subject7bitOnly() == 1  
        and features:Words7bitRatio() >= 50
        and wclass:RECEIVED_BAD_PATTERN_4()
        and StrMatchRe(features:Subject(), regex([[^\(\w+[\.-]?\w+\)]]))
    then
        SetPSAR('ar2370')
    end

    --ar2371
    --mxs / #pidori
    --01.11.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_eq(features:UrlNormCount(), 0)
        and features:MultipartNum() == 1
        and features:SimpleType() == 'text'
        and cmpr_btw(features:TextLines(), 200, 1500, true)
        and cmpr_btw(features:WordCount(), 300, 5000, true)
        and cmpr_btw(features:HtmlTagCount(), 500, 1500)
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^[A-Z\d]{25,50}]]))
        and wclass:WORDS_MIXED_RATIO()
    then
        SetPSAR('ar2371')
    end
    
	--ar2372
	--svobodno

    --ar2373
    --mxs / #vk
	--31.10.16 / r.belyankin
    if	NotSpam() 
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000
    	and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:ImgNum() == 1
    	and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS())
        and wclass:RECEIVED_BAD_PATTERN_4()    
        and UrlsMatch(regex([[(?:vk\.com|vkontakte\.ru)\/(?:id|wall|doc)]]),1)
    then
        SetPSAR('ar2373')
    end
    
    --ar2374
    --mxs / #zarabotok
    --01.11.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and cmpr_btw(features:WordCount(), 50, 250, true)
        and wclass:NEW_IP_15_DAYS()
        and not wclass:PHP_URL()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{4,10}[A-Z\d]{15,50}\"]]), 1)
        and TermsMatchGroup(17190, 20)
    then
        SetPSAR('ar2374')
    end
    
    --ar2375
	--svobodno
       
 	--ar2376
    --fe / #kitai
    --01.11.16 / r.sulimov
    --f_fob_muchhtml
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 500, 5000000)
		and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 5, 60, true)
    	and cmpr_gt(features:RcptNum(), 2, true)
        and cmpr_lt(features:RepuserAge(),55, true)
	    and cmpr_gt(features:LinesToWordsRatio(), 20)
        and (HeaderMatch('X-Envelope-To', 'qq.com')
        	or HeaderMatch('X-Envelope-To', '126.com')
    		or HeaderMatch('X-Envelope-To', '163.com'))
    	--and wclass:FE_REGIONS_MISMATCH()
        and (cmpr_gt(features:HtmlTags()['div'], 10) or cmpr_gt(features:HtmlTags()['br'], 10)
            or wclass:CJK_UNIFIED_IDEOGRAPHS() or wclass:SUSP_CHARS_IN_SUBJ_N())
       and StrMatchRe(features:From(), regex([[^[a-z]{4,}[0-9]{4,}@(mail|bk|list|inbox)\.ru$]]))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 10000)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 5)
        then
            SetPSAR('ar2376')
            LogMsgToHadoop('dstat_sulimov_log', '#ar2376')
        end
    end
   
    --ar2377
	--svobodno

    --ar2378
	--svobodno
    
    --ar2379
	--mxs_other / #priem
	--01.11.2016 / razuvaev
	--60d9276bf89a1e3f10843d40a105f3e0 672bee3bb3f645837beb0bae50cbd190
	if not IsBlocked
	and features:RcvSrcExt() == "mxs_other"   
        and cmpr_btw(features:MsgSize(),1500,15000)   
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_lt(features:TextLines(),20)
        and cmpr_btw(features:WordCount(),20,250)
        and cmpr_btw(features:WordOtherCount(),1,40)
        and cmpr_btw(features:Word7bitCount(),2,50,true)
        and cmpr_lt(features:DotCount(),5)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_lt(features:UrlsTextSize(),30)   
        and wclass:DOMAINS_EQUAL()
        and wclass:HELO_IN_FROM()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:HELO_IN_MSGID()
	then
		SetPSAR('ar2379')
	end

    --ar2380
	--svobodno

    --ar2381
	--mxs_mbp / #blackmask
	--01.11.2016 / razuvaev
	--8728fb96ea24fa646a0f345f9969f589 45e81c2ac0b119688c5fbc2664508dbe
	if not IsBlocked
  	   and features:RcvSrcExt() == "mxs_mbp"   
       and cmpr_btw(features:MsgSize(),100000,200000)   
       and cmpr_gt(features:ImgNum(),1)
       and cmpr_eq(features:SrcNet(),'209.85.215.0')
       and cmpr_eq(features:OneWidthImagesNum(), 1)
       and cmpr_btw(features:TextLines(),2,12)
       and cmpr_lt(features:SubjectWordCount(),3)   
       and cmpr_eq(features:FromRealNameWordCount(),1)  
       and wclass:SUSP_IMAGE_NAME_3()
       and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
       and StrMatchRe(features:FromLocalPart(), regex([[^[a-z]{3,20}[0-9]{1,3}]]))
	then
		SetPSAR('ar2381')
	end
    
    --ar2382
	--mxs_mbp / #femida #moneymaker
	--01.11.2016 / razuvaev
	--507cda46bedda5c29633053f7cd758db caf2e903e08fa550e8396cc99f2bbf61
	if not IsBlocked
        and false
  	    and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(),10,10000)   
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(),1,4,true)
        and cmpr_lt(features:TextLines(),20)
        and cmpr_eq(features:SrcNet(),"209.85.215.0")
        and cmpr_btw(features:SubjectWordCount(),3,10,true)
        and cmpr_gt(features:SubjectLen(),15)  
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:HAS_X_RECEIVED()
        and wclass:BASE64_TRANSFER_ENCODING() 
	then
		SetPSAR('ar2382')
	end

	--ar2383
	--svobodno

	--ar2384
	--svobodno
    
	--ar2385
	--svobodno

    --ar2386
    --smtp #kvadrocopter
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and cmpr_gt(features:MsgSize(), 50000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:WordCount(), 50)
        and HeaderMatchRe('From', regex([[\w{2,}\W[0-9]{4}\W\w{2,}@]]))
    then
        SetPSAR('ar2386')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2386')
    end
    
    --ar2387
    --mxs_other #zarabotki
    --03.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 300000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:TextLines(), 30)
        and cmpr_gt(features:WordCount(), 150)
        and cmpr_gt(features:HtmlTagCount(), 50)
        and cmpr_gt(features:UrlNormCount(), 2)
 	    and cmpr_eq(features:HasImageUrl(), 1)
   		and cmpr_gt(features:WordOtherCount(), 10)
    	and cmpr_gt(features:NumberCount(), 10)
   		and cmpr_gt(features:WhitespaceCount(), 500)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:SPF_NOT_PASS()
		and (features:DomainRepipAge() <= 20
    		or mrasRepHasSendingGap(features:FromDomain(), 3, 20, 10, 10))
    then
        SetPSAR('ar2387')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2387')
    end
    
    --ar2388
	--svobodno

	--ar2389
	--svobodno

	--ar2390
	--svobodno

    --ar2391
    --mxs / #zdorovie
    --02.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 3
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and features:HtmlTagCount() >= 1 and features:HtmlTagCount() <= 10
        and features:WordsOtherRatio() >= 10 and features:WordsOtherRatio() <= 20
        and wclass:ONE_RECEIVED()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^\d{8,12}$]]))
    then
        SetPSAR('ar2391')
    end
    
    --ar2392
	--svobodno
    
    --ar2393
    --mxs / #pidori
    --01.10.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and cmpr_eq(features:NoRealNameTo(), 1)
        and features:FromLocalPart() == "postmaster"
        and features:DKIM() == nil
        and features:Subject8bitOnly() == 1
        and features:SubjectLen() >= 15 and features:SubjectLen() <= 30
        and cmpr_btw(features:TextLines(), 1, 25, true)
        and cmpr_btw(features:WordCount(), 5, 150, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
        and wclass:ONE_RECEIVED()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{2}[a-zA-Z\d]{15,55}]]), 1)
        --and StrMatchRe(features:MsgIdLocalPart(), regex([[^[a-z\d]{10,20}(?:\-|\.)[a-z\d]{10,20}(?:\-|\.)\d{10,30}]]))
    then
        SetPSAR('ar2393')
    end
    
    --ar2394
	--mxs_esp
	--01.11.2016 / sokolik
    --getresponse+new_domain
	if not IsBlocked
    	and features:RcvSrcExt() == "mxs_esp"
        and features:HasTextOnly() == 1
        and not features:FromMatchesWithUrl()
        and features:DomainRepipAge() <= 1
        and features:ShingleTextSize() < 1500
  		and UrlsMatchStr('.getresponse.com')
 	then
        SetPSAR('ar2394', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2394')
    end
    
    --ar2395
	--mxs_esp
	--01.11.2016 / sokolik
    --malo_teksta_mnogo_urlov_no_attach_with_address
	if not IsBlocked
    	and features:RcvSrcExt() == "mxs_esp"
		and features:HasTextOnly() == 1
        and features:IsFromFreeMail() == 1
        and features:ShingleTextSize() < 1500
		and features:UrlCount() > 3
        and features:ToRealName() == "Friend" 
    	and wclass:RUSSIAN_FROM_REALNAME()
 	then
        SetPSAR('ar2395',true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2395')
    end
    
    --ar2396
	--svobodno
    
    --ar2397
	--mxs_esp
	--01.11.2016 / sokolik
    --malo_teksta_mnogo_urlov_new_domain_short_url
	if not IsBlocked 
    	and features:RcvSrcExt() == "mxs_esp"
        and features:HasTextOnly() == 1
        and not features:FromMatchesWithUrl()
        and features:ShingleTextSize() < 2000
		and features:UrlCount() > 2
        and features:DomainRepipAge() <= 7
        and cmpr_eq(features:HasShortUrl(), 1)
 	then
        SetPSAR('ar2397', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2397')
    end

    --ar2398
	--mxs_esp
	--02.11.2016 / sokolik
    --xyz_from
	if not IsBlocked 
    	and features:RcvSrcExt() == "mxs_esp"
		and features:HasTextOnly() == 1
		and features:FirstLevelFromDomain() == 'xyz'
 	then
        SetPSAR('ar2398')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2398')
    end
    
    --ar2399
	--mxs_esp
	--02.11.2016 / sokolik
    --malo_teksta_mnogo_urlov_with_attach
	if not IsBlocked 
    	and features:RcvSrcExt() == "mxs_esp"
		and features:IsFromFreeMail() == 1
        and features:AttachAllCount() == 1
        and features:ImgNum() == 0
		and features:UrlCount() > 2
        and features:UrlNormCount() > 1
    	and wclass:SUSP_SYMBOLS_IN_FILENAMES()
 	then
        SetPSAR('ar2399', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2398')
    end
    
    --ar2400
	--svobodno

    --ar2401
	--mxs_esp
	--02.11.2016 / sokolik
    --malo_teksta_mnogo_urlov_new_domain_short_url
	if not IsBlocked  
    	and features:RcvSrcExt() == "mxs_esp"
        and features:HasTextOnly() == 1
        and (features:DomainRepipAge() <= 15
        	or mrasRepHasSendingGap(features:FromDomain(), 3, 30, 15, 100))
        and cmpr_eq(features:HasShortUrl(), 1)
 	then
        SetPSAR('ar2401', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2401')
    end
    
    --ar2402
	--mxs_esp
	--02.11.2016 / sokolik
    --rep
	if not IsBlocked 
    	and features:RcvSrcExt() == "mxs_esp"
        and features:HasTextOnly() == 1
        and features:RepFromDomainTotalHitsByLastHour() > 10000
		and features:FromDomainCategory() == 'tiny'
 	then
        SetPSAR('ar2402', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2402')
    end
    
    --ar2403
	--mxs_esp
	--02.11.2016 / sokolik
    --zarabotki_gruppa
	if not IsBlocked 
    	and features:RcvSrcExt() == "mxs_esp"
        and (features:FromDomainCategory() == 'tiny'
        	or features:FromDomainCategory() == 'small')
        and features:HasTextOnly() == 1
        and features:ShingleTextSize() < 1500
        and not features:NoRealNameTo()
        and TermsMatchGroup(10096,100) 
 	then
        SetPSAR('ar2403', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2403')
    end

    --ar2404
	--svobodno

    --ar2405
	--svobodno

    --ar2406
	--svobodno
    
    --ar2407
    --mxs_other / #virus #credit
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other" 
        and cmpr_btw(features:MsgSize(),2000,10000)
        and features:HasAttach()
        and features:AttachArchiveCount() == 1
        and features:IsExecNameInArchive()
        and features:EngRealNameFrom()
        and features:ImgNum() == 0
        and features:UrlCountWithoutMailRu() == 0
        and features:HtmlTagCount() == 0
        and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE()
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar2407') 
    end
   
	--ar2408
	--svobodno

    --r2409
    --mxs_other / #office #kompred_in_att
    --02.11.2016 / r.kulpin
    --47489cd70a033e3d0ad2616288914a6d 367c94fca6657be77c0f0743bd0d6f62
    if not IsBlocked 
		and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 80000, 150000)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_eq(features:ImgNum(), 0)
        and cmpr_eq(features:MultipartNum(), 5)
        and features:NoUserAgent()
        and features:Subject8bitOnly()
        and cmpr_btw(features:SubjectWordCount(), 2, 10, true)
        and cmpr_gt(features:WordCount(), 3, 20)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
        and (wclass:FAIL_SPF() or wclass:MX_INVALID_RATE_MORE_THAN_10())
        and (wclass:OTHER_IP_IN_DNSBL() or wclass:SPAM_RATIO_BY_LAST_HOUR_MORE_THAN_25())
        and wclass:CT_ENCODED_FILENAME()
        and wclass:SHORT_BOUNDARY()
        and (wclass:NEW_IP_15_DAYS() or wclass:NEW_DKIM_7_DAYS() or wclass:NEW_FROMDOMAIN_15_DAYS())
    then 
        SetPSAR('ar2409')
    end
    
    --ar2410
	--svobodno
    
    --ar2411
	--svobodno   
    
    --ar2412
    --mxs_other / #bad_CT
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),500,10000) 
        and features:HasTextOnly() == 1
        and features:MultipartNum() >= 3
        and features:ImgNum() == 0
        and features:NoRealNameTo()
        and features:UrlNormCount() <= 2
        and cmpr_lt(features:HtmlTagCount(),10,true)
        and cmpr_btw(features:WordCount(),3,100,true)
        and (features:LinesToWordsRatio() > 30 or features:LinesToWordsRatio() < 5)
        and features:HasCTEncodedHeader()
        and features:SourceTextSize() > 50
        and ((features:SourceTextSize()/features:WordCount()) > 20 
            or features:Words7bitRatio() > 50 and (features:WhitespaceToWordRatio() < 80 or wclass:SUBJECT_8BBIT_AND_BODY_7BIT()))
        and TermsMatchGroup(17950,100)
    then
        SetPSAR('ar2412') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2412')
    end
    
    --ar2413
    --mxs_other / #virus #caps_eng_realname
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),5000,20000) 
        and features:HasAttach()
        and features:AttachArchiveCount() == 1
        and features:ToRealNameInToLocalPart()
        and features:FromRealNameInFromLocalPart()
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:TextLines(),2,10,true)
        and features:FilesExtensions() == ".zip"
    then
        SetPSAR('ar2413') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2413')
    end
    
    --ar2414
    --fe #disk 
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and not features:IsPddUser()
    	and ((cmpr_eq(features:HasAttach(), 1) and cmpr_eq(features:AttachOfficeCount(), 0)) 
    		or cmpr_gt(features:ImgNum(), 1, true))
        and (cmpr_lt(features:RepuserAge(), 5)
    		or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 10)
    		or wclass:AUTOREG())
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 300, true)
  		and wclass:FROM_ENDS_WITH_YEAR()
    	and wclass:YANDEX_DISC()
    then 
        SetPSAR('ar2414')         
    end 
        
    --ar2415
	--svobodno
    
    --ar2416
    --mxs_mbp / #img_zarabotok
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),30000)
        and features:HasNoAttach()
        and features:NoRealNameTo()
        and features:ImgNum() > 0
        and features:ExternalImgNum() > 0
        and features:WordCount() > 50
        and features:TextLines() > 30
        and features:LinesToWordsRatio() > 20
        and features:UrlCountWithoutMailRu() > 3
        and features:WhitespaceToWordRatio() >= 1000
        and wclass:PSEUDO_DMARK_AND_WORDS_OTHERS_BAD_RATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and not HasHeader('X-Forwarded-To')
    then
        SetPSAR('ar2416') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2416')
    end

    --ar2417
	--svobodno
    
    --ar2418
    --mxs_other / #noise #obsledovanie
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),20000,100000)
        and features:ImgNum() == 0
        and features:HasTextOnly() == 1
        and features:SourceTextSize() > 8000
        and features:HtmlTagCount() > 100
        and features:TextLines() > 100
        and features:DotCount() < 10
        and wclass:MULTIPLE_HTML_TAGS()
    then
        SetPSAR('ar2418') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2418')
    end
    
    --ar2419
    --fe / #zarabotok  #simple_url #eng_1_word_subj
    --02.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),2000,8000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and features:Karma() < 0 
        and features:RepuserAge() < 20
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,2,true)
        and cmpr_btw(features:HtmlTagCount(),5,40)
        and cmpr_gt(features:WordCount(),50)
        and features:Words8bitRatio() > 75
        and (wclass:AUTOREG() and wclass:ONE_WORD_SUBJECT() 
        	or features:HtmlTags()['br'] and (features:HtmlTags()['br']/features:HtmlTagCount()) > 0.5)
        and (UrlsMatch(regex([[^[¸à-ÿ\d\-]+\.ðô$]]),1) or wclass:IP_URL())
    then
        SetPSAR('ar2419') 
    end
    
    --ar2420
    --mxs_other mxs_mbp / #virus #zagruz #nakladnaya #small #url
    --13.01.17 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 30, 100)
    	and cmpr_btw(features:TextLines(), 1, 10)
        and cmpr_lt(features:HtmlTagCount(), 20, true)
    	and cmpr_eq(features:EngRealNameFrom(),1)
    	and (cmpr_gt(features:SubjectNumbersCount(), 5) or wclass:FAKE_REPLY_IN_SUBJECT())
    	and wclass:PHP_URL()
        and wclass:SUBJECT_MIXED_BADRATIO()
    then
        SetPSAR('ar2420')
    end

    --ar2421
    --mxs_other / #virus #zagruz #nakladnaya
    --09.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 5000, 100000)
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and features:FilesExtensions() == ".zip"
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:HtmlTagCount(), 20, true)
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
    	and cmpr_eq(features:EngRealNameFrom(),1)
    	and cmpr_gt(features:SubjectNumbersCount(), 5)
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:NO_URLS_WITH_HTML_TAGS()
    then
        SetPSAR('ar2421')
    end

	--ar2422
	--fe / #trusov ESLI FALSE, DOBAV' IP V GRUPPU 17959 C VESOM -10 ILI UDALI SETKU
	--03.11.16 / r.sulimov
	if not IsBlocked
        --and not StrMatch(features:From(), 'mdv@inbox.ru') dobavila v gruppu c vesom -10
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and TermsMatchGroup(17959, 10)
        --and cmpr_gt(features:RepIpComplRatioByLastWeek(), 20)
    then
    	SetPSAR('ar2422')
    	LogMsgToHadoop('dstat_sulimov_log', 'TRUSOV')
    end		
 
    --ar2423
    --mxs / #vigrish
    --03.1.16 / r.belyankin
    --6206ea43a5510c59d744017580e5008b bbeed7197b7a3472b570d87313a1a591
    if	not IsBlocked 
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 50000 and features:MsgSize() <= 500000
    	and features:UrlNormCount() <= 2
        and features:HasImageUrl() == 1
    	and features:MultipartNum() == 1
    	and features:SimpleType() == "text"
    	--and features:Subject7bitOnly() == 1
    	and features:Word8bitCount() == 0
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and HeaderMatchRe('Received', regex([[(?i)from\s+(?:localhost\s+)?\(127\.0\.0\.1\)\s+by\s+[a-z\d_.-]+\.[a-z\d_-]{2,8}\s+id\s+[a-z\d]+\s*]]))
    then
        SetPSAR('ar2423')
    end
    
    --ar2424
    --mxs / #virus
    --03.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() <= 2
        and features:UrlsTextSize() >= 20 and features:UrlsTextSize() <= 100
        and cmpr_btw(features:TextLines(), 10, 150, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and wclass:BAD_LINES_TO_WORD_RATIO()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatch(regex([[\/mailg\.php$]]),1)
    then
        SetPSAR('ar2424')
    end
    
    --ar2425
	--svobodno
    
    --ar2426
    --fe / #virus
	--03.11.16 / sokolik
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MsgSize(), 50000)
		and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:ImgNum(), 0)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 200, 600, true)
    	and cmpr_btw(features:WordCount(), 500, 2000, true)
    	and cmpr_gt(features:UrlNormCount(), 5)
    	and cmpr_gt(features:HtmlTagCount(), 200)
   		and cmpr_eq(features:HasScriptTags(), 1)
    	and cmpr_btw(features:RepuserAge(), 0, 15, true)
    	and wclass:IS_EXECUTION_FILE_IN_ARCHIVE()
    	and wclass:NO_SUBJECT()
    then 
        SetPSAR('ar2426') 
        LogMsgToHadoop('dstat_sokolik_log', '#ar2426')
    end

    --ar2427
    --fe / #casino
	--03.11.16 / sokolik
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:RepuserAge(), 0, 15, true)
    	and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 1, 30, true)
    	and cmpr_btw(features:WordCount(), 1, 100, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:HtmlTagCount(), 30)
   		and cmpr_eq(features:Subject7bitOnly(), 1)
  		and cmpr_eq(features:OneWordSubject(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 50)
    	and wclass:SOURCE_IP_IN_TOR_NODE()
    then 
        SetPSAR('ar2427') 
        LogMsgToHadoop('dstat_sokolik_log', '#ar2427')
    end

    --ar2428
    --mxs_other/ #Christmas #no_urls
    --20.12.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
       	and cmpr_eq(features:UrlNormCount(), 0)
       	and wclass:SPF_NOT_PASS()
    	and (features:FromDomainCategory() == 'tiny'
        	or features:FromDomainCategory() == 'small')
    	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    	and wclass:HAS_X_PHP_SCRIPT()
    then
    	SetPSAR('ar2428')
    end
    
    --ar2429
    --fe / #casino
	--03.11.16 / sokolik
	if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 5000, 50000)
		and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:AttachOfficeCount(), 0)
    	and cmpr_eq(features:ImgNum(), 0)    
		and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:TextLines(), 1, 30, true)
    	and cmpr_btw(features:WordCount(), 100, 500, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_lt(features:HtmlTagCount(), 30)
    	and wclass:CT_ENCODED_FILENAME()
        and UrlsMatchStr('.ru', 1)
        and HeaderMatch('Received','touch.mail.ru')
    then 
        SetPSAR('ar2429') 
        LogMsgToHadoop('dstat_sokolik_log', '#ar2429')
    end
    
    --ar2430
	--svobodno
    
    --ar2431
	--svobodno
    
    --ar2432
    --mxs_other #zarabotki
    --03.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50000, 300000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:TextLines(), 200)
        and cmpr_gt(features:WordCount(), 1000)
        and cmpr_gt(features:HtmlTagCount(), 2000)
        and cmpr_eq(features:UrlNormCount(), 0)
   		and cmpr_gt(features:WordOtherCount(), 100)
    	and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:UNDISCLOSED()
    then
        SetPSAR('ar2432')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2432')
    end
    
    --ar2433
    --smtp / #dance_with_img
	--03.11.16 / sokolik
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 250000, 400000)
   		and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 5, true)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_eq(features:UrlNormCount(), 0)
       	and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 2)
    	and cmpr_lt(features:RepuserAge(), 2)
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT() 
    	and wclass:FROM_ENDS_WITH_YEAR()
    then 
        SetPSAR('ar2433') 
        LogMsgToHadoop( 'dstat_sokolik_log', '#ar2433')
    end
    
    --ar2434
    --mxs_other #diagnostika
    --07.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_btw(features:TextLines(), 1, 150, true)
        and cmpr_btw(features:WordCount(), 10, 1000)
        and (cmpr_gt(features:HtmlTagCount(), 30)
    		or cmpr_eq(features:HtmlTagCount(), 0))
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
        and (wclass:MULTIPLE_HTML_TAGS()
    		or wclass:MEGALINE_NET()
			or wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
			or wclass:NEW_IP_30_DAYS_WITH_10_DAY_GAP()
			or mrasRepHasSendingGap(features:FromDomain(), 3, 30, 10, 5))
        and HeaderMatchRe('Message-ID', regex([[^<\d{10}\.\d{9}@]]))
    then
        SetPSAR('ar2434')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2434')
    end
    
	--ar2435
	--svobodno
    
    --ar2436
	--svobodno

    --ar2437
	--svobodno
    
    --ar2438
	--svobodno
    
    --ar2439
	--svobodno
    
    --ar2440
    --mxs_other #znakomstva
    --13.01.17 / a.sokolov
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:WordCount(), 200)
        and cmpr_eq(features:UrlNormCount(), 0)
   		and cmpr_gt(features:NumberCount(), 5)
        and (cmpr_eq(features:Subject7bitOnly(), 1)
    		or wclass:NO_SUBJECT())
        and wclass:ONLY_7BIT_WORDS()
        and not wclass:RUSSIAN_FROM_REALNAME()
		and (HeaderMatch('X-Mailer','POLARIS')
    		or wclass:DKIM_FAIL())
    then
        SetPSAR('ar2440')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2440')
    end
    
    --ar2441
    --mxs_other #forex
    --03.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 1, 50, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
   		and cmpr_eq(features:HasImageUrl(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and wclass:ONLY_7BIT_WORDS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
    then
        SetPSAR('ar2441')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2441')
    end
    
	--ar2442
    --fe / #blogspot
	--16.12.16 / r.sulimov(sokolik)
    --73fc331d919d51e79797bf3a59f379a5 7085048245466d1271dabbd4064c20fd 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,15000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and features:NoRealNameTo() == 1
        and cmpr_lt(features:RepuserAge(),150)
        and cmpr_btw(features:UrlNormCount(),2,10,true)
        and wclass:WORDS_WITH_NOISE()
        and wclass:SUSP_MIXED_WORDS_RATIO() 
        and TermsMatchGroup(17999,50)
    then
        SetPSAR('ar2442')
    end
    
    --ar2443
    --mxs_mbp / #zarabotok
    --03.11.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 40, 7000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_btw(features:WordCount(), 2, 10, true)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and (wclass:WHITESPACE_SUSP_RATIO() or wclass:HAS_X_RECEIVED())
    then
        SetPSAR('ar2443')
    end

    --ar2444
    --mxs / #win_iphone
    --03.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 6
        and features:DomainRepipAge() >= 500
        and features:TextLines() >= 10 and features:TextLines() <= 150
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and features:HtmlTagCount() >= 250 and features:HtmlTagCount() <= 500
        and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_15_DAYS())
        and wclass:FROM_INFORMATION_SERVICE()
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
    then
        SetPSAR('ar2444')
    end
    
    --ar2445
    --mxs / #vigrish_v_2
    --03.1.16 / r.belyankin
    --mcc_mc_ip7
    if	not IsBlocked 
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
    	and features:UrlNormCount() == 0
    	and features:MultipartNum() == 1
    	and features:SimpleType() == "text"
    	and features:Subject7bitOnly() == 1
    	and features:Word8bitCount() == 0
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:MAIL_RU_MSGID_PATTERN()
    	and wclass:CT_IN_BODY()
    then
        SetPSAR('ar2445')
    end
    
    --ar2446
    --mxs_mbp / #molodost'
    --03.11.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 150000)
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_btw(features:TextLines(), 1, 6, true)
        and cmpr_btw(features:WordCount(), 2, 10, true)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:RcptNum(), 1)
        and wclass:CT_IN_BODY()
        and wclass:MORE_1_EMAILS_IN_TO()
        and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    then
        SetPSAR('ar2446')
    end
    
    --ar2447
    --fe / #casino
    --04.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
       	and cmpr_btw(features:MsgSize(), 500, 75000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
     	and cmpr_btw(features:LinesToWordsRatio(),0,40, true)
        and cmpr_btw(features:TextLines(), 5,120)
        and cmpr_btw(features:WordCount(),25, 2200)
        and cmpr_lt(features:Word7bitCount(),15)    
		and cmpr_eq(features:NoSubject(), 1)
        and cmpr_eq(features:UrlNormCount(),0) 
        and cmpr_lt(features:Karma(), 0)
        and cmpr_btw(features:HtmlTagCount(),5,20)
		and cmpr_gt(features:RepIpComplRatioByLastMonth(), 20, true)    
        and cmpr_eq(features:LastHelo(),'')
        and wclass:SOURCE_IP_IN_XBL()
        and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar2447')
    end

    --ar2448
	--svobodno

    --ar2449
	--svobodno
    
    --ar2450
    --mxs_other / #bad_domain #young_from
    --04.11.2016 / rassadovskiy
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),3000,10000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and features:EngRealNameFrom()
        and features:FromRealNameInFromLocalPart()
        and cmpr_btw(features:HtmlTagCount(),30,70)
        and cmpr_gt(features:TextLines(),30)
        and features:EnvelopeFromDomainRepipAge() <= 5
        --and wclass:HAS_TAG_META()
        and (wclass:NEW_IP_7_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
        SetSpam('ar2450',false)
		CarbideSendStatsSum('rules_analyst', 'ar2450', 1)
        --SetPSAR('ar2450') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2450')
    end
    
    --ar2451
	--svobodno
        
	--ar2452
    --mxs_other/ #zarabotok #8000
    --20.12.16 /minina
	if not IsBlocked
    	and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
    	and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and (cmpr_eq(features:HasTextOnly(), 1) or (cmpr_eq(features:ImgNum(), 1) and cmpr_btw(features:UrlNormCount(), 1, 2, true)))
    	and cmpr_gt(features:MultipartNum(), 3, true) 
       	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and cmpr_btw(features:UrlsTextSize(), 5, 50)
       	and (wclass:SPF_NOT_PASS() or wclass:OTHER_IP_IN_DNSBL())
    	and (features:FromDomainCategory() == 'tiny'
        	or features:FromDomainCategory() == 'small') 
    	and (wclass:ONE_RECEIVED() or wclass:UNKNOWN_IN_RECEIVED() or wclass:OTHER_IP_IN_DNSBL() or wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25())
    	and wclass:CRASHED_BASE64_IN_SUBJECT() 
        and (cmpr_eq(features:UrlsInSubject(), 1) or cmpr_gt(features:SubjectNumbersCount(), 5, true) or wclass:SUBJECT_WITH_CAPS())
    	and (cmpr_eq(features:FromRealNameWordCount(), 1) or wclass:LONG_HELO() or wclass:HTML_BODY_HEAD())
    then
    	SetPSAR('ar2452')
    end
    
    --ar2453
	--svobodno
    
    --ar2454
    --mxs_mbp / #img_zarabotok
    --04.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),20000)
        and features:HasNoAttach()
        and features:NoRealNameTo()
        and features:ImgNum() > 0
        and features:ExternalImgNum() > 0
        and features:UrlCountWithoutMailRu() > 1
        and features:WhitespaceToWordRatio() >= 1000
        and (wclass:PSEUDO_DMARK_AND_WORDS_OTHERS_BAD_RATIO() or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and features:HasSuspEspUrl()
    then
        SetPSAR('ar2454') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2454')
    end    
    
    --ar2455
	--svobodno
    
	--ar2456
    --mxs_mbp / #zarabotok #rambler
    --04.11.16 /m.guryanov
    --57a7151f4000429558a08b0417069661 073ecb8903acf28add371b80efaeb122 266f27c1a863761519218f2bf1efadc0
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp" 
    	and cmpr_btw(features:MsgSize(), 50000, 150000, true) 		
   		and features:HasNoAttach() == 1
    	and features:IsFromRambler() 
    	and cmpr_btw(features:ImgNum(), 1, 5)
    	and cmpr_gt(features:MultipartNum(), 3, true)
  		and features:Has3dLevelDomain() == 1
    	and features:NoTo() == 1
    	and cmpr_gt(features:HtmlTagCount(), 10, true)    	
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)    	
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 2, 30, true)	
    	and wclass:FAKE_FREE_MAIL()
	then      	
        SetPSAR('ar2456')        
    end
    
    --ar2457
	--svobodno

    --ar2458
    --mxs / #zdorovie
    --04.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:NoSubject() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 100 and features:WordCount() <= 2500
        and features:Word8bitCount() == 0
    	and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_15_DAYS() or wclass:PTR_ERROR())
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2458')
    end
    
    --ar2459
	--mxs / #zdorovie
    --04.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and cmpr_btw(features:TextLines(), 1, 15, true)
        and cmpr_btw(features:WordCount(), 50, 1500, true)
        and features:Word8bitCount() == 0
        and features:HtmlTagCount() <= 15
        and wclass:ONE_RECEIVED()
        and (wclass:NO_SUBJECT() or wclass:NEW_IP_15_DAYS())
        and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2459')
    end
    
    --ar2460
	--svobodno
    
    --ar2461
	--svobodno

    --ar2462
	--svobodno
    
	--ar2463
	--svobodno
    
	--ar2464
	--mxs_esp / #test #spam
	--02.11.2016 / zubr
	if features:RcvSrcExt() == "mxs_esp"
		and features:UrlInListUnsubscribe() == "getresponse.com" 
		and features:FromRealNameWordCount() == 1
		and wclass:RUSSIAN_FROM_REALNAME()
		and (features:DomainRepipAge() <= 20 or mrasRepHasSendingGap(features:FromDomain(), 3, 40, 20, 10))
		and features:FromEndsWithYear() == true
		and (features:UrlsHash() == 'daa87cfc' or features:UrlsHash() == 'f79ed64f')
		and TermsMatchGroup(17948, 100)
	then
		SetPSAR('ar2464')
	end
    
	--ar2465
    --fe / #vbey #google #many_dots 
    --05.11.16 / rassadovskiy
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),400)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),3)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and (cmpr_eq(features:UrlNormCount(),0) or TermsMatchGroup(18010,100))
    	and (features:DotCount() > 300 and features:DotRatio() > 30
        	or features:Karma() <= 0)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),2)
        and TermsMatchGroup(17357, 100)
    	--and cmpr_gt(features:RepIpSpamRatioByLastMonth(), 10, true)
    then
        SetPSAR('ar2465')
    end    
    
    --ar2466
	--svobodno
    
    --ar2467
    --fe / #large_with_attach
	--28.12.16 / minina
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MsgSize(), 200000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 0)
    	and cmpr_eq(features:AttachArchiveCount(), 0)
        and cmpr_lt(features:UserAge(), 15, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 15, true)
        and wclass:CT_ENCODED_FILENAME()
        and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:SrcIp(), 0, 30, 15, 100))
    	and not wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2467')
    end

    --ar2468
	--svobodno  

    --ar2469
    --fe / #dostup
    --05.11.16 /m.guryanov
    --af988a1db766dcbd316e670b49855264 eb871bb127d602f73df3d9118894d4a5
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 50000, 150000)
    	and not features:IsPddUser()
    	and features:HasAttach() == 1
    	and features:ImgNum() == 0
		and features:NoRealNameTo() == 1
    	and features:IsAutoreg() == 1
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:UrlNormCount() == 0
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true) 		
    	and cmpr_btw(features:WordCount(), 2, 50, true)	
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_gt(features:HtmlTagCount(), 1, true)    	
		and TermsMatchGroup(18001, 100)
	then      	
        SetPSAR('ar2469')
    end 
    
	--ar2470
	--svobodno
    
	--ar2471
	--svobodno
    
    --ar2472
	--svobodno
    
    --ar2473
    --mxs_other / #watch #ToRealNameInToLocalPart
    --06.11.16 / r.kulpin
    --c2cab55b6883db4c0e867f4437059ca1 d8ba8e0acd9fc5d01afccd79c406803d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and features:ToRealNameInToLocalPart()
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)  
        and cmpr_btw(features:TextLines(), 5, 25, true)
        and cmpr_btw(features:WordsOtherRatio(), 3, 25, true)
        and cmpr_btw(features:HtmlTagCount(), 5, 25, true)
        and (wclass:SHORT_BOUNDARY_AND_MAILRU_MSG_ID_PATTERN() or wclass:NEW_DKIM_7_DAYS())
        and (wclass:ONE_RECEIVED() or wclass:TO_MISMATCH_ENVELOPE_TO())
        and wclass:HELO_IN_FROM()
    then
        SetPSAR('ar2473')
    end
    
    --ar2474
    --fe / #nigger
    --06.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),100000)
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:NoTo()
        and cmpr_lt(features:Word8bitCount(),5)
        --and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 20, 5)
        and features:Karma() < 0
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and features:FilesExtensions() == ".jpg" 
        and wclass:SOURCE_IP_IN_XBL()
    then
        SetPSAR('ar2474') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2474')
    end
    
    --ar2475
    --mxs_other #zarabotki
    --09.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 10, 300, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and wclass:MAIL_RU_MSGID_PATTERN()
    	and (wclass:NEW_DKIM_7_DAYS() or wclass:NEW_FROMDOMAIN_7_DAYS())
    	and wclass:URL_FROM_BODY_IN_FROM()
    then
        SetPSAR('ar2475')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2475')
    end
    
    --ar2476
    --mxs_other #rassilki
    --06.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 300, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
   		and cmpr_eq(features:NoRealNameReplyTo(), 1)
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:URL_FROM_BODY_IN_FROM()
        and UrlsMatchStr('.html', 1)
    then
        SetPSAR('ar2476')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2476')
    end
    
    --ar2477
    --smtp / #flud
    --07.11.16 / r.sulimov
    --s_sob_usage7
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and features:HasTextOnly() == 1                    
    	and cmpr_lt(features:Karma(), 0, true)  
    	and features:NoUserAgent() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_eq(features:UrlNormCount(), 0) 
        and cmpr_btw(features:TextLines(), 1, 3 ,true)
        and cmpr_btw(features:WordCount(), 30, 300, true) 
    	and cmpr_gt(features:Words8bitRatio(), 70, true)
		and cmpr_eq(features:HtmlTagCount(), 3)
    	and (HeaderMatch('Received', '[83.220.')
        or HeaderMatch('Received', '[31.173.'))
    then 
        SetPSAR('ar2477')         
    end
    
    --ar2478
    --mxs_other #zarabotki
    --07.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_btw(features:TextLines(), 1, 150, true)
        and cmpr_btw(features:WordCount(), 10, 1000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 2, 6, true)
    	and cmpr_eq(features:NoHtmlTag(), 1)
    	and cmpr_eq(features:NoBodyTag(), 1)
        and HeaderMatchRe('Message-ID', regex([[^<\d{10}\.\d{9}@]]))
    then
        SetPSAR('ar2478')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2478')
    end
    
    --ar2479
    --mxs_other #vk.com
    --07.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and wclass:W8BIT_NO_CTE()
    	and wclass:NO_MIME()
        and UrlsMatchStr('vk.com')
    then
        SetPSAR('ar2479')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2479')
    end
    
    --ar2480
    --mxs_other #many_urls
    --07.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 300000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 100, 2000, true)
        and cmpr_gt(features:HtmlTagCount(), 500)
        and (cmpr_gt(features:UrlNormCount(), 100)
    		or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        	or wclass:HAS_MARK_SPAM_ANTISPAM_SYSTEM())
    then
        SetPSAR('ar2480')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2480')
    end
    
    --ar2481
    --mxs /  #VISA
    --07.11.16 / sokolik
    --f4617747edf5195f502e2a8aa29f2a1c 737da2bf75060444d127be80f98c92fa 5a3776f0630c828460b3c66d6d5f5f06
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') 
            or cmpr_eq(features:RcvSrcExt(), 'imap')
        	or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
        and cmpr_btw(features:MsgSize(), 500, 100000)
   		and cmpr_gt(features:ImgNum(), 1, true) 
    	and features:HasNoAttach()
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_btw(features:TextLines(), 2, 150, true)
		and cmpr_btw(features:WordCount(), 30, 1000, true)
        and cmpr_btw(features:Word7bitCount(), 1, 300, true)
    	and cmpr_btw(features:HtmlTagCount(), 30, 200, true)
    	and cmpr_gt(features:MultipartNum(), 3)
		and cmpr_eq(features:HasFromRealName(),  true)
    	and TermsMatchGroup(17204, 100)
    	and (wclass:RECIPIENT_EMAIL_IN_BODY() or wclass:MS_MAILER_WITH_ONE_RECEIVED() or wclass:ONE_SYMBOL_FROM_LOCALPART())
	then
        SetPSAR('ar2481')
		LogMsgToHadoop('dstat_sokolik_log', '#ar800')
    end

	--ar2482
	--fe / #virus
    --07.11.16 / r.sulimov
	--f_fob_5dgap
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 2000)
        and cmpr_eq(features:AttachAllCount(), 1)
		and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
    	and (wclass:HAS_ARCHIVE_ATTACH() 
        	or StrMatch(features:PartsFilenames(),'.rar')
			or StrMatch(features:PartsFilenames(),'.dot')
    		or StrMatch(features:PartsFilenames(),'.doc'))
    	and HeaderMatchRe('Content-type', regex([[boundary="-{4}[a-z]{28,35}-[a-zA-Z0-9]{12,20}-[0-9]{8,12}"]]), 1)
  		and (cmpr_gt(features:RepIpComplRatioByLastMonth(), 15, true) or TermsMatchGroup(17959,10))
    then
        SetPSAR('ar2482')
    end
 
    --ar2483
    --smtp / #flud
    --07.11.16 / r.sulimov
    --s_sob_usage7
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_btw(features:MsgSize(), 10, 10000)
        and features:HasTextOnly() == 1                    
    	and cmpr_lt(features:Karma(), 0, true)  
    	and features:NoUserAgent() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_eq(features:UrlNormCount(), 0) 
        and cmpr_btw(features:TextLines(), 1, 3 ,true)
        and cmpr_btw(features:WordCount(), 10, 300, true) 
		and cmpr_eq(features:HtmlTagCount(), 0)
    	and (HeaderMatch('Received', '[83.220.')
        or HeaderMatch('Received', '[31.173.'))
    	and wclass:IP_IN_HELO()
    	and wclass:SMALL_AGE_REPUSER_7()
    then 
        SetPSAR('ar2483')         
    end
    
    --ar2484
	--mxs_esp
	--07.11.2016 / sokolik
    --cloud.mail.ru
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_esp"
        and features:HasTextOnly() == 1
		and features:UrlCount() > 2
        and features:ShingleTextSize() < 2000
  		and UrlsMatchStr('cloud.mail.ru')
        and UrlsMatchStr('getresponse.com')
        and TermsMatchGroup(17929, 100)
    then
        SetPSAR('ar2484')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2484')
    end
    
    --ar2485
	--svobodno

    --ar2486
	--svobodno
        
    --ar2487
    --fe / #pdf #instabunch 
    --07.11.2016 / razuvaev
    --885ed778ea2d7953cbca90f45b062798
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and cmpr_gt(features:MsgSize(),10000)
        and features:HasAttach()
        and features:AttachOfficeCount() == 1
        and features:MultipartNum() == 5
        and (features:NoRealNameTo() or features:NoTo()) 
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:RepuserAge(),100)
        and features:UrlCountWithoutMailRu() == 0
        and cmpr_btw(features:TextLines(),2,15,true)
        and cmpr_btw(features:WordCount(),10,30)
        and (features:Words7bitRatio() == 0 or TermsMatchGroup(17789,100) or features:LinesToWordsRatio() > 30)
        and cmpr_btw(features:HtmlTagCount(),3,15)
        and wclass:TERMS_ZARABOTOK_V_SETI_AND_AUTOREG()
        and StrMatchRe(features:PartsFilenames(), regex([[(?i)^[a-zÀ-ßà-ÿ¸0-9()\d\s\-\!\+]{5,}\.pdf$]]))
    then
        SetPSAR('ar2487') 
    end    
        
    --ar2488
	--svobodno 
 
    --ar2489
    --mxs_other / #sparkpostmail
	--07.11.2016 / rassadovskiy #predict
    if cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and features:LinesToWordsRatio() > 15
        and features:WhitespaceToWordRatio() > 300
        and features:DkimDomainRepipAge() < 50
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:HAS_TAG_STYLE()
        and wclass:DMARC_PASS()
        and UrlsMatchStr('go.sparkpostmail')
    then
		SetPSAR('ar2489',true) 
    	--LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2489')
    end
    
    --ar2490
    --mxs_other / #zarabotok #
    --07.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 50000, 250000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 100, 3000, true)
    	and cmpr_btw(features:TextLines(), 10, 100, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:HtmlTagCount(), 1000)
       	and wclass:SPF_NOT_PASS()
        and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:NO_USER_AGENT()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and HeaderMatch('Content-Type', 'charset="windows-1251')
    then
        SetPSAR('ar2490')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2490' )
    end
    
	--ar2491 
    --fe / #zarabotok #pdf
    --07.11.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 20000, 300000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
       	and cmpr_btw(features:TextLines(), 2, 20, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and (wclass:AUTOREG() or wclass:FROM_ENDS_IN_NUMS())
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
        and wclass:NEW_IP_30_DAYS()
    then
        SetPSAR('ar2491',true) 
        LogMsgToHadoop('dstat_minina_log', '#ar2491')
    end
    
    --ar2492
	--svobodno

    --ar2493
    --mxs_mbp / #pidori #uvelicheniye
    --7.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 500, 20000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:TextLines(), 1, 100, true)
    	and cmpr_btw(features:WordCount(), 1, 500, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and (wclass:NO_URLS_WITH_HTML_TAGS() or wclass:LONG_BOUNDARY_MORE_75() or wclass:ONE_RECEIVED())
      	and wclass:NO_USER_AGENT()
    	and not wclass:DKIM_PASS()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and features:MsgIdLocalPart() and #features:MsgIdLocalPart() >= 30
    	and HeaderMatch('Content-type', 'boundary="--ALT-', 1)
	then
		SetPSAR('ar2493')
	end
    
    --ar2494
	--svobodno
    
    --ar2495
    --mxs_mbp / #leviifrom #yandexdengi
    --07.11.16 / razuvaev
    --68c6af2c3ae5a389757954c5305d340e 779b1e166bb2dc408297c453e6e7b8fa
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 15000, 70000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 40, 250)
    	and cmpr_gt(features:WordCount(), 100)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
     	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
        and wclass:REPLY_TO_REALNAME_DUBLICATE_REPLY_TO_EMAIL()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
	then
		SetPSAR('ar2495')	
	end
    
    --ar2496
	--svobodno
    
    --ar2497
	--svobodno
    
    --ar2498
	--svobodno
    
	--ar2499
    --mxs_other / #potenciya
    --07.11.16 / minina
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
       	and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 1, 10, true)
    	and cmpr_eq(features:TextLines(), 1)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
       	and wclass:W8BIT_NO_CTE()
        and wclass:CYRILLIC_URL()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2499')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2499' )
    end
    
    --ar2500
    --svobodno
    
    --ar2501
	--svobodno
    
    --ar2502
    --mxs_other #kniga
    --07.11.16 / razuvaev
    --969d1cf9aa68d554a73bd62da397f0d2 3d1542b45a2b0f439958629db24f7390
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 7000, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:SPF(),"pass")
        and cmpr_eq(features:DKIM(),"pass")
        and cmpr_btw(features:TextLines(), 8,25)  
        and cmpr_btw(features:WordCount(),100,200)
        and cmpr_btw(features:NumberCount(),15,40)
        and cmpr_gt(features:SubjectWord8bitCount(),3)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
        and wclass:HELO_IN_MSGID()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:SHORT_BOUNDARY()
        and wclass: HTML_BODY_HEAD()
    then
        SetPSAR('ar2502')     
    end

    --ar2503
	--svobodno
    
    --ar2504
	--smtp / #virus_doc
	--07.11.16 / razuvaev
	--1f134182ce3cd7862c3adeb254cf55ad
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'smtp')
    	and cmpr_btw(features:MsgSize(), 500000, 2000000)
        and cmpr_eq(features:MultipartNum(), 3)   
        and cmpr_eq(features:AttachOfficeCount(),1)
        and cmpr_lt(features:TextLines(),10)  
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:WordCount(),40)
        and cmpr_eq(features:HtmlTagCount(),0)
        and cmpr_eq(features:NoUserAgent(),1)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_eq(features:FilesExtensions(),".docx")
        and cmpr_eq(features:AbfLastAuthCountry(),188)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:LASTHELO_WITHOUT_DOMAIN()
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
    then
    	SetPSAR('ar2504')
    end
    
    --ar2505
    --mxs_other / #zarabtok #kniga #otchet
    --07.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other') 
       	and cmpr_btw(features:MsgSize(), 5000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo() , 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:WordCount(), 50, 1000, true)
    	and cmpr_btw(features:TextLines(), 10, 60, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 50, 300)
       	and wclass:SHORT_BOUNDARY()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and UrlsMatchStr('.html', 1)
    then
        SetPSAR('ar2505')
    	LogMsgToHadoop( 'dstat_minina_log', '#ar2505' )
    end
    
    --ar2506
    --mxs_other / #zarabotok
    --07.11.2016 / rassadovskiy
    --0ef4815fcda7a50ba6d33be5078c2949
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),1000,30000)
        and features:ExternalImgNum() > 0
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),1,4,true)
        and cmpr_gt(features:HtmlTagCount(),5)
        and features:TextLines() > 3
        and features:LinesToWordsRatio() > 30
        and features:WhitespaceToWordRatio() >= 500
        and features:DomainRepipAge() <= 30
        and wclass:TO_EMAIL_IN_REALNAME()
        and wclass:SUSP_SWIFT_BOUNDARY()
    then
        SetPSAR('ar2506') 
        --LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2506')
    end
    
	--ar2507
	--svobodno

	--ar2508
	--svobodno

	--ar2509
	--fe / #TOR_TEST 
	--07.11.16 / r.sulimov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and TermsMatchGroup(18009, 10)
    	and cmpr_gt(features:RepIpComplRatioByLastMonth(), 20)
    then
    	SetPSAR('ar2509', true)
    	LogMsgToHadoop('dstat_sulimov_log', 'TOR_TEST')
    end		

    --ar2510
	--fe / #BAD_REP_IP_TEST 
	--07.11.16 / r.sulimov
	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and (cmpr_gt(features:RepIpComplRatioByLastWeek(), 20)
    		or cmpr_gt(features:RepIpComplRatioByLastMonth(), 20))
        and cmpr_gt(features:RcptNum(), 2, true)
    	and not UrlsMatchStr('touch.mail.ru')
		and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
    	SetPSAR('ar2510')
    	LogMsgToHadoop('dstat_sulimov_log', 'BAD_REP_IP_TEST')
    end		

    --ar2511
    --mxs / #vigrish_v_3
    --07.11.16 / r.belyankin
    --mcc_mc_ip60
    if	not IsBlocked 
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 150000
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
        and features:HasImageUrl() == 1
    	and features:MultipartNum() == 1
    	and features:SimpleType() == "text"
    	and features:Word8bitCount() == 0
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (StrMatchRe(features:MsgIdLocalPart(), regex([[^[a-z]{2,4}\.[A-Z]{1}[a-z]{3,7}\d{1,3}$]])) or wclass:MESSAGE_ID_NO_DOMAIN())
    then
        SetPSAR('ar2511')
    end
    
	--ar2512
	--svobodno

    --ar2513
    --mxs / #zarabotok
    --07.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
     and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and cmpr_eq(features:EngRealNameFrom(),1)
        and cmpr_eq(features:FromRealNameWordCount(),1)
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:NEW_DKIM_30_DAYS()
        --and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:ONE_RECEIVED()
        and not wclass:PHP_URL()
    then
        SetPSAR('ar2513')
    end
    
    --ar2514
    --mxs / #zarabotok
    --07.11.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 70
        and features:MultipartNum() == 1
        and features:SimpleType() == "text"
        and features:IpAge() >= 0 and features:IpAge() <= 30
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and not wclass:PHP_URL()
    then
        SetPSAR('ar2514')
    end
    
    --ar2515
    --mxs_mbp / #rabota
    --07.11.16 / philip.karpov
    --b26719f2d140ca01dd377b95a6194fc0 ef9a6dd1682a7fb6aade29e36d04da4e
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:ExternalImgNum(), 1)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:HtmlTagCount(), 0, 4)
        and wclass:PHOTO_HOSTING_WITH_SHORT_TEXT()
        and wclass:HAS_X_RECEIVED()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    then
        SetPSAR('ar2515')
    end
    
    --ar2516
	--svobodno
    
    --ar2517
    --mxs_mbp / #email #rassilki
    --08.11.16 / philip.karpov(sokolik)
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 4000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:ExternalImgNum(), 5, true)
        and cmpr_gt(features:WordCount(), 200)
        and cmpr_btw(features:TextLines(), 30, 70, true)
        and cmpr_btw(features:UrlCount(), 7, 13, true)
        and cmpr_btw(features:UrlNormCount(), 6, 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:HtmlTagCount(), 30, 55, true)
        and cmpr_gt(features:Words7bitRatio(), 75)
        and wclass:FREE_HOSTING()
        and wclass:HAS_X_RECEIVED()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar2517')
    end
    
    --ar2518
    --mxs / #zarabtok
    --08.08.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:TextLines() >= 30 and features:TextLines() <= 100
        and features:WordCount() >= 300 and features:WordCount() <= 700
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:PRECEDENCE_BULK()
        and wclass:SUSP_WORDPRESS_URL()
        and wclass:RECIPIENT_EMAIL_IN_BODY()
        and UrlsMatchStr('.htm', 1)
    then
        SetPSAR('ar2518')
    end
    
    --ar2519
    --mxs_mbp / #virus
    --08.11.16 / philip.karpov (minina)
    --85cb8ec133caea6dcc110448b3789a59 2aa4285ec910fc49f242e7c70b3b627d
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(), 5000, 25000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_btw(features:WordCount(), 1, 300, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:OneWordSubject(), 1)
        and cmpr_btw(features:HtmlTagCount(), 5, 25)
        and cmpr_eq(features:Subject7bitOnly() , 1)
        and (wclass:LINK_TO_ARCHIVE_FILE() or  wclass:FAKE_ATTACH() or wclass:URL_HAS_8BIT_PATH())
    	and (TermsMatchGroup(17871,200) 
        	or TermsMatchGroup(17871,100) and wclass:SHORT_BOUNDARY())
    then
        SetPSAR('ar2519')
    end
    
    --ar2520
    --mxs_other / #TEST #url_in_from_realname #young_ip
    --20.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
       	and cmpr_gt(features:UrlNormCount(), 1, true)
    	and features:UrlsInFromRealName()
    	and cmpr_btw(features:IpAge(), 0, 30)
    then
        SetPSAR('ar2520',true)
    end

    --ar2521
	--svobodno
    
    --ar2522
    --mxs_mbp / #EuroZarabotok #EuroPassiv
    --08.11.16 / y.minina
    --a0a43aa480bd33dc040e302ea5400d54 79ea2f8b5935b19615ce0ff540b5d572
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 200, 5000)
    	and cmpr_eq(features:HasTextOnly() , 1)
        and cmpr_btw(features:WordCount(), 1, 200, true)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:HtmlTagCount(), 0, 50, true)
        and cmpr_gt(features:Words8bitRatio(), 80)
    	and features:IsFromGoogle()
    	and (cmpr_btw(features:UrlsTextSize(), 15, 30) or UrlsMatchStr('.blogspot.'))
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:BASE64_TRANSFER_ENCODING()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
        SetPSAR('ar2522')
    end
    
    --ar2523
    --mxs_other / #vacancy #rar_attach
    --08.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(),50000) 
        and features:HasAttach()
        and features:AttachArchiveCount() == 1
        and features:RcptNum() > 5
        and features:NoRealNameTo()
        and wclass:HDR_SORTED_RECIPIENTS_AND_NO_USER_AGENT()
        and wclass:MORE_5_EMAILS_IN_TO()
        and wclass:NEW_FROMDOMAIN_15_DAYS()
    then
        SetPSAR('ar2523') 
    end
    
    --ar2524
    --mxs_other / #volosy 
    --08.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),3000,10000)
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and features:FromRealNameInFromLocalPart()
        and features:NoUserAgent()
        and cmpr_gt(features:UrlNormCount(),3,true)
        and cmpr_btw(features:HtmlTagCount(),1,10)
        and features:NoBodyTag() 
        and cmpr_gt(features:WordCount(),100)
        and features:LinesToWordsRatio() < 10
        and wclass:HAS_HEADER_DKIM_AND_NOT_AUTH_RESULTS()
    then
        SetPSAR('ar2424') 
    end
    
    --ar2525
	--svobodno
    
    --ar2526
    --mxs_other / #zarabotok
    --08.11.16 / y.minina
    --da6c1a0d772a51abe8dd1ea044efefca 5c55382104f4a8d17d461eec27f54933
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 500, 5000)
    	and cmpr_eq(features:HasTextOnly() , 1)
        and cmpr_btw(features:WordCount(), 5, 50, true)
        and cmpr_btw(features:TextLines(), 2, 30, true)
        and cmpr_btw(features:UrlNormCount(), 1, 5, true)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:HtmlTagCount(), 0, 20, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
    	and cmpr_eq(features:FromRealNameWordCount(), 2) 
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
    	and wclass:PHP_URL()
    	and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    	and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar2526')
    end

	--ar2527
    --mxs_other / #intoxic #zheludok
    --08.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 1000, true)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 100)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_eq(features:EmailsCountInBody(), 1)
    	and cmpr_eq(features:Has3dLevelDomain(), 1)
        and wclass:ONE_RECEIVED()
    	and wclass:THIRD_LVL_DOMAIN_IN_FROM()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and wclass:NO_USER_AGENT()
    then   
        SetPSAR('ar2527')
    end
    
    --ar2528
	--svobodno
    
	--ar2529
    --mxs_mbp/other / #virus
    --08.11.16 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other"))
        and cmpr_btw(features:MsgSize(), 700, 25000)
        and cmpr_btw(features:WordCount(), 1, 300, true)
        and cmpr_gt(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:MultipartNum(), 3,true)
        and (cmpr_eq(features:OneWordSubject(), 1) or features:NoSubject())
        and cmpr_btw(features:HtmlTagCount(), 5, 25)
        and (wclass:LINK_TO_ARCHIVE_FILE() or  wclass:FAKE_ATTACH() or wclass:URL_HAS_8BIT_PATH() or wclass:WORDS_MIXED_RATIO())
    	and (TermsMatchGroup(17871,200) 
        	or TermsMatchGroup(17871,100) and wclass:SHORT_BOUNDARY())
    then
        SetPSAR('ar2529')
    end
    
    --ar2530
	--svobodno
    
    --ar2531
    --mxs_mbp / #123.com #zarabotok
    --08.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),10000)
        and (features:FromDomain() == "126.com" or features:FromDomain() == "163.com" or features:FromDomain() == "comcast.net")
        and features:HtmlTagCount() > 300
        and (features:WordCount() > 100
            or features:SourceTextSize() > 10000 and features:WordCount() < 30)
        and features:HtmlTagCount() > 30
        and (wclass:URL_COUNT_0_WITH_HTTP() 
            or wclass:FAKE_HTML_URLS()
            or features:UrlNormCount() > 30
    		or (features:HtmlTagsKnown()['a']~=nil and features:HtmlTagsKnown()['font']~=nil and features:HtmlTagsKnown()['a'] > 500 and features:HtmlTagsKnown()['font'] > 100))
    then
        SetPSAR('ar2531') 
    end
    
	--ar2532
	--svobodno
    
    --ar2533
    --mxs_other #nikolay
    --08.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 50, 500, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and wclass:NEW_DKIM_7_DAYS()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    then
        SetPSAR('ar2533')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2533')
    end
    
    --ar2534
    --mxs_mbp visa
    --08.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and (features:ImgNum() >= 1
        	or features:HasPhotoHosting() == 1)
    	and TermsMatchGroup(17204, 100)
        and wclass:HAS_X_PHP_SCRIPT()
    then
        SetPSAR('ar2534', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2534')
    end

    --ar2535
    --mxs_mbp short_url+reply
    --08.11.16 / a.sokolov
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:UrlNormCount(), 4)
        and features:HasShortUrl() == 1
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
     then
        SetPSAR('ar2535')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2535')
    end
    
    --ar2536
    --mxs_mbp spf+rf_url
    --08.11.16 / a.sokolov
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 3)
        and cmpr_gt(features:RepIpInvRatioByLastWeek(), 15)
		and wclass:RU_RF_URLS()
        and (wclass:SOFTFAIL_SPF()
        	or wclass:FAIL_SPF())
        and not TermsMatchGroup(18048, 100)
    then
        SetPSAR('ar2536')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2536')
    end
    
    --ar2537
    --mxs_other #fvds
    --08.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 1, 500, true)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatchStr('.fvds.ru')
    then
        SetPSAR('ar2537')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2537')
    end

    --ar2538
	--svobodno
   
	--ar2539
    --mxs_mbp/ #virus
    --21.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 2000, 500000)
   		and cmpr_eq(features:FromDomain(), 'pochta.com')
  	  	and cmpr_eq(features:AttachAllCount(), 1)
        and (cmpr_eq(features:AttachOfficeCount(),1)
    		or wclass:ARCHIVE_WITH_ONE_FILE_INSIDE())
		and cmpr_eq(features:ImgNum(), 0)
        and cmpr_btw(features:WordCount(), 10, 200, true)
		and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and (cmpr_eq(features:HtmlTagCount(), 0)
    		or cmpr_eq(features:NoBodyTag(),1))
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    then
        SetPSAR('ar2539')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2539')
    end
    
    --ar2540
    --mxs_mbp gif
	--09.11.16
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and cmpr_btw(features:TextLines(), 1, 5, true)
    	and cmpr_btw(features:WordCount(), 1, 30, true)
  		and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:UrlsTextSize(), 40)
        and wclass:RAMBLER_FE()
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:PHP_URL()
    then
        SetPSAR('ar2540')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2540')
    end 
    
    --ar2541
    --mxs_mbp #zarabotki
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 30000, 1000000)
    	and cmpr_gt(features:ShingleTextSize(), 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 1, 60, true)
		and cmpr_btw(features:WordCount(), 10, 3000)
        and cmpr_gt(features:HtmlTagCount(), 100)
      	and (cmpr_gt(features:UrlNormCount(), 10)
    		or cmpr_lt(features:UrlNormCount(), 4))
    	and (wclass:HAS_X_CMAE_ENVELOPE_HDR()
    		or TermsMatchGroup(18090, 100))
  	 	and (wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    		or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    		or wclass:FAKE_HTML_URLS()
        	or wclass:URL_NOVOWEL()
			or wclass:NO_URLS_WITH_HTML_TAGS()
    		or wclass:SPF_NOT_PASS_FROM_MBP())
        and (HeaderMatch('Date', '+0100')
			or HeaderMatch('Date', '+0800'))
    then
        SetPSAR('ar2541')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2541')
    end
    
    --ar2542
	--svobodno
    
    --ar2543
    --mxs_mbp / #virus
    --26.10.16 / razuvaev
    --mfc_om_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_eq(features:HasAttach(),1)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and StrMatchRe(features:FromLocalPart(),regex([[^[a-z]{1,20}[0-9]{1,4}[a-z]{1,20}]]))
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:SUSP_LASTHELO()
        and wclass:CT_ENCODED_FILENAME()
        and wclass:SHORT_BOUNDARY()
        and wclass: RANDOM_DIGITS_LOWER_CASE_IN_HEADER()
    then
        SetPSAR('ar2543')
    end

    --ar2544
	--svobodno
    
    --ar2545
	--svobodno
    
    --ar2546
	--svobodno
    
    --ar2547
    --mxs_other #seks
    --07.11.16 / razuvaev
    --4f98dbb78c6732075ff9a0d2e7965e38 9aafda207588560bedae1e1803492e2a
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 200, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 4,5,true)
        and cmpr_btw(features:TextLines(), 1,18)  
        and cmpr_btw(features:WordCount(),10,400)
        and cmpr_lt(features:HtmlTagCount(),10)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_lt(features:UrlCount(),5)
        and wclass:NO_USER_AGENT()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar2547')     
    end
    
    
    --ar2548
	--svobodno
    
    --ar2549
	--svobodno
    
    --ar2550
	--svobodno
    
    --ar2551
	--svobodno
    
    --ar2552
	--svobodno
    
    --ar2553
	--mxs_mbp / #1kanal
	--07.11.16 / razuvaev
	--ebf79a35fcdfdc96c7e066fc7fa5878e 27782b1758a882c64af0a3e6ba91ffc1
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_gt(features:MsgSize(), 5000)
        and cmpr_gt(features:MultipartNum(),2)   
        and (cmpr_gt(features:ImgNum(),0)  or wclass:FAKE_HTML_URLS())
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_btw(features:WordCount(),1,500)
        and cmpr_eq(features:Subject8bitOnly(),1)  
        and (wclass:RANDOM_CASE_IN_IMAGE_NAME() or TermsMatchGroup(18014, 100))
        and TermsMatchGroup(18016, 100)
    then
    	SetPSAR('ar2553')
    end
    
	--ar2554
	--mxs_other mxs_mbp / #oleg_efremov
	--09.11.16 / minina
	--7668129db7583a33b87051840b529ee5 1a68308017b574cab6ba4ed31ecdea7f
 	if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
    	and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 5, 50)  
	    and cmpr_btw(features:WordCount(), 20, 200 )
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 80)
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and cmpr_gt(features:EmailsCountInBody(), 1, true)
        and cmpr_eq(features:FromRealNameWordCount(),1)  
    	and wclass:HDR_RECEIVED_VPS()
    	and wclass:HDR_LIST_UNSUBSCRIBE()
        and wclass:HAS_HEADER_SENDER() 
        and wclass:PRECEDENCE_BULK()  
    then
    	SetPSAR('ar2554')
    end
    
    --ar2555
	--mxs_other/ #zarabotok #From_Admin
	--09.11.16 / minina
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 50, 2000)
        and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)  
	    and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:WordsOtherRatio(), 10)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:SubjectWordCount(), 3)
    	and wclass:NO_USER_AGENT()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
		and StrMatchRe(features:FromRealName(), regex([[(?i)^admin$]]))
    	and StrMatchRe(features:MsgIdLocalPart(),regex([[^[A-Z\d]{4,10}\.[A-Z\d]{4,10}$]]))
    then
    	SetPSAR('ar2555')
    end
    
    --ar2556
    --fe / #google
    --09.11.16 / r.sulimov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),400)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_eq(features:MultipartNum(),3)
        and cmpr_eq(features:NoRealNameTo(),1)
        and (cmpr_eq(features:UrlNormCount(),0) or TermsMatchGroup(18010,100))
    	and cmpr_gt(features:WordsOtherRatio(), 10)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
        and TermsMatchGroup(17357, 100)
    	--and cmpr_gt(features:RepIpComplRatioByLastWeek(), 5, true)
    	and (cmpr_lt(features:UserAge(), 10, true) or cmpr_gt(features:UserAge(), 180, true) or cmpr_lt(features:RepuserAge(), 2, true))
    then
        SetPSAR('ar2556',true)
    end    

    --ar2557
    --fe / #TESTzarabotok
	--09.11.16 / r.sulimov
    --f_fib_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
 		and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and cmpr_btw(features:UrlNormCount(),1,3,true)
    	and cmpr_btw(features:Words7bitRatio(), 20, 60)
    	and cmpr_btw(features:WordCount(), 40, 200)
		and (TermsMatchGroup(17959, 10) 
        	or wclass:HDR_MANY_ENVELOPE_TO()
        	or wclass:MORE_THAN_5_RCPT()
    		or cmpr_gt(features:RepIpComplRatioByLastMonth(), 15, true)
        	or cmpr_gt(features:RepIpComplRatioByLastWeek(), 15, true)
        	or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 15, true)
    		or wclass:NEW_IP_1_DAY()
    		or wclass:SOURCE_IP_IN_XBL_AND_SOURCE_IP_IN_DNSBL())
    	and wclass:SUSP_HTML_TAG_RATIO()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2557',true)
    end
    
    --ar2558
    --mxs_other / #volosi
    --09.11.16 / philip.karpov
    --84f8d19f39fb02138c7194a065f2ba8a 2c0b66430114876c13aa78376ae1c60e 756efcd5201ba91a1ff1bb849ecca370 8d2a3cf2186bafbc989a6ecf636b8f82
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 13000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 0, 6, true)
        and cmpr_btw(features:WordCount(), 200, 600, true)
        and cmpr_btw(features:TextLines(), 2, 19, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 100)
        and cmpr_gt(features:NumberCount(), 15)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:EngRealNameFrom(), 1)
        and wclass:LONG_BOUNDARY_MORE_75()
        and wclass:FROM_LOCALPART_IN_REALNAME()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2558')
    end
    
    --ar2559
    --mxs_other / #zarabotok
    --09.11.16 / philip.karpov
    --fkd_mx3
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 6000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 3, 5, true)
        and cmpr_btw(features:UrlNormCount(), 6, 8, true)
        and cmpr_btw(features:WordCount(), 50, 300, true)
        and cmpr_btw(features:TextLines(), 15, 39, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 200)
        and cmpr_gt(features:NumberCount(), 5)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_gt(features:HtmlTagCount(), 50)
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:SPF_NOT_PASS()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
        and wclass:HAS3D_LVL_DOMAIN()
    then
        SetPSAR('ar2559')
    end

    --ar2560
	--svobodno

    --ar2561
    --fe / #casino 
    --10.11.16 / r.sulimov
    --fc_fb_usage7
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),500,30000)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 3
        and features:NoRealNameTo()
    	and cmpr_eq(features:ForwardingSubject(), true)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_gt(features:HtmlTagCount(),10)
        and cmpr_btw(features:WordCount(),20,3000)
        and cmpr_btw(features:TextLines(),8,70)
        and cmpr_btw(features:SubjectWordCount(),1, 2, true)
        and cmpr_eq(features:Subject7bitOnly(),1)
        and cmpr_eq(features:HtmlTagsUnknownCount(),1)
        and (cmpr_gt(features:AbfCitiesPerMonthNum(),1) or wclass:ABF_FAST_IP_CHANGE())
        and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:FE_TOR_IP()
    		or wclass:SUBJECT_7BBIT_AND_BODY_8BIT()
    		or wclass:ABF_FAST_CITY_CHANGE_AND_NEW_IP_30_DAYS()
    		or wclass:ABF_FAST_IP_CHANGE_AND_NEW_IP_30_DAYS()
    		--or wclass:SOURCE_IP_IN_XBL()
    		or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and wclass:SHORT_BOUNDARY()
    then
        SetPSAR('ar2561') 
    end    
    
    --ar2562
    --mxs_other / #zarabotok
    --10.11.16 / philip.karpov
    --mcc_mc_frles60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 4, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
        and cmpr_btw(features:WordCount(), 20, 100, true)
        and cmpr_gt(features:WordsOtherRatio(), 15)
        and cmpr_btw(features:TextLines(), 7, 16, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 150)
        and cmpr_btw(features:NumberCount(), 1, 10, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_btw(features:HtmlTagCount(), 10, 40, true)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:PHP_URL()
        and wclass:WORDS_WITH_NOISE()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2562')
    end
    
    --ar2563
	--svobodno
    
    --ar2564
	--svobodno

    --ar2565
	--svobodno

    --ar2566
	--mxs_mbp / #1kanal
	--10.11.16 / minina
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_gt(features:MsgSize(), 5000)
        and cmpr_eq(features:MultipartNum(), 3)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
        and cmpr_btw(features:WordCount(), 0, 2000, true)
        and cmpr_eq(features:Subject8bitOnly(),1)
    	and (wclass:FAKE_HTML_URLS() or wclass:HAS_X_RECEIVED())
        and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:NO_USER_AGENT()
        and (wclass:BOUNDARY_LESS_15() or cmpr_eq(features:ToDomain(),'yandex.ru'))
    then
    	SetPSAR('ar2566')
    end
    
    --ar2567
	--svobodno
    
    --ar2568
	--svobodno

    --ar2569
	--svobodno

    --ar2570
	--svobodno
    
    --ar2571
    --mbp / #virus #rambler 
    --10.11.16 / a.lis
    --ecf1bbdbf3a4400325e61902d5070636 962e84bfc5b911acd525d8d5a0d1c142
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10000, 100000, true)
    	and cmpr_eq(features:FromDomain(), 'rambler.ru')
    	--and (cmpr_eq(features:NoSubject(), 1) or cmpr_gt(features:SubjectNumbersCount(), 5, true))
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:HasAttach(), 1)
    	and (cmpr_eq(features:FilesExtensions(), '.docx') or cmpr_eq(features:FilesExtensions(), '.rar'))
    	and cmpr_btw(features:TextLines(), 1, 5, true)
        and wclass:BOUNDARY_WITHOUT_LETTERS()
    	and TermsMatchGroup(18021, 100)
	then
		SetPSAR('ar2571')
	end 

    --ar2572
    --mxs_other / #shun #flud #mnogotags #kartinki
    --10.11.16 / r.kulpin
    --f75b893f4714f9af017155482b3117e9 ab1ae2d3e60e7e92f354cfab07ee08a1
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other') 
       	and cmpr_btw(features:MsgSize(), 3000, 8000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
    	and features:NoRealNameTo()
        and features:NoSubject()
    	and cmpr_btw(features:WordCount(), 50, 150, true)
    	and cmpr_btw(features:TextLines(), 5, 15, true)
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:HtmlTagCount(), 10, 30)   
       	and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25()
    	and wclass:ONE_RECEIVED()  
    	and (wclass:WHITESPACE_SUSP_RATIO() or wclass:SUSP_HTML_TAG_RATIO())
        and TermsMatchGroup(18022, 100)
    then
        SetPSAR('ar2572')
    end
    
	--ar2573
	-- fe/ #zarabotok
	--10.11.2016 / zubr
	--e98704a18cbdab2495f84c9b3031bed8 c65e7af3eea83a90bd5a674d7d839d94 
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
        and not features:IsPddUser()
		and features:MsgSize() >= 1000 and features:MsgSize() <= 7000 
		and features:HasTextOnly() == 1 
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 1
		and features:UrlCountWithoutMailRu() == 1
		and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 30
		and features:TextLines() >= 4 and features:TextLines() <= 20
		and features:WordCount() >= 130 and features:WordCount() <= 250
		and features:LinesToWordsRatio() <= 10
		and features:WordsOtherRatio() >= 6 
		and features:DotRatio() <= 1
		and features:SubjectWordCount() >= 3
		and wclass:AUTOREG_WITH_BAD_CARMA()
        and (RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 20, 5) or features:RepuserAge() <= 2)
    	and features:RepuserAge() <= 20
	then
		SetPSAR('ar2573')
	end

	--ar2574
	--fe / #zarabotok #img
	--10.11.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 3000 and features:MsgSize() <= 100000
		and features:MultipartNum() > 3
    	and cmpr_eq(features:SubjectWordCount(), 1) 
        and	cmpr_btw(features:ImgNum(), 1, 5, true)
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
		and features:EmailsCountInBody() == 0
		and features:TextLines() >= 3 and features:TextLines() <= 50
		and features:WordCount() >= 130 and features:WordCount() <= 600
		and features:Words8bitRatio() >= 30
		and features:RepuserAge() <= 3
		and features:IpAge() <= 5
		and features:UrlCountWithoutMailRu() >= 1 and features:UrlCountWithoutMailRu() <= 2
		and wclass:CT_ENCODED_FILENAME()
	then
		SetPSAR('ar2574')
	end
    
    --ar2575
	--svobodno

    --ar2576
    --mxs / #pandora
    --10.08.16 / r.belyankin
    --mcc_mc_ip7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:IpAge() >= 0 and features:IpAge() <= 30
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and wclass:ONE_RECEIVED()
        and wclass:PRECEDENCE_BULK()
        and UrlsMatch(regex([[pandora[a-z]+(\-)?\d+\.[a-z]{2,3}]]),1)
    then
        SetPSAR('ar2576')
    end

    --ar2577
	--svobodno
    
    --ar2578
    --fe / #zarabotok
	--08.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
 		and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_btw(features:WordCount(), 20, 700)
        and cmpr_lt(features:RepuserAge(), 10, true)
    	and (wclass:FE_ONE_WORD_7BIT_SUBJECT_WITH_MOSTLY_8BIT_BODY()
        	or cmpr_gt(features:RepIpComplRatioByLastMonth(), 15, true)
            or wclass:NEW_REP_IP_AND_COMPL_RATIO_BY_LAST_DAY()
    		or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and wclass:RUSSIAN_FROM_REALNAME()
        and (wclass:FROM_ENDS_IN_NUMS()
        	or wclass:FROM_ENDS_WITH_YEAR()
    		or wclass:AUTOREG())
        and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2578')
    end
    
    --ar2579
    --mxs_mbp #forex
    --30.11.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and (wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:PSEUDO_DMARC_AND_PHP_SCRIPT())
        and (wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
        and TermsMatchGroup(18012, 100)
        and not TermsMatchGroup(18189,100)
    then
        SetPSAR('ar2579')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2579')
    end

    --ar2580
    --mxs_mbp #raznoe_govno
    --10.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
        and features:ShingleTextSize() > 1000
		and features:UrlNormCount() == 0
    then
        SetPSAR('ar2580', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2580')
    end
    
    --ar2581
    --mxs_mbp #blogspot
    --10.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and UrlsMatchStr('.blogspot.')
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    then
        SetPSAR('ar2581', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2581')
    end
    
    --ar2582
    --mxs_mbp #download
    --10.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and features:UrlNormCount() == 0
        and features:ShingleTextSize() < 200
        and wclass:HAS_LONG_EPILOGUE()
    then
        SetPSAR('ar2582')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2582')
    end

    --ar2583
    --mxs_mbp #spf+email
    --10.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and wclass:EMAIL_IN_FROM_REAL_NAME()      
        and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar2583', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2583')
    end

    --ar2584
    --mxs_mbp #eng+shorturl
    --10.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:Words7bitRatio() >= 70
        and wclass:SHORTURL()
        and wclass:TO_EMAIL_IN_REALNAME()
    then
        SetPSAR('ar2584')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2584')
    end

    --ar2585
    --fe / #zarabotok
	--08.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
 		and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and cmpr_eq(features:UrlNormCount(),1, 2, true)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_btw(features:UrlNormCount(),1,3,true)
    	and cmpr_btw(features:WordCount(), 20, 700)
    	and (cmpr_gt(features:RepIpComplRatioByLastMonth(), 20)
        	or cmpr_gt(features:RepIpComplRatioByLastWeek(), 20)
    		or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2585')
    end
    
	--ar2586
	--svobodno	
    
    --ar2587
	--svobodno
    
    --ar2588
	--svobodno
    
    --ar2589
	--svobodno
    
    --ar2590
	--svobodno

	--ar2591
	--fe / #zarabotok tr
	--11.11.16 / r.sulimov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:UserAge(), 50, true)
    	and cmpr_lt(features:RepuserAge(), 3, true)
    	and (TermsMatchGroup(18026, 100)
        	or cmpr_eq(features:UrlNormCount(),1))
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and HeaderMatch('X-Mru-User-Agent','Opera/9.80')
        and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and wclass:FE_REGIONS_MISMATCH()
    	and (wclass:HDR_MANY_ENVELOPE_TO()
        	or wclass:MORE_THAN_N_RCPT())
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar2591')
    end		
    
    --ar2592
    --mxs_mbp 
    --10.11.16 / a.sokolov
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and cmpr_lt(features:IpAge(), 100)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
		and wclass:SPF_NOT_PASS()
    then
        SetPSAR('ar2592', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2592')
    end

    --ar2593
	--svobodno

    --ar2594 svobodno     
    
    --ar2595
	--svobodno
    
	--ar2596
	--svobodno
    
    --ar2597
	--mxs / #privet #2subj
	--11.11.16 / r.kulpin	
	--319de0d812e8b5ede0d4400961c9c2d0 9b35d01abea13286a4efc615b36efe36
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_other")
    	and cmpr_btw(features:MsgSize(), 100, 8500)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 4)
        and features:NoRealNameTo() 
    	and	cmpr_btw(features:TextLines(), 1, 25, true)
        and (wclass:DOUBLE_SUBJECT() or (wclass:SUBJECT_NUMBERS_ONLY() and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25()) 
           or (wclass:FROM_REALNAME_IN_LOCALPART() and wclass:LONG_HELO())) 
        and (wclass:SUSP_SHORT_TEXT_PART() or wclass:PTR_ERROR() or wclass:DYNAMIC_PTR_IN_DNSBL() or wclass:NEW_IP_30_DAYS_WITH_5_DAY_GAP())
        and wclass:ONE_RECEIVED()
    then
    	SetPSAR('ar2597')
    end 
    
    --ar2598
	--svobodno
    
    --ar2599
    --mxs_mbp / #McDonald's
    --11.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 500, 50000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 1, 50, true)
    	and cmpr_btw(features:WordCount(), 1, 500, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and HasHeader('X-Mailru-Msgtype')
    	and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:PRECEDENCE_BULK()
      	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and wclass:HDR_LIST_UNSUBSCRIBE()
    	and HeaderMatchRe('Content-Type', regex([[(?i)boundary=-{1,4}boundary_\d{4,10}_[a-z\d-]{5,50}]]))
	then
		SetPSAR('ar2599')
	end

    --ar2600
    --mxs_mbp / #zarabotki
    --11.11.16 / r.kulpin
    --84b4382d434df7954e0bb93e8055e9d4 f31d8223e1f27c34fad021136e770437
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 1500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and features:IsFromRambler()
     	and features:FromRealNameWordCount() == 1
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_btw(features:WordCount(), 2, 50)
        and wclass:UNAVAILABLE_IN_RECEIVED_AND_LASTHELO_WITHOUT_DOMAIN()
    	and wclass:VERY_LONG_LOCALPART()
    	and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25()
    then   
        SetPSAR('ar2600')
    end

    --ar2601
    --mxs_other / #zarabotok #bad_recieved
    --11.11.16 / r.kulpin
    --55218534b8152ab8f0e48f8c3ac7301c a040d80d03ccafca8ba20b5f940ed38e
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 500, 3000, true) 	   		   	
		and features:HasTextOnly() == 1		
    	and cmpr_eq(features:MultipartNum(), 1)
    	and features:NoRealNameTo() == 1
  		and cmpr_eq(features:UrlNormCount(), 1)   
    	and cmpr_btw(features:WordCount(), 10, 100, true)
    	and cmpr_btw(features:TextLines(), 8, 30, true)
    	and wclass:RECEIVED_BAD_PATTERN_4()
    	and (wclass:FAKE_MSG_ID() or wclass:NEW_DKIM_7_DAYS())
    	and wclass:NEW_IP_7_DAYS()
	then      	
        SetPSAR('ar2601')     	
    end

	--ar2602
	--svobodno

    --ar2603
    --mxs_mbp / #rambler #vbei_v #yandex_url
	--02.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:RamblerSmtp()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and cmpr_gt(features:WhitespaceToWordRatio(), 300)
        and UrlsMatchStr('yandex',1)
	then
        SetPSAR('ar2603')
    end
    
    --ar2604
    --fe / #chastot #ymlp
    --11.11.2016 / r.kulpin
    if not IsBlocked 
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and UrlsMatch(regex([[\.ymlp\d+\.com$]]))
    	and SFKD('ar2604', features:Subject(), 60, 5)
    then
        SetPSAR('ar2604') 
    end
    
    --ar2605
    --svobodno
    
    --ar2606
	--svobodno
    
    --ar2607
	--svobodno

    --ar2608
    --mxs / #zarabotok
    --11.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 10000 and features:MsgSize() <= 150000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3  
        and features:TextLines() >= 50 and features:TextLines() <= 200
        and features:WordCount() >= 300 and features:WordCount() <= 800 
        and wclass:ONE_RECEIVED()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
        SetPSAR('ar2608')
    end
    
    --ar2609
    --fe / #mp3 #zarabotok
    --12.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(),30000)
        and features:HasAttach()
        and features:AttachMultimediaCount() > 0
        and features:FromEndsWithYear()
        and features:NoRealNameTo()
        and features:UrlNormCount() > 0
        and features:HtmlTagCount() > 50
        and features:RcptNum() > 5
        and wclass:PHP_URL()
        and StrMatch(features:PartsFilenames(),'.mp3')
    then
        SetPSAR('ar2609') 
        LogMsgToHadoop('dstat_rassadovskiy_log', '#ar2609')
    end
    
    --ar2610
    --mxs_mbp / #rambler #zarabotok #attach_noise
    --12.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(),1000)
        and features:IsFromRambler()
        and features:HasAttach()
        and (features:NoSubject() or wclass:HAS_SUSP_URLS())
        and features:UrlNormCount() > 0
        and cmpr_btw(features:HtmlTagCount(),3,20)
        and features:NoBodyTag()
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:PHP_URL()
    	and not UrlsMatchStr('viewtopic.php',1)
    then
        SetPSAR('ar2610') 
    end
    
    --ar2611
	--svobodno
    
    --ar2612
    --mxs_esp / #getresponse #yandex
    --12.11.2016 / rassadovskiy
    --from CB
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(),2000,50000)
        and features:HasTextOnly() == 1
        and cmpr_btw(features:MultipartNum(),1,3,true)
        and features:NoRealNameTo()
        and features:FromDomain() == 'yandex.ru'
        and features:MsgIdDomain() == "getresponse.com" 
        and features:NoRealNameTo()
        and features:FromRealNameWordCount() == 1
        and features:EngRealNameFrom()
        and StrMatchRe(features:FromLocalPart(),regex([[^[a-z]{3,}\d{3,}$]]))
    then
        SetPSAR('ar2612') 
    end
    
    --ar2613
    --mxs_other / #anna
    --12.11.16 / razuvaev
    --9f4e87249618988d8a7e076016b04240 a5af71009c83d7a9e0e83ccdf56017b4
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 15000, 35000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_gt(features:WordCount(), 500)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:MultipartNum(), 3,true)
        and cmpr_eq(features:FromRealNameWordCount(),1)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and cmpr_lt(features:DotCount(),10)
        and wclass:FROM_LOCALPART_IN_REALNAME()
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2613')
    end
    
    --ar2614
    --mxs_other / #25000
    --12.11.16 / razuvaev
    --b5c2eb046f25c156f677f28c41ab2b00 fd7e769277c39d696732d5f5df924336
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 100, 40000)
        and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_btw(features:TextLines(),3,40)
        and cmpr_btw(features:WordCount(),20,700)
        and cmpr_gt(features:SubjectNumbersCount(),1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:SubjectWordCount(),5)
        and wclass:SHORTURL()
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
        and wclass:SUSP_CHARS_IN_SUBJ_SEEMS_NORMAL()
    then
        SetPSAR('ar2614')
    end
    
    --ar2615
	--svobodno
    
    --ar2616
    --mxs_mbp / #rambler #news_noise
    --14.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_gt(features:MsgSize(),30000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 3
        and features:IsFromRambler()
        and features:UrlCount() > 10
        and features:HtmlTagCount() > 100
        and features:NoBodyTag()
        and features:WhitespaceToWordRatio() > 300
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and TermsMatchGroup(17921,100)
    then
        SetPSAR('ar2616') 
    end
    
    --ar2617
    --fe / #zarabotok
    --13.11.16 / philip.karpov
    --fc_fb_hasat
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 2000, 50000000)
        and cmpr_eq(features:HasAttach(), 1)
        and (not cmpr_eq(features:AttachOfficeCount(), 1) or wclass:PHP_URL())
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        --and (cmpr_lt(features:RepuserAge(), 10, true) or cmpr_eq(features:AbfCityWasChanged(), true))
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 30)
        and cmpr_gt(features:TextLines(), 2, true)
        and cmpr_gt(features:WordsOtherRatio(), 5)
        and cmpr_gt(features:Words8bitRatio(), 66)
        and cmpr_gt(features:HtmlTagCount(), 5, true)
        and cmpr_gt(features:HtmlUniqueTagCount(), 3, true)
		and not features:ForwardingSubject()                --zubr fix
		and not features:ReplyInSubject()                   --zubr fix
        and wclass:CT_ENCODED_FILENAME()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar2617', true)
    end
    
    --ar2618
    --fe / #pidori
    --13.11.16 / philip.karpov
    --f_fob_m200
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 1, 15, true)
        and cmpr_btw(features:TextLines(), 1, 4, true)
        and cmpr_eq(features:Words7bitRatio(), 100)
        and not features:MailRuTo()
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar2618', true)
    end
    
    --ar2619
    --mxs_other / #zarabotok #onlyurls
    --13.11.16 / razuvaev
    --3ab5cb9cc9f5c0b7a149ef12018f8264 e5d0ae99cc651365223454a4b74e434d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 70000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
        and cmpr_btw(features:UrlCount(), 1, 500,true)
        and cmpr_btw(features:WordCount(), 1, 2000)    
        and cmpr_lt(features:TextLines(),15)
        and cmpr_gt(features:DotCount(), 400)
        and (cmpr_gt(features:WhitespaceCount(), 100) or wclass:FAKE_HTML_URLS())
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass: SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and (wclass:SUSP_SENDER_HELO_DOMAIN() or wclass:MULTIPLE_HEADERS())
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN() 
    then
        SetPSAR('ar2619')
    end
    
    --ar2620
    --mxs_mbp / #borodina
    --13.11.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_gt(features:WordCount(), 50)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and cmpr_gt(features:NumberCount(), 5000)
        and wclass:HAS_X_RECEIVED()
        and wclass:NO_URLS_WITH_HTML_TAGS()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2620')
    end
    
    --ar2621
    --fe / #zarabotok
    --13.11.16 / philip.karpov
    --fc_fb_hasurl
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and (cmpr_eq(features:MultipartNum(), 1) or cmpr_eq(features:MultipartNum(), 3))
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 50, 200, true)
        and cmpr_gt(features:Words8bitRatio(), 80)
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:YEAR_IN_FROM_LOCAL_PART()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar2621')
    end

    --ar2622
    --mxs_other / #vulkan
    --13.11.16 / razuvaev
    --954f6929b6934572db5f84756f106136 8f4ed7169dd0e612db54865d4c65e745
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 70000, 300000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3) 
        and cmpr_gt(features:TextLines(),150)
        and cmpr_gt(features:WordCount(),1000)
        and cmpr_gt(features:HtmlTagCount(),150)
        and cmpr_lt(features:HtmlUniqueTagCount(),22)
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass: EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        and HeaderMatchRe('Received', regex([[\w\+[a-zA-Z0-9]{10,100}\@]]))
    then
        SetPSAR('ar2622')
    end
    
    --ar2623
    --mxs_mbp/ #podarok_na_ng
    --23.12.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 500, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:WordCount(), 10, 150)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
       	and features:IsFromGoogle()
       	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:NO_USER_AGENT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    then
    	SetPSAR('ar2623')
    end
    
    --ar2624
	--mxs_mbp / #yahoo #vbei_v
	--26.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 100, 200000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'yahoo.com')
    	and features:UrlNormCount() == 0  
    	and (cmpr_gt(features:WhitespaceToWordRatio(), 2000) or cmpr_btw(features:TextLines(), 1, 5, true))
    	and cmpr_eq(features:NoHtmlTag(), 1)
    	and cmpr_eq(features:NoBodyTag(), 1)
    	and wclass:NO_USER_AGENT()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
	then
		SetPSAR('ar2624')
	end

    --ar2625
	--svobodno
    
    --ar2626
    --mxs_mbp / #aol
    --14.11.16 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3) 
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and wclass:HELO_IN_MSGID()
        and TermsMatchGroup(18038,100)
        and UrlsMatchStr('docs.google.com')
        and (wclass:RELAY_RECEIVED_FROM_FREEMAIL() or wclass:FROM_REALNAME_IN_LOCALPART())
    then
        SetPSAR('ar2626')
    end
    
	--ar2627
    --fe / #zarabotok
	--13.11.16 / r.kulpin
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_btw(features:TextLines(), 2, 100, true)
        and cmpr_btw(features:WordCount(), 30, 1000)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)	
        and cmpr_btw(features:Words8bitRatio(), 80, 98, true)
        and wclass:FROM_ENDS_WITH_YEAR()
    	and wclass:REP_USER_SPAM_RATE_MORE_10()
    	and wclass:AUTOREG()
    then
        SetPSAR('ar2627')    
    end    
    
    --ar2628
    --mxs / #zarabotok #more_url #hidden_url
    --25.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() >= 100
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 500 and features:WordCount() <= 5000
        and (wclass:NEW_IP_30_DAYS_WITH_10_DAY_GAP() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:NEW_IP_15_DAYS())
    then
        SetPSAR('ar2628')
    end

    --ar2629
	--svobodno
    
    --ar2630
    --mxs_mbp zarabotki
    --27.11.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and (features:ShingleTextSize() < 500
    		or cmpr_gt(features:NumbersToZeroRatio(), 30)
    		or wclass:SUBJECT_MIXED_BADRATIO())
		and features:UrlNormCount() == 1
        and wclass:EMAIL_IN_FROM_REAL_NAME()
    then
        SetPSAR('ar2630')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2630')
    end

	--ar2631
	--svobodno
    
    --ar2632
	--svobodno
    
    --ar2633
	--svobodno

    --ar2634
    --mxs_mbp/ #virus
    --14.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 200000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:ImgNum(), 0)
  	  	and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_btw(features:WordCount(), 1, 50, true)
		and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
    	and wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
        and StrMatchRe(features:PartsFilenames(), regex([[\d{3,}\.zip]]))
    then
        SetPSAR('ar2634')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2634')
    end

	--ar2635
    --mxs_mbp/ #seo
    --14.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
   		and cmpr_lt(features:ShingleTextSize(), 1000)
        and cmpr_btw(features:WordCount(), 1, 200, true)
		and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:UrlNormCount(), 0, 2, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
   		and cmpr_eq(features:NoRealNameFrom(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
        --and wclass:SUBJECT_MIXED_BADRATIO()
        and TermsMatchGroup(18037, 100)
    then
        SetPSAR('ar2635')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2635')
    end

    --ar2636
    --mxs_other / #kniga #zarabotok
    --14.11.16 / minina / fix zubr
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 1000, 20000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 100, true)
    	and cmpr_btw(features:WordCount(), 1, 500, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and cmpr_eq(features:UrlNormCount() , 1)
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and wclass:ONE_RECEIVED()
      	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
      	and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS())
    	and wclass:HDR_LIST_UNSUBSCRIBE()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
	then
		SetPSAR('ar2636')
	end
    
	--ar2637
    --mxs_other / #liveinternet #zarabotok
    --14.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 100, 2000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 50, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and cmpr_eq(features:UrlNormCount() , 1)
    	and wclass:SPF_NOT_PASS()
      	and wclass:W8BIT_NO_CTE()
      	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:MAIL_RU_MSGID_PATTERN()
    	and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar2637')
	end

	--ar2638
	--svobodno
    
	--ar2639
	--svobodno
    
	--ar2640
	--svobodno   
    
    --ar2641
    --fe/ #seo
    --28.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 10, 5000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
   		and cmpr_lt(features:ShingleTextSize(), 1000)
        and cmpr_btw(features:WordCount(), 1, 200, true)
		and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:UrlNormCount(), 0, 2, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
   		and cmpr_lt(features:RepuserAge(), 5, true)
		and features:ToRealNameInToLocalPart()
    	and wclass:MOBILE_MAIL_RU()
        and TermsMatchGroup(18037, 100)
    then
        SetPSAR('ar2641')
    end
    
    --ar2642
    --mxs / #zarabotok
    --11.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0  
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 1 and features:WordCount() <= 15
        and features:Word8bitCount() == 0 
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:FROM_AND_REPLY_TO_REALNAMES_MISMATCH()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^(?:\d+(?:\-|\.))?[a-z\d]+(?:\-|\.)[a-z\d]{2,20}(?:\-|\.)\d+(?:(?:\-|\.)[a-z\d]+)?(?:(?:\-|\.)[a-z\d]+)?$]]))
    then
        SetPSAR('ar2642')
    end
    
    --ar2643
	--svobodno
    
    --ar2644
    --mxs / #img
    --15.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
        and features:HasNoAttach() == 1   
        and features:ImgNum() == 1
        and features:UrlCount() == 0
        and features:Subject7bitOnly() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 15
        and features:WordCount() >= 1 and features:WordCount() <= 25
        and features:Word8bitCount() == 0
        and wclass:SUSP_IMAGE_NAME()
        and (wclass:SUBJECT_ONLY_WITH_IMAGE() or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY())
        and wclass:DOMAINS_EQUAL()
        and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2644')
    end

    --ar2645
	--svobodno
    
    --ar2646
	--svobodno
    
    --ar2647
	--svobodno
    
    --ar2648
	--svobodno
    
    --ar2649
    --mxs_mbp / #virus #shtraf
    --15.11.16 / a.lis
    --a427a966ef0630f01eacc80c261263da 
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 20000, 70000, true)
    	and cmpr_eq(features:FromDomain(), 'rambler.ru')
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.docx')
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:MultipartNum(), 1)
    	and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_eq(features:NoSubject(), 1)
    	and TermsMatchGroup(18043, 100)
    then
		SetPSAR('ar2649')
	end 
    
	--ar2650
    --fe / #zarabotok #shum #attach #extension
    --06.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 0)
    	and cmpr_eq(features:AttachArchiveCount(), 0)
    	and cmpr_eq(features:AttachMultimediaCount(), 0)
        and cmpr_lt(features:RepuserAge(), 15, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
    	and cmpr_gt(features:SubjectWordMixedCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 10, 100)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 5, 30)
    	and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar2650') 
    end

	--ar2651
	--mxs_mbp / #rabota na domu #test
	--15.11.16 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_mbp"
		and features:HasTextOnly() == 1
		and features:MsgSize() >= 500
		and features:TextLines() >= 2 
		and features:WordCount() >= 20
		and features:WordsMixedRatio() >= 40 
		and features:Words8bitRatio() >= 4
	then
		SetPSAR('ar2651',true)
	end

	--ar2652
    --svobodno
    
	--ar2653
    --svobodno

	--ar2654
	--mxs_other / #podstavnoi domen
	--15.11.16 / zubr
    if not IsBlocked
        and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_other"
		and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
		and wclass:NEW_IP_7_DAYS()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
	then
		SetPSAR('ar2654')
	end
    
	--ar2655
	--mxs_other / #podstavnoi domen
	--15.11.16 / zubr
    if not IsBlocked
		and features:RcvSrc() == "mxs"
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
		and wclass:SUSP_FROM_AND_REPLY_TO()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:SOFTFAIL_SPF()
		and wclass:HAS_X_PHP_SCRIPT()
	then
		SetPSAR('ar2655')
	end

	--ar2656
	--mxs_other / #zarabotok
	--24.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and wclass:LONG_FROM_REAL_NAME_FROM_RAMBLER()
		and features:WordCount() >= 30
		and features:LinesToWordsRatio() >= 28
		and wclass:FROM_RAMBLER()
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
	then
		SetPSAR('ar2656')
	end

	--ar2657
	--mxs_other / #zarabotok #test
	--15.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
		and features:HasTextOnly() == 1
		and wclass:X_PRIORITY_HIGH()
		and wclass:TERMS_ZARABOTOK_V_SETI()
	then
		SetPSAR('ar2657', true)
	end

    --ar2658
    --mxs_mbp / #zarabotok #google.com/forms
    --15.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:NoRealNameFrom(), 1)
    	and cmpr_btw(features:WordCount(), 50, 1000, true)
    	and cmpr_btw(features:TextLines(), 5, 100, true)
       	and cmpr_btw(features:UrlNormCount(), 3, 10, true)
    	and cmpr_btw(features:HtmlTagCount(), 20, 200, true)
    	and features:IsFromGoogle()
       	and wclass:SHORT_BOUNDARY()
    	and wclass:HAS_X_RECEIVED()
        and (wclass:WORDS_OTHERS_BAD_RATIO() or wclass:MX_INVALID_RATE_MORE_THAN_5())
    	and (wclass:HAS_EXTERNAL_IMG() or wclass:SHORT_BOUNDARY())
    	and UrlsMatchStr('docs.google.com/forms', 1)
    then
        SetPSAR('ar2658')
    end	

	--ar2659
	--svobodno
    
    --ar2660
    --mxs / #varikoz
    --15.11.16 / razuvaev
    --60786b1de355ddf32704ffd685fb58f3 77825e60e4284c21273c94aaf92c8e91
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 20000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and features:MultipartNum() == 4  
        and cmpr_btw(features:TextLines(), 300, 500)
        and cmpr_btw(features:WordCount(), 500, 1000)
        and cmpr_lt(features:WordMixedCount(),5)
        and cmpr_lt(features:DotCount(),5)
        and cmpr_eq(features:FromRealNameWordCount(),1)  
        and cmpr_lt(features:SubjectLen(),5)
        and wclass:HELO_IN_MSGID()
        and (wclass:RUSSIAN_FROM_REALNAME() or wclass:FROM_LOCALPART_IN_REALNAME())
        and wclass:HELO_IN_FROM()
    then
        SetPSAR('ar2660')
    end
    
    --ar2661
	--svobodno
    
	--ar2662
	--mxs_other / #zarabotok
	--15.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:IsFromFreeMail() == 1
		and wclass:X_PRIORITY_HIGH()
	then
		SetPSAR('ar2662', true)
	end

	--ar2663
    --fe / #zarabotok
	--23.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
        and not wclass:EXCEPTIONS()
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_gt(features:AttachAllCount(), 1, true)
    	and cmpr_eq(features:AttachArchiveCount(), 0)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:WordCount(), 100)
       	and cmpr_btw(features:UrlNormCount(), 1, 15, true)
    	and (RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 60, 30) or cmpr_lt(features:RepuserAge(), 5, true))
       	and wclass:AUTOREG()
    	and wclass:CT_ENCODED_FILENAME()
        and not features:FilesExtensions() == ".pdf"
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 84600)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 10)
        then
            SetPSAR('ar2663')
        end
    end
    
	--ar2664
	--mxs_other / #englesh
	--10.01.2017 / zubr
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and wclass:FROM_ADMIN()
        and wclass:NO_MIME()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:HAS_IMAGE_URL()
        and wclass:ONE_RECEIVED()
        and wclass:PHP_URL()
        and wclass:NO_CTE()
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
        SetPSAR('ar2664') 
    end
    
	--ar2665
	--fe / #buhgalter #.gz
	--15.11.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
       	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachArchiveCount(), 1)
    	and cmpr_gt(features:MultipartNum(), 5, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	--and cmpr_lt(features:Karma(), 0, true)
    	and (cmpr_lt(features:RepuserAge(), 15, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 20, 4))
    	and features:MailRuTo() 
    	and cmpr_btw(features:WordCount(), 10, 1000, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30, true)
    	and StrMatch(features:FilesExtensions(), '.gz')
  		and (wclass:FAKE_REPLY_IN_SUBJECT() or wclass:NO_SUBJECT() or TermsMatchGroup(18042,100) or cmpr_eq(features:ImgNum(), 1))
    	and wclass:CT_ENCODED_FILENAME()
    then
    	SetPSAR('ar2665')
    end


    
	--ar2666
	--mxs_mbp / #borodina #test
	--15.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:ImgNum() >= 2
		and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
		and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
		and HeaderMatchRe('Received', regex([[from\s+[A-Za-z]{4,10}\s+]]))
	then
		SetPSAR('ar2666')
	end
    
    --ar2667
    --fe / #efremov
    --15.11.16 / razuvaev
    --50198e56978e3539240862a1035e8c1f e06f78c8ea3375b46c532c8566404a60
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:FilesExtensions(),".mp3")
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(), 5)  
        and cmpr_btw(features:UrlCount(), 1,20,true)
        and cmpr_btw(features:WordCount(), 30,250)
        and cmpr_gt(features:TextLines(), 10,30)
        and cmpr_gt(features:DotCount(),5)
        and wclass:USER_AGE_30()
        and wclass:WHITESPACE_SUSP_RATIO()
    then
        SetPSAR('ar2667')
    end
    
    --ar2668
	--svobodno

	--ar2669
    --mxs / #zarabotok
    --15.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 100
        and features:MultipartNum() == 1
        and features:SimpleType() == 'text'
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 20 and features:WordCount() <= 150  
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:NEW_IP_15_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:NEW_FROMDOMAIN_30_DAY())
        and UrlsMatch(regex([[\/(dred|sawq|awqpa|xdog|gbemi|zenno)\.php$]]),1)
    then
        SetPSAR('ar2669')
    end

    --ar2670
	--svobodno
    
    --ar2671
    --mxs / #pidori #prigloshenie
    --15.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 100000
        and features:HasTextOnly() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 500
        and features:WordCount() >= 50 and features:WordCount() <= 2000 
        and HeaderMatchRe('Content-type', regex([[boundary=\-{2,5}\[\[BOUNDARY\]\];$]]),1)
    then
        SetPSAR('ar2671')
    end
    
    --ar2672
    --mxs_mbp/ #@_in_body
    --15.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_gt(features:UrlsTextSize(), 40)
        and wclass:HAS_PHP_SCRIPT_AND_MS_MAILER()
        and wclass:SPF_NOT_PASS()
        and UrlsMatchStr('@', 1)
    then
        SetPSAR('ar2672')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2672')
    end
    
    --ar2673
	--svobodno
    
    --ar2674
	--svobodno
    
    --ar2675
    --mxs_mbp/ #kreditki
    --16.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:MESSAGE_ID_NO_DOMAIN()
        and wclass:SHORT_MESSAGE()
    then
        SetPSAR('ar2675')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2675')
    end
    
    --ar2676
	--svobodno
    
	--ar2677
    --mxs_mbp/ #.xyz
    --16.11.16 / a.sokolov
    if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and wclass:EMAIL_IN_FROM_REAL_NAME()      
        and UrlsMatchStr('.xyz')
    then
        SetPSAR('ar2677')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2677')
    end
    
	--ar2678
    --mxs_mbp / #yadi.sk #zarabotok
    --10.01.2017 / zubr
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"
        and features:MsgSize() >= 100 and features:MsgSize() <= 500
        and features:HasTextOnly() == 1
        and wclass:FAKE_FROM_REALNAME()
        and wclass:YANDEX_DISC()
    then
        SetPSAR('ar2678') 
    end
    
    --ar2679
    --fe / #tender 
    --16.11.16 / a.lis
    --782de0fcc97fc66919f1df2d30c0e5ee eafa5aa8bae818263ff36c7755c05a91 f18e59a9523b9e45759a6bfaf2a3b278
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'fe')
		and cmpr_gt(features:MsgSize(), 100000)
    	and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.jpg')
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:TextLines(), 0)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_lt(features:Karma(), 0, true)
    	and (cmpr_eq(features:RepuserAge(), 1)
            or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 3, 10))
    	and TermsMatchGroup(18049, 100)
	then
		SetPSAR('ar2679')
	end 
    
    --ar2680
    --mxs_other / #virus
    --15.11.16 / a.lis
    --fab4e2ba6a4cb3d32127daa8189353ca 0d752064a8496706edd4a35216c7f96e
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 15000, 70000, true)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_gt(features:MultipartNum(), 2)
    	and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoSubject(), 1)
    	and StrMatch(features:FilesExtensions(), '.gz')
		and TermsMatchGroup(18042, 100)
	then
		SetPSAR('ar2680')
	end 
    
    --ar2681
	--svobodno

	--ar2682
	--svobodno

    --ar2683
	--mxs_esp
	--16.11.2016 / sokolik
    --malo_teksta_mnogo_urlov_no_attach_with_address
	if not IsBlocked
    	and features:RcvSrcExt() == "mxs_esp"
		and features:HasTextOnly() == 1
        and features:IsFromFreeMail() == 1
        and features:ShingleTextSize() < 1500
		and features:UrlCount() > 3
        and features:ToRealName() == "Friend" 
    	and features:HasFreeHosting() == 1
    	and not wclass:RUSSIAN_FROM_REALNAME()
 	then
        SetPSAR('ar2683')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2683')
    end
    
    --ar2684
	--svobodno
    
    --ar2685
	--svobodno
    
	--ar2686
	--svobodno
    
	--ar2687
    --mxs_mbp/ #blogspot
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UrlNormCount(), 2, true)
        and (features:ShingleTextSize() < 1000
    		or wclass:MORE_THAN_ONE_EMAILS_IN_FROM()
			or cmpr_gt(features:UrlsTextSize(), 50))
        and wclass:EMAIL_IN_FROM_REAL_NAME()
        and UrlsMatchStr('.blogspot.')
    then
        SetPSAR('ar2687')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2687')
    end 
    
	--ar2688
    --mxs_other / #pidori #varikoz
    --15.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_btw(features:TextLines(), 50, 500, true)
        and cmpr_btw(features:WordCount(), 50, 1000, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
    	and cmpr_btw(features:LinesToWordsRatio(), 30, 80)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:NoSubject() , 1)
    	and features:IpCategory() == 'tiny'
    	and not features:DkimDomain()
    	and features:MsgIdLocalPart()
		and #features:MsgIdLocalPart() >= 30
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and wclass:NO_USER_AGENT()
    then
		SetPSAR('ar2688')
	end
    
    --ar2689
	--svobodno

	--ar2690
	--mxs_other / #zarabotok
	--15.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:IsFromFreeMail() == 1
		and wclass:X_PRIORITY_HIGH()
		and features:From()
		and SFKD('ar2690', {features:From()}, 60, 40)
	then
		SetPSAR('ar2690')
		LogMsgToHadoop( 'dstat_zubrilova_log', '#ar2690')
	end
    
    --ar2691
    --mxs_mbp / #oriflame #1pic
    --16.11.16 / razuvaev
    --9b40e747fe084f6bc7b3c1201f7c23d3 c019e1891bfd0ea58567ee1961fa24f9
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 5000,50000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(),5)  
        and cmpr_gt(features:WordCount(),5,50)
        and cmpr_eq(features:NoBodyTag(), 1)
        and cmpr_lt(features:TextLines(), 15)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:ToUndisclosed(),1)
        and cmpr_eq(features:ImgNum(),1)
        and cmpr_eq(features:SubjectLen(),0)
        and wclass: RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar2691')
    end
    
	--ar2692
    --mxs_other / #pidori #varikoz
    --16.11.16 / zubr
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_btw(features:TextLines(), 50, 500, true)
        and cmpr_btw(features:WordCount(), 50, 1000, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 1, 15, true)
    	and cmpr_btw(features:LinesToWordsRatio(), 30, 80)
		and features:WhitespaceToWordRatio() <= 65
    	and cmpr_eq(features:NoSubject() , 1)
    	and not features:DkimDomain()
    	and features:MsgIdLocalPart()
		and #features:MsgIdLocalPart() >= 30
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and wclass:NO_USER_AGENT()
    then
		SetPSAR('ar2692')
	end
    
    --ar2693
	--svobodno
    
	--ar2694
	--fe / #casino
	--21.11.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 500, 500000)
       	and features:HasTextOnly() == 1
    	and features:MultipartNum() == 3
    	and features:NoRealNameTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and (cmpr_lt(features:RepuserAge(), 3) or wclass:HAS_2_DAYS_GAP())
    	and features:MailRuTo() 
    	and (cmpr_eq(features:SubjectWordCount(), 1) or cmpr_gt(features:SubjectWord7bitCount(), 0))
    	and cmpr_btw(features:WordCount(), 10, 1200, true)
        --and cmpr_lt(features:TextLines(), 10)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100, true)
    	--and cmpr_lt(features:WhitespaceToWordRatio(), 200)
  		and wclass:SHORT_BOUNDARY()
    	and wclass:FE_TOR_IP()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar2694')
    end
    
	--ar2695
	--svobodno
    
    --ar2696
	--svobodno
    
    --ar2697
    --fe / #zarabotok
    --16.11.16 / razuvaev
    --fc_fb_hasat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 2000, 50000000)
        and cmpr_eq(features:HasAttach(), 1)
        and (not cmpr_eq(features:AttachOfficeCount(), 1) or wclass:PHP_URL())
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and (cmpr_lt(features:RepuserAge(), 10, true) or cmpr_eq(features:AbfCityWasChanged(), true))
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 30)
        and cmpr_gt(features:TextLines(), 2, true)
        and cmpr_gt(features:Words8bitRatio(), 66)
        and cmpr_gt(features:HtmlTagCount(), 5, true)
        and TermsMatchGroup(18055, 100) 
    	and UrlsMatchStr('.php', 1)
   
    then
        SetPSAR('ar2697')
    end
    
    --ar2698
	--svobodno

    --ar2699
	--svobodno
    
    --ar2700
	--svobodno
    
    --ar2701
    --mxs / #zarabotok #pdf
    --16.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 30000 and features:MsgSize() <= 200000
        and features:HasAttach() == 1
        and features:AttachAllCount() == 1
        and features:FilesExtensions() == '.pdf'
        and features:ImgNum() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 2
        and features:WordCount() >= 1 and features:WordCount() <= 15
        and features:HtmlTagCount() == 0
        and wclass:ONE_RECEIVED()
        and (wclass:NEW_IP_30_DAYS() or wclass:FAIL_SPF() or wclass:DKIM_FAIL())
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
    then
        SetPSAR('ar2701')
    end
 
    --ar2702
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	and cmpr_lt(features:UserAge(), 30)
    	and cmpr_eq(features:AttachOtherCount(), 1)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_btw(features:WordCount(), 20, 700)
    	and cmpr_gt(features:WordOtherCount(), 15)
    	and cmpr_btw(features:HtmlTagCount(), 10, 30)
    	and cmpr_gt(features:RcptNum(), 5)
    	and wclass:SUBJECT_MIXED_BADRATIO()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and UrlsMatchStr('.ru/')
    then
        SetPSAR('ar2702')
    end

    --ar2703
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	--and cmpr_lt(features:Karma(), 0, true)
		and cmpr_eq(features:RcptNum(), 1)
    	and cmpr_eq(features:UrlNormCount(),1)
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2703', true)
    	LogMsgToHadoop('dstat_sulimov_log', 'RCPT1_TEST')
    end

    --ar2704
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	--and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:RcptNum(), 2, 5, true)
    	and cmpr_eq(features:UrlNormCount(),1)
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2704', true)
    	LogMsgToHadoop('dstat_sulimov_log', 'RCPT5_TEST')
    end

    --ar2705
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	and cmpr_lt(features:Karma(), 0)
		and cmpr_gt(features:RcptNum(), 10)
    	and cmpr_eq(features:UrlNormCount(),1)
        and not UrlsMatchStr('touch.mail.ru')
        and not UrlsMatchStr('yadi.sk')
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2705')
    	LogMsgToHadoop('dstat_sulimov_log', 'RCPT10_TEST')
    end

    --ar2706
	--svobodno

    --ar2707
    --mxs_esp / #zarabotok
    --16.11.16 / philip.karpov
    --mec_la_getresponse_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(), 1500, 6000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:TextLines(), 3, 16)
        and cmpr_btw(features:WordCount(), 10, 60)
        and cmpr_btw(features:LinesToWordsRatio(), 25, 45, true)
        and cmpr_btw(features:UrlCount(), 5, 9, true)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
        and ((cmpr_eq(features:Subject7bitOnly(), 1) and cmpr_lt(features:DomainRepipAge(), 7))
           or (cmpr_eq(features:FromRealNameWordCount(), 1) and StrMatchRe(features:From(), regex([[^.*\d.*@]]))))
        and cmpr_btw(features:NumberCount(), 3, 15, true)
        and cmpr_gt(features:HtmlTagCount(), 20)
        and UrlsMatchStr('getresponse.com')
    then
        SetPSAR('ar2707')
    end
    
    --ar2708
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	and cmpr_lt(features:UserAge(), 200)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:AttachWithoutExtenstionsCount(), 0)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_btw(features:WordCount(), 20, 700)
    	and cmpr_gt(features:WordOtherCount(), 10)
    	and cmpr_gt(features:HtmlTagCount(), 10)
    	and cmpr_gt(features:RcptNum(), 5)
    	and wclass:PHP_URL()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and StrMatch(features:UrlsRawHashString(),".ru/")
    then
        SetPSAR('ar2708')
    end
    
    --ar2709
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
        and cmpr_btw(features:WordCount(), 1, 200)
		and (cmpr_gt(features:RcptNum(), 4)
    		or wclass:NEW_REP_IP_AND_COMPL_RATIO_BY_LAST_DAY()
    		or wclass:NEW_REP_IP_AND_SPAM_RATIO_BY_LAST_DAY())
    	and cmpr_gt(features:UrlNormCount(),1, true)
        and not UrlsMatchStr('touch.mail.ru')
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2709',true)
    	LogMsgToHadoop('dstat_sulimov_log', 'RCPT5_TEST')
    end

    --ar2710
    --mxs_other / #bad_CT
    --24.11.2016 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and cmpr_btw(features:MsgSize(),1000,15000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_gt(features:MultipartNum(),3,true)
        and features:NoUserAgent()
    	and features:NoSubject() 
        and cmpr_gt(features:UrlNormCount(),0)
        and cmpr_gt(features:HtmlTagCount(),0)
    	and features:NoHtmlTag()
        and features:WordCount() >= 30
    	and features:Words7bitRatio() >= 50
    	and features:NumbersToTextRatio() >= 50
    	and features:FromRealNameWordCount() == 1
        and wclass:FROM_AND_TO_REALNAMES_ARE_EQUAL_BUT_EMAILS_ARE_NOT()
        and (wclass:HELO_IN_FROM() or wclass:PTR_ERROR())
    then
        SetPSAR('ar2710') 
    end

    --ar2711
    --fe / #zarabotok
	--16.11.16 / r.sulimov --esli sfolzit postav na sbor
    --fc_fb_usagemo7
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
		and cmpr_gt(features:RcptNum(), 5, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
        and cmpr_lt(features:Karma(), 0)
		and not UrlsMatchStr('e.mail.ru')
    	and not UrlsMatchStr('touch.mail.ru')
        and cmpr_gt(features:AbfCitiesPerMonthNum(),2)
    	and (cmpr_gt(features:RepIpComplRatioByLastWeek(), 10, true)
    		or wclass:NEW_IP_7_DAYS()
    		or HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and SFKD('ar2711', features:UrlsHashString(), 60, 2)
    then
        SetPSAR('ar2711')
    	LogMsgToHadoop('dstat_sulimov_log', 'RCPT5_TESTar2711')
    end
    
    --ar2712
	--svobodno

    --ar2713
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 500)
		and features:HasTextOnly() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:UrlNormCount(),1, 2, true)
    	and cmpr_eq(features:WordCount(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 500)
		and wclass:ONLY_URLS_IN_BODY()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:SPAM_RATIO_BY_LAST_HOUR_MORE_THAN_25()
    then
        SetPSAR('ar2713')
    end


    --ar2714
    --fe / #casino
    --17.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 800,50000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_eq(features:ForwardingSubject(),true)
    	--and (cmpr_eq(features:Subject7bitOnly(), 1)
    		--or wclass:SUBJECT_WITH_CAPS()
    		--or cmpr_eq(features:Subject8bitOnly(), 1))
        and cmpr_lt(features:WordCount(),70)
        and cmpr_lt(features:Word7bitCount(),10)
        and cmpr_lt(features:WordOtherCount(),50)
        and cmpr_lt(features:TextLines(), 15) 
    	and cmpr_gt(features:HtmlTagCount(), 8)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FE_TOR_IP()   
    then
        SetPSAR('ar2714')
    end
    
    --ar2715
	--svobodno

    --ar2716
    --fe / #zarabotok
	--16.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 500000)
    	and cmpr_lt(features:UserAge(), 200)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
    	and cmpr_btw(features:WordCount(), 20, 700)
    	and cmpr_gt(features:HtmlTagCount(), 10)
    	and cmpr_lt(features:RepuserAge(), 3, true)
    	and wclass:SHORT_BOUNDARY()
    	and StrMatch(features:UrlsRawHashString(),".ru/")
    	and wclass:HAS_ATTACH()
    then
        SetPSAR('ar2716',true)
    end

    --ar2717
    --fe / #casino
    --10.01.17 / a.lis
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 9000, 50000)
    	and cmpr_btw(features:TextLines(), 10, 40)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 3)
    	and wclass:FE_TOR_IP()
		and wclass:SOURCE_IP_IN_XBL()
    	and wclass:SUBJECT_7BBIT_AND_BODY_8BIT()
    	and wclass:ONE_WORD_SUBJECT()
    	--and wclass:NEW_IP_30_DAYS()
    then
        SetPSAR('ar2717')
    end
    
    --ar2718
    --fe / #zarabotok
	--17.11.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
		and cmpr_gt(features:RcptNum(), 2, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
        and not UrlsMatchStr('touch.mail.ru')
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    	and SFKD('ar2718', features:UrlsHashString(), 60, 3)
    then
        SetPSAR('ar2718', true)
    	LogMsgToHadoop('dstat_sulimov_log', 'T_ar2718')
    end

    --ar2719
	--svobodno
    
    --ar2720
    --mxs_other / #pidori #pechat
    --01.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 100, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
    	and features:IpCategory() == 'tiny'
    	and not features:DkimDomain()
    	and (features:MsgIdLocalPart() and #features:MsgIdLocalPart() >= 30 
        	or StrMatch(features:MsgIdLocalPart(), features:BoundaryFromHeader()))
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and wclass:NO_USER_AGENT()
    	and wclass:NO_BODY_TAG()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
		SetPSAR('ar2720')
	end
    
    --ar2721
	--svobodno
    
    --ar2722
    --mxs / #ZarabCaps #KT
    --17.11.16 / razuvaev (minina)
    --91e94fbb4d2e0b2f6de64bfd1b627875
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 15000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_lt(features:WordCount(), features:DotCount()) 
    	   or cmpr_lt(features:WordCount(), features:NumberCount()))
    	and features:FromRealName()
       	and (StrMatchRe(features:FromRealName(), regex([[^[A-ZÀ-ß]{1,10}$]])) or StrMatch(features:FromLocalPart(), "noreply") or StrMatch(features:FromLocalPart(), "support"))
        and wclass:DOMAINS_EQUAL()    
        and wclass:NO_BODY_TAG()
        and wclass:NO_SUBJECT()
    then
        SetPSAR('ar2722')
    end
    
    --ar2723
    --fe/ #zarabotok #urls
    --16.11.16 /minina
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
    	and cmpr_btw(features:MsgSize(), 5000, 1000000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 5, 30, true)
    	and cmpr_gt(features:WordCount(), 100)
       	and cmpr_gt(features:UrlNormCount(), 2, true)
       	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and wclass:NO_USER_AGENT()
    	and wclass:HAS_TAG_META()
       	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
    	SetPSAR('ar2723',true)
    end
    
	
    --ar2724
	--mxs_mbp / #google yandex
	--17.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 2000)
    	and cmpr_eq(features:MultipartNum(), 2)
 	    and cmpr_eq(features:EnvelopeFromDomain(),'yandex.ru')
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
  	    --and (wclass:DOT_SPLIT_LOCALPART() or wclass:NABERI_V_GOOGLE())
        and wclass:RECEIVED_LAN_1()
        and (wclass:WORDS_OTHERS_BAD_RATIO() or wclass:ONLY_7BIT_WORDS())
        and wclass:RUSSIAN_FROM_REALNAME()
   
	then
		SetPSAR('ar2724')
	end

	--ar2725
    --mxs_mbp / #zarabotok
    --17.11.16 / zubr
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
    	and features:ImgNum() == 1
		and features:HasNoAttach() == 1
        and features:MultipartNum() > 3
		and features:EmailsCountInBccHeader() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
        and features:NoBodyTag() == 1
        and features:NoHtmlTag() == 1
		and features:ShortUrlCount() == 1
        and features:WordCount() >= 2 and features:WordCount() <= 20
    then
		SetPSAR('ar2725')
	end
    
	--ar2726
    --mxs_mbp / #flud
    --17.11.16 / zubr
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other" 
		and features:MsgSize() >= 800 and features:MsgSize() <= 3000
    	and features:HasTextOnly() == 1
		and features:MultipartNum() == 4
		and features:NoSubject() == 1
		and features:NoRealNameTo() == 1
        and features:UrlNormCount() == 0
        and features:WordCount() >= 2 and features:WordCount() <= 10
		and features:Words7bitRatio() >= 50
		and features:NumberCount() >= 5
		and wclass:NO_URLS_WITH_HTML_TAGS()
		and wclass:ONE_RECEIVED()
		--and wclass:MESSAGE_ID_SPAM_PATTERN_3()
    then
		SetPSAR('ar2726')
	end
    
	--ar2727
    --mxs_mbp #nova
    --09.01.17 / a.sokolov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and features:RamblerSmtp()
        and cmpr_eq(features:HasTextOnly(), 1)  
		and cmpr_lt(features:WordCount(), 10)
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and (UrlsMatchStr('nova.rambler.ru')
    		or  UrlsMatchStr('search.yahoo.com'))
    then
        SetPSAR('ar2727')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar2727')
    end
    
    --ar2728
	--svobodno
    
	--ar2729
	--mxs_mbp / #rabota na domu #test
	--17.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 500 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and features:TextLines() >= 3 and features:TextLines() <= 30
		and features:WordCount() >= 20 and features:WordCount() <= 400
		and features:SubjectWordCount() <= 10
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
		and features:WordsMixedRatio() >= 10 and features:Words8bitRatio() >= 4
		and TermsMatchGroup(17165, 100)
		and SFKD('ar2729', ',ar2729', 60, 15)
	then
		SetPSAR('ar2729')
	end

	--ar2730
	--fe / #vbei v googl
	--17.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 5000
		and features:HasTextOnly() == 1
		and features:NoRealNameTo() == 1
		and features:UrlCount() == 1
		and features:WordCount() >= 50 and features:WordCount() <= 150
		and features:LinesToWordsRatio() >= 40
		and features:Words7bitRatio() >= 50
		and features:Words8bitRatio() >= 5
		and features:Subject8bitOnly() == 1
    	and features:AbfCitiesPerMonthNum() >= 3
		and features:UrlsHashString() == "google.com"
	then
		SetPSAR('ar2730')
	end

    --ar2731
	--svobodno

    --ar2732
    --fe / #tel.mail.ru not RFR
	--17.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
		and cmpr_gt(features:RcptNum(), 10, true)
        and not wclass:RUSSIAN_FROM_REALNAME()
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2732')
    end

    --ar2733
    --fe/ #zarabotok #pic 
    --17.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_gt(features:RcptNum(), 2, true)
    	and cmpr_lt(features:RepuserAge(), 4)
        and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 500)
        and wclass:HAS_EXTERNAL_IMG()
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and cmpr_gt(features:RepIpComplRatioByLastWeek(), 10)
    then
        SetPSAR('ar2733')
    end

    --ar2734
    --mxs_mbp / #andreeva
    --18.11.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:UrlCount(), 1, true)
        and cmpr_btw(features:UrlNormCount(), 1, 30, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameReplyTo(), 1)
        and (cmpr_eq(features:HasBcc(), 1) or wclass:MORE_1_EMAILS_IN_TO())
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and cmpr_gt(features:NumberCount(), 10, true)
        and wclass:RANDOM_CASE_IN_IMAGE_NAME()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2734')
    end
    
    --ar2735
    --fe/ #zarabotok #pic 
    --18.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:RepuserAge(), 4)
        and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 800)
        and wclass:HAS_EXTERNAL_IMG()
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and cmpr_gt(features:RepIpComplRatioByLastWeek(), 10)
    then
        SetPSAR('ar2735')
    end
    
    --ar2736
    --mxs / #zarabotok
    --17.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:HasPhotoHosting() == 1
        and features:ShortUrlCount() == 1
        and features:MultipartNum() == 5
        and features:TextLines() >= 20 and features:TextLines() <= 60
        and features:WordCount() >= 100 and features:WordCount() <= 500
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:IP_REP_GAP_MORE_14_DAYS()
        and wclass:DKIM_FAIL()
        and wclass:HAS_HDR_ORGANIZATION()
    then
        SetPSAR('ar2736')
    end
    
    --ar2737
	--svobodno

    --ar2738
    --fe/ #zarabotok #pic 
    --18.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:RepuserAge(), 4)
        and cmpr_btw(features:TextLines(), 1, 3, true)
    	and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_btw(features:HtmlTagCount(), 3, 20, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 800)
        and cmpr_eq(features:NoTo(), 1) -- fix minina
    	and wclass:ONLY_URLS_IN_BODY()
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    then
        SetPSAR('ar2738')
    end

    --ar2739
    --fe / #casino
    --18.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 800,500000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(),3)
    	and (cmpr_eq(features:ForwardingSubject(),true)
    		or wclass:NO_SUBJECT())
        and cmpr_lt(features:WordCount(),100)
    	and (cmpr_lt(features:RepuserAge(), 100, true)
    		or cmpr_gt(features:WhitespaceToWordRatio(), 10000))
    	and (cmpr_gt(features:WhitespaceToWordRatio(), 1000)
    		or 	cmpr_gt(features:LinesToWordsRatio(), 20))
        and cmpr_lt(features:Word7bitCount(),10)
        and cmpr_lt(features:WordOtherCount(),50)
        and cmpr_btw(features:TextLines(), 3, 70) 
    	and cmpr_gt(features:HtmlTagCount(), 10)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FE_TOR_IP()
    then
        SetPSAR('ar2739')
    end
    
    --ar2740
	--svobodno
    
    --ar2741
	--svobodno
    
    --ar2742
    --mxs_other / #virus
    --18.11.16 / razuvaev
    --ab47fb5988145bb71793f1bef2b8126d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and features:MultipartNum() == 2
        and cmpr_lt(features:TextLines(),10)
        and cmpr_lt(features:WordCount(), 70)
        and cmpr_eq(features:Word8bitCount(),10,50) 
        and cmpr_eq(features:Subject8bitOnly(),1) 
        and cmpr_gt(features:FromRealNameLen(),15)
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FAKE_ATTACH()
        and wclass:LINK_TO_ARCHIVE_FILE()
        and wclass:NO_MIME_AND_SPF_NOT_PASS()
    
    then
        SetPSAR('ar2742')
    end
    
    --ar2743
	--mxs_mbp / #1kanal
	--07.11.16 / razuvaev
	--068f1f1c5435eddcd89cdbfcbbd23b97 10bb36fc995724409f69ce1a06876ae9
 	if not IsBlocked
  		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 5000,350000)
        and cmpr_gt(features:MultipartNum(), 3, true)   
        and (cmpr_gt(features:ImgNum(), 0) 
            or wclass:MORE_1_EMAILS_IN_TO()
    		or features:HtmlTagCount() > 0 and features:HtmlTags()['div'] ~= nil and features:HtmlTags()['div'] > 0 and features:HtmlTags()['div']/features:HtmlTagCount() > 0.3)
     	and cmpr_eq(features:FromRealNameWordCount(),1)
        and cmpr_btw(features:WordCount(), 10, 400, true)
        and cmpr_lt(features:Word7bitCount(), 10)
        and cmpr_lt(features:DotCount(),30)
        and cmpr_gt(features:SubjectLen(),20)
        and cmpr_eq(features:Subject8bitOnly(),1)
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:SHORT_BOUNDARY()
        and wclass:HAS_X_RECEIVED()
        and wclass:HTML_BODY_HEAD()
    then
    	SetPSAR('ar2743')
    end
    
    --ar2744
	--mxs_other / #naushniki
	--18.11.16 / razuvaev
	--6e8c8f5e01d54068cf6d66f1af96a3f8 b90d71ab8a911d79d6ca9373181d55d0
 	if not IsBlocked
     	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 3000,10000)
        and cmpr_eq(features:MultipartNum(), 3)   
        and cmpr_btw(features:WordCount(), 120,270, true)
        and cmpr_btw(features:TextLines(), 15, 50)
        and cmpr_eq(features:UrlCount(),1)
        and cmpr_gt(features:SubjectWordCount(),5)
        and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:MAIL_RU_MSGID_PATTERN()
    then
    	SetPSAR('ar2744')
    end
    
    --ar2745
    --mxs_mbp / #docs.google #gmail
    --18.11.16 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 2000, 15000)
    	and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3) 
    	and features:NoSubject() 
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
    	and features:EmailsCountInBccHeader() > 0
        and UrlsMatchStr('docs.google.com')
    then
        SetPSAR('ar2745')
    end

    --ar2746
    --mxs_mbp / #robot #gmail
    --18.11.16 / rassadovskiy(sokolik)
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10, 15000)
    	and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
    	and features:NoRealNameTo()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,3,true)
    	and features:TextLines() > 0
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and (TermsMatchGroup(18060,100)
    		or wclass:ONLY_URLS_IN_BODY())
    then
        SetPSAR('ar2746')
    end
    
	--ar2747
	--svobodno
        
	--ar2748
    --mxs_mbp/ #google_drive
    --01.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 2000, 150000)
        and cmpr_eq(features:MultipartNum(), 3)
        --and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 20, 5000, true)
	    and cmpr_btw(features:TextLines(), 5, 300, true)
        and cmpr_btw(features:UrlNormCount(), 1, 10)
        and cmpr_gt(features:HtmlTagCount(), 0)
   		and cmpr_eq(features:NoRealNameFrom(), 1)
		and cmpr_eq(features:NoRealNameTo(), 1)
        and (wclass:FREE_HOSTING()
    		or wclass:URL_GOOGLEDRIVE())
    	and (wclass:MORE_THAN_N_RCPT()
    		or wclass:MORE_5_EMAILS_IN_TO()
    		or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL()
    		or wclass:HAS_INPUT_TAG()
    		or UrlsMatchStr('.blogspot.'))
    then
        SetPSAR('ar2748')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2748')
    end
 
    --ar2749
    --fe / #zarabotok
    --18.11.16 / philip.karpov
    --fc_fb_muchhtml
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 0, 3, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and cmpr_btw(features:WordCount(), 1, 15, true)
        and cmpr_gt(features:ExternalImgNum(), 1, true)
        and (cmpr_eq(features:Words8bitRatio(), 0) or wclass:SUBJECT_8BBIT_AND_BODY_7BIT())
        and cmpr_gt(features:HtmlTagCount(), 3)
    then
        SetPSAR('ar2749')
    end
    
    --ar2750
	--mxs_mbp #yandex_search
	--18.11.2016 / sokolik
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
        and (wclass:FROM_RAMBLER_AND_MAILER_MAILRU()
        	or wclass:FAKE_CONTENT_TYPE())
    	and wclass:TXT_ATTACH()
 	then
        SetPSAR('ar2750')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2750')
    end
    
    --ar2751
	--mxs_mbp #vbei_v_google
	--18.11.2016 / sokolik
    if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
        and wclass:BAD_LINES_TO_WORD_RATIO()
 	then
        SetPSAR('ar2751')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2751')
    end
    
    --ar2752
    --fe / #casino
    --19.11.16 / philip.karpov
    --fc_fb_m20k
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 0)
        --and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 50)
        and (cmpr_eq(features:NoSubject(), 1) or cmpr_eq(features:Subject7bitOnly(), 1))
        and cmpr_gt(features:HtmlTagCount(), 50)
        and cmpr_gt(features:LinesToWordsRatio(), 35)
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and (wclass:WORDS_WITH_NOISE() or wclass:WORDS_OTHERS_BAD_RATIO())
    then
        SetPSAR('ar2752')
    end
    
    --ar2753
	--svobodno
    
    --ar2754
    --mxs_mbp / #rambler #flood
    --19.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),20,200)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:MultipartNum() == 1
        and features:IsFromRambler()
        and features:MsgIdDomain() == 'email.android.com'
        and features:UrlNormCount() == 0
        and features:HtmlTagCount() == 0
        and wclass:NOREALNAME_FROM()
        and wclass:UNAVAILABLE_IN_RECEIVED_WITH_IP_IN_HELO()
    then
        SetPSAR('ar2754') 
    end

    
    --ar2755
    --mxs_mbp / #rambler #flood
    --19.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),100,250000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:IsFromRambler()
        and (wclass:NO_TO_AND_FREE_MAIL() and wclass:NOREALNAME_FROM() 
        	or wclass:INVALID_DATE())
        and TermsMatchGroup(18058,100)
    then
        SetPSAR('ar2755') 
    end
    
    --ar2756
    --fe / #casino
    --19.11.16 / rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000,100000)
        and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and features:NoSubject()
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_eq(features:UrlNormCount(),0)
        and features:HtmlTagCount() > 10
        and features:TextLines() >= 10
    	and features:DotCount() < 5
        and wclass:FE_TOR_IP()
    	and (features:HtmlTags()['td'] ~= nil and features:HtmlTags()['td'] > 20
        	or features:HtmlTags()['p'] ~= nil and features:HtmlTags()['p']/features:HtmlTagCount() > 0.5)
    then
        SetPSAR('ar2756')
    end
    
    --ar2757
    --mxs_mbp / #rambler #another_flood
    --19.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(),50,50000)
        and cmpr_eq(features:HasTextOnly(),1)
        and features:IsFromRambler()
		and not HasHeader('In-Reply-To')
    	and features:ToRealName()
        and cmpr_gt(#features:ToRealName(),3,true)
    	and features:HtmlTagCount() > 0
    	and features:TextLines() > 0
    	and features:HtmlTags()['p'] ~= nil
    	and features:HtmlTags()['p'] > 0
    	and TermsMatchGroup(18059,100)
        and (wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        	or HasHeader('Content-Type') and HeaderMatch('Content-Type','format="flowed"'))
    then
        SetPSAR('ar2757') 
    end
    
    --ar2758
	--svobodno
    
    --ar2759
	--svobodno
    
    --ar2760
    --smtp / #noise #hernya
    --19.11.16 / philip.karpov
    --sc_sb_more20k
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 30000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
        and (cmpr_eq(features:MultipartNum(), 3) or cmpr_eq(features:MultipartNum(), 5))
        and cmpr_gt(features:WordCount(), 250, true)
        and cmpr_gt(features:WordsMixedRatio(), 10, true)
        and cmpr_gt(features:NumberCount(), 50, true)
        and (wclass:IP_IN_HELO() or HeaderMatch('Received', 'tipahost.net'))
        and wclass:SMALL_AGE_REPUSER_14()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar2760')
    end
    
    --ar2761
    --mxs_mbp / #andreeva v2.0
    --19.11.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 5000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameReplyTo(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
        and UrlsMatchStr('monosnap.com', 1)
    then
        SetPSAR('ar2761')
    end
    
	--ar2762
	--svobodno
    
    --ar2763
	--svobodno
    
    --ar2764
    --mxs_other / #flood
    --20.11.16 / philip.karpov
    --moc_mo_nourl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_btw(features:UrlCount(), 0, 3, true)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_eq(features:HtmlTagCount(), 1, 5, true)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and wclass:FROM_REALNAME_SYMBOLS_ARE_UPPERCASE()
        and wclass:NO_USER_AGENT()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar2764')
    end
    
    --ar2765
    --mxs_other / #more_urls_not_parsed
    --20.11.16 / philip.karpov
    --moc_mo_nourl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_gt(features:MsgSize(), 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_gt(features:WordCount(), 350)
        and cmpr_gt(features:TextLines(), 10)
        and cmpr_gt(features:HtmlTagCount(), 500)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:NO_USER_AGENT()
        and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    then
        SetPSAR('ar2765')
    end
    
    --ar2766
    --mxs_other / #zarabotok #php
    --20.11.16 / v.rassadovskiy
    if not IsBlocked
    and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),300,10000)
        and features:HasTextOnly() == 1
        and cmpr_eq(features:MultipartNum(),1)
    	and features:HasDifferentFromAndReply()
    	and features:FirstLevelFromDomain() == "ua" 
        and features:NoRealNameTo()
        and cmpr_btw(features:UrlNormCount(),1,3,true)
        and features:HtmlTagCount() == 0
    	and not UrlsMatchStr('index.php',1)
        and UrlsMatch(regex([[^[a-z\d\-\.]+\.[a-z]{2,6}/[a-z]+\.php$]]),1)
    then   
        SetPSAR('ar2766')
    end 
    
    --ar2767
    --mxs_sender / #konfiskatTV
    --20.11.16 / v.rassadovskiy
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_sender')
        and features:WhitespaceToWordRatio() > 300
        and features:DkimDomainRepipAge() < 60
        and features:HtmlTagCount() > 0 
        and features:HtmlTags()['div'] ~= nil 
        and features:HtmlTags()['div']/features:HtmlTagCount() > 0.3
    then   
        SetPSAR('ar2767',true)
    end 

    --ar2768
	--svobodno
    
	--ar2769
    --mxs_mbp/ #1kanal
    --20.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and features:IsFromGoogle()
        and cmpr_gt(features:ImgNum(), 1, true)
    	and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	--and wclass:SHORT_WITH_MANY_URLS()
        and wclass:SUSP_IMAGE_NAME_3()
    then
        SetPSAR('ar2769')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2769')
    end
    
    --ar2770
    --mxs_mbp/ #1kanal
    --20.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and features:IsFromGoogle()
        and cmpr_gt(features:ImgNum(), 1)
    	and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_gt(features:MultipartNum(), 5)
        and wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
        and wclass:DIFFERENT_RES_IMAGES()
    	and wclass:RANDOM_CASE_IN_IMAGE_NAME()
        and wclass:SUSP_IMAGE_NAME_3()
    then
        SetPSAR('ar2770')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2770')
    end

    --ar2771
    --mxs / #zarabotok
    --20.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 20000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() <= 2
        and features:NoSubject() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 1 and features:WordCount() <= 100
        and (StrMatchRe(features:FromLocalPart(), regex([[^(no-?reply|support|user|poster)(\-)?(?:\d{1,2})?$]])) or wclass:PTR_ERROR())
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2771')
    end

    --ar2772
    --fe/ #zarabotok #pic 
    --17.11.16 / r.sulimov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0,true)
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_gt(features:HtmlTagCount(), 6)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:NOREALNAME_TO()
    	and (wclass:HAS_EXTERNAL_IMG()
    		or wclass:SUBJECT_WITHOUT_LETTERS())
    then
        SetPSAR('ar2772',true)
    end

    --ar2773
    --mxs / #zarabotok
    --20.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 2
        and features:UrlNormCount() == 2
        and features:MultipartNum() == 6
        and features:TextLines() >= 100 and features:TextLines() <= 200
        and features:WordCount() >= 200 and features:WordCount() <= 550
        and wclass:SUSP_SWIFT_BOUNDARY()
        and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
        SetPSAR('ar2773')
    end
    
    --ar2774
    --fe/ #zarabotok #pic #getresponse
    --20.11.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:RepuserAge(), 4)
        and cmpr_gt(features:HtmlTagCount(), 30)
        and cmpr_btw(features:UrlNormCount(), 2, 4, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 800)
        and wclass:HAS_EXTERNAL_IMG()
    	and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    		or cmpr_gt(features:RcptNum(), 10, true))
    	and StrMatch(features:UrlsRawHashString(),"getresponse.com/")
    then
        SetPSAR('ar2774')
    end
    
    --ar2775
    --mxs / #zarabotok
    --20.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:TextLines() >= 10 and features:TextLines() <= 25
        and features:WordCount() >= 100 and features:WordCount() <= 500 
        and wclass:ONE_RECEIVED()
        and HeaderMatchRe('Content-type', regex([[boundary="\-{2,5}\[\[BOUNDARY\]\]"$]]),1)
    then
        SetPSAR('ar2775')
    end
    
    --ar2776
	--svobodno

    --ar2777
	--svobodno

    --ar2778
    --fe/ #zarabotok #other attach
    --20.11.16 /r.sulimov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_lt(features:Karma(), 0,true)
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_gt(features:UserAge(), 50, true)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_gt(features:WordOtherCount(), 30)
        and cmpr_gt(features:HtmlTagCount(), 25, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and wclass:SUBJECT_MIXED_BADRATIO()
    then
        SetPSAR('ar2778')
    end
    
    --ar2779
	--svobodno
    
    --ar2780
    --mxs_mbp/ #zarabotki #google_su
    --21.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 3000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and wclass:SHORTURL()
        and wclass:TO_EMAIL_IN_REALNAME()
    	and wclass:MESSAGE_ID_MULTIDOTS()
    then
        SetPSAR('ar2780')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2780')
    end
    
    --ar2781
    --fe / #zarabotok
	--21.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(), 1)
		and (cmpr_gt(features:RcptNum(), 5, true)
        	or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and cmpr_lt(features:Karma(), 0,true)
		and cmpr_lt(features:UserAge(), 5, true)
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_gt(features:HtmlTagCount(), 8)
        and not UrlsMatchStr('touch.mail.ru')
     	and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2781',true)
    end
    
    --ar2782
    --mxs_mbp/ #1kanal
    --22.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:WordCount(), 5, 200, true)
	    and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:RUSSIAN_FROM_REALNAME()
        and HeaderMatchRe('Received', regex([[from\s[a-z]{7,10}\s\(\[[0-9\.]{10,}]]), 1)
    then
        SetPSAR('ar2782')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2782')
    end
    
    --ar2783
    --mxs / #rambler
    --21.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 50000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 100 
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatchStr('rambler.ru')
    then
        SetPSAR('ar2783')
    end

    --ar2784
    --fe / #zarabotok
	--21.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 1000, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_gt(features:RcptNum(), 2, true)
    	and cmpr_lt(features:Karma(), 0,true)
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_gt(features:HtmlTagCount(), 5)
        and not UrlsMatchStr('touch.mail.ru')
     	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:SUBJECT_WITHOUT_LETTERS()
    	and wclass:HAS_EXTERNAL_IMG()
    	and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2784')
    end
    
    --ar2785
    --fe / #zarabotok
	--21.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 500, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_gt(features:RcptNum(), 2, true)
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 5, 20)
     	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:GOOD_KARMA()
    	and wclass:NAME_IN_BODY()
    	and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar2785')
    end
    
    --ar2786
    --fe / #zarabotok
	--21.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 500, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0)
		and cmpr_gt(features:RcptNum(), 5, true)
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_btw(features:HtmlTagCount(), 5, 20)
     	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and cmpr_gt(features:WordCount(), 20)
    	and wclass:NOREALNAME_TO()
    	and UrlsMatchStr('cloud.mail.ru')
    then
        SetPSAR('ar2786')
    end

    --ar2787
	--svobodno
     
    --ar2788
    --svobodno
    
	--ar2789
	--smtp / #spam
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "smtp"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 500000
		and features:ImgNum() >= 1
		and features:HasNoAttach() == 1
		and features:WordCount() >= 50
		and features:WordsMixedRatio() >= 25
		and features:RepuserAge() <= 3
	then
		SetPSAR('ar2789')
	end
    
    --ar2790
    --mxs_mbp / #zarab
    --21.11.16 / razuvaev
    --feeb261c1d7dc28ff647c0c43ae818b2 6e758ef1150c92d19ea6b4679d2735fe
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50, 4000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:TextLines(), 25)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:WordCount(), 40)
        and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass: SUSP_EMAIL_IN_BODY()     
    then
        SetPSAR('ar2790')
    end
    
	--ar2791
	--mxs_mbp / #rabota
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 50 and features:MsgSize() <= 20000
		and features:IsFromGoogle() == true
		and features:TextLines() >= 1
		and features:WordCount() >= 2
		and features:UrlNormCount() <= 2
		and features:WordsMixedRatio() >= 30
		and features:SubjectWordCount() >= 2
		and features:SubjectWordMixedCount() >= 2
	then
		SetPSAR('ar2791')
	end
    
    --ar2792
    --fe/ #amulet
    --20.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_eq(features:NoTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_btw(features:WordCount(), 20, 100, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1,4, true)
    	and cmpr_eq(features:Has3dLevelDomain(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 70)
        and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2792')
    end
    
	--ar2793
	--svobodno
    
    --ar2794
	--svobodno
    
	--ar2795
	--mxs_mbp / #zarabotok
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 200000
		and features:HasAttach() == 1
		and features:AttachMultimediaCount() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:NoBodyTag() == 1
		and features:NoHtmlTag() == 1
		and features:WordCount() >= 5
		and wclass:RAMBLER_FE()
	then
		SetPSAR('ar2795')
	end
    
    --ar2796
	--fe / #buhgalter #.gz
	--21.11.16 / minina
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
       	and cmpr_eq(features:HasAttach(), 1) 
    	and cmpr_eq(features:AttachArchiveCount(), 1)
    	--and cmpr_lt(features:Karma(), 0, true)
    	and StrMatch(features:FilesExtensions(), '.gz')
    	and SFKD('ar2796', features:FromRealName(), 60, 5)
    then
    	SetPSAR('ar2796')
    end
    
    --ar2797
	--svobodno
    
    --ar2798
    --mxs / #1st channel
    --21.11.2016 / rassadovskiy
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "mxs_mbp"))
        and cmpr_btw(features:MsgSize(),1000,10000) 
        and features:HasTextOnly() == 1
        and features:NoRealNameTo()
        and features:UrlNormCount() > 0
        and features:HtmlTagCount() > 0
        and wclass:HAS_HDR_ORGANIZATION_AND_LIST_UNSUBSCRIBE()
        and wclass:SHORT_BOUNDARY()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    then
        SetPSAR('ar2798') 
    end
    
    --ar2799
	--svobodno
    
    --ar2800
	--svobodno
    
	--ar2801
	--svobodno
    
	--ar2802
	--mxs_mbp / #zarabotok
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 700 and features:MsgSize() <= 20000
		and features:HasTextOnly() == 1
		and features:TextLines() >= 2
		and features:WordCount() >= 10
		and features:WordsOtherRatio() >= 20
		and wclass:NO_TO()
		and features:UrlNormCount() == 1
		and wclass:FROM_RAMBLER()
	then
		SetPSAR('ar2802')
	end

	--ar2803
	--mxs_mbp / #zarabotok
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and wclass:FROM_RAMBLER()
		and wclass:NO_TO()
	then
		SetPSAR('ar2803')
	end
    
    --ar2804
	--svobodno
    
    --ar2805
    --fe / #kairos
    --15.12.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7) 
        and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:NO_TO()
    	and TermsMatchGroup(18162,100)
    then
        SetPSAR('ar2805',true) 
    end
    
    --ar2806
	--fe / #zarabotok #url #call_center
	--21.11.16 / minina
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
       	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_btw(features:WordCount(), 20, 300, true)
        and cmpr_btw(features:TextLines(), 5, 50, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
		and cmpr_eq(features:SubjectWordCount(), 1)
    	and cmpr_gt(features:Words8bitRatio(), 70)
  		and cmpr_eq(features:SubjectWordCount(), 1)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and (wclass:NEW_IP_30_DAYS() or wclass:SOURCE_IP_IN_DNSBL())
    	and (wclass:AUTOREG() or wclass:AUTOREG_FROM_NOT_TARGET_REGION() or wclass:USER_SENDING_MORE_THAN_20_PER_DAY())
    then
    	SetPSAR('ar2806')
    end
    
    --ar2807
	--svobodno
    
    --ar2808
    --fe/ #zarabotok #attach TEST
    --21.11.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_lt(features:Karma(), 0,true)
    	and cmpr_gt(features:RcptNum(), 2, true)
    	and cmpr_eq(features:RepuserAge(), 200, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
    then
        SetPSAR('ar2808', true)
    end
    
    --ar2809
    --mxs_mbp/ #direct
    --21.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:WordCount(), 500, 1500)
	    and cmpr_btw(features:TextLines(), 50, 200, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and wclass:SPF_NOT_PASS_FROM_MBP()
    	and wclass:MAILRU_FROM_MXS()
    then
        SetPSAR('ar2809')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2809')
    end
    
    --ar2810
    --fe/ #zarabotok #test
    --21.12.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and (cmpr_lt(features:Karma(), 0, true)
    		or wclass:AUTOREG())
    	and (cmpr_gt(features:RcptNum(), 10, true)
        	or wclass:HTTP_TRIPLE_SLASH()
        	or wclass:SUBJECT_MIXED_BADRATIO()
        	or wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
        	or wclass:REP_USER_SPAM_RATE_MORE_25()
        	or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY()
        	or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL()
			or wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
			or wclass:FE_SUSP_HTMLTAG_TO_WORD_RATIO())
        and (cmpr_gt(features:UrlNormCount(), 1, true) or TermsMatchGroup(18103, 100))
    	and cmpr_btw(features:UserAge(), 0,350, true)
    	and cmpr_lt(features:RepuserAge(), 50, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1, true)
        and not UrlsMatchStr('e.mail.ru')
        and StrMatchRe(features:PartsFilenames(), regex([[\.(exe|dll|ttf|xml|ttf|TTF|nls|CCX|fb2|kkl|mid|3gp|pub|wma|tgh|mid|wav|contact|m4r)$]]))
    	and (RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 5)
            or cmpr_lt(features:RepuserAge(), 2, true)
    		or wclass:REP_USER_SPAM_RATE_MORE_25()
    		or cmpr_gt(features:AbfCitiesPerMonthNum(),4)
    		or wclass:SUSP_SEND_SPEED_FOR_NEW_USER_2())
    then
        SetPSAR('ar2810')
    end
    
   --ar2811
    --fe / #zarabotok
	--22.11.16 / r.sulimov
    --fc_fb_touchmail
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 200000)
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:RcptNum(), 5, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and TermsMatchGroup(18070, 100)
    then
        SetPSAR('ar2811',true)
    end
    
	--ar2812
    --fe/ #zarabotok
    --21.11.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_lt(features:Karma(), 0,true)
		and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:RepuserAge(), 10, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
        and not UrlsMatchStr('touch.mail.ru')
     	and (HeaderMatch('Received','touch.mail.ru')
    		or HeaderMatch('Received','tel.mail.ru'))
    then
        SetPSAR('ar2812',true)
    end
    
    --ar2813
	--svobodno

	--ar2814
    --mxs_mbp/ #mail_search
    --22.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and wclass:FROM_RAMBLER_AND_MAILER_MAILRU()
		and UrlsMatchStr('go.mail.ru/search', 1)
    then
        SetPSAR('ar2814')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2814')
    end
    
    --ar2815
    --mxs / #zarabotok
    --22.11.16 / r.belyankin
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 50
        and features:TextLines() >= 1 and features:TextLines() <= 20
        and features:WordCount() >= 20 and features:WordCount() <= 150
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
        and UrlsMatch(regex([[\/yandex\.ru\.php$]]),1)
    then
        SetPSAR('ar2815')
    end
    
    --ar2816
    --fe / #zarabotok
	--21.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 300, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0)
		and (cmpr_gt(features:RcptNum(), 5, true)
    		or wclass:ONE_WORD_SUBJECT_AND_AUTOREG())
    	and cmpr_eq(features:RepuserAge(), 3, true)
    	and (cmpr_btw(features:HtmlTagCount(), 6, 20)
    		or cmpr_gt(features:WhitespaceToWordRatio(), 1000))
     	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and cmpr_btw(features:WordCount(), 1, 300)
    	and wclass:NOREALNAME_TO()
    	and wclass:HAS_STD_URL_IN_SUBSCRIPTION()
    	and UrlsMatchStr('cloud.mail.ru')
    then
        SetPSAR('ar2816')
    end
    
    --ar2817
    --mxs_mbp/ #blogspot
    --20.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and wclass:EMAIL_IN_FROM_REAL_NAME()
    	and wclass:SUBJECT_MIXED_BADRATIO()
        and (UrlsMatchStr('.blogspot.')
    		or UrlsMatchStr('cloud.mail.ru'))
    then
        SetPSAR('ar2817')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2817')
    end 

    --ar2818
	--svobodno

	--ar2819
    --mxs_esp/ #zarabotki
    --22.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and features:HasFromRealName()
        and wclass:FROM_ENDS_WITH_YEAR()
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and not wclass:RUSSIAN_FROM_REALNAME()
        and UrlsMatchStr('.pulse-stat.com')
    then
        SetPSAR('ar2819')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2819')
    end 

    
    --ar2820
	--svobodno
    
    --ar2821
    --mxs_mbp/ #sro
    --13.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:ImgNum(), 3)
        and (wclass:SUBJECT_SRO()
    		or TermsMatchGroup(18147,100))
    	and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:DIFFERENT_RES_IMAGES()
    then
        SetPSAR('ar2821')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2821')
    end
    
    --ar2822
    --mxs_mbp/ #mail_search
    --22.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
		and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and StrMatchRe(features:PartsFilenames() , regex([[[a-z\s]{3,}\(\d{1}\)\.]]))
    then
        SetPSAR('ar2822')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2822')
    end
    
    --ar2823
    --mxs_other / #zarabotok #zendesk
    --28.12.16 / minina(sokolik)
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
    	and features:Has3dLevelFromDomain()
    	and (cmpr_eq(features:HasShortUrl(), 1)
    		or UrlsMatchStr('docs.google.com')
    		or UrlsMatchStr('vk.com/doc', 1)
			or UrlsMatch(regex([[\/[a-z]{1,2}\/.{3,}\.php$]]), 1))
    	and wclass:NEW_FROMDOMAIN_30_DAY()
        and HeaderMatchRe('Content-Type', regex([[boundary="--==_mimepart_[a-z\d_]{20,45}"]]))  
    then
        SetPSAR('ar2823')
    end    
    
    --ar2824
    --mxs_mbp / #zarabotok #rambler
    --22.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_gt(features:WordCount(), 500, true)
    	and cmpr_gt(features:TextLines(), 200, true)
       	and cmpr_gt(features:UrlNormCount(), 10, true)
    	and cmpr_gt(features:HtmlTagCount(), 500, true)
       	and wclass:FAKE_ATTACH()
    	and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:RAMBLER_FE()
    	and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar2824')
    end
    
    --ar2825
    --mxs_mbp / #virus #uvedomlenie #outlook
    --22.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 10, 200, true)
    	and cmpr_btw(features:TextLines(), 1, 30, true)
    	and (cmpr_gt(features:Words8bitRatio(), 60, true) or cmpr_gt(features:WordsOtherRatio(), 30))
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:HtmlTagCount(), 1, 30, true)
    	and cmpr_gt(features:NumberCount(), 20)
    	and cmpr_eq(features:EngRealNameFrom(), 1)
    	and wclass:MORE_1_EMAILS_IN_TO()
    	and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
    	and wclass:NO_USER_AGENT()
    	and wclass:HAS_TAG_META()
        and (wclass:LINK_TO_ARCHIVE_FILE() or wclass:FAKE_ATTACH())
    then
        SetPSAR('ar2825')
    end
    
	--ar2826
    --mxs_mbp / #zarabotok #rambler
    --22.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 500, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_btw(features:WordCount(), 5, 50, true)
    	and cmpr_btw(features:TextLines(), 2, 20, true)
       	and cmpr_eq(features:UrlCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 5, 50, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_btw(features:Word7bitCount(), 2, 20)
    	and cmpr_lt(features:DotCount(), 5)
       	and wclass:HAS3D_LVL_DOMAIN()
    	and wclass:SHORT_MESSAGE()
        and wclass:FROM_RAMBLER()
    	and (wclass:NO_BODY_TAG() or wclass:NO_USER_AGENT())
    then
        SetPSAR('ar2826')
    end

    --ar2827
	--svobodno  
    
    --ar2828
	--svobodno
    
	--ar2829
	--svobodno
    
    --ar2830
    --mxs_mbp / #eng #Account Details
    --22.11.16 / r.kulpin
	if not IsBlocked
		and cmpr_eq(features:RcvSrc(), 'mxs')
		and cmpr_btw(features:MsgSize(), 100, 25000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and features:FromDomain() == 'hotmail.com'
    	and (wclass:ENGLISH_TEXT_AND_CTE_8BIT() or wclass:NEW_IP_30_DAYS_WITH_10_DAY_GAP())
    	and (wclass:HAS_X_PHP_SCRIPT() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
		and TermsMatchGroup(18074, 100)
	then
		SetPSAR('ar2830')	
	end
    
	--ar2831
	--svobodno

    --ar2832
    --mxs_mbp / #vbei_google #go.mail
    --22.11.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MultipartNum(), 3)
        and features:IsFromRambler()
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 20, 200)
        and cmpr_btw(features:LinesToWordsRatio(), 1, 10,true)
    	and cmpr_btw(features:WhitespaceRatio(), 15, 25, true)
        and wclass:UNAVAILABLE_IN_RECEIVED_AND_LASTHELO_WITHOUT_DOMAIN()
    --	and wclass:MSG_ID_LOCALPART_SHORTER_THAN_DOMAIN()
    	and (wclass:ENGLISH_LANGUAGE_MESSAGE() or wclass:ONLY_7BIT_WORDS())
    then   
        SetPSAR('ar2832')
    end

    --ar2833
    --mxs_mbp / #eng #hotmail 
    --22.11.16 / r.kulpin
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 25000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:IsFromHotmail() 
     	and wclass:EMPTY_BCC_AND_NO_TO()
    	and (wclass:NO_URLS_WITH_HTML_TAGS() or wclass:MX_INVALID_RATE_MORE_THAN_5())
    	and (wclass:ONLY_7BIT_WORDS() or wclass:ENGLISH_LANGUAGE_MESSAGE())
	then
		SetPSAR('ar2833')	
	end
    
    --ar2834
    --svobodno
      
    --ar2835
	--svobodno
    
    --ar2836
    --mxs_other / #zarabotok
    --22.11.16 / philip.karpov
    --wc_ip_ham_ps
    if not IsBlocked
 		and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        and cmpr_btw(features:UrlNormCount(), 5, 9, true)
        and cmpr_gt(features:WordCount(), 50)
        and cmpr_gt(features:TextLines(), 20)
        and cmpr_gt(features:HtmlTagCount(), 50)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WhitespaceToWordRatio(), 250)
        and cmpr_gt(features:LinesToWordsRatio(), 25)
        and cmpr_gt(features:WordsOtherRatio(), 10)
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and (wclass:FOURTH_LVL_DOMAIN_IN_HELO() or wclass:IP_IN_HELO() or wclass:HAS3D_LVL_DOMAIN())
    then
        SetPSAR('ar2836')
    end
    
    --ar2837
	--mxs_mbp #rassilka_dz_1
	--22.11.2016 / razuvaev
    --74a7b4de88e37957d1c29d06aeb8415d a93e056a6e90d9ce2fbfbe71035ac9b1
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
      	and cmpr_eq(features:Subject8bitOnly(),1)
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:IP_REP_GAP_MORE_7_DAYS()
        and HeaderMatchRe('Content-Type', regex([[boundary="[A-Za-z0-9]{1,30}=_[A-Za-z0-9]{1,30}"$]]))   
	then
		SetPSAR('ar2837')
	end
    
    --ar2838
	--svobodno

    --ar2839
    --fe / #rassilka_dz_3
    --23.11.16 / razuvaev
	--45f0b678ef2733c904bfb2f9dd0cba6d dbd196aeb3cf8107e36a20594423276b
    if not IsBlocked
      	and features:RcvSrcExt() == "fe"
        and features:FromDomain()
        and cmpr_eq(features:FromDomain(),"list.ru")
    	and cmpr_eq(features:OneWordSubject(),1)
       	and cmpr_eq(features:Subject7bitOnly(),1)
      	and cmpr_eq(features:NoRealNameTo(),1)
       	and cmpr_eq(features:EmailEndWithNum(),1)
    	and cmpr_lt(features:RepuserAge(),30)
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2839',true)
    end
    
    --ar2840
    --mxs_mbp / #money_bot #gmail
    --30.11.16 / minina
    if cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        --and cmpr_btw(features:TextLines(), 2, 50)
        --and cmpr_btw(features:WordCount(), 20, 250)
        and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and features:IsFromGoogle()
    	and (wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL() or wclass:REPLY_TO_WITHOUT_EMAIL() or wclass:FROM_REALNAME_IN_LOCALPART())
    	and TermsMatchGroup(18193,100)
    	and SFKD('ar2840', string.sub(features:Subject(), 1, 7), 60, 5)
    then
        SetPSAR('ar2840')
    end
    
    --ar2841
    --fe / #casino
    --23.11.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 150000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 5, true)
        --and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 20)
        and (cmpr_eq(features:NoSubject(), 1) or HeaderMatch('Subject', 'Fwd:'))
        and cmpr_gt(features:HtmlTagCount(), 10)
        and cmpr_gt(features:LinesToWordsRatio(), 10)
        and (wclass:NEW_IP_30_DAYS() or wclass:SUSP_WORDS_LENGTH())
        and (wclass:WORDS_WITH_NOISE() or wclass:WORDS_OTHERS_BAD_RATIO())
    then
        SetPSAR('ar2841', true)
    end
    
    --ar2842
	--svobodno

	--ar2843
	--svobodno
    
    --ar2844
	--svobodno
    
	--ar2845
	--mxs_mbp / #zarabotok
	--23.11.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == "fe" or wclass:MAILRU_FROM_MXS())
		and features:MsgSize() >= 2000 and features:MsgSize() <= 8000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() == 0
		and (features:RepuserAge() <= 3 or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 10, 5))
		and features:TextLines() >= 10 and features:TextLines() <= 50
		and features:WordCount() >= 100 and features:WordCount() <= 500
		and features:WordsOtherRatio() >= 15
		and features:EmailsCountInBody() == 1
		and TermsMatchGroup(18078, 100)
	then
		SetPSAR('ar2845')
	end

	--ar2846
    --mxs_mbp / #url #zarabotok #numbers_in_subj
	--02.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and features:IsFromGoogle()
    	and cmpr_btw(features:UrlsTextSize(), 10, 30)
    	and cmpr_btw(features:SourceTextSize(), 10, 100)
    	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:HAS_HDR_ORGANIZATION()
	then
        SetPSAR('ar2846')
    end
    
	--ar2847
	--mxs_mbp / #zarabotok
	--23.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and wclass:FROM_RAMBLER()
		and features:MsgSize() >= 4000 and features:MsgSize() <= 200000
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
		and features:UrlsTextSize() <= 50
		and features:NoHtmlTag() == 1
		and features:NoBodyTag() == 1
		and features:HtmlTagCount() >= 14
		and features:HtmlUniqueTagCount() <= 4
		and features:TextLines() >= 6 and features:TextLines() <= 50
		and features:WordCount() >= 100 and features:WordCount() <= 700
		and features:LinesToWordsRatio() <= 10
		and features:DotRatio() <= 1
	then
		SetPSAR('ar2847')
	end
    
    --ar2848
    --mxs / #chastot #ramblerbleat
    --11.11.2016 / r.kulpin
    if not IsBlocked  
        and cmpr_eq(features:RcvSrc(), "mxs") 
        and cmpr_btw(features:MsgSize(), 1000, 25000)
    	and features:RamblerSmtp()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
    	and features:Subject()
    	and cmpr_gt(features:SubjectWords8bitRatio(), 60)
    	and cmpr_gt(features:SubjectNumbersCount(), 0)
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and cmpr_gt(#features:Subject(), 18)
    	and SFKD('ar2848', string.sub(features:Subject(), 1, 18), 60, 5)
    then
        SetPSAR('ar2848') 
    end    
    
    --ar2849
    --mxs_mbp #zarabotki #youtube
	--06.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_gt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
        and StrMatchRe(features:From(), regex([[[a-z]{3,}\d{4}[a-z]{2,}@]]))
    then
        SetPSAR('ar2849')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2849')
    end 

	--ar2850
    --mxs_mbp / #yandex #attach #html
    --16.01.17 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 200, 5000)
		and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and features:IsFromYandex()
    	and cmpr_lt(features:TextLines(), 10)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and cmpr_eq(features:UrlNormCount(),0)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:WordsOtherRatio(), 10)
    	and wclass:WEB_ATTACH() 
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
        SetPSAR('ar2850')
    end 

	--ar2851
    --fe / #zarabotok #track.mlsendru
	--23.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 1000, 500000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and (cmpr_lt(features:RepuserAge(), 5, true) or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 30, 5))
    	and cmpr_lt(features:TextLines(), 5)
    	and cmpr_btw(features:WordCount(), 5, 100)
    	and cmpr_btw(features:HtmlTagCount(), 1, 10)
     	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    	and wclass:AUTOREG()
    	and wclass:CT_ENCODED_FILENAME()
    	and features:HasSuspEspUrl()
    then
        SetPSAR('ar2851')
    end
    
 	--ar2852
	--fe / #seminar #turov
	--15.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'smtp')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 0))
       	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_btw(features:RepuserAge(), 0, 30, true)
    	and cmpr_btw(features:WhitespaceToWordRatio(), 100, 500)
    	and cmpr_btw(features:HtmlTagCount(), 100, 500)
    	and (features:ToRealNameInToLocalPart() or features:ToRealNameInSubject())
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    then
    	SetPSAR('ar2852')
    end
    
    --ar2853
	--svobodno
   
	--ar2854
	--mxs_mbp / #zarabotok
	--24.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:HasTextOnly() == 1
		and features:MsgSize() >= 400 and features:MsgSize() <= 10000
		and features:MultipartNum() == 1
		and features:TextLines() >= 3 and features:TextLines() <= 60
		and features:WordCount() >= 10 and features:WordCount() <= 250
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 6
		and wclass:FROM_RAMBLER()
		and wclass:UNAVAILABLE_IN_RECEIVED_WITH_IP_IN_HELO()
		and (wclass:SUSP_LINES_TO_WORD_RATIO() or wclass:WORDS_MIXED_RATIO() or wclass:WORDS_OTHERS_BAD_RATIO())
	then
		SetPSAR('ar2854')
	end
    
    --ar2855
	--svobodno

    --ar2856
    --mbp #govno
    --23.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and wclass:UNAVAILABLE_IN_RECEIVED()
        and (wclass:PHP_URL()
    		or TermsMatchGroup(18081, 100))
        and (wclass:HDR_X_ANTIVIRUS_AVAST_VPS()
        	or cmpr_eq(features:FromRealNameWordCount(), 1))
    then
        SetPSAR('ar2856')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2856')
    end
    
    --ar2857
    --mxs_mbp/ #diplom
    --15.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10, 1000)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:EmailsCountInBody(), 1)
    	and wclass:HAS_HDR_ORGANIZATION()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    then
        SetPSAR('ar2857')
    end
    
    --ar2858
    --mbp #govno
    --23.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
        and wclass:SUSP_CD_AND_CT_7()
        and wclass:SHORT_ATTACH_FILE_NAME()
    then
        SetPSAR('ar2858')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2858')
    end

    --ar2859
    --fe / #zarabotok
	--23.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 300, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:RepuserAge(), 20, true)
    	and cmpr_btw(features:HtmlTagCount(), 8, 20)
     	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and cmpr_btw(features:WordCount(), 1, 200)
    	and wclass:NOREALNAME_TO()
    	and wclass:HAS_STD_URL_IN_SUBSCRIPTION()
    	and UrlsMatchStr('cloud.mail.ru')
    then
        SetPSAR('ar2859', true)
    end
   
    --ar2860
    --mxs_mbp #operator
    --04.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 1, true)   	
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 1000)
        and StrMatchRe(features:From(), regex([[[a-z]{3,}\d{4,}[a-z]{1,}.{1,}?@]]))
    then
        SetPSAR('ar2860')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2860')
    end  
    
    --ar2861
	--svobodno

    --ar2862
    --mxs_other / #rabota
    --23.11.16 / philip.karpov
    --mcc_mc_frles60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 20000, 500000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_btw(features:ImgNum(), 0, 2, true)
        and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_btw(features:UrlCount(), 0, 2, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:WordCount(), 3)
        and cmpr_gt(features:HtmlTagCount(), 3)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WhitespaceToWordRatio(), 50)
        and cmpr_gt(features:WordsOtherRatio(), 10)
        and (wclass:MORE_1_EMAILS_IN_TO() or wclass:MORE_THAN_1_RCPT())
        and (wclass:OTHER_IP_IN_DNSBL() or wclass:NEW_FROMDOMAIN_30_DAY())
        and wclass:NO_USER_AGENT()
    then
        SetPSAR('ar2862')
    end
    
	--ar2863
    --fe/ #zarabotok
    --23.11.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50000, 5000000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_lt(features:RepuserAge(), 50, true)
    	and cmpr_gt(features:RcptNum(), 5, true)
        and cmpr_gt(features:ExternalImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_gt(features:HtmlTagCount(), 50)
        and cmpr_btw(features:UrlNormCount(), 2, 50, true)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 100)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
    	and wclass:NEW_IP_30_DAYS()
    then
        SetPSAR('ar2863')
    end
    
    --ar2864
    --mxs_mbp #zarabotki
    --23.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:Words7bitRatio(), 70)
        and UrlsMatchStr('.blogspot.')
    then
        SetPSAR('ar2864')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2864')
    end
    
    --ar2865
    --mxs_other / #rabota
    --24.11.16 / philip.karpov
    --moc_mo_nourl
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
        and cmpr_gt(features:WordCount(), 5)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_gt(features:HtmlTagCount(), 2)
        and cmpr_gt(features:WhitespaceToWordRatio(), 5)
        and wclass:FROM_AND_TO_REALNAMES_ARE_EQUAL_BUT_EMAILS_ARE_NOT()
        and wclass:NO_USER_AGENT()
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2865')
    end
    
	--ar2866
    --fe / #.tk
	--23.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 10000)
		and cmpr_eq(features:RepuserAge(), 50, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
		and StrMatch(features:UrlsRawHashString(),".tk")
    	and StrMatch(features:UrlsRawHashString(),".foto.my.mail.ru/")
    then
        SetPSAR('ar2866')
    end

	--ar2867
    --fe / #.light.mail.ru
	--23.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 50000)
		and cmpr_eq(features:RepuserAge(), 10, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
    	and HeaderMatch('Received','light.mail.ru')
    then
        SetPSAR('ar2867', true)
    end
    
    --ar2868
    --mxs_mbp #pohudei
    --25.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 5000, 100000)
		and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
        	or wclass:FROM_MISMATCH_SENDER()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
    	and wclass:EMAIL_IN_FROM_REALNAME_NOT_EQUAL_WTIH_FROM()
        and (wclass:MISC_SUSP_MAILERS()
        	or UrlsMatchStr('vk.com/doc', 1))
        and not wclass:XLS_IN_ATTACH()
    then
        SetPSAR('ar2868')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2868')
    end 
    
	--ar2869
    --fe / #.tk
	--23.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 2000)
        and cmpr_gt(features:RcptNum(), 5, true)
		and cmpr_eq(features:RepuserAge(), 2, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_gt(features:RepIpComplRatioByLastWeek(), 20, true)
		and StrMatch(features:UrlsRawHashString(),".ru/")
    then
        SetPSAR('ar2869')
    end
    
	--ar2870
    --fe / #.vk
	--29.11.16 / r.sulimov(sokolik)
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 10000)
		and cmpr_eq(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 15, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
		and StrMatch(features:UrlsRawHashString(),"vk.com/doc")
    then
        SetPSAR('ar2870')
    end

	--ar2871
    --fe / #one word 
	--24.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10, 10000)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
		and cmpr_eq(features:RepuserAge(), 5, true)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_gt(features:HtmlTagCount(), 30)
		and StrMatch(features:UrlsRawHashString(),".ru/")
    	and wclass:ONE_WORD_SUBJECT()
    then
        SetPSAR('ar2871')
    end
    
    --ar2872
    --mxs_mbp #govno
    --23.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_lt(features:ShingleTextSize(), 300)
        and wclass:UNAVAILABLE_IN_RECEIVED()
    then
        SetPSAR('ar2872')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2872')
    end
    
    --ar2873
    --mxs_mbp / #zarabotok #rambler #esp_url
    --24.11.16 / minina
     if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 200000)
        and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
       	and wclass:FROM_RAMBLER()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and (features:HasSuspEspUrl() or UrlsMatchStr('/track/click', 1)) 
    then
        SetPSAR('ar2873',true)
    end
    
    --ar2874
    --mxs_mbp / #zarabotok #pochtovyi_robot
    --24.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:WordCount(), 5, 100, true)
    	and cmpr_btw(features:TextLines(), 2, 30, true)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50, true)
       	and wclass:NEW_DKIM_30_DAYS()
    	and wclass:TERMS_ZARABOTOK_V_SETI2()
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and UrlsMatchStr('.html',1)
    then
        SetPSAR('ar2874')
    end	
    
    --ar2875
    --mxs_mbp #zarabotki #vzlom
    --08.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
   		and cmpr_eq(features:UrlNormCount(), 2)
    	and (wclass:MORE_1_EMAILS_IN_TO()
    		or wclass:HDR_SPAM_FROM_LIBERO()
			or wclass:HAS_HEADER_COREMAIL_ANTISPAM()
    		or wclass:SPF_NOT_PASS_FROM_MBP())
    	and not wclass:RUSSIAN_FROM_REALNAME()
        and HeaderMatch('Received','-PC')
	then
        SetPSAR('ar2875')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2875')
    end

	--ar2876
	--svobodno
    
	--ar2877
	--svobodno
    
	--ar2878
    --fe / #REP_USER_SPAM_RATE_MORE_25
	--24.11.16 / r.sulimov
    --REP_USER_SPAM_RATE_MORE_25
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_gt(features:RcptNum(), 5, true)
    	and cmpr_lt(features:Karma(), 0, true)
		and wclass:REP_USER_SPAM_RATE_MORE_25()
    then
        SetPSAR('ar2878', true)
    end
    
    --ar2879
    --mxs_other / #flood
    --24.11.16 / philip.karpov
    --mcc_mc_iples60
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
        and cmpr_gt(features:WordCount(), 5)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_gt(features:HtmlTagCount(), 2)
        and (cmpr_gt(features:WhitespaceToWordRatio(), 5) or wclass:SUSP_LINES_TO_WORD_RATIO())
        and (wclass:IP_REP_GAP_MORE_14_DAYS() 
            or wclass:REP_FROM_DOMAIN_OK_HITS_WITHOUT_USER_ACTIONS()
            or wclass:UNPARSED_URL_IN_BODY()
            or wclass:IP_HAS_GAP_LAST_WEEK())
        and wclass:NO_USER_AGENT()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar2879')
    end
    
    --ar2880
    --fe/ #zarabotok #dll
    --24.11.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_eq(features:RepuserAge(), 2, true)
        and not UrlsMatchStr('e.mail.ru')
        and StrMatchRe(features:PartsFilenames(), regex([[\.(exe|dll)$]]))
    then
        SetPSAR('ar2880')
    end
     
	--ar2881
    --fe / #.ru
	--24.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:RcptNum(), 5, true)
		and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UrlNormCount(),1, 2, true)
    	and cmpr_eq(features:TextLines(), 2)
    	and wclass:ONE_WORD_SUBJECT()
		and StrMatch(features:UrlsRawHashString(),".ru/")
    then
        SetPSAR('ar2881')
    end
    
    --ar2882
    --mxs_other / #otvet dlya
    --25.11.16 / philip.karpov
    --moc_mo_nodkim
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 3, 9, true)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_gt(features:WordCount(), 250)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_gt(features:WhitespaceToWordRatio(), 250)
        and cmpr_gt(features:WordsOtherRatio(), 10)
        and wclass:LIST_UNSUBSCRIBE_WITHOUT_URL_OR_ADRESS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:FROM_MATCH_WITH_URL()
    then
        SetPSAR('ar2882')
    end
    
	--ar2883
    --fe / #.ru
	--25.11.16 / r.sulimov
    --fc_fb_noat
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_lt(features:UserAge(), 50, true)
		and cmpr_eq(features:RepuserAge(), 3, true)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UrlNormCount(),1, 3, true)
		and TermsMatchGroup(18070, 100)
		and StrMatch(features:UrlsRawHashString(),".ru/")
    then
        SetPSAR('ar2883')
    end
    
	--ar2884
    --fe / #eng musor
	--24.11.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:RcptNum(), 5, true)
    	and cmpr_btw(features:UserAge(), 3,400, true)
    	and cmpr_btw(features:Words7bitRatio(), 5, 35, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:UrlNormCount(),1, 3, true)
    	and wclass:ONE_WORD_SUBJECT()
		and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 100)
    then
        SetPSAR('ar2884')
    end
    
	--ar2885
    --fe / #TestGap
	--25.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_lt(features:UserAge(), 400)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_gt(features:UrlNormCount(),0, true)
        and cmpr_gt(features:RepuserAge(), 5, true)
        and not UrlsMatchStr('e.mail.ru')
		and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 5)
    then
        SetPSAR('ar2885', true)
    end
    
	--ar2886
    --fe / #TestGap
	--25.11.16 / r.sulimov
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and features:MpopUserId()
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_lt(features:UserAge(), 400)
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:RepuserAge(), 10, true)
        and cmpr_gt(features:RepuserSpamHits(), 1, true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and not UrlsMatchStr('e.mail.ru')
		and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 10)
    then
        SetPSAR('ar2886')
    end
    
	--ar2887
    --fe / #TestGap
	--25.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_lt(features:UserAge(), 400)
    	and cmpr_lt(features:Karma(), 1, true)
    	and cmpr_gt(features:UrlNormCount(),1, true)
        and cmpr_gt(features:RepuserAge(), 20, true)
        and not UrlsMatchStr('e.mail.ru')
		and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 5, 20)
    then
        SetPSAR('ar2887', true)
    end
     
  	--ar2888
	--svobodno

    --ar2889
	--svobodno
    
    --ar2890
    --mxs_mbp #seminar
    --25.11.16 / a.sokolov
    if not IsBlocked
		and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
    	and cmpr_gt(features:SubjectNumbersCount(), 3)
    	and cmpr_gt(features:NumberCount(), 100)
        and cmpr_gt(features:AttachAllCount(), 1, true) 
    	and cmpr_eq(features:EngRealNameFrom(), 1)
        and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar2890')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2890')
    end
    
    --ar2891
    --mxs_mbp #vacancy
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
    	and (cmpr_lt(features:ShingleTextSize(), 200)
    		or cmpr_gt(features:ShingleTextSize(), 10000))
    	and ((cmpr_gt(features:SubjectNumbersCount(), 5) and cmpr_gt(features:NumberCount(), 7))
    		or wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
			or wclass:FEW_WORDS_WITH_DOC_ATTACH())
        and cmpr_eq(features:AttachAllCount(), 1) 
        and (wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
    		or wclass:TXT_ATTACH())
    then
        SetPSAR('ar2891')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2891')
    end
    
    --ar2892
    --mxs_mbp / #zarabotok #rambler #soft
    --25.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
       	and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:WordCount(), 50, 300, true)
    	and cmpr_btw(features:TextLines(), 5, 80, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_btw(features:HtmlTagCount(), 20, 150, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_eq(features:SubjectWordCount(), 1)
    	and cmpr_gt(features:Words8bitRatio() , 70)
    	and cmpr_btw(features:WhitespaceToWordRatio(), 100, 500)
       	and wclass:RAMBLER_FE()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:NO_BODY_TAG()
    	and wclass:NO_HTML_TAG()
    then
        SetPSAR('ar2892')
    end
    
	--ar2893
    --mxs_mbp / #zarabotok #img #kruze
    --25.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 5000, 500000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and cmpr_btw(features:WordCount(), 50, 500, true)
    	and cmpr_btw(features:TextLines(), 10, 500, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
    	and cmpr_gt(features:HtmlTagCount(), 100, true)
    	and cmpr_gt(features:NumberCount(), 500)
    	and	features:Helo() 
    	and not StrMatch(features:Helo(), features:FromDomain())
    	and wclass:SPF_NOT_PASS()
    	and wclass:DOMAINS_EQUAL()
    	and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar2893')
    end

	--ar2894
	--fe / #zarabotok
	--25.11.2016 / zubr
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 500
		and features:HasTextOnly() == 1
		and features:NoTo() == 1
		and features:EmailsCountInBody() == 0
		and features:WordCount() >= 500
		and features:Words8bitRatio() >= 5
		and features:NumberCount() >= 50
		and features:LinesToWordsRatio() <= 5
		and features:RepuserAge() <= 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 2
		and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 40
 		and features:HtmlTagCount() >= 50
		and features:HtmlUniqueTagCount() <= 8
	then
		SetPSAR('ar2894')
	end
    
    --ar2895
    --mxs_mbp/ #amazon
    --25.11.16 / razuvaev
    --6bf7b7936482f4e59f1c56eb7ff236c3 95e88945349506f73c08d2f9cca18f7c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50,500)
        and cmpr_lt(features:TextLines(), 5)
        and cmpr_lt(features:WordCount(), 30)
        and cmpr_eq(features:LastHelo(),"helo=smtpout.ngs.ru") 
        and cmpr_eq(features:UrlsHashString(),"amazon.com")
        and wclass:ANTIVIRUS_STATUS()
    then
        SetPSAR('ar2895')
    end
    
	--ar2896
	--mxs_mbp / #vbei v google
	--25.11.16 / zubr
	if not IsBlocked
      --  and false
		and features:RcvSrcExt() == "mxs_mbp" 
		and features:MsgSize() >= 200 and features:MsgSize() <= 5000
		and features:UrlNormCount() == 0
		and features:WordCount() >= 5
		and wclass:FROM_RAMBLER()
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and not features:IsRmspamProfile()
        and not features:IsComplaint()
		and (HasHeader('Delivered-To') or wclass:INVALID_DATE())
	then
		SetPSAR('ar2896')
	end

	--ar2897
	--mxs_mbp / #govno
	--25.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and wclass:FROM_RAMBLER()
		and HasHeader('MIME-Version')
		and not HeaderMatch('MIME-Version', '1.0')
	then
		SetPSAR('ar2897')
	end

	--ar2898
	--mxs_other / #govno #flud #CT #paraziti 
	--25.11.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 800 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:MultipartNum() >= 4
		and features:NoSubject() == 1
		and features:UrlNormCount() == 0
		and features:NoBodyTag() == 1
		and features:WordCount() >= 5 and features:WordCount() <= 30
		and features:LinesToWordsRatio() >= 60
		and wclass:SHORT_ENGLISH_MESSAGE()
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
	then
		SetPSAR('ar2898')
	end

    --ar2899
	--mxs_mbp #lenta
	--22.11.2016 / razuvaev
    --74a7b4de88e37957d1c29d06aeb8415d a93e056a6e90d9ce2fbfbe71035ac9b1
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "mxs_mbp"
      	and cmpr_eq(features:Subject8bitOnly(),1)
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar2899')
	end

	--ar2900
	--svobodno

	--ar2901
	--mxs_mbp / #zarabotok
	--21.11.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 200000
		and features:HasAttach() == 1
		and features:AttachOtherCount() >= 2
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:NoBodyTag() == 1
		and features:NoHtmlTag() == 1
		and features:WordCount() >= 5
		and wclass:RAMBLER_FE()
	then
		SetPSAR('ar2901')
	end

    --ar2902
	--svobodno

    --ar2903
	--svobodno
    
    --ar2904
    --mxs_mbp / #rambler #zarabotok_largeurl
    --25.11.16 / rassadovskiy
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and (cmpr_eq(features:RcvSrcExt(), "mxs_mbp") or cmpr_eq(features:ImapSubSrc(), "mxs"))
        and cmpr_btw(features:MsgSize(), 3000, 200000)
    	and features:IsFromRambler()
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,3,true)
    	and features:HtmlTagCount() > 0
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and wclass:NOREALNAME_TO()
        and HeaderMatchRe('Content-Type', regex([[boundary="_\-{1,20}=_[0-9]{1,30}"$]]))
    then
        SetPSAR('ar2904')
    end
    
    --ar2905
	--svobodno
    
    --ar2906
    --fe / #zarabotok
    --25.11.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 10)
        and cmpr_lt(features:Karma(), 0, true)
        and features:MailRuTo()
        and cmpr_gt(features:NumberCount(), 1, true)
        and cmpr_gt(features:LinesToWordsRatio(), 25)
        and cmpr_gt(features:WordsMixedRatio(), 3, true)
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar2906', true)
    end
    
    --ar2907
	--svobodno

    --ar2908
	--svobodno
    
    --ar2909
    --fe / #zarabotok
    --26.11.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 50)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 5)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and features:MailRuTo()
        and wclass:ONE_WORD_SUBJECT()
        and (wclass:WORDS_TO_URLS_BADRATIO() or wclass:NEW_IP_30_DAYS() or wclass:AUTOREG())
    then
        SetPSAR('ar2909')
    end
    
    --ar2910
	--mxs_mbp / #virus
	--28.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 5000)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 8)
    	and cmpr_btw(features:WordCount(), 2, 100, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_gt(features:NumberCount(), 8)
		and cmpr_btw(features:HtmlTagCount(), 1, 20)
		and wclass:LINK_TO_ARCHIVE_FILE()
    	and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
		and wclass:NO_USER_AGENT()
    	and (wclass:TO_EMAIL_IN_REALNAME() or wclass:MORE_1_EMAILS_IN_TO())
	then
		SetPSAR('ar2910')
	end
    
    --ar2911
    --mxs_mbp / #30$ #su
    --26.11.16 / razuvaev
    --b0282585f3a6a6c11ba33243d752e123 cb445458f14b7bc7a9f490dd8bf2f44d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")  
        and cmpr_btw(features:MsgSize(), 2000, 15000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
        and cmpr_gt(features:UrlCountWithoutMailRu(),1,true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and TermsMatchGroup(18086, 100)
    then
        SetPSAR('ar2911')
    end
    
    --ar2912
	--svobodno

    --ar2913
    --fe / #zarab #.cad
    --26.11.16 / razuvaev
    --fc_fb_email
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 200000,250000)
     	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:UrlCountWithoutMailRu(), 1)
        and cmpr_gt(features:AttachOtherCount(), 1,true)
        and wclass:AUTOREG()
        and wclass: HAS_EXTERNAL_IMG()
        and wclass: WHITESPACE_SUSP_RATIO()
        and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar2913')
    end

	--ar2914
	--mxs_other/ #oleg_efremov #+0900
	--26.11.16 / r.kulpin
 	if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or features:RcvSrc() == 'imap')
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_gt(features:TextLines(), 5, true)  
	    and cmpr_gt(features:LinesToWordsRatio(), 50, true)
        and cmpr_btw(features:UrlNormCount(), 2, 8, true)	
    	and wclass:NEW_IP_7_DAYS()    
    	and (wclass:UNDISCLOSED() or wclass:CT_IN_BODY() or wclass:FAKE_REPLY_IN_SUBJECT() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
    	and (cmpr_eq(features:HasTextOnly(), 1) or wclass:HAS_EXTERNAL_IMG())
    	and HasHeader('Date')
		and not HeaderMatch('Date', '+0300') 
    then
    	SetPSAR('ar2914')
    end

    --ar2915	
	--svobodno

	--ar2916
	--svobodno

	--ar2917
	--svobodno

    --ar2918
	--mxs_other / #zarabotki #molodoi #shorturl
	--26.11.2016 / r.kulpin
	if not IsBlocked
        and not wclass:EXCEPTIONS()
	    and cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and wclass:NEW_IP_15_DAYS()
    	and (wclass:NEW_DKIM_15_DAYS() or wclass:NEW_FROMDOMAIN_15_DAYS())
        and wclass:URL_IN_FROM_DOMAINPART()
        and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25()
        and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar2918')
	end
    
	--ar2919
    --mxs_other/ #seo #young_domain #young_ip 
    --28.11.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 5000, 200000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 20, 200, true)
    	and cmpr_btw(features:WordCount(), 100, 2000)
       	and cmpr_btw(features:UrlNormCount(), 1, 6, true)
       	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_gt(features:HtmlTagCount(), 150)
    	and cmpr_eq(features:NoRealNameTo(), 1)
       	and wclass:NEW_FROMDOMAIN_30_DAY()
    	and wclass:SPF_NOT_PASS() 
    	and wclass:NEW_IP_30_DAYS()
    	and wclass:ONLY_7BIT_WORDS()
    then
    	SetPSAR('ar2919')
    end

	--ar2920
    --mxs_mbp / #yandex #sk_integral
	--02.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and cmpr_eq(features:MultipartNum(), 1) 
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:IsFromYandex()
    	and cmpr_gt(features:WordCount(), 100)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 5, 30)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and cmpr_eq(features:CapsLockOnlySubject(), 1)
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and wclass:NO_BODY_TAG()
	then
        SetPSAR('ar2920')
    end
    
    --ar2921
    --fe / #realname_localpart #novarambler
    --15.12.16 / razuvaev(sokolik)
    --bbec607474962bf7d59be9503db781e1 87292c55b6a6430c18823a68268ae9a1
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 500,10000)
        and cmpr_eq(features:MultipartNum(),3)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
     	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(),1,40)
        and cmpr_eq(features:NoRealNameTo(), 1)
     	and cmpr_btw(features:UserAge(), 10, 300, true)
		and cmpr_lt(features:Karma(), 0, true)
        and UrlsMatchStr('nova.rambler.ru', 1)
    then
        SetPSAR('ar2921')
    end
    
    --ar2922
	--fe/ #attachother+1pic
	--26.11.16 / razuvaev
    if not IsBlocked
        and not wclass:EXCEPTIONS()
	    and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 1000 and features:MsgSize() <= 250000
        and (cmpr_eq(features:ExternalImgNum(),1) or  UrlsMatchStr('.php', 1))
		and features:HasAttach() == 1
        and (cmpr_eq(features:Subject8bitOnly(),1) or cmpr_gt(features:SubjectWordMixedCount(),1,true))
		and (features:AttachOtherCount() >= 1 or features:AttachMultimediaCount() >= 1)
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
    	and cmpr_lt(features:Karma(), 0, true)
        and wclass:NOREALNAME_TO()
	then
		SetPSAR('ar2922')
	end
    
   	--ar2923
	--mxs_mbp / #vbei v google #rambler
	--28.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 100000)
    	and features:RamblerSmtp()
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
		and wclass:HAS_HDR_ORGANIZATION()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
		and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and UrlsMatchStr('go.mail.ru/search', 1)
	then
		SetPSAR('ar2923')
	end
    
    --ar2924
    --mxs_mbp #logo
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and wclass:MESSAGE_ID_NO_DOMAIN()
    	and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    		or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
    	and (wclass:VPS_IN_HELO()
        	or wclass:NO_FILES_EXTENSIONS())
    then
        SetPSAR('ar2924')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2924')
    end

    --ar2925
    --mxs_mbp #google
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and wclass:UNAVAILABLE_IN_RECEIVED()
    	and (wclass:FAKE_ATTACH()
    		or wclass:HAS_HDR_ORGANIZATION())
    	and wclass:HAS_TAG_SCRIPT()
    then
        SetPSAR('ar2925')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2925')
    end
    
    --ar2926
	--fe/ #adobe+attach
	--26.11.16 / razuvaev
    if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 10000 and features:MsgSize() <= 350000
        and (cmpr_eq(features:Subject8bitOnly(),1) or cmpr_gt(features:SubjectWordMixedCount(),1,true) or wclass:FAKE_REPLY_IN_SUBJECT())
		and features:HasAttach() == 1
	    and (features:AttachOtherCount() >= 1 or features:AttachMultimediaCount() >= 1 or features:AttachWebCount() >= 1 )
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 20
    	and cmpr_lt(features:Karma(), 0, true)
        and (wclass:NOREALNAME_TO() or wclass:NO_TO())
        and cmpr_eq(features:GetEmailsFromBody(),"mail@info.adobesystems.com; ")
	then
		SetPSAR('ar2926')
	end
    
    
    --ar2927
    --mxs_mbp / #7days
    --26.11.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")  
        and cmpr_btw(features:MsgSize(), 1000, 10000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3) 
        and cmpr_eq(features:FromRealNameWordCount(),1) 
        and cmpr_gt(features:SubjectWord8bitCount(),3,true)
        and cmpr_eq(features:NoRealNameTo(), 1)    
        and UrlsMatchStr('monosnap.com', 1)
        and wclass:HELO_IN_MSGID()
        and wclass:MORE_THAN_N_RCPT() 
        and wclass:HAS_X_RECEIVED()
    then
        SetPSAR('ar2927')
    end

    --ar2928
    --mxs_mbp #zarabotki #short_url
    --06.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and features:IsFromOtherMbp()
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 20, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and (wclass:HAS_SHORT_URL_AND_IMG_URL()
    		or wclass:SHORTURL_AND_IMG()
			or TermsMatchGroup(18226,100))
    	and wclass:RUSSIAN_FROM_REALNAME()
	then
        SetPSAR('ar2928')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2928')
    end

    --ar2929
    --mxs / #pandora
    --27.11.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 70000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 6, true)
        and (wclass:NEW_IP_30_DAYS() or wclass:NEW_FROMDOMAIN_30_DAY())
        and UrlsMatch(regex([[pandor[a-z]+(\-)?\d+\.[a-z]{2,3}]]),1)
        and StrMatchRe(features:FromDomain(),regex([[pandor[a-z]+(\-)?\d+\.[a-z]{2,3}]]))
    then
        SetPSAR('ar2929')
    end
    
    --ar2930
    --mxs_mbp / #vbei #google
    --14.12.16 / philip.karpov
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 5000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:UNAVAILABLE_IN_RECEIVED()
        and wclass:FROM_RAMBLER()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:NO_USER_AGENT()
        and wclass:TO_MISMATCH_ENVELOPE_TO()
    then
        SetPSAR('ar2930')
    end
   
    --ar2931
	--svobodno 
  
    --ar2932
    --mxs_mbp #zarabotki #blogspot
    --27.11.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and ((cmpr_eq(features:Subject8bitOnly(), 1) and wclass:DOLLAR_IN_SUBJECT())
        	or wclass:BUSINESS_MLM() or wclass:TERMS_ZARABOTOK_V_SETI2() 
        	or wclass:FROM_ENDS_WITH_YEAR() or features:XMailerName() == 'PocoMail' or wclass:AUTH_SENDER_WITH_BAD_REP()
    		or wclass:OTHER_IP_IN_DNSBL())
    	and wclass:EMAIL_IN_FROM_REAL_NAME()
        and (UrlsMatchStr('blogspot.ru') or UrlsMatchStr('go.amx2.com'))
    then
        SetPSAR('ar2932')
    end

    --ar2933
    --mxs_mbp other #zarabotki #mnogo urlov #text shum
    --27.11.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 20000, 800000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:TextLines(), 1)
		and cmpr_eq(features:LinesToWordsRatio(), 0)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and (wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
    		or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    		or wclass:HAS_HEADER_COREMAIL_ANTISPAM()
    		or wclass:HAS_X_CMAE_ENVELOPE_HDR()) 
        and not UrlsMatchStr('.com')
    then
        SetPSAR('ar2933')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar2933' )
    end
   
    --ar2934
    --mxs_other / #flood
    --26.11.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 500, 3000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3,true) 
        and cmpr_eq(features:NoBodyTag(),1)   
        and cmpr_lt(features:TextLines(),10) 
        and cmpr_eq(features:SubjectLen(),0)
        and wclass:ENVELOPE_FROM_ENDS_WITH_DIGITS()
        and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:ONE_RECEIVED()
    then
        SetPSAR('ar2934')
    end
    
    --ar2935
    --mxs_other / #evro
    --27.11.16 / razuvaev
    --33dc0d077453cd3a72f1c8ecbafbcc84 ba68fc59e967fbed3c67d1980f3e4d3e
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 100, 3000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(),1) 
        and cmpr_eq(features:EmailsCountInCcHeader(),1)  
        and cmpr_gt(features:SubjectLen(),4,true) 
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and (UrlsMatchStr('/bonus.html', 1)  or UrlsMatchStr('/jewelery.html', 1))
    then
        SetPSAR('ar2935')
    end
    
    --ar2936
	--svobodno
    
    --ar2937
    --mxs_mbp / #esp #free_mail #ib 2.0
	--03.01.17 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_esp')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:MultipartNum(), 3) 
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:IsFromFreeMail(), 1)
    	and cmpr_btw(features:WordCount(), 1, 50)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 30)
    	and cmpr_gt(features:SubjectWordMixedCount(), 0)
    	and features:ToRealNameInToLocalPart()
    	and wclass:OTHER_IP_IN_DNSBL()
    	and wclass:PRECEDENCE_BULK()
    	and wclass:SPF_NOT_PASS()
    	and HeaderMatch('X-DMARC-Result', 'fail')
    	and UrlsMatchStr('.stat-pulse.com/', 1)
	then
        SetPSAR('ar2937',true)
    end

    --ar2938
    --mxs / #nosubject #shum
    --03.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:HtmlTagCount() >= 1 and features:HtmlTagCount() <= 10
        and wclass:ONE_RECEIVED()
        and not wclass:FROM_INFORMATION_SERVICE()
        and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
        and StrMatchRe(features:MsgIdLocalPart(), regex([[^[A-Z\d]{10,15}$]]))
    then
        SetPSAR('ar2938')
    end
    
    --ar2939
	--svobodno
    
    --ar2940
	--mxs_mbp / #vbei v google
	--27.11.16 / razuvaev
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap") 
		and features:MsgSize() >= 200 and features:MsgSize() <= 5000
		and features:UrlNormCount() == 0
		and features:WordCount() >= 5
        and cmpr_eq(features:EnvelopeFromDomain(),"rambler.ru")
         and wclass:UNAVAILABLE_IN_RECEIVED()
		and not features:IsRmspamProfile()
		and wclass:INVALID_DATE()
	then
		SetPSAR('ar2940')
	end 
    
	--ar2941
	--imap TEST
	--26.11.16 / r.kulpin
	if not IsBlocked
		and features:RcvSrc() == 'imap'
        and features:AuthenticatedDomain() == 'rambler.ru'
		and wclass:UNAVAILABLE_IN_RECEIVED()
	then
		SetPSAR('ar2941')
	end

	--ar2942
	--mxs_mbp / #vbei v google
	--27.11.16 / razuvaev
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap") 
		and features:MsgSize() >= 200 and features:MsgSize() <= 5000
		and (features:UrlNormCount() == 0 or (features:UrlCount() == 1 and features:HasImageUrl() == 1))
		and features:WordCount() >= 5
		and cmpr_eq(features:EnvelopeFromDomain(),"rambler.ru")
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and not features:IsRmspamProfile()
		and (wclass:SUSP_LASTHELO() or wclass:NABERI_V_GOOGLE() or StrMatch(features:Helo(), '.net'))
		and wclass:SUSP_MSG_ID_AND_UNAVAILABLE_IN_RECEIVED()
	then
		SetPSAR('ar2942')
	end
    
    --ar2943
    --mxs_mbp #govno
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
    	and wclass:TXT_ATTACH()
        and wclass:LONG_BOUNDARY_MORE_75()
        and wclass:UNAVAILABLE_IN_RECEIVED()
    then
        SetPSAR('ar2943')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2943')
    end

    --ar2944
	--svobodno
    
    --ar2945
	--svobodno
    
    --ar2946
    --mxs_other #adult
    --27.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:TextLines(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 100, 1000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:NEW_FROMDOMAIN_30_DAY()
    	and wclass:URL_FROM_BODY_IN_FROM()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    then
        SetPSAR('ar2946')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2946')
    end
    
    --ar2947
    --fe/ #zarabotok lines
    --28.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:UserAge(),10, 200)
    	and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_btw(features:TextLines(), 30, 120, true)
    	and cmpr_btw(features:WordCount(), 150, 500, true)
        and cmpr_btw(features:HtmlTagCount(), 50, 100, true)
        and cmpr_eq(features:UrlNormCount(), 1)
		and wclass:WORDS_TO_URLS_BADRATIO()
        and wclass:NOREALNAME_TO()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    	and SFKD('ar2947', features:UrlsHashString(), 20, 2)
    then
        SetPSAR('ar2947')
    end

    --ar2948
	--svobodno
    
    --ar2949
    --mxs_other #zarabotki #webdirect
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS())
        and UrlsMatchStr('/webdirect.php', 1)
    then
        SetPSAR('ar2949')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2949')
    end
    
    --ar2950
	--svobodno

    --ar2951
	--svobodno
    
    --ar2952
    --fe / #zarabotok
	--28.11.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
    	and cmpr_btw(features:MsgSize(), 300, 7000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 5, 15, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_lt(features:UserAge(),3)
     	and cmpr_eq(features:UrlNormCount(),1)
    	and cmpr_btw(features:WordCount(), 50, 300)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and wclass:NOREALNAME_TO()
    	and wclass:WORDS_TO_URLS_BADRATIO()
    	and wclass:WITH_HTTP()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2952')
    end
    
    --ar2953
    --mxs_other #govno
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and wclass:HDR_AUTH_BITS()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
        SetPSAR('ar2953')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2953')
    end
    
    --ar2954
    --mxs_other #govno
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and wclass:MISC_SUSP_MAILERS()
    	and wclass:DKIM_FAIL()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar2954', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2954')
    end
    
	--ar2955
	--mxs_esp / #getresp
	--28.11.16 / r.sulimov(sokolik)
    --mec_la_getresponse_com
	if features:RcvSrcExt() == "mxs_esp"
        and cmpr_btw(features:MsgSize(),20000,200000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:ExternalImgNum(),2, true)
        and cmpr_btw(features:TextLines(),10,100)
    	and cmpr_gt(features:SubjectWordCount(), 3, true)
        and cmpr_btw(features:WordCount(),200, 1000)
        and cmpr_gt(features:Word7bitCount(),150)
        and cmpr_btw(features:WordOtherCount(),10,100)
        and cmpr_gt(features:WhitespaceToWordRatio(), 200)
        and cmpr_eq(features:HasImageUrl(), 1)
		and cmpr_eq(features:UrlInListUnsubscribe(), "getresponse.com") 
		and wclass:RUSSIAN_FROM_REALNAME()
		and (features:DomainRepipAge() <= 30 or mrasRepHasSendingGap(features:FromDomain(), 3, 40, 20, 10) or cmpr_eq(features:ToRealName(), 'Friend'))
		and TermsMatchGroup(18089, 100)
	then
		SetPSAR('ar2955')
	end

    --ar2956
    --mxs_other #govno
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        and wclass:MESSAGE_ID_NO_DOMAIN()
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    	and wclass:FAKE_CONTENT_TYPE_3()
    then
        SetPSAR('ar2956')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2956')
    end
    
    --ar2957
    --mxs_mbp #1kanal
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
    	and cmpr_gt(features:WordCount(), 300)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        and cmpr_lt(features:ShingleTextSize(), 1500)
        and wclass:BCC_MORE_5()
    then
        SetPSAR('ar2957')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2957')
    end
    
    --ar2958
    --fe / #zarabotok
	--28.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 2000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:UserAge(), 500)
        and cmpr_btw(features:TextLines(), 10, 40, true)
        and cmpr_btw(features:WordCount(), 100, 300)
    	and cmpr_gt(features:LinesToWordsRatio(), 10, true)
        and cmpr_gt(features:Karma(), 0, true)
		and cmpr_eq(features:UrlNormCount(), 1)
		and cmpr_gt(features:HtmlTagCount(), 30)
		and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:NEW_IP_30_DAYS()
		and UrlsMatchStr('.html', 1)
    then
        SetPSAR('ar2958')
    end

    --ar2959
    --fe / #zarabotok 
	--28.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 300, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and (cmpr_gt(features:RcptNum(), 5, true) or cmpr_gt(features:RepIpComplRatioByLastWeek(), 10) or wclass:NEW_IP_1_DAY())
        and cmpr_lt(features:UserAge(), 5, true)
        and cmpr_btw(features:TextLines(), 3, 10, true)
        and cmpr_btw(features:WordCount(), 10, 100)
    	and cmpr_gt(features:LinesToWordsRatio(), 20, true)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_btw(features:HtmlTagCount(),5, 30, true)
		and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
    	and wclass:NAME_IN_BODY()
    then
        SetPSAR('ar2959')
    end
    
    --ar2960
    --mxs / #.vk.com
    --28.11.16 / r.belyankin
    if	not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
        and UrlsMatch(regex([[[a-z\d]+\.vk\.com\/(?:id|wall|doc)]]),1)
    	and not UrlsMatch(regex([[(m|new).vk.com]]), 1)
    then
		SetPSAR('ar2960')
    end
    
    --ar2961
    --fe / #zarabotok 
	--28.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 20, 200)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:UserAge(), 10, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
    	and cmpr_gt(features:LinesToWordsRatio(), 50, true)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_eq(features:HtmlTagCount(),0)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3, true)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:ONLY_URLS_IN_BODY()
    then
        SetPSAR('ar2961')
    end
    
    --ar2962
    --fe / #zarabotok 
	--29.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 5000, 300000)
    	and (cmpr_btw(features:ImgNum(), 1, 3, true) or wclass:FE_NO_TO_AND_ATTACH())
        and (cmpr_gt(features:RcptNum(), 15, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:TextLines(), 5, 15, true)
        and cmpr_btw(features:WordCount(), 10, 40)
        and cmpr_gt(features:LinesToWordsRatio(), 30, true)
	    and cmpr_gt(features:UrlNormCount(), 2, true)
	    and cmpr_btw(features:HtmlTagCount(),20, 50)
        and cmpr_eq(features:IpCategory(), 'tiny')
        and cmpr_gt(features:AbfCitiesPerMonthNum(),2, true)
        and cmpr_gt(features:WhitespaceToWordRatio(), 300)
        and wclass:FE_NO_TO()
    then
        SetPSAR('ar2962')
    end

    --ar2963
    --mxs_mbp #zarabotki
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
      	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:NoRealNameFrom(), 1)
    	and (wclass:SHORT_WITH_URLS()
    		or cmpr_lt(features:ShingleTextSize(), 1000)
    		or wclass:WORDS_MIXED_RATIO())
    	and (wclass:MORE_1_EMAILS_IN_TO()
    		or wclass:MANY_CC()
    		or wclass:NO_MIME()
			or wclass:SUSP_EMAIL_IN_BODY())
    	and (wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL())
    then
        SetPSAR('ar2963', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar2963')
    end
    
    --ar2964
    --mxs_mbp #google
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		--and cmpr_eq(features:NoHtmlTag(), 1)
   		and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:UNAVAILABLE_IN_RECEIVED()
    then
        SetPSAR('ar2964')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2964')
    end

    --ar2965
	--svobodno
    
    --ar2966
    --mxs_mbp #zarabotki_oplata
    --01.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and not features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and (wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    		or wclass:FAKE_MSG_ID()
			or wclass:MISC_SUSP_MAILERS()
    		or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
			or wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:SUSP_LINES_TO_WORD_RATIO())
    	and wclass:SHORTURL()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2966')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2966')
    end

    --ar2967
	--svobodno
    
    --ar2968
    --mxs_mbp #energy_econom
    --28.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:RECIPIENT_EMAIL_IN_BODY()
    then
        SetPSAR('ar2968', true)
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2968')
    end
    
    --ar2969
    --fe / #alco
	--28.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_lt(features:RepuserAge(), 2, true)
    	and (cmpr_gt(features:RcptNum(), 5, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and cmpr_btw(features:UserAge(), 1,70, true)
        and cmpr_btw(features:TextLines(), 10, 30, true)
        and cmpr_btw(features:WordCount(), 50, 300)
		and cmpr_lt(features:Karma(), 0)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_btw(features:HtmlTagCount(),5, 20, true)
		and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:NOREALNAME_TO()
    	and (TermsMatchGroup(18091, 100) or wclass:SOURCE_IP_IN_XBL())
    then
        SetPSAR('ar2969')
    end
    
    --ar2970
    --fe / #Test
	--28.11.16 / r.sulimov
    --fc_fb_abf_com
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 100, 200000)
		and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
    	and cmpr_btw(features:UserAge(), 0,300, true)
        and cmpr_btw(features:TextLines(), 1, 100, true)
    	and cmpr_lt(features:Karma(), 0, true)
		and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and wclass:NOREALNAME_TO()
    	and wclass:AUTOREG()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar2970')
    end
    
    --ar2971
    --fe / #test fe
	--28.11.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
		and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_lt(features:RepuserAge(), 2, true)
    	and (cmpr_gt(features:RcptNum(), 10, true) or (cmpr_gt(features:WhitespaceToWordRatio(), 3000) and cmpr_lt(features:Karma(), 0)))
    	and cmpr_btw(features:UserAge(), 0,300, true)
		and cmpr_gt(features:UrlNormCount(), 1, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
    	and wclass:NOREALNAME_TO()
    	and wclass:RUSSIAN_FROM_REALNAME()
        and cmpr_gt(features:RepIpComplRatioByLastWeek(), 10)
    then
        SetPSAR('ar2971')
    end

    --ar2972
    --mxs / #dropbox #virus
    --29.11.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 500 
        and wclass:LINK_TO_ARCHIVE_FILE()
        and wclass:FAKE_ATTACH()
        and wclass:RECEIVED_BAD_PATTERN_2()
        and UrlsMatchStr('dropbox.com')
    then
        SetPSAR('ar2972')
    end
    
	--ar2973
	--fe / #pdf #pdd
	--28.11.2016 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
     	and features:IsPddUser()
		and cmpr_gt(features:MsgSize(), 50000) 
		and cmpr_lt(features:RepuserAge(), 5, true)
		and cmpr_lt(features:DomainRepipAge(), 30)
    	and cmpr_btw(features:WordCount(), 20, 200) 
		and cmpr_eq(features:FilesExtensions(), '.pdf') 
		and StrMatchRe(features:PartsFilenames(), regex([[[A-Za-z]+\s+[a-z]+]]))
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:FROM_TLD_IS_SUSP()
	then
		SetPSAR('ar2973')
	end 
    
    --ar2974
    --fe / #zarabotok drive
	--29.11.16 / r.sulimov
    --fc_fb_usage7
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:RepuserAge(),20, 80, true)
    	and cmpr_btw(features:UrlNormCount(),2,3,true)
    	and cmpr_eq(features:SubjectWord8bitCount(), 0)
		--and cmpr_gt(features:WhitespaceToWordRatio(), 200)
    	and cmpr_btw(features:HtmlTagCount(), 13, 20, true)
    	and cmpr_gt(features:RepIpComplRatioByLastWeek(), 5)
    	and wclass:ONE_WORD_SUBJECT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and (StrMatch(features:UrlsRawHashString(),".drive.google.com/open") or TermsMatchGroup(18125, 100))
    then
        SetPSAR('ar2974')
    end
    
	--ar2975
	--mxs_esp / #getresp
	--29.11.16 / a.sokolov
    --mec_la_getresponse_com
	if not IsBlocked
        and (features:RcvSrcExt() == "mxs_esp"
    		or features:RcvSrcExt() == "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and UrlsMatchStr('.getresponse.com/', 1)
        and StrMatchRe(features:From(), regex([[.{3,}\d{4}\+.{2,}@]]))
  	then
        SetPSAR('ar2975')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2975')
    end
    
    --ar2976
	--svobodno
    
    --ar2977
	--svobodno

	--ar2978
    --fe / #zarabotok
    --29.11.16 /m.guryanov 
	--352dc4c766a477503a4bdddfc1dcaa10 1b0908b60e55f9da4bbe3f5481f038c1 2eca933f65fc86f258f75dc98bd88e80
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and not features:IsPddUser()
    	and features:HasNoAttach() == 1
    	and cmpr_btw(features:ImgNum(), 1, 2, true)     	
		and features:NoRealNameTo() == 1
    	and ((features:Subject7bitOnly() == 1
    	and features:OneWordSubject() == 1) or wclass:SUBJECT_MIXED_BADRATIO())  	
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)    	    			
    	and cmpr_btw(features:WordCount(), 10, 150, true)	
    	and cmpr_btw(features:TextLines(), 5, 20, true)
    	and cmpr_gt(features:HtmlTagCount(), 4, true)  	
    	and (TermsMatchGroup(18093, 100) or UrlsMatch(regex([[(?:pay|payment)\/[a-zA-Zà-ÿÀ-ß]{1,10}]]), 1))
	then      	
        SetPSAR('ar2978')
    end 
    
	--ar2979
    --mxs_other / #pidori 
    --29.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 100, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and features:IpCategory() == 'tiny'
    	and not features:DkimDomain()
    	and features:MsgIdLocalPart()
		and #features:MsgIdLocalPart() <= 20
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:NO_USER_AGENT()
        and wclass:ONE_RECEIVED()
    	and HeaderMatchRe('Content-Type', regex([[boundary="--ALT--[A-Za-z\d\._-]+\d{6,15}"$]]))
    then
		SetPSAR('ar2979')
	end

    --ar2980
	--svobodno 
    
    --ar2981
    --mxs_mbp #energy_econom
    --29.11.16 / r.kulpin
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and wclass:FAKE_FREE_MAIL()
    	and (wclass:SUSP_LINES_TO_WORD_RATIO() or wclass:WORDS_OTHERS_BAD_RATIO())
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:RECIPIENT_EMAIL_IN_BODY()
        and features:To()
    	and UrlsMatchStr(features:To(), 1)
    then
        SetPSAR('ar2981')
    end
    
    --ar2982
    --mxs_other / #test_progrevIP
    --26.11.16 / razuvaev 
     if not IsBlocked 
       and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
       and math.random(0, 100) < 5 
       and cmpr_lt(features:MsgSize(), 1000) 
       and cmpr_lt(features:TextLines(), 5) 
       and cmpr_lt(features:WordCount(), 20) 
       and cmpr_lt(features:Words7bitRatio(), 50)
       and cmpr_eq(features:UrlCount(), 0)
       and features:SrcIp()  
       and getRepHits(features:SrcIp(), 0, 'd').ham_hits
       and getRepHits(features:SrcIp(), 0, 'd').click_read
       and getRepHits(features:SrcIp(), 0, 'd').probable_spam_ratio
       and getRepHits(features:SrcIp(), 0, 'd').ham_hits >= 2000 
       and getRepHits(features:SrcIp(), 0, 'd').click_read <= 20 
       and getRepHits(features:SrcIp(), 0, 'd').probable_spam_ratio <= 10
    then 
      SetPSAR('ar2982',true) 
    end 
    
    --ar2983
    --mxs_other / #test_fake_domain_spam
    --26.11.16 / razuvaev 
     if not IsBlocked 
       and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
       and math.random(0, 100) < 5 
       and features:FromDomain()
       and mrasRepHasSendingGap(features:FromDomain(), 3, 30, 5, 300) 
       and getRepHits(features:FromDomain(), 3, 'd').ham_hits
       and getRepHits(features:FromDomain(), 3, 'd').ham_hits >= 5000 
       and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
       and wclass:DKIM_FAIL() 
       and (features:HasShortUrl() == 1 or UrlsMatchStr('.php', 1)) 
   then 
     SetPSAR('ar2983',true) 
   end
    
    --ar2984
    --mxs_other / #test_kupil_bazu
    --26.11.16 / razuvaev 
    if not IsBlocked 
      and cmpr_eq(features:RcvSrcExt(), "mxs_other")
      and math.random(0, 100) < 10 
      and features:FromDomain()
      and features:DomainRepipAge() <= 30 
      and getRepHits(features:FromDomain(), 3, 'd').ham_hits
      and getRepHits(features:FromDomain(), 3, 'd').inv_ratio
      and getRepHits(features:FromDomain(), 3, 'd').cmpl_ratio
      and getRepHits(features:FromDomain(), 3, 'd').ham_hits >= 5000 
      and getRepHits(features:FromDomain(), 3, 'd').inv_ratio >= 15 
      and getRepHits(features:FromDomain(), 3, 'd').cmpl_ratio >= 2 
      and wclass:NOREALNAME_TO() 
  then 
    SetPSAR('ar2984',true) 
  end 
    
     --2985
     --fe / #test_fe_new_strange_users
     --26.11.16 / razuvaev 
    if not IsBlocked 
      and cmpr_eq(features:RcvSrcExt(), "fe") 
      and not features:IsPddUser() 
      and math.random(0, 100) < 2 
      and cmpr_lt(features:RepuserAge(), 10, true) 
      and cmpr_gt(features:AbfCountriesPerMonthNum(),2)
      and features:MpopUserId()
 
   then 
     local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail',604800) 
       if repuser 
          and repuser.hits 
          and repuser.hits.complaint_hits 
          and repuser.hits.complaint_hits 
          and cmpr_gt(repuser.hits.complaint_hits, 10) 
          and cmpr_gt(repuser.hits.total_hits, 100) 
   then 
      SetPSAR('ar2985',true) 
       end 
   end 
    
     --ar2986
     --fe / #test_flood
     --26.11.16 / razuvaev 
     if not IsBlocked 
       and cmpr_eq(features:RcvSrcExt(), "fe") 
       and math.random(0, 100) < 20 
       and cmpr_gt(features:WordCount(), 200) 
       and cmpr_lt(features:DotCount(), 5) 
       and cmpr_gt(features:UrlCountWithoutMailRu(),1,true) 
       and cmpr_eq(features:Subject7bitOnly(),1) 
       and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
   then 
      SetPSAR('ar2986',true) 
   end

    --ar2987
	--mxs_mbp / #vbei v google
	--29.11.16 / r.kulpin
	if not IsBlocked
        and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap") 
    	and features:RamblerSmtp()
		and features:MsgSize() >= 1000
		and (features:UrlNormCount() == 1 or wclass:UNAVAILABLE_IN_RECEIVED())
 		and wclass:WORDS_OTHERS_BAD_RATIO()
        and wclass:UNAVAILABLE_IN_RECEIVED_AND_LASTHELO_WITHOUT_DOMAIN()
        and wclass:NO_MIME()
        and wclass:FAKE_CONTENT_TYPE_4()
	then
		SetPSAR('ar2987')
	end
    
    --ar2988
    --fe / #zarabotok 
	--18.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 300000)
		and (cmpr_eq(features:HasTextOnly(), 1)
    		or cmpr_eq(features:HasAttach(), 1)
        	or cmpr_gt(features:ImgNum() , 1, true))	
        and (cmpr_lt(features:RepuserAge(), 5, true)
    		or wclass:AUTOREG()
			or cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true))
        and cmpr_gt(features:TextLines(), 5)
        and cmpr_gt(features:WordCount(), 20)
		and cmpr_btw(features:UrlNormCount(), 1, 2, true)
		and cmpr_btw(features:HtmlTagCount(), 1, 200)
       	and cmpr_lt(features:Karma(), 0, true)
		and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:HtmlTags()['br'], 20)
    	and (cmpr_eq(features:IpCategory(), 'tiny') or features:IpCategory() == 'small')
    	and (features:NoRealNameTo() or wclass:NO_TO())
   		and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-zA-Z0-9]{4,50}$]]), 1)
        and TermsMatchGroup(18027, 100)
    then
        SetPSAR('ar2988')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2988')
    end
    
    --ar2989
    --mxs / #zarabotok
    --29.11.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:MultipartNum() == 1
        and features:SimpleType() == 'text'
        and features:TextLines() >= 5 and features:TextLines() <= 25
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 25
        and (wclass:NOREALNAME_FROM() or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:HAS_X_PHP_SCRIPT()
    then
        SetPSAR('ar2989')
    end
    
    --ar2990
    --fe / #zarabotok 
	--29.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:UserAge(), 100, true)
        and cmpr_lt(features:Karma(), 0)
        and cmpr_gt(features:TextLines(), 5)
        and cmpr_btw(features:WordCount(), 50, 1000)
		and cmpr_eq(features:UrlNormCount(), 1)
		and cmpr_btw(features:HtmlTagCount(), 5, 300)
		and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:NOREALNAME_TO()
    	and cmpr_gt(features:AbfCountriesPerMonthNum(), 1)
   		and UrlsMatch(regex([[\.ru\/[a-zA-Z0-9]{4,}\/\d{2,}\.html$]]), 1)
    then
        SetPSAR('ar2990')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2990')
    end
    
    --ar2991
	--svobodno
       
	--ar2992
    --fe / #nova
	--21.12.16 / a.sokolov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 2000000)
		and cmpr_lt(features:RepuserAge(), 80, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 80, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 6, true)
		and wclass:RUSSIAN_FROM_REALNAME()
		and (UrlsMatchStr('nova.rambler.ru')
			or UrlsMatchStr('sereport.net'))
    then
        SetPSAR('ar2992')
	    LogMsgToHadoop('dstat_sokolik_log', '#ar2992')
    end
    
    --ar2993
    --mxs / #symki #gucci #viton
    --29.11.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:FreeHostingUrlCount() == 1
        and features:EmailsCountInCcHeader() >= 1
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:NOREALNAME_FROM()
    then
        SetPSAR('ar2993')
    end 
   
    --ar2994
	--mxs_other / #zarabotok #podstav domain #ozon
	--12.12.16 / minina
    if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 2000, 50000)
		and features:EnvelopeFromDomain() == 'ozon.travel'
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
		and wclass:XMAILER_PHPMAILER()
    	and wclass:IP_IN_MSGID_DOMAIN()
    	and wclass:RECEIVED_MICROSOFT_SMTP_SERVER()
	then
		SetPSAR('ar2994')
	end
    
    --ar2995
    --smtp / #flud
    --29.11.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_gt(features:MsgSize(), 100000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true) 
        and cmpr_gt(features:TextLines(), 100)
        and cmpr_gt(features:WordCount(), 300) 
		and wclass:HTML_SPAN_FONT_40()	  
    	and wclass:VERY_LONG_SUBJECT()
    then 
        SetPSAR('ar2995')         
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2995')
    end
    
    --ar2996
    --mbp / #seminar
    --03.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_gt(features:MsgSize(), 100000)
    	and not features:IsPddUser()
    	and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:ImgNum(), 0)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_gt(features:TextLines(), 100)
        and cmpr_gt(features:WordCount(), 300) 
    	and cmpr_gt(features:SubjectNumbersCount(), 5)
		and wclass:TO_LOCALPART_IN_REALNAME()	  
    then 
        SetPSAR('ar2996', true)         
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2996')
    end

    --ar2997
    --mxs_mbp #vacancy
    --12.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and cmpr_gt(features:MsgSize(), 20000) 
        and cmpr_lt(features:Words8bitRatio(), 40)
    	and cmpr_eq(features:NoSubject(), 1)
        and cmpr_eq(features:AttachAllCount(), 1) 
    	and (wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
    		or wclass:OTHER_IP_IN_DNSBL()
			or wclass:SUSP_NUMBER_TO_TEXT_RATIO()
			or wclass:SUSP_FROM_LOCALPART())
        and StrMatchRe(features:PartsFilenames(), regex([[^\d+\.xls]]))
    then
        SetPSAR('ar2997')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2997')
    end
    
    --ar2998
    --fe / #zarabotok 
	--02.01.17 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 50000000)
        and (cmpr_eq(features:HasTextOnly(), 1)
    		or cmpr_eq(features:HasAttach(), 1)
			or cmpr_gt(features:ImgNum(), 1, true))
        and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 400 ,true)
        and cmpr_btw(features:TextLines(), 1, 1000, true)
        and cmpr_btw(features:WordCount(), 10, 5000)
		and cmpr_btw(features:UrlNormCount(), 0, 20, true)
		and cmpr_gt(features:MultipartNum(), 3, true)
    	and (wclass:NOREALNAME_TO()
    		or wclass:NO_TO())
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and (wclass:HAS_INPUT_TAG()
    		or wclass:HAS_TAG_SCRIPT())
   		and (UrlsMatch(regex([[\.[a-z]{2,4}\/[a-z]{1}\/.{2,}\.php$]]), 1)
			or UrlsMatch(regex([[\/[a-z]{1,2}\/.{3,}\.php$]]), 1)
			or wclass:IP_URL()
    		or wclass:FROM_ENDS_WITH_YEAR())
    then
        SetPSAR('ar2998')
        LogMsgToHadoop('dstat_sokolik_log', '#ar2998')
    end
    
    --ar2999
    --smtp / #gift
    --29.11.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_gt(features:MsgSize(), 100000)
    	and not features:IsPddUser()
        and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_lt(features:RepuserAge(), 10, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:WordCount(), 30) 
		and wclass:DECODED_8BIT_HELO()	
    	and wclass:FROM_ENDS_WITH_YEAR()
    then 
        SetPSAR('ar2999')         
    	LogMsgToHadoop('dstat_sokolik_log', '#ar2999')
    end

    --ar3000
    --mxs_mbp #zarabotki
    --30.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:UrlNormCount(), 10)
    	and cmpr_gt(features:HtmlTagCount(), 0)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:DKIM_FAIL()
    	and wclass:FAKE_ATTACH()
    then
        SetPSAR('ar3000')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3000')
    end
    
    --ar3001
    --mxs_mbp #zarabotki
    --30.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 3000)
    	and cmpr_lt(features:ShingleTextSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and features:UserCreateTime()
       	and cmpr_lt(features:UserCreateTime().days, 10 ,true)
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and wclass:FREE_HOSTING()
    	and wclass:FAKE_REPLY_IN_SUBJECT()
    then
        SetPSAR('ar3001')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3001')
    end

    --ar3002
    --mxs_mbp #zarabotki
    --30.11.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and cmpr_lt(features:RepuserAge(), 40,  true)
      	and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and wclass:FE_NO_TO()
    	and (wclass:FE_ENG_MSG()
    		or features:Words8bitRatio() == 0
    		or features:WordsOtherRatio() >= 30)
    then
        SetPSAR('ar3002', true)
        LogMsgToHadoop('dstat_sokolik_log', '#ar3002')
    end
    
         --ar3003
         --mxs_other / #mirtesen_test
         --30.11.16 / razuvaev
              if features:RcvSrcExt() == 'mxs_other'
                and features:MsgSize() >= 30000
                and features:ToUndisclosed() == 1
                and wclass:CT_IN_BODY()
          then
           SetPSAR('ar3003')
          end
    
    --ar3004
    --mxs_other / #uvelichenie
    --39.11.16 / razuvaev
    --25d18951fc1eac99c62417aa0073afd9
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 100, 100000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and (cmpr_eq(features:MessageId(), "< >") or cmpr_eq(features:MessageId(), "<>"))
        and HeaderMatch('Content-Type', 'multipart/alternative;boundary="----[[BOUNDARY]]"')
    then
        SetPSAR('ar3004')
    end
    
    --ar3005
    --mxs / #zarabotok
    --30.11.16 / razuvaev
    --wc_ip_ham_spam
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 20000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() <= 2
        and features:NoSubject() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 1 and features:WordCount() <= 100
        and cmpr_eq(features:FromRealNameWordCount(),1)  
        and StrMatchRe(features:FromLocalPart(), regex([[^(noreply|no-reply|support|info)(?:\d{1,2})?$]])) 
    then
        SetPSAR('ar3005')
    end
    
    --ar3006
    --mxs_other / #avito
    --30.11.16 / razuvaev
    --1ac1fbe8b5425cf4e4e66f695e401105 30a59cdc401cf10166c5f291760deb48
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 1000, 10000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(),1)   
        and cmpr_eq(features:FromDomain(),'avito.ru')
        and wclass:MISSING_DATE()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar3006')
    end
    
    --ar3007
	--svobodno
    
    --ar3008
    --mxs_other / #schet
    --30.11.16 / razuvaev
    --272ef12aa677f141a3aba9bb8109e462 f8a04a75a73b04e388009de6c0e538b8
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 15000, 100000) 
        and cmpr_eq(features:AttachOfficeCount(), 1)
        and cmpr_eq(features:MultipartNum(),3)   
        and (cmpr_eq(features:FromLocalPart(),"bill") or cmpr_eq(features:Subject(),"ñ÷åò"))
        and cmpr_eq(features:NoBodyTag(),1)
        and cmpr_eq(features:NoHtmlTag(),1)
        and wclass:NO_MIME_AND_SPF_NOT_PASS()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar3008')
    end

    --ar3009
	--mxs_mbp / #vbei v google #orange.fr
	--30.11.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 750000)
    	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr')
    	and cmpr_btw(features:WordCount(), 5, 2500, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
		and (wclass:HAS_HDR_ORGANIZATION() or wclass:NO_TO() or wclass:OTHER_IP_IN_DNSBL())
    	and wclass:SUSP_SENDER_HELO_DOMAIN()
		and wclass:SPF_NOT_PASS()
   		and wclass:NO_USER_AGENT()
	then
		SetPSAR('ar3009')
	end

    --ar3010
    --mxs_other / #1kanal
    --30.11.16 / razuvaev
    --2199b5a519b95a5051c8e1fd1aa5314a 5e9aac90b5c68479873b805617064660
    if not IsBlocked
        and false
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 1000, 10000) 
        and cmpr_eq(features:MultipartNum(),3)   
        and cmpr_btw(features:TextLines(), 10, 50) 
        and cmpr_btw(features:Word8bitCount(), 70, 200) 
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_gt(features:SubjectWord8bitCount(),5)
        and (wclass:RECEIVED_BAD_PATTERN_4() or wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25())
        and wclass:DOMAINS_EQUAL()
        and wclass:HAS_TAG_META()        
    then
        SetSpam('ar3010')
    end
    
    --ar3011
    --fe / #niger 
    --30.11.16 / razuvaev 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 15000)
        and (cmpr_eq(features:AttachOfficeCount(), 1) or cmpr_gt(features:ImgNum(), 1, true))
        and cmpr_lt(features:WordCount(), 50)
        and cmpr_lt(features:TextLines(), 10, true)
        and cmpr_btw(features:HtmlTagCount(), 0, 15, true)
        and wclass:CT_ENCODED_FILENAME()
        and StrMatch(features:From(), features:To())     
        and not wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(17866, 100)
    then
        SetPSAR('ar3011')
    end
    
    --ar3012
    --mxs_mbp / #cloud.mail.ru
    --01.12.16 / minina(sokolik)
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 500, 4000)
        and (cmpr_gt(features:RcptNum(), 5, true)
    		or (wclass:NO_BODY_TAG() and cmpr_gt(features:HtmlTagCount(), 0)))
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 2, 20)
        and cmpr_btw(features:WordCount(), 2, 150)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 0,1, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
    	and wclass:RAMBLER_FE()
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
        and UrlsMatchStr('cloud.mail.ru/public', 1)
    then
        SetPSAR('ar3012')
    end
    
    --ar3013
    --mxs_other / #zarabotok #img 
    --30.11.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
       	and cmpr_btw(features:MsgSize(), 5000, 500000)
        and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and cmpr_btw(features:WordCount(), 10, 1000, true)
    	and cmpr_btw(features:TextLines(), 10, 500, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 15, true)
    	and cmpr_gt(features:HtmlTagCount(), 100, true)
    	and cmpr_gt(features:NumberCount(), 500)
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
    	and wclass:SPF_NOT_PASS()
    	and wclass:DOMAINS_EQUAL()
    	and (wclass:NEW_IP_30_DAYS() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar3013')
    end
    
	--ar3014
    --mxs_mbp / #money_bot #gmail
    --30.11.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 100, 100000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 2, 50)
        and cmpr_btw(features:WordCount(), 2, 250, true)
        and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	--and cmpr_gt(features:Words8bitRatio(), 50)
    	and features:IsFromGoogle()
    	and (wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL() or wclass:REPLY_TO_WITHOUT_EMAIL())
        and wclass:OTHER_IP_IN_DNSBL()
    	and (UrlsMatch(regex([[^[a-z\d]+\.[a-z]+/[a-z-_]{30,}$]]),1) or TermsMatchGroup(18193,100))
    then
        SetPSAR('ar3014')
    end
    
    --ar3015
	--svobodno
    
    
    --ar3016
    --mxs / #zarabotok #su #jewellery
    --30.11.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:ShortUrlCount() == 1
        and features:EmailsCountInCcHeader() >= 1
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 100
		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:NOREALNAME_FROM()
    then
        SetPSAR('ar3016')
    end
   
    --ar3017
	--svobodno

    --ar3018
    --mxs / #zarabotok #pdf
    --01.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100000 and features:MsgSize() <= 2000000
        and features:ImgNum() >= 1 and features:ImgNum() <= 2 
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 1 and features:WordCount() <= 100
        and wclass:CC_URLS()
        and wclass:RECEIVED_BAD_PATTERN_4()
        and (HeaderMatchRe('Received',regex([[\s?from\s?[a-z]{1,3}\d{5}.hv8.ru]])) or wclass:FAIL_SPF())
    then
        SetPSAR('ar3018')
    end

    --ar3019
	--mxs_mbp / #vbei v google #rambler.ru
	--01.12.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and features:AuthenticatedDomain() == 'rambler.ru'
    	and cmpr_btw(features:WordCount(), 5, 2500, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	--and cmpr_eq(features:HtmlUniqueTagCount(), 0)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and wclass:UNAVAILABLE_IN_RECEIVED()
   		and wclass:NO_USER_AGENT()
    	and StrMatchRe(features:Subject(), regex([[.*\d\:\d.*]]))    
	then
		SetPSAR('ar3019')
	end

    --ar3020
	--mxs_mbp / #vbei v google #rambler.ru
	--01.12.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and features:AuthenticatedDomain() == 'rambler.ru'
    	and cmpr_btw(features:WordCount(), 5, 2500, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	--and cmpr_eq(features:HtmlUniqueTagCount(), 0)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and wclass:UNAVAILABLE_IN_RECEIVED()
   		and wclass:NO_USER_AGENT()
  		and TermsMatchGroup(17357, 100)
	then
		SetPSAR('ar3020')
	end
    
    --ar3021
	--mxs_mbp / #vbei v google #rambler.ru
	--01.12.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and features:AuthenticatedDomain() == 'rambler.ru'
    	and (cmpr_btw(features:WordCount(), 10, 2500, true) or cmpr_gt(features:WhitespaceToWordRatio(), 3000))
    	and wclass:UNAVAILABLE_IN_RECEIVED()
   		and wclass:NO_USER_AGENT()
  		and TermsMatchGroup(17357, 100)
    	and StrMatchRe(features:Subject(), regex([[.*\d\:\d.*]]))
	then
		SetPSAR('ar3021')
	end
    
    --ar3022
    --fe/ #zarabotok #dll
    --01.12.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
    	and not features:IsPddUser()
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:RcptNum(), 10, true)
        and (cmpr_gt(features:UrlNormCount(), 1, true) or TermsMatchGroup(18098, 100))
    	and cmpr_lt(features:RepuserAge(), 200, true)
        and not UrlsMatchStr('e.mail.ru')
    	and wclass:NOREALNAME_TO()
    	and wclass:RUSSIAN_FROM_REALNAME()
        and StrMatchRe(features:PartsFilenames(), regex([[\.(exe|dll|ttf|xml|DLL)$]]))
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 5)
    then
        SetPSAR('ar3022')
    end

    --ar3023
	--svobodno

    --ar3024
    --mxs / #zarabotok
    --01.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 50000 and features:MsgSize() <= 500000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:SimpleType() == 'text'
        and features:TextLines() >= 100 and features:TextLines() <= 500
        and wclass:CT_IN_BODY()
        and wclass:NOREALNAME_FROM()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar3024')
    end
    
	--ar3025
    --fe / #ssilka
	--01.12.16 / r.sulimov
    --fc_fb_badkrm
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "fe")
		and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 1000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and (cmpr_gt(features:RcptNum(), 5, true) or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY() or wclass:ONE_WORD_SUBJECT_AND_AUTOREG())
    	and cmpr_gt(features:WhitespaceToWordRatio(), 200)
    	and cmpr_gt(features:LinesToWordsRatio(), 30)
    	and cmpr_eq(features:HtmlTagCount(), 3)
    	and cmpr_btw(features:UserAge(), 1,40, true)
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_eq(features:UrlNormCount(),1)
    	and wclass:ONE_WORD_SUBJECT()
    then
        SetPSAR('ar3025')
    end
     
    --ar3026
	--svobodno
    
    --ar3027
    --mxs_other/ #zarabotok #advcash 
    --01.12.16 /minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_btw(features:TextLines(), 2, 50, true)
    	and cmpr_btw(features:WordCount(), 10, 200)
       	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
       	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and HasHeader('Disposition-Notification-To')
       	and wclass:UNDISCLOSED()
    	and wclass:HAS_HEADER_SENDER() 
    	and wclass:NEW_IP_30_DAYS()
    then
    	SetPSAR('ar3027')
    end
    
	--ar3028
	--svobodno

	--ar3029
    --fe / #zarabotok #cloud
    --01.12.16 /m.guryanov 
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 500, 10000)
    	and features:IsPddUser()
    	and features:HasTextOnly() == 1    	   	
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)  	
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true) 
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true)    	
    	and cmpr_gt(features:HtmlTagCount(), 4, true) 
    	and UrlsMatchStr('cloud.mail.ru/public', 1)  
  		and (StrMatchRe(features:FromLocalPart(), regex([[[A-Za-z]{3,12}\d{2,5}[a-z]{1,5}]])) or wclass:FROM_TLD_IS_SUSP() 
        	or cmpr_lt(features:RepuserAge(), 2, true))
	then      	
        SetPSAR('ar3029')
    end 

	--ar3030
	--svobodno   
    
	--ar3031
	--mxs_mbp / #vbei v google #orange.frambler #no_urls #7bit_words
	--01.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 200000)
    	and features:RamblerSmtp()
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_gt(features:WordCount(), 500)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:Words8bitRatio(), 20)
		and wclass:HAS_HDR_ORGANIZATION()
   		and wclass:NO_USER_AGENT()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
	then
		SetPSAR('ar3031')
	end

    --ar3032
	--mxs_other / #virus #attach #xls
	--01.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.xls')
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
    	and cmpr_btw(features:TextLines(), 1, 50)
    	and cmpr_gt(features:WordCount(),100, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
		and cmpr_btw(features:HtmlTagCount(), 50, 200)
		and wclass:SHORT_BOUNDARY()
    	and wclass:NO_USER_AGENT()
		and wclass:SPF_NOT_PASS()
    	and UrlsMatchStr('.html', 1)
	then
		SetPSAR('ar3032')
	end 
    
    --ar3033
	--svobodno
    
    --ar3034
	--svobodno

    --ar3035
	--svobodno
    
    --ar3036
	--svobodno
    
	--ar3037
	--fe / #zarabotok #saity
	--01.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 500, 15000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw (features:TextLines(), 2, 80,true)
    	and cmpr_btw(features:WordCount(), 50, 500)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:RepuserAge(), 0, 3, true)
    	and cmpr_eq(features:Subject8bitOnly() , 1)
    	and cmpr_btw(features:WhitespaceToWordRatio(), 100, 700)
    	and cmpr_btw(features:HtmlTagCount(), 10, 150)
    	and features:HtmlTags()['br'] ~= nil and features:HtmlTags()['br']/features:HtmlTagCount() > 0.6
    	and (wclass:AUTOREG() or wclass:VERY_LONG_LOCALPART())
        and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:WORDS_OTHERS_BAD_RATIO()
    then
    	SetPSAR('ar3037')
    end
    
    --ar3038
    --smtp / #privet
    --01.12.16 / a.sokolov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
        and cmpr_btw(features:MsgSize(), 1000, 20000)
    	and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:MultipartNum(), 2)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)    
        and StrMatchRe(features:From(), regex([[^.{1,}\.\d{2}@.{1,}$]]))
    then 
        SetPSAR('ar3038')         
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3038')
    end

    --ar3039
	--svobodno
    
    --ar3040
	--svobodno

    --ar3041
	--svobodno
    
    --ar3042
    --mxs_other / #flood
    --01.12.16 / philip.karpov
    --moc_mo_nodkim
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 500, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 0, 1, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:WordCount(), 1, 10, true)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_gt(features:HtmlTagCount(), 2)
        and cmpr_gt(features:NumberCount(), 1, true)
        and wclass:NO_USER_AGENT()
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and wclass:DOMAINS_EQUAL()
        and wclass:NO_BODY_TAG()
    then
        SetPSAR('ar3042')
    end
    
    --ar3043
	--svobodno
    
    --ar3044
    --mxs_mbp #google
    --01.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and wclass:UNAVAILABLE_IN_RECEIVED()
    	and wclass:SUSP_HELO()
    then
        SetPSAR('ar3044')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3044')
    end
    
    --ar3045
    --mxs_mbp / #rambler #vbei_v #dermo_helo
	--15.12.16 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:RamblerSmtp()
    	--and wclass:UNAVAILABLE_IN_RECEIVED()
    	and features:Helo() 
    	and StrMatchRe(features:Helo() , regex([[([A-Z]{1,6}[a-z]{1,6}(?:[A-Z]{1,6}|[a-z]{1,6}){1,10}|[a-z]{1,6}[A-Z]{1,6}(?:[a-z]{1,6}|[A-Z]{1,6}){1,10})\.[a-z]+]]))
	then
        SetPSAR('ar3045')
    	LogMsgToHadoop('dstat_minina_log', '#ar3045')
    end
    
    --ar3046
    --mxs_mbp #kolya
    --11.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_btw(features:MsgSize(), 100, 8000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)    
    	and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and cmpr_lt(features:ShingleTextSize(), 1500)
 	    and cmpr_eq(features:Subject7bitOnly(), 1)
    	and cmpr_gt(features:SubjectLen(), 4)
    	and TermsMatchGroup(18180, 100)
    	and (wclass:ONE_URL_SUBJECT()
    		or wclass:ONE_WORD_SUBJECT())
    	and not wclass:EMAIL_IN_FROM_REAL_NAME()
        and StrMatchRe(features:Subject(), regex([[^[A-Z-\.0-9]+$]]))
    then
        SetPSAR('ar3046')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3046')
    end

    --ar3047
    --mxs_mbp #zapiska
    --16.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:MsgSize(), 1000)
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and (wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:DKIM_FAIL()
			or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    		or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
        and TermsMatchGroup(18122, 100)
    then
        SetPSAR('ar3047')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3047')
    end
    
    --ar3048
    --mxs_mbp #zapiska
    --28.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and (cmpr_lt(features:MsgSize(), 3000)
    		or (cmpr_gt(features:MsgSize(), 10000) and cmpr_gt(features:WordsOtherRatio(), 30)))
        and cmpr_eq(features:HasTextOnly(), 1)    
    	and (wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:NOT_CP1251_CHARS_IN_SUBJECT()
			or TermsMatchGroup(18180, 100))
        and UrlsMatchStr('go.mail.ru/search', 1)
    then
        SetPSAR('ar3048')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3048')
    end

    --ar3049
    --mxs_mbp #podrobnee
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
        and cmpr_eq(features:HasTextOnly(), 1)  
        and (cmpr_gt(features:UrlNormCount(), 2)
    		or (cmpr_gt(features:Words8bitRatio(), 70) and cmpr_eq(features:UrlNormCount(), 0)))
    	and cmpr_gt(features:ShingleTextSize(), 5000)
    	and wclass:HAS_HEADER_COREMAIL_ANTISPAM()
    then
        SetPSAR('ar3049')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3049')
    end
    
    --ar3050
    --mxs_mbp #s4et
    --02.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:EMAIL_IN_HDR_ORGANIZATION()
    then
        SetPSAR('ar3050')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3050')
    end
    
    --ar3051
    --mxs_other #tur
    --16.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_gt(features:MsgSize(), 10)
        and (cmpr_gt(features:ImgNum(), 1, true)
    		or cmpr_eq(features:HasTextOnly(), 1))
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and (wclass:DIFFERENT_RES_IMAGES()
    		or wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    		or wclass:SUSP_IMAGE_NAME_3()
			or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
    		or wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP())
        and HeaderMatch('Received', '.fvds.ru>')
    then
        SetPSAR('ar3051')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3051')
    end
    
    --ar3052
    --mxs_mbp #zarabotki
    --25.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and features:IsFromOtherMbp()
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or cmpr_eq(features:FromRealNameWordCount(), 1)
			or wclass:SPF_NOT_PASS_FROM_MBP()
			or wclass:SUBJECT_MIXED_BADRATIO())
		and UrlsMatch(regex([[\/[a-z]{1,2}\/.{3,}\.php$]]), 1)
	then
        SetPSAR('ar3052')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3052')
    end

    --ar3053
    --fe / #FAST_AUTOREG
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:Karma(), 0)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3, true)
		and wclass:FAST_AUTOREG()
    then
        SetPSAR('ar3053', true)
    end
    
    --ar3054
    --fe / #FE_REGIONS_MISMATCH_WITH_MORE_THAN_20_RCPT
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UserAge(), 0, 200, true)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
		and wclass:FE_REGIONS_MISMATCH_WITH_MORE_THAN_20_RCPT()
    then
        SetPSAR('ar3054', true)
    end
    
   --ar3055
    --fe / #MANY_RCPT_FROM_CMPL_RATIO_IP
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UserAge(), 0, 200, true)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
		and wclass:MANY_RCPT_FROM_CMPL_RATIO_IP()
    then
        SetPSAR('ar3055')
    end
    
    --ar3056
    --fe / #NEW_REP_IP_AND_SPAM_RATIO_BY_LAST_DAY
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:Karma(), 0)
        and cmpr_gt(features:RcptNum(), 10)
        and cmpr_btw(features:UserAge(), 0, 200, true)
	    and cmpr_btw(features:UrlNormCount(), 1, 3, true)
	    and wclass:NEW_REP_IP_AND_SPAM_RATIO_BY_LAST_DAY()
        and cmpr_lt(features:RepuserMissedHits30Days(), 3)
    then
        SetPSAR('ar3056')
    end
     
	--ar3057
    --fe / #REP_USER_SPAM_RATE_MORE_25
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_gt(features:RcptNum(), 1)
    	and cmpr_btw(features:UserAge(), 0, 200, true)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
		and wclass:REP_USER_SPAM_RATE_MORE_25()
    then
        SetPSAR('ar3057')
    end
    
    --ar3058
    --fe / #AUTOREG
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:Karma(), 0)
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_lt(features:UserAge(), 15, true)
	    and cmpr_btw(features:UrlNormCount(), 0, 1, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3, true)
        and cmpr_lt(features:RepuserMissedHits30Days(), 3)
	    and wclass:AUTOREG()
    then
        SetPSAR('ar3058')
    end
    
    --ar3059
	--svobodno

    --ar3060
    --mxs_mbp #disk
    --02.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:ShingleTextSize(), 500)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:MORE_15_EMAILS_IN_TO()
    	and wclass:YANDEX_DISC_AND_SHORT_MESSAGE()
    then
        SetPSAR('ar3060')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3060')
    end
    
    --ar3061
    --fe / #zarabotok 
	--02.12.16 / r.sulimov
    --fc_fb_usagemo7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 5000, 30000)
    	and cmpr_btw(features:ImgNum(), 1, 3, true)
        and (cmpr_gt(features:RcptNum(), 15, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_btw(features:UserAge(), 1, 200, true)
        and cmpr_btw(features:TextLines(), 2, 6, true)
        and cmpr_btw(features:WordCount(), 10, 150)
    	and cmpr_lt(features:LinesToWordsRatio(), 20, true)
		and cmpr_eq(features:UrlNormCount(), 1)
		and cmpr_eq(features:HtmlTagCount(),3)
		and cmpr_gt(features:MultipartNum(), 3)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and cmpr_gt(features:AbfCitiesPerMonthNum(),3, true)
    	and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar3061')
    end

    --ar3062
	--svobodno
    
    --ar3063
    --fe / #FE_REGIONS_MISMATCH_WITH_MORE_THAN_20_RCPT
	--01.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:UserAge(), 0, 200, true)
		and cmpr_btw(features:UrlNormCount(), 0, 3, true)
		and wclass:FE_REGIONS_MISMATCH_WITH_MORE_THAN_20_RCPT()
    	and wclass:AUTOREG_WITH_BAD_CARMA()
    	and wclass:NO_TEXT_LINES()
        and wclass:FE_WITH_ATTACH()
    then
        SetPSAR('ar3063')
    end

    --ar3064
	--svobodno
	
    --ar3065
	--svobodno
    
	--ar3066
    --fe / #zarabotok #money
	--02.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 10, 10000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and cmpr_btw(features:WordCount(), 1, 300, true)
       	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_lt(features:RepuserAge(), 3, true)
    	and cmpr_eq(features:HasFreeHosting(), 1)
    	and cmpr_gt(features:EmailsCountInCcHeader(), 0)
       	and (wclass:ONLY_7BIT_WORDS() or wclass:WORDS_WITH_NOISE())
    then
    	SetPSAR('ar3066')
    end

    --ar3067
	--mxs_mbp / #vbei v google #qip
	--07.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 2, 50, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
		and wclass:HAS_HDR_ORGANIZATION()
   		and wclass:NO_USER_AGENT()
	then
		SetPSAR('ar3067')
	end
    
    --ar3068
	--mxs_mbp / #vbei v google #yandex.ru
	--07.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and features:AuthenticatedDomain() == 'yandex.ru'
    	and cmpr_btw(features:WordCount(), 2, 50, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:SubjectNumbersCount(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and cmpr_gt(features:Words7bitRatio(), 40)
		and wclass:HAS_HDR_ORGANIZATION()
   		and wclass:NO_USER_AGENT()
	then
		SetPSAR('ar3068')
	end
    
    --ar3069
    --fe / #zarab_manystr_regex_url
    --02.12.16 / razuvaev
    --25d6de35a5fc06f0258367387c09e57b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100,50000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(), 3)  
        and cmpr_eq(features:Helo(),'')
        and cmpr_eq(features:Subject8bitOnly(), 1)  
        and cmpr_gt(features:WordCount(), 300)
        and wclass:SHORTURL()
        and UrlsMatch(regex([[^[a-z0-9-]{1,30}\.[a-z]{2,4}\/[a-zA-Z0-9]{3,20}]]),1)
        and wclass:AUTOREG()
        and wclass:WITH_HTTP()
        and wclass:NOREALNAME_TO()   
    then
        SetPSAR('ar3069')
    end
    
    --ar3070
	--fe / #vbei v google #mail
	--02.12.16 / r.kulpin
	if not IsBlocked
        and false
		and (cmpr_eq(features:RcvSrcExt(), 'fe') or cmpr_eq(features:RcvSrcExt(), 'mxs_mbp'))
		and cmpr_btw(features:MsgSize(), 100, 50000)
    	and cmpr_btw(features:WordCount(), 5, 2500, true)
    	and cmpr_btw(features:UrlNormCount(), 0, 3, true)
    	and cmpr_lt(features:SubjectLen(), 100)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and (wclass:ABF_FAST_CITY_CHANGE() or wclass:NO_TO())
   		and (wclass:AUTH_SENDER_WITH_BAD_REP() or wclass:FROM_ENDS_WITH_YEAR() or wclass:SHORT_PHP_NAME_IN_URL())
    	and StrMatchRe(features:Subject(), regex([[.*\d\:\d.*]]))    
	then
		SetPSAR('ar3070',true)
	end
    
    --ar3071
	--svobodno
    
    --ar3072
    --fe / #zarabotok 
	--05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
		and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:UserAge(), 10, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:WordCount(), 1, 100)
		and cmpr_gt(features:UrlNormCount(), 2, true)
    	and wclass:CC_URLS()
    then
        SetPSAR('ar3072')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3072')
    end
    
    --ar3073
	--svobodno
    
    --ar3074
    --fe / #cc_url #pic
    --02.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 2000, 50000)
        and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:WordCount(), 10)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_eq(features:Words8bitRatio(), 0)
        and features:MailRuTo()
        and wclass:SUBJECT_ONLY_WITH_IMAGE()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3074')
    end

    --ar3075
    --mxs_mbp #google
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_lt(features:ShingleTextSize(), 500)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and (wclass:SPF_NOT_PASS_FROM_MBP()
    		or wclass:MISC_SUSP_MAILERS()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
			or wclass:SUBJECT_MIXED_BADRATIO())
        and (features:FromDomain() == 'orange.fr'
    		or features:FromDomain() == 'yeah.net')
    	and (cmpr_eq(features:UrlNormCount(), 0)
    		or UrlsMatchStr('google.ru/?', 1))
    then
        SetPSAR('ar3075')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3075')
    end
    
    --ar3076
    --fe / #zarabotok #attach
    --02.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 3000, 1000000)
        and ((cmpr_eq(features:HasAttach(), 1) and cmpr_eq(features:AttachAllCount(), 1)) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 15)
        and cmpr_gt(features:TextLines(), 7, true)
        and cmpr_lt(features:Words8bitRatio(), 75)
        and wclass:CT_ENCODED_FILENAME()
        and wclass:HAS_FREE_HOSTING()
        and (wclass:SUSP_MIXED_WORDS_RATIO() or wclass:WORDS_MIXED_RATIO())
    then
        SetPSAR('ar3076')
    end
    
    --ar3077
    --fe / #rabota
    --02.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 500000)
        and (cmpr_eq(features:HasTextOnly(), 1) 
            or (cmpr_eq(features:HasAttach(), 1) and cmpr_eq(features:AttachAllCount(), 1))
            or cmpr_eq(features:ImgNum(), 1))
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_gt(features:UrlCount(), 1, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and cmpr_gt(features:WordCount(), 20)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 5, true)
        and cmpr_gt(features:WhitespaceRatio(), 15)
        and features:MailRuTo()
        and (wclass:WORDS_MIXED_RATIO() 
            or wclass:VERY_LONG_LOCALPART()
            or wclass:TXT_ATTACH())
        and wclass:WITH_HTTP()
        and UrlsMatchStr('sereport.net/user/', 1)
    then
        SetPSAR('ar3077')
    end
    
    --ar3078
    --mxs_mbp #bags
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 1000000)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and (cmpr_lt(features:ShingleTextSize(), 600)
    		or wclass:TEXT_NORM_TO_SHINGLE_MORE_THAN_20()
			or TermsMatchGroup(18123, 100))
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
	    and (cmpr_eq(features:FromRealNameWordCount(), 1) or wclass:UNDISCLOSED())
    	and (cmpr_gt(features:Words8bitRatio(), 50)
    		or wclass:ONLY_URLS_IN_BODY())
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and (wclass:HAS_EXTERNAL_IMG()
    		or wclass:HAS_INPUT_TAG()
			or wclass:MORE_THAN_N_RCPT())
    then
        SetPSAR('ar3078')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3078')
    end
    
    --ar3079
    --mxs_mbp #zarabotki #vzlom
    --07.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and features:IsFromOtherMbp()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
   		and cmpr_eq(features:UrlNormCount(), 1)
        and (cmpr_eq(features:FromRealNameWordCount(), 1)
    		or wclass:MORE_1_EMAILS_IN_TO())
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and wclass:PHP_URL()
    	and not wclass:RUSSIAN_FROM_REALNAME()
	then
        SetPSAR('ar3079')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3079')
    end
    
    --ar3080
    --mxs_mbp #novosti
    --02.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
    	and wclass:MISC_SUSP_MAILERS()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:DKIM_FAIL()
        and HeaderMatch('Received-SPF', 'smtpout.ngs.ru')
    then
        SetPSAR('ar3080')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3080')
    end

    --ar3081
    --fe / #zarabotok
    --03.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 20)
        and cmpr_eq(features:NoSubject(), 1)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 5)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and features:MailRuTo()
        and wclass:SOURCE_IP_IN_DNSBL()
        and (wclass:HAS_SUSP_URLS() or wclass:SUSP_HTML_TAG_RATIO())
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar3081')
    end

    --ar3082
    --smtp / #vbei #google
    --04.12.16 / philip.karpov(sokolik)
    --as6291_fa
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 3000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 10)
        and (wclass:FAST_AUTOREG()
    		or wclass:SUBJECT_MIXED_BADRATIO())
        and wclass:LASTHELO_WITHOUT_DOMAIN()
        and wclass:HAS_HDR_ORGANIZATION()
    then
        SetPSAR('ar3082')
    end
    
    --ar3083
    --mxs_other / #zarabotok
    --03.12.16 / philip.karpov
    --as7127_ipfast
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 5000, 1000000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 2, 15, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_gt(features:WordCount(), 100)
        and cmpr_gt(features:HtmlTagCount(), 100)
        and cmpr_gt(features:NumberCount(), 500, true)
        and wclass:CT_IN_BODY()
        and wclass:NEW_IP_30_DAYS()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and HeaderMatch('Received', '[92.53.10')
    then
        SetPSAR('ar3083')
    end
    
      --ar3084
         --mxs_other / #govna
         --03.12.16 / razuvaev
              if features:RcvSrcExt() == 'mxs_other'
                and features:MsgSize() >= 30000
                and cmpr_eq(features:Helo(),'mail.com')
                and wclass:CT_IN_BODY()
                and (wclass:NEW_IP_1_DAY() or wclass:IP_REP_GAP_MORE_7_DAYS())
          then
           SetPSAR('ar3084')
          end
    
    --ar3085
    --fe / #kruz
    --03.12.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),20000,150000)
        and (cmpr_eq(features:AttachOtherCount(),1)  or UrlsMatchStr('.technopark.ru', 1))
        and cmpr_gt(features:UrlCount(),20)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:Subject8bitOnly(), 1)  
    	and wclass:HAS_INPUT_TAG()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:HAS_TAG_SCRIPT()
    then
        SetPSAR('ar3085')
    end
    
    --ar3086
    --smtp / #seminari #shum
    --03.12.16 / razuvaev
    --18ba94c1148a1741f80fb67e39008694 8b7714b5ff9aa38b5406fa10c710590c
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),30000,60000)
     	and cmpr_eq(features:MultipartNum(), 6)
        and cmpr_eq(features:ExternalImgNum(),1)
        and cmpr_eq(features:ImgNum(),2)
        and cmpr_lt(features:UserAge(), 30)
        and cmpr_btw(features:TextLines(),100,270)
        and wclass:BADNET()
        and wclass:SHORT_BOUNDARY()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar3086')
    end

    --ar3087
    --mxs_mbp #znakomstva
    --03.12.16 / razuvaev
    --36046f84281d195367f5099487d5c1a2 018389debcbb1ffb0fe501e58d2f8b6b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:FromDomain(),"rambler.ru")
        and cmpr_btw(features:MsgSize(),100,10000)
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_lt(features:WordCount(), 10)
        and wclass:UNAVAILABLE_IN_RECEIVED_AND_LASTHELO_WITHOUT_DOMAIN()
        and (TermsMatchGroup(18110, 100) or UrlsMatch(regex([[^yandex.|^goo]]),1))
    then
        SetPSAR('ar3087')
    end
    
    --ar3088
	--mxs_mbp / #dolgi #img 
	--12.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_gt(features:ImgNum(), 0)
      	and cmpr_eq(features:UrlNormCount(), 0)
    	and features:ToEmailInBody()
    	and features:IsFromGoogle()
    	and wclass:MS_MAILER()
    	and wclass:HAS_EXTERNAL_IMG()
    then
    	SetPSAR('ar3088',true)
    end

    --ar3089
	--smtp / #ct_in_body
	--03.12.16 / r.kulpin
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1) 
        and cmpr_eq(features:MultipartNum(), 2)
		and features:NoRealNameTo()
       	and cmpr_btw(features:TextLines(), 3, 600)
    	and cmpr_gt(features:Words7bitRatio(), 50)
    	and wclass:CT_IN_BODY()
    	and wclass:SMALL_AGE_REPUSER_14()
  	then
    	SetPSAR('ar3089')
    end
    
        --ar3090
         --smtp / #ct in body
         --03.12.16 / razuvaev
              if features:RcvSrcExt() == 'smtp'
                and features:MsgSize() >= 1000
                and cmpr_eq(features:Helo(),'mail.ru')
                and (wclass:SMTP_SCRIPT_TAG() or wclass:CT_IN_BODY())
                and wclass:SUSP_LINES_TO_WORD_RATIO()
                and cmpr_lt(features:WordCount(),50)     
                and not cmpr_eq(features:EnvelopeFromDomain(),'mail.ru')
          then
           SetPSAR('ar3090')
          end
 
    --ar3091
    --mxs / #zarabotok #privet
    --03.12.16 / r.belyankin
    --mcc_mc_ip60
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 2
        and features:UrlNormCount() == 0
        and features:TextLines() >= 10 and features:TextLines() <= 100
        and features:HtmlTagCount() == 0 
        and wclass:MESSAGE_ID_NO_DOMAIN()
    then
        SetPSAR('ar3091')
    end
    
    --ar3092
    --mxs / #zarabotok #su #jewellery
    --30.11.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:ShortUrlCount() == 1
        and features:MultipartNum() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 25
        and TermsMatchGroup(18108, 10)
    then
        SetPSAR('ar3092')
    end
     
    --ar3093
    --mxs / #zarabotok #jewellery
    --03.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 25
        and UrlsMatch(regex([[\/[a-z]{1,3}\/[a-z\d]+\.php$]]),1)
        and TermsMatchGroup(18108, 10)
    then
        SetPSAR('ar3093')
    end
    
    --ar3094
    --mxs_mbp #zarabotok
    --03.12.16 / razuvaev
    --mfc_mf_rambler
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:FromDomain(),"rambler.ru")
        and cmpr_btw(features:MsgSize(),1000,10000)
        and cmpr_eq(features:HasTextOnly(), 1)  
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM_WITH_X_PHP_SUSP()
        and wclass:BAD_LINES_TO_WORD_RATIO()
        and TermsMatchGroup(18109, 100)
    then
        SetPSAR('ar3094')
    end
    
    
    --ar3095
    --fe / #attachother
    --03.12.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),20000,1000000)
        and cmpr_eq(features:AttachOtherCount(),1) 
        and cmpr_gt(features:UrlCount(),1)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:Subject8bitOnly(), 1)  
        and wclass:NEW_IP_7_DAYS()
        and wclass:AUTOREG()
        and wclass: PHP_URL()
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    then
        SetPSAR('ar3095')
    end

    --ar3096
    --mxs / #zarabotok
    --03.01.17 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 25000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and	features:MultipartNum() == 1
        and features:TextLines() >= 5 and features:TextLines() <= 50
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:NEW_FROMDOMAIN_15_DAYS())
        and UrlsMatch(regex([[\/webdirect\.php$]]),1)
    then
        SetPSAR('ar3096')
    end
    
    --ar3097
    --fe / #zarab_attach
    --04.12.16 / razuvaev
    --2e807b90240379a5e82e682164b64798
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
        and (cmpr_gt(features:AttachOtherCount(), 1,true)  or cmpr_gt(features:AttachExecutableCount(), 1,true))
        and cmpr_lt(features:Karma(),0,true)
        and (cmpr_gt(features:SubjectWords8bitRatio(),70)  or cmpr_gt(features:SubjectWordMixedCount(),1,true))
        and wclass:CT_ENCODED_FILENAME()
        and wclass: WITH_HTTP()
      and wclass:PHP_URL()
      and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    then
        SetPSAR('ar3097')
    end
    
    --ar3098
    --mxs / #email #img
    --20.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 0
        and features:TextLines() >= 1 and features:TextLines() <= 3
        and features:WordCount() >= 5 and features:WordCount() <= 50
        and features:HtmlTagCount() == 0
        and wclass:REMOTE_IP_IN_SPAMHAUS()
        and wclass:ONE_RECEIVED()
        and wclass:IP_REP_GAP_MORE_14_DAYS()
    then
        SetPSAR('ar3098')
    end
    
    --ar3099
    --mxs_mbp #zarabotok #su
    --04.12.16 / razuvaev
    --14d72d21832e3f0674bcab60c85ff7e7 cfd2f36d803d2ef4649768163683774d
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(),100,5000)
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_lt(features:WordCount(), 40)
        and cmpr_gt(features:UrlCount(),1,true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and (wclass:HTML_BODY_HEAD() or wclass:BAD_LINES_TO_WORD_RATIO())
        and wclass:BASE64_TRANSFER_ENCODING()
    then
        SetPSAR('ar3099')
    end
    
    --ar3100
	--mxs_mbp / #vbei v google #rambler.ru
	--04.12.16 / r.sulimov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 50, 1000)
    	and features:RamblerSmtp()
    	and cmpr_eq(features:UrlNormCount(),1)
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and wclass:HAS_HDR_ORGANIZATION()
    	and (wclass:ONLY_URLS_IN_BODY() or cmpr_gt(features:WhitespaceToWordRatio(), 500))
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and wclass:NO_USER_AGENT()
	then
		SetPSAR('ar3100')
	end
    
    --ar3101
	--smtp / #privet
	--04.12.16 / a.lis	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_btw(features:MsgSize(), 100000, 400000)
        and cmpr_btw(features:TextLines(), 25, 60)
    	and cmpr_eq(features:DotCount(), 0)
    	and cmpr_eq(features:RepuserAge(), 1)
    	and wclass:CT_IN_BODY()
    	and wclass:NEW_IP_1_DAY()
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and HeaderMatch('Subject','Ïðèâåò')
  	then
    	SetPSAR('ar3101')
    end
    
    --ar3102
	--smtp / #privet
	--04.12.16 / r.sulimov	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'smtp'
    	and cmpr_eq(features:DotCount(), 0)
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_gt(features:LinesToWordsRatio(), 50)
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and cmpr_eq(features:Helo(), 'mail.ru')
    	and HeaderMatch('Subject','Ïðèâåò')
  	then
    	SetPSAR('ar3102')
    end

    --ar3103
    --fe / #zarabotok 
	--04.12.16 / r.sulimov
    --fc_fb_usagemo7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 2000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0)
        and (cmpr_gt(features:RcptNum(), 15, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL() or wclass:AUTOREG() or wclass:SOURCE_IP_IN_XBL())
        and cmpr_btw(features:UserAge(), 30, 60, true)
    	and cmpr_lt(features:RepuserAge(), 2, true)
		and cmpr_eq(features:UrlNormCount(), 1)
		and cmpr_gt(features:HtmlTagCount(),20)
		and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and (wclass:AUTOREG() or wclass:MEGALINE_NET() or wclass:NAME_IN_BODY())
    	and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar3103')
    end
    
	--ar3104
    --smtp / #bilety
	--04.12.16 / r.sulimov
    --sc_sb_badkrm
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 500000)
		and cmpr_btw(features:ImgNum(), 0, 3, true)
		and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_gt(features:TextLines(),50)
        and cmpr_gt(features:WordCount(), 500)
		and cmpr_gt(features:WordsOtherRatio(), 15)
        and cmpr_gt(features:Words8bitRatio(), 40)
		and cmpr_gt(features:NumberCount(),3)
        and cmpr_lt(features:RepuserAge(), 20)
		and cmpr_lt(features:Karma(), 0, true)
		and cmpr_lt(features:WhitespaceToWordRatio(), 10)
        and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
		and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3104')
    end
    
	--ar3105
	--mxs_other / #test
	--04.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium")
		and features:RepFromDomainTrapHitsByLastDay() >= 5
		and wclass:SPF_NOT_PASS()
	then
		SetPSAR('ar3105', true)
	end

	--ar3106
	--fe / #zarabotok
	--04.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "fe"
		and features:MsgSize() >= 1000000 and features:MsgSize() <= 4000000
		and features:HasAttach() == 1
		and features:TextLines() >= 1 and features:TextLines() <= 5
		and features:WordCount() >= 30 and features:WordCount() <= 100
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
		and features:FilesExtensions() == ".fb2" 
		and wclass:PHP_URL()
	then
		SetPSAR('ar3106')
	end

    --ar3107
    --fe / #zarabotok 
	--05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 1000, 100000)
		and (cmpr_eq(features:HasTextOnly(), 1)
    		or (cmpr_eq(features:HasAttach(), 1) and features:AttachOfficeCount() == 0)
    		or wclass:TXT_ATTACH())		
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:TextLines(), 1, 80)
        and cmpr_btw(features:WordCount(), 1, 500)
		and cmpr_btw(features:UrlNormCount(), 1, 5, true)
		and cmpr_gt(features:MultipartNum(), 3, true)
    	and (wclass:NOREALNAME_TO()
    		or wclass:NO_TO())
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and (wclass:WORDS_MIXED_RATIO()
    		or wclass:SEE_MORE_AT())
        and UrlsMatchStr('ct.sendgrid.net')
    then
        SetPSAR('ar3107')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3107')
    end

    --ar3108
    --fe / #zarabotok 
    --15.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 50000)
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 200, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 250, true)
        and (cmpr_eq(features:NoRealNameTo(), 1)
    		or wclass:NO_TO())
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:WordCount(), 1, 5000)
        and cmpr_btw(features:TextLines(), 1, 100)
        and cmpr_btw(features:DotCount(), 0, 150, true)
        and (cmpr_gt(features:Words8bitRatio(), 66)
    		or cmpr_gt(features:Words7bitRatio(), 30))
        --and wclass:NAME_IN_BODY()
        and ((cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and (UrlsMatch(regex([[\.ru$]]), 1)  
    		or UrlsMatch(regex([[\.ðô$]]), 1)))
    			or wclass:SUBJECT_MIXED_BADRATIO())
        and StrMatchRe(features:FromRealName(), regex([[^[à-ÿ¸]{2,}\s[à-ÿ¸]{2,}$]]))
    then
        SetPSAR('ar3108')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3108')
    end
    
    --ar3109
    --fe / #english #znakomstva
	--05.12.16 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_lt(features:MsgSize(), 500)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_lt(features:RepuserAge(), 2, true)
        --and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:UserAge(), 2, true)
        and cmpr_btw(features:TextLines(), 1, 10, true)
        and cmpr_lt(features:WordCount(), 20)
		and cmpr_eq(features:UrlNormCount(), 0)
        and (cmpr_gt(features:NumberCount(), 5)
    		or HeaderMatch('X-Mru-User-Agent' ,'Mozilla/4.0')
        	or wclass:FAST_AUTOREG())
    	and wclass:FE_ENG_MSG()
    then
        SetPSAR('ar3109')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3109')
    end
    
    --ar3110
    --mxs_mbp / #rambler #unavalable #helo
	--12.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_eq(features:HasTextOnly(), 1)
      	and cmpr_eq(features:UrlNormCount(), 0)
        and features:RamblerSmtp()
    	and wclass:UNAVAILABLE_IN_RECEIVED()
        and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    then
    	SetPSAR('ar3110')
    end
    
	--ar3111
    --fe/ #zarabotok
    --05.12.16 / a.sokolov
    --as6291_fa
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_lt(features:MsgSize(), 3000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 1, 20, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT()	
    		or wclass:ENGLISH_LANGUAGE_MESSAGE())
        and (UrlsMatch(regex([[\.ru$]]), 1)  
    		or UrlsMatch(regex([[\.ðô$]]), 1))
    then
        SetPSAR('ar3111')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3111')
    end
    
	--ar3112
    --fe/ #zarabotok
    --05.12.16 / a.sokolov
    --as6291_fa
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 100000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 10, 100, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:SUSP_PARTS_FILE_NAMES()	
        and wclass:CT_ENCODED_FILENAME()
   		and StrMatch(features:PartsFilenames(), '.pdf')
    then
        SetPSAR('ar3112')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3112')
    end
    
    --ar3113
    --mxs_mbp / #zarabotok #pishite_na_pochtu #rambler
    --05.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 4)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 2, 50)
        and cmpr_btw(features:WordCount(), 50, 500)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_gt(features:Words8bitRatio(), 70)
		and cmpr_eq(features:EmailsCountInBody(), 1)
    	and features:From() and features:ReplyTo() 
    	and features:From() == features:ReplyTo() 
		and features:FromRealName() and features:ReplyToRealName()
		and features:FromRealName() ~= features:ReplyToRealName()
  		and wclass:RAMBLER_FE()
        and wclass:TERMS_ZARABOTOK_V_SETI2()
    then
        SetPSAR('ar3113')
    end
    
   --ar3114
    --smtp / #seminari #hol.es
    --05.12.16 / r.sulimov
    --s_sib_badkrm
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and features:IsPddUser()
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(),1000,80000)
     	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:TextLines(),3,1000)
    	and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
    	and cmpr_gt(features:HtmlTagCount(), 50)
    	and wclass:LASTHELO_WITHOUT_DOMAIN_WE()
        and wclass:HTML_BODY_HEAD()
    	and TermsMatchGroup(18111, 100)
    then
        SetPSAR('ar3114')
    end
    
    --ar3115
    --mxs_mbp / #avtoservis #gmail
    --05.12.16 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 2, 30)
        and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_btw(features:UrlNormCount(), 1, 15, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 50)
    	and features:IsFromGoogle()
  		and (wclass:HAS_HEADER_SENDER() or wclass:HAS_X_RECEIVED())
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:GOOGLE_SU()
    then
        SetPSAR('ar3115')
    end

    --ar3116
    --fe / #zarabotok pdf
	--05.12.16 / r.sulimov
    --7410988153fe3f1d7d574acbe7a1e84e 5856f6fb3569558571e0169fae58b579
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_gt(features:MsgSize(), 100000)
        and cmpr_gt(features:AttachOfficeCount(), 1, true)
        and (cmpr_eq(features:UrlNormCount(), 0) or wclass:PHP_URL())
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:UserAge(), 10, 300)
    	and cmpr_gt(features:HtmlTagCount(), 2, true)
        and cmpr_btw(features:TextLines(), 2, 15, true)
        and cmpr_btw(features:WordCount(), 20, 200)
        and (wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY() or wclass:SUSP_SEND_SPEED_FOR_NEW_USER_1() or wclass:SUSP_SEND_SPEED_FOR_NEW_USER_2())
        and wclass:RUSSIAN_FROM_REALNAME()
    	and StrMatch(features:PartsFilenames(),'.pdf')
    then
        SetPSAR('ar3116')
    end
        
    --ar3117
    --fe / #zarabotok #pdd #cloud.mail.ru
    --05.12.16 / minina 
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 500, 1000000)
    	and features:IsPddUser()
		and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_lt(features:UserAge(), 10, true)   	
    	and cmpr_gt(features:HtmlTagCount(), 4, true) 
    	and cmpr_gt(features:WhitespaceToWordRatio(), 300)
 		and wclass:FROM_TLD_IS_SUSP()
    	and (wclass:CT_ENCODED_FILENAME() or UrlsMatchStr('cloud.mail.ru', 1))
  		and StrMatchRe(features:FromLocalPart(), regex([[[A-Za-z]{3,12}\d{2,5}[a-z]{1,5}]]))
	then      	
        SetPSAR('ar3117')
    end 
    
    --ar3118
    --fe / #bazi
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and wclass:SORTED_X_ENVELOPE_TO()
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 20, true)
        --and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
		and SFKD('ar3118', features:From(), 300, 2)
    then
        SetPSAR('ar3118')
    end
    
    --ar3119
    --fe / #tele2 flood
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 30, 300)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 20, true)
        and cmpr_lt(features:Karma(), 1, true)
        and cmpr_eq(features:TextLines(), 1)
    	and cmpr_btw(features:SubjectWordCount(), 4, 10, true)
        and cmpr_btw(features:WordCount(), 2, 12, true)
    	and wclass:AUTOREG()
    	and wclass:IP_IN_HELO()
    	and wclass:NOREALNAME_FROM()
    	and HeaderMatch('Received','from [176.59.')
    then
        SetPSAR('ar3119')
    end
     
    --ar3120
    --fe / #calendar
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
        and cmpr_eq(features:HasTextOnly(), 1)   
        and cmpr_btw(features:TextLines(), 10, 50, true)
        and cmpr_btw(features:WordCount(), 50, 500)
    	and TermsMatchGroup(18113,100)
        and ((cmpr_lt(features:RepuserAge(), 3, true) and cmpr_lt(features:Karma(), 0, true)) or wclass:FROM_ENDS_WITH_YEAR())
        and not StrMatch(features:UrlsRawHashString(),"e.mail.ru")
    then
        SetPSAR('ar3120')
    end
    
    --ar3122
	--mxs_mbp / #rambler #rassilki
	--05.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10, 1000)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 1, 30, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
		and wclass:HAS_HDR_ORGANIZATION()
   		and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:FROM_RAMBLER()
    	and (wclass:NEW_DKIM_30_DAYS() or wclass:HAS_X_PHP_SCRIPT())
	then
		SetPSAR('ar3122')
	end
    
    --ar3123
    --fe / #bazi test
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and cmpr_gt(features:RcptNum(), 15, true)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and TermsMatchGroup(17887,20)
    then
        SetPSAR('ar3123')
    end
    
    --ar3124
    --fe / #zarabotki
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 40000)
    	and (cmpr_gt(features:RcptNum(), 5, true)
        	or wclass:WORDS_MIXED_RATIO()
        	or wclass:SOURCE_IP_IN_XBL()
        	or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY()
        	or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_btw(features:MultipartNum(),3, 5, true)
    	and cmpr_lt(features:UserAge(), 10, true)
        and cmpr_lt(features:RepuserAge(), 7, true)
    	and cmpr_btw(features:UrlNormCount(), 2, 5, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:TextLines(), 70)
        and cmpr_btw(features:WordCount(),3, 400)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and cmpr_eq(features:SubjectWords8bitRatio(), 100)
    	and cmpr_gt(features:HtmlTagCount(), 5)
    	and wclass:NAME_IN_BODY()
    	and TermsMatchGroup(18119,100)
    then
        SetPSAR('ar3124')
    end

    --ar3125
    --fe / #zaraborok
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 300000)
    	and (cmpr_gt(features:RcptNum(), 2, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
    	and cmpr_eq(features:AttachOtherCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 7, 50, true)
        and cmpr_btw(features:WordCount(), 10, 300)
		and wclass:WORDS_MIXED_RATIO()
    	and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3125')
    end
    
    --ar3126
    --fe / #zarabotki
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 3000)
    	and (cmpr_gt(features:RcptNum(), 10, true)
        	or wclass:WORDS_MIXED_RATIO()
        	or wclass:SOURCE_IP_IN_XBL()
        	or wclass:REP_USER_SPAM_RATE_MORE_10()
        	or wclass:REP_USER_COMPL_RATE_MORE_3()
        	or wclass:SUSP_SEND_SPEED_FOR_NEW_USER_1()
        	or wclass:COMPL_RATIO_BY_ODDS_MAILER_TINY_BY_DAY()
        	or wclass:NEW_REP_IP_AND_COMPL_RATIO_BY_LAST_DAY()
        	or wclass:NEW_REP_IP_AND_SPAM_RATIO_BY_LAST_DAY()
        	or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_lt(features:RepuserAge(), 5, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 2, 4, true)
        and cmpr_btw(features:WordCount(), 10, 20)
    	and cmpr_gt(features:Words7bitRatio(), 50)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and cmpr_btw(features:HtmlTagCount(), 3, 8, true)
    	and (wclass:RU_RF_URLS() or UrlsMatchStr('.ru', 1))
    	and (wclass:ONE_WORD_SUBJECT() or wclass:SUBJECT_8BBIT_AND_BODY_7BIT())
    then
        SetPSAR('ar3126')
    end
    
    --ar3127
    --mxs / #zarabotok
    --05.12.16 / r.belyankin
    --mcc_mc_ip60
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 150
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 50 and features:WordCount() <= 200
        and wclass:MS_MAILER()
        and wclass:PRECEDENCE_BULK()
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
        and UrlsMatch(regex([[\/index\.html\?m=]]),1)
    then
        SetPSAR('ar3127')
    end
    
    --ar3128
    --mxs_mbp #opcion
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and wclass:UNAVAILABLE_IN_RECEIVED()
    	and wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
    	and wclass:EMAIL_IN_FROM_REAL_NAME()
    then
        SetPSAR('ar3128')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3128')
    end 
    
    --ar3129
    --mxs_mbp #seminar #gif
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:ShingleTextSize(), 200)
    	and wclass:ONE_GIF_IN_BODY()
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then
        SetPSAR('ar3129')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3129')
    end 
    
    --ar3130
    --mxs / #zarabotok
    --05.12.16 / r.belyankin
    --mcc_mc_ip60
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 100
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 100 and features:WordCount() <= 200
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{5,10}[a-zA-Z\d]{15,35}]]), 1)
        and wclass:URL_GOOGLEDRIVE()
    then
        SetSpam('ar3130',false)
		CarbideSendStatsSum('rules_analyst', 'ar3130', 1)
        --SetPSAR('ar3130')
    end
    
    --ar3131
    --mxs_mbp #vbei_v_google
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:SHORT_WITH_URLS()
    	and wclass:MISSING_DATE()
    	and wclass:NABERI_V_GOOGLE_SEARCH()
    then
        SetPSAR('ar3131')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3131')
    end
    
    --ar3132
    --fe / #zarabotok #attach
    --05.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 3000, 1000000)
        and ((cmpr_eq(features:HasAttach(), 1) and cmpr_eq(features:AttachAllCount(), 1)) or cmpr_eq(features:ImgNum(), 1))
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_gt(features:UrlCount(), 1, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 15)
        and cmpr_gt(features:TextLines(), 7, true)
        and cmpr_lt(features:Words8bitRatio(), 75)
        and wclass:CT_ENCODED_FILENAME()
        and (wclass:SUSP_MIXED_WORDS_RATIO() 
            or wclass:WORDS_MIXED_RATIO() 
            or wclass:WORDS_OTHERS_BAD_RATIO()
            or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO())
    then
        SetPSAR('ar3132')
    end
    
    --ar3133
    --mxs_mbp #pomada
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:FREE_HOSTING()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar3133')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3133')
    end

    --ar3134
    --mxs_mbp #job
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
		and features:IsFromYahoo() 
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:SubjectNumbersCount(), 6)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:SUSP_EMAIL_IN_BODY()
    then
        SetPSAR('ar3134')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3134')
    end 
    
    --ar3135
    --fe / #zarabotok
    --06.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 50)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 5)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and features:MailRuTo()
        and wclass:SOURCE_IP_IN_DNSBL()
        and (wclass:HAS_SUSP_URLS() or wclass:SUSP_HTML_TAG_RATIO())
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar3135')
    end
    
    --ar3136
    --mxs / #flyd
    --06.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 1000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 5 and features:WordCount() <= 25
        and wclass:ONE_RECEIVED()
        and wclass:FAKE_REPLY_IN_SUBJECT()
        and wclass:NEW_IP_15_DAYS()
        and wclass:NEW_DKIM_7_DAYS()
        and StrMatchRe(features:FromDomain(), regex([[^supportlogin(\d{1,2})?\.ru$]]))
    then
        SetPSAR('ar3136')
    end
    
    --ar3137
    --mxs_mbp #vbei_v_google
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:ShingleTextSize(), 200)
        and cmpr_btw(features:UrlNormCount(), 0, 1, true)
    	and (wclass:HAS_HDR_ORGANIZATION()
        	or wclass:SUBJECT_MIXED_BADRATIO())
    	and (wclass:SHORT_WITH_URLS()
    		or wclass:NABERI_V_GOOGLE()
			or UrlsMatchStr('google.ru/?', 1))
		and TermsMatchGroup(18120, 100)
    then
        SetPSAR('ar3137')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3137')
    end
    
    --ar3138
    --mxs_mbp #zarabotki #form
    --29.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 3000)
    	and wclass:FREE_MAIL_AND_NO_CT()
    	and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:SUSP_EMAIL_IN_BODY_AND_NONE_SPF()
    then
        SetPSAR('ar3138')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3138')
    end

    --ar3139
    --mxs_mbp #usa
    --28.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
        	or wclass:FAKE_FREE_MAIL())
    	and (wclass:DIFFERENT_REPLY_TO_AND_FROM_VIA_MBP()
    		or wclass:HAS_X_CMAE_ENVELOPE_HDR()
        	or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        	or wclass:SOFTFAIL_SPF())
    	--and not wclass:RUSSIAN_FROM_REALNAME() 
     	and TermsMatchGroup(17204, 100)
    then
        SetPSAR('ar3139')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3139')
    end
    
    --ar3140
    --fe / #zarabotok
    --06.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 1000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 2, 10, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 5, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:WordCount(), 3, true)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 10)
        and wclass:CT_ENCODED_FILENAME()
        and wclass:URL_FROM_BODY_IN_FROM()
        and wclass:WITH_HTTP()
        and wclass:PHOTO_HOSTING()
        and (wclass:AUTOREG() or wclass:REP_USER_COMPL_RATE_MORE_3())
    then
        SetPSAR('ar3140')
    end
    
    --ar3141
    --mxs_mbp #zarabotki
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 3000)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordsOtherRatio(), 7)
    	and wclass:FROM_REALNAME_IN_LOCALPART()
        and UrlsMatch(regex([[\.ru$]]), 1)  
    then
        SetPSAR('ar3141', true)
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3141')
    end

    --ar3142
    --fe / #pjqq777
    --06.12.16 / philip.karpov
    --f_fob_su
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000000)
        and (cmpr_eq(features:HasTextOnly(), 1) 
            or (cmpr_eq(features:HasAttach(), 1) and cmpr_gt(features:AttachAllCount(), 1, true))
            or cmpr_gt(features:ImgNum(), 1, true))
        and cmpr_btw(features:UrlCount(), 0, 30, true)
        and cmpr_lt(features:RepuserAge(), 40, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        --and cmpr_lt(features:UserCreateTime().days, 40, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) 
            or cmpr_eq(features:NoTo(), 1) 
            or wclass:HDR_MANY_ENVELOPE_TO())
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:NumberCount(), 2, true)
        and (wclass:SHORTURL() 
            or wclass:PHOTO_HOSTING() 
            or wclass:URLS_ENDS_ON_2_OR_MORE_PUNCTUATION_MARKS()
            or wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
            or wclass:IP_URL()
    		or wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO())
        and (wclass:MORE_THAN_1_RCPT() or wclass:FE_REGIONS_MISMATCH())
        and (wclass:WORDS_OTHERS_BAD_RATIO() 
            or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY()
            or wclass:SUSP_LINES_TO_WORD_RATIO()
    		or wclass:WORDS_TO_URLS_BADRATIO())
        and HeaderMatch('X-Mru-User-Agent', 'Mozilla/5.0')
        and TermsMatchGroup(18153, 100)
        and features:FromLocalPart()
        --and StrMatchRe(features:FromLocalPart(),regex([[^[a-z]+\d{3,}$]]))
    then
        SetPSAR('ar3142')
    end
    
    --ar3143
    --mxs_mbp #vacancy
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_btw(features:MsgSize(), 100000, 3000000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and wclass:UNDISCLOSED()
		and wclass:WORDS_MIXED_RATIO()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar3143')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3143')
    end
    
    --ar3144
    --mxs / #zarabotok #_:url
    --06.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
    	and false
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 1500
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 25
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 50
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:HAS_X_PHP_SCRIPT()
        and wclass:FROM_INFORMATION_SERVICE()
    then
        SetPSAR('ar3144')
    end

    --ar3145
    --fe / #virus
    --06.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:WordCount(), 25)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 15)
        and wclass:LINK_TO_ARCHIVE_FILE()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar3145')
    end

    --ar3146
    --mxs_mbp #govno
    --05.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
    	and cmpr_lt(features:ShingleTextSize(), 1000)
        and cmpr_gt(features:ImgNum(), 1, true)
    	and wclass:HAS_SHORT_URL_AND_IMG_URL()
		and wclass:GIF_IN_BODY_AND_UNAVAILABLE_IN_RECEIVED()
        and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar3146')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3146')
    end
    
    --ar3147
    --mxs / #virus_url
    --06.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 50 and features:UrlsTextSize() <= 200
        and features:TextLines() >= 1 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and wclass:LINK_TO_ARCHIVE_FILE()
        and wclass:FAKE_ATTACH()
        and (wclass:IP_HAS_GAP_LAST_WEEK() or wclass:IP_REP_GAP_MORE_30_DAYS())
        and wclass:UNKNOWN_IN_RECEIVED()
    then
        SetPSAR('ar3147')
    end

    --ar3148
	--mxs_esp / #getresp
	--06.12.16 / a.sokolov
	if not IsBlocked
        and features:RcvSrcExt() == "mxs_esp"
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
		and cmpr_btw(features:WordCount(), 10, 200)
        and cmpr_btw(features:TextLines(), 1, 20, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:Subject8bitOnly(), 1)
   		and UrlsMatchStr('.getresponse.com/', 1)
    	and wclass:HAS_14_DAYS_GAP()
        --and wclass:TO_LOCALPART_IN_REALNAME()
  	then
        SetPSAR('ar3148')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3148')
    end
    
 	--ar3149
	--mxs_mbp / #aol #corp
	--05.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_btw(features:TextLines(), 2, 20)
    	and cmpr_btw(features:WordCount(), 20, 200)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:HtmlTagCount(), 5, 50)
    	and cmpr_eq(features:NoHtmlTag(), 1)
    	and (features:EngRealNameFrom() or wclass:FROM_REALNAME_IN_LOCALPART())
    	and cmpr_eq(features:EnvelopeFromDomain(), 'aol.com')
    	and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and (UrlsMatchStr('blogspot', 1) or features:HasShortUrl())
	then
		SetPSAR('ar3149')
	end

    --ar3150
    --fe / #bazi
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and wclass:SORTED_X_ENVELOPE_TO()
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
		and SFKD('ar3150', features:From(), 60, 2)
    then
        SetPSAR('ar3150', true)
    end

    --ar3151
    --fe / #bazi
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and wclass:SORTED_X_ENVELOPE_TO()
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
		and SFKD('ar3151', features:From(), 300, 2)
    then
        SetPSAR('ar3151', true)
    end

    --ar3152
    --fe / #zapolni_formy #yvedomlenie
    --06.11.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1) 
    	and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 5, 40, true)
 		and cmpr_gt(features:NumbersToZeroRatio(), 10, true)
		and features:ForwardingSubject()
    	and cmpr_gt(features:SubjectNumbersCount(), 5, true)   
        and wclass:FAKE_ATTACH()
        and wclass:LINK_TO_ARCHIVE_FILE()
        and wclass:SUSP_HTML_TAG_RATIO()
    then
        SetPSAR('ar3152')
    end
    
	--ar3153
	--mxs_mbp / #economitel
	--06.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(),1)
      	and cmpr_gt(features:TextLines(), 15, true)
    	and cmpr_btw(features:WordCount(), 50, 300)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 10, 80, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
       	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
		and wclass:ONE_RECEIVED()
    	and wclass:NO_USER_AGENT()
    then
    	SetPSAR('ar3153')
    end

    --ar3154
    --fe / #bazi
    --05.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and wclass:SORTED_X_ENVELOPE_TO()
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and TermsMatchGroup(17887,10)
    then
        SetPSAR('ar3154', true)
    end

    --ar3155
    --fe / #tender
    --06.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 70000)
    	and cmpr_eq(features:ImgNum(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
		and cmpr_gt(features:AbfCitiesPerMonthNum(), 2)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and cmpr_eq(features:WordCount(), 0)
    	and cmpr_gt(features:SubjectWordCount(), 3)
    	and wclass:SUBJECT_MIXED_BADRATIO()
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 3)
    	and features:FromLocalPart()
    	and SFKD('ar3155', {features:FromLocalPart():sub(1,3)}, 120, 4)
	then
        SetPSAR('ar3155')
    end

    --ar3156
	--mxs_mbp / #eco
	--06.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 5000, 500000)
    	and features:HasNoAttach()
    	and cmpr_gt(features:ImgNum(), 0)
      	and cmpr_lt(features:TextLines(), 10, true)
    	and cmpr_btw(features:WordCount(), 1, 30)
       	and cmpr_eq(features:UrlNormCount(), 1)
       	and cmpr_gt(features:MultipartNum(), 4)
    	and cmpr_lt(features:HtmlTagCount(), 20, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and features:RamblerSmtp()
       	and wclass:TO_LOCALPART_IN_REALNAME()
		and wclass:RUSSIAN_FROM_REALNAME()
    then
    	SetPSAR('ar3156')
        LogMsgToHadoop( 'dstat_minina_log', '#ar494' )
    end
    
    --ar3157
    --fe / #bazi
    --06.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and wclass:SORTED_X_ENVELOPE_TO()
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
		and wclass:REP_USER_SPAM_RATE_MORE_10()
    then
        SetPSAR('ar3157')
    end
    
	--ar3158
	--mxs_other / #zarabotok #podstav domain
	--06.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 50000
		and (features:LastHelo() == "helo=smail.vtb24.ru" or features:EnvelopeFromDomain() == 'vtb24forex.ru')
		and wclass:SPF_NOT_PASS()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (features:RcptNum() >= 5 or HeaderMatch('X-DMARC-Result', 'fail') or HeaderMatch('Mime-Version', '1.0 (1.0)'))
	then
		SetPSAR('ar3158')
	end

    --ar3159
    --fe / #bazi
    --06.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_gt(features:RcptNum(), 4, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 1)
    	and wclass:AUTOREG_FROM_NOT_TARGET_REGION()
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
    then
        SetPSAR('ar3159')
    end

    --ar3160
    --mxs / #zarabotok
    --06.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and features:NoRealNameTo()
    	and features:IsFromGoogle()
        and wclass:HAS_HEADER_BCC()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:SUSP_HTML_WITH_TEXT_ONLY()
    	and StrMatchRe(features:FromLocalPart(), regex([[^\d.+]]))
    then
        SetPSAR('ar3160')
    end
    
	--ar3161
	--mxs_other / #spam #podstav domain
	--04.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and features:RepFromDomainTrapHitsByLastDay() >= 5
		and wclass:SPF_NOT_PASS()
		and HasHeader('COMMENT')
		and HasHeader('Comment')
		and HasHeader('X-Felis-L')
	then
		SetPSAR('ar3161')
	end
    
    --ar3162
    --mxs / #img #email
    --06.12.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 50000 and features:MsgSize() <= 500000
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 0
        and features:MultipartNum() == 5
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 5 and features:WordCount() <= 50
        and features:HtmlTagCount() >= 5 and features:HtmlTagCount() <= 15
        and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
        and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:IP_REP_GAP_MORE_14_DAYS() or wclass:NEW_IP_15_DAYS())
    then
        SetPSAR('ar3162')
    end
    
    --ar3163
    --mxs_mbp / #vbei google
    --06.12.16 / philip.karpov
    --mfc_mf_yandex
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 300, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:WordCount(), 5, 50)
        and cmpr_btw(features:TextLines(), 1, 3, true)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:Words7bitRatio(), 0)
        and cmpr_eq(features:IsFromYandex(), true)
        and wclass:RECEIVED_LAN_1()
        and wclass:NO_USER_AGENT()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar3163')
    end
    
    --ar3164
    --mxs / #virus symanteccloud
    --06.12.16 / r.belyankin
    --wc_ip_ham_ps
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and features:MsgSize() >= 10000 and features:MsgSize() <= 100000
        and features:HasAttach() == 1
        and features:FilesExtensions() == '.docm'
        and features:ImgNum() == 0
        and features:UrlNormCount() <= 1
        and features:TextLines() <= 1
        and features:WordCount() <= 10
        and features:Words8bitRatio() == 0
        and wclass:ONE_RECEIVED()
        and (wclass:NEW_IP_15_DAYS() or wclass:PTR_ERROR())
        and wclass:REMOTE_IP_IN_SPAMHAUS()   
    then
        SetPSAR('ar3164')
    end
    
    --ar3165
    --fe / #zarabotok
    --06.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 5, 15, true)
        and cmpr_btw(features:UrlCountWithoutMailRu(), 3, 7, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:WordCount(), 25)
        and cmpr_gt(features:HtmlTagCount(), 3, true)
        and cmpr_gt(features:WhitespaceRatio(), 15)
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:PHP_URL()
        and wclass:HAS_EXTERNAL_IMG()
    then
        SetPSAR('ar3165')
    end
    
    --ar3166
    --smtp / #pohudenie
    --06.12.16 / philip.karpov
    --sc_sb_m20k
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:WordCount(), 10)
        and wclass:LASTHELO_WITHOUT_DOMAIN()
        and wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
    then
        SetPSAR('ar3166')
    end
    
    --ar3167
    --mxs_mbp / #avtozarabotok
    --07.12.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 11, 10000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:FROM_DOMAINPART_IN_REALNAME()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
    then
        SetPSAR('ar3167')
    end

    --ar3168
    --mxs / #zarabotok #pdf
    --07.12.16 / r.belyankin
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_other"
        and features:MsgSize() >= 100000 and features:MsgSize() <= 2000000
        and features:HasAttach() == 1
        and features:ImgNum() >= 1 and features:ImgNum() <= 2 
        and features:TextLines() >= 1 and features:TextLines() <= 8
        and features:WordCount() >= 1 and features:WordCount() <= 15
        and wclass:RECEIVED_BAD_PATTERN_4()
        and (wclass:NEW_IP_1_DAY() or wclass:FAIL_SPF() or wclass:IP_REP_GAP_MORE_30_DAYS())
    then
        SetPSAR('ar3168')
    end
    
    --ar3169
    --mxs_mbp / #virus
    --07.12.16 / philip.karpov
    --mfc_mf_gmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000, true)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:SubjectNumbersCount(), 5)
        and cmpr_eq(features:FromDomain(), "gmail.com")
        and wclass:SHORT_BOUNDARY()
        and wclass:HAS_X_RECEIVED()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:HAS_ARCHIVE_ATTACH()
    then
        SetPSAR('ar3169')
    end
    
    --ar3170
    --fe / #zarabotok #cloud
    --07.12.16 / philip.karpov
    --fc_fb_noat
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 200, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 1, 2, true)
        and cmpr_lt(features:RepuserAge(), 30, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WITH_HTTP()
        and (wclass:SUSP_HTML_TAG_RATIO() or wclass:SUSP_LINES_TO_WORD_RATIO())
        and wclass:WHITESPACE_SUSP_RATIO()
        and wclass:NEW_IP_30_DAYS()
        and UrlsMatchStr('cloud.mail.ru/public/', 1)
    then
        SetPSAR('ar3170')
    end

    --ar3171
    --fe / #zip out
	--07.11.16 / r.sulimov
    --s_sm_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 10, 20000)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(),1, 2, true)
        and cmpr_lt(features:UserAge(), 1, true)
    	and cmpr_gt(features:RcptNum(), 2, true)
		and cmpr_eq(features:NumberCount(), 3)
        and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla/5.0')
        and wclass:FE_SUBJECT_SUSP_UTF8_CHARS()
    then
        SetPSAR('ar3171')
    end
    
    --ar3172
	--mxs_mbp / #rostelekom #virus
	--07.12.16 / minina
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
    	and cmpr_btw(features:MsgSize(), 500, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:TextLines(), 5)
       	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 4, true)
       	and cmpr_eq(features:MultipartNum(), 2)
       	and (wclass:FAKE_FREE_MAIL() or wclass:SPF_NOT_PASS())
		and wclass:NO_MIME()
    	and wclass:MISSING_DATE()
    	and UrlsMatchStr('.html', 1)
    then
    	SetPSAR('ar3172')
    end
    
    --ar3173
    --fe / #zarabotki php
    --07.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 4000)
        and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_btw(features:UserAge(), 100, 300, true)
		and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_gt(features:WordCount(),40)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and cmpr_gt(features:HtmlTagCount(), 30)
    	and wclass:PHP_URL()
    then
        SetPSAR('ar3173')
    end
    
    --ar3174
    --fe / #virus
    --07.12.16 / r.sulimov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlNormCount(), 0)
        --and cmpr_gt(features:UserAge(), 1000, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 30, 200)
        and cmpr_btw(features:HtmlTagCount(), 3, 8, true)
        and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
    	and cmpr_eq(features:FilesExtensions(), '.zip')
    	and wclass:USER_SENDING_MORE_THAN_20_PER_DAY()
    	and wclass:SOURCE_IP_IN_XBL()
    	and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3174')
    end
    
    --ar3175
    --fe / #virus
    --07.12.16 / r.sulimov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and features:MpopUserId()
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlNormCount(), 0, 1, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 30, 200)
        and cmpr_btw(features:HtmlTagCount(), 3, 8, true)
        and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
        and cmpr_eq(features:FilesExtensions(), '.zip')
        and wclass:CT_ENCODED_FILENAME()
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 43200)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 5)
        then
            SetPSAR('ar3175', true)
        end
    end
    
	--ar3176
	--mxs_mbp / #img
	--07.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10000, 2000000)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:ImgNum(), 1)
    	and features:IsFromGoogle()
    	and cmpr_eq(features:MultipartNum(), 5)
    	and cmpr_lt(features:WordCount(), 5, true)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:HtmlTagCount(), 10)
    	and wclass:HAS_NOT_EXT_IMG_WITH_IMG_TAG()
		and (wclass:HAS_HEADER_BCC() or wclass:MORE_1_EMAILS_IN_TO())
   		and wclass:ONLY_7BIT_WORDS()
	then
		SetPSAR('ar3176')
	end
    
    --ar3177
	--mxs_mbp / #zarabotok #yadi.sk
	--07.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 100, 5000)
    	and features:IsFromYandex()
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_lt(features:TextLines(), 3)
    	and cmpr_btw(features:WordCount(), 1, 100, true)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_lt(features:HtmlTagCount(), 10)
    	and cmpr_gt(features:Words8bitRatio() , 70)
    	and (wclass:MORE_1_EMAILS_IN_TO() or wclass:UNDISCLOSED())
		and wclass:SUSP_HTML_WITH_TEXT_ONLY()
   		and UrlsMatchStr('yadi.sk')
	then
		SetPSAR('ar3177')
	end

	--ar3178
    --smtp / #rabota
    --31.12.16 / philip.karpov
    --fc_fb_text
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:TO_LOCALPART_IN_REALNAME_AND_FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE()
    then
        SetPSAR('ar3178')
    end

	--ar3179
	--mxs_mbp / #blog #su
	--02.01.17 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:WordCount(), 20, 150)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and cmpr_eq(features:FromRealNameWordCount(), 2)
    	and features:EngRealNameFrom()
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:HAS_EXTERNAL_IMG()
    	and wclass:MISC_SUSP_MAILERS()
	then
		SetPSAR('ar3179')
    end

    --ar3180
    --fe / #bazi
    --07.12.16 / r.sulimov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and features:MpopUserId()
        and cmpr_btw(features:MsgSize(), 500, 500000)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_eq(features:ImgNum(), 1))
    	and (wclass:SORTED_X_ENVELOPE_TO() or wclass:AUTOREG_FROM_NOT_TARGET_REGION() or cmpr_gt(features:RcptNum(), 5, true))
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:WordCount(), 10, 300)
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 43200)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 5)
        then
            SetPSAR('ar3180', true)
        end
    end
    
    --ar3181
    --fe / #bazi
    --07.12.16 / r.sulimov
    --fc_fb_usage7
    if not IsBlocked
        and false -- mnogo jalob
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and features:MpopUserId()
        and cmpr_btw(features:MsgSize(), 500, 500000)
    	and (cmpr_eq(features:HasTextOnly(), 1) or cmpr_gt(features:ImgNum(), 1, true))
    	and cmpr_gt(features:RcptNum(), 5, true)
        and (cmpr_lt(features:RepuserAge(), 3, true)
            or cmpr_gt(features:RepIpComplRatioByLastWeek(), 20)
            or RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 2, 20)
            or wclass:SUSP_SEND_SPEED_FOR_NEW_USER_1()
            or cmpr_gt(features:RepuserAge(), 10, true) and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true))
        and cmpr_btw(features:WordCount(), 10, 300)
        --and cmpr_lt(features:Karma(), 0)
		and (cmpr_gt(features:RepIpComplRatioByLastWeek(), 6) or cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true))
    	and (TermsMatchGroup(17887,10) or TermsMatchGroup(17286,100))
        and features:HtmlTags()['br']
        and (StrMatch(features:UrlsRawHashString(),"e.mail.ru")
        	or TermsMatchGroup(17887,30))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 86400)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 15)
        then
            SetPSAR('ar3181')
            LogMsgToHadoop('dstat_sulimov_log', '#ar3181')
        end
    end
   
	--ar3182
	--mxs_mbp / #docs.google.com #sobesedovanie
	--07.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:WordCount(), 5, 250, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 100)
        and not features:ForwardingSubject() 
    	and wclass:FAKE_IN_REPLY_TO()
		and wclass:SUSP_HTML_WITH_TEXT_ONLY()
   		and UrlsMatchStr('docs.google.com')
	then
		SetPSAR('ar3182', true)
	end

    --ar3183
    --mxs_other / #php #zarabotok #somova
    --07.12.16 / r.kulpin
    --d57445e3af86a671e0ddb15c92789719 a5eaaf61646442b5671764955c4de013
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_btw(features:TextLines(), 5, 35, true)
        and cmpr_btw(features:WordCount(), 10, 100, true)
        and cmpr_btw(features:HtmlTagCount(), 10, 30, true)
		and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and cmpr_btw(features:LinesToWordsRatio(), 10, 40, true)
        and wclass:FAIL_SPF()
    	and wclass:OTHER_IP_IN_DNSBL() 
        and wclass:PHP_URL()
    then
        SetPSAR('ar3183')
    end

    --ar3184
    --fe #zarabotki #php
    --02.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:RepuserAge(), 0 , 50, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:WordCount(), 100)
        and features:UserCreateTime()
        and cmpr_lt(features:UserCreateTime().days, 200)
        and wclass:MORE_THAN_N_RCPT()
		and UrlsMatch(regex([[\/[a-z]{1,2}\/.{3,}\.php$]]), 1)
    then
        SetPSAR('ar3184')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3184')
    end
    
	--ar3185
	--mxs_other / #efremov
	--07.12.16 / zubr(sokolik)
    if not IsBlocked
        and not wclass:EXCEPTIONS()
		and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "imap")
		and features:MsgSize() >= 1000 and features:MsgSize() <= 800000
		and features:HasTextOnly() == 1
		and features:MultipartNum() == 1
		and (wclass:CT_IN_BODY() or wclass:NEW_IP_7_DAYS() or wclass:MULTIPLE_SLASH_IN_RAW_URL() or  wclass:IP_REP_GAP_MORE_14_DAYS())
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (not wclass:HDR_LIST_UNSUBSCRIBE() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
    	and (wclass:FAKE_REPLY_IN_SUBJECT() or wclass:CTE_7BIT_WITH_CONTENT_8BIT() or wclass:INVALID_CHAR_SUBJECT())
    then
		SetPSAR('ar3185')
	end
    
    --ar3186
	--mxs_other/ #zarabotok #From_Admin
	--07.12.16 / minina
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 50, 2000)
    	and features:IsFromYandex()
        and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:TextLines(), 1, 10, true)  
	    and cmpr_btw(features:WordCount(), 1, 50)
        and cmpr_lt(features:HtmlTagCount(), 20)
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and wclass:HAS3D_LVL_DOMAIN()
    	and StrMatch(features:ToRealName(),features:Subject())
		and StrMatchRe(features:FromRealName(), regex([[(?i)^admin$]]))
    then
    	SetPSAR('ar3186')
    end
    
    --ar3187
    --mxs_other / #seminar
    --07.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 2000000)
        and (cmpr_eq(features:HasAttach(), 1)
    		or TermsMatchGroup(18126, 100))
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and wclass:EQUALLY_AND_UNDERSCORE_IN_BOUNDARY()
        --and wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(18127, 100)
    then
        SetPSAR('ar3187')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3187')
    end
    
    --ar3188
    --mxs_other / #zarabotok #short_url
    --07.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 500, 20000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and (cmpr_gt(features:MultipartNum(), 3, true)
    		or cmpr_eq(features:MultipartNum(), 1))
    	and (cmpr_eq(features:ShortUrlCount(), 1)
    		or UrlsMatchStr('.webtm.ru'))
       -- and cmpr_gt(features:HtmlTagCount(), 0)
        and (cmpr_eq(features:NoBodyTag(), 1)
    		or wclass:NOT_CP1251_CHARS_IN_SUBJECT()
			or wclass:SPF_NOT_PASS()
			or wclass:SUBJECT_MIXED_BADRATIO()
    		or wclass:DKIM_FAIL()
    		or wclass:WORDS_MIXED_RATIO()
			or wclass:CTE_7BIT_WITH_CONTENT_8BIT())
        and cmpr_eq(features:FromRealNameWordCount(), 1)
        --and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar3188')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3188')
    end
    
    --ar3189
    --mxs_other / #podrobnee
    --07.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 500000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()	
    	and wclass:HAS_5TH_LEVEL_DOMAIN_IN_MSGID()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and UrlsMatchStr('madmimi.com')
    	and UrlsMatchStr('list-manage.com')
    then
        SetPSAR('ar3189')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3189')
    end
    
    --ar3190
	--fe / #zarabotok
	--07.12.16 / a.lis	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 150000, 350000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_lt(features:TextLines(), 5)
    	and cmpr_gt(features:MultipartNum(), 2)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.pdf')
    	and cmpr_lt(features:Karma(), 0)
		and cmpr_gt(features:AbfCountriesPerMonthNum(), 2)
		and wclass:PHP_URL()
		and wclass:HAS_5_DAYS_GAP()
  	then
    	SetPSAR('ar3190')
    end
    
	--ar3191
	--mxs_mbp/ #zarabotok #attach #xlsx
	--07.12.16 / minina
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and features:IsFromGoogle()
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and features:ToRealName()
    	and features:Subject()
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
    	and StrMatch(features:ToRealName(),features:Subject())
    then
    	SetPSAR('ar3191')
    end

    --ar3192
	--mxs_other/ #zarabotok #rt.ru
	--07.12.16 / minina
 	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 1000, 50000)
    	and features:AuthenticatedDomain() == 'rt.ru'
    	and cmpr_eq(features:HasTextOnly() , 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and features:IpCategory() == 'tiny'
        and cmpr_gt(features:RepIpProbableSpamRatioByLastWeek(), 50)
    	and cmpr_gt(features:RcptNum(), 2)
    	and cmpr_eq(features:FromRealNameWordCount(),1) 
    	and wclass:SPF_NOT_PASS()
    	and not wclass:DKIM_PASS()
    then
    	SetPSAR('ar3192')
    end
    
    --ar3193
	--mxs_mbp / #vbei v google #rambler.ru #google_search
	--15.01.17 / minina(sokolik)
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 50, 1000000)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and cmpr_gt(features:MultipartNum(), 1, true)
    	and (wclass:UNAVAILABLE_IN_RECEIVED() 
    		or TermsMatchGroup(18178, 100)
			or features:IsFromOtherMbp()
			or wclass:NOT_EMAIL_IN_FROM()
			or wclass:SUBJECT_MIXED_BADRATIO()
			or wclass:TEXT_NORM_TO_SHINGLE_MORE_THAN_20()
    		or wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    		or wclass:HAS_HDR_ORGANIZATION())
  		and TermsMatchGroup(17375, 100)
	then
		SetPSAR('ar3193')
	end
    
    --ar3194
    --fe / #zarabotok
    --08.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 1000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_gt(features:UrlCount(), 20)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:TextLines(), 75)
        and cmpr_gt(features:WordCount(), 250)
        and cmpr_gt(features:NumberCount(), 200)
        and wclass:WORDS_OTHERS_VERY_BAD_RATIO()
        and wclass:SUSP_NORM_TO_RAW_URLS_RATIO()
        and wclass:PHP_URL()
        and wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
    then
        SetPSAR('ar3194')
    end

    --ar3195
    --mxs_mbp / #pohudenie #su
    --08.12.16 / razuvaev
    --0ad275de696b40ff98acc5fe846f17f6 0de3a93dcea1a509dd8387cfd292e193
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")  
        and cmpr_btw(features:MsgSize(), 100, 5000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:ExternalImgNum(), 1) 
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:WordCount(), 70)
        and wclass:HAS_X_RECEIVED()
        and wclass:UNKNOWN_IN_RECEIVED()
      	and UrlsMatchStr('.su', 1)
        and UrlsMatchStr('radikal.ru', 1)
    then
        SetPSAR('ar3195')
    end

    --ar3196
    --mxs_mbp / #google
    --08.12.16 / razuvaev
    --74a37f19542355435a747faa56803456 b172f39edb1ac33ec3ba0c1aeae1c02b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")  
        and cmpr_btw(features:MsgSize(), 50, 300) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
        and cmpr_lt(features:TextLines(), 3)
        and cmpr_lt(features:WordCount(),15)
        and (wclass:SUSP_MSG_ID_AND_UNAVAILABLE_IN_RECEIVED() or wclass:SUSP_SENDER_HELO_DOMAIN()) 
        and UrlsMatchStr('google.', 1)
        and StrMatchRe(features:Subject(), regex([[^.{1,40}[0-9]{1,3}\:[0-9]{1,3}|.{1,40}[0-9]{1,3}\-[0-9]{1,3}]]))
    then
        SetPSAR('ar3196')
    end
    
    --ar3197
    --mxs_mbp / #google
    --08.12.16 / razuvaev
    --74a37f19542355435a747faa56803456 b172f39edb1ac33ec3ba0c1aeae1c02b
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")  
        and cmpr_btw(features:MsgSize(), 50, 2000) 
        and features:IsFromRambler()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1) 
        and cmpr_lt(features:TextLines(), 10)
        and cmpr_lt(features:WordCount(),40)
        and cmpr_lt(features:Words8bitRatio(),20)
        and HasHeader('Organization')
        and wclass:UNAVAILABLE_IN_RECEIVED()
    then
        SetPSAR('ar3197')
    end
    
    --ar3198
    --fe / #attach
    --08.12.16 / philip.karpov
    --as6291_fa
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and wclass:FAST_AUTOREG()
        and wclass:ABF_FAST_CITY_CHANGE()
    then
        SetPSAR('ar3198')
    end
    
    --ar3199
    --fe / #zarabotok
    --08.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 500000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_btw(features:UrlCount(), 4, 6, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 5, 25)
        and cmpr_gt(features:WhitespaceRatio(), 50)
        and features:MailRuTo()
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:URL_IN_FROM_DOMAINPART()
        and wclass:HAS_EXTERNAL_IMG()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3199')
    end
    
    --ar3200
    --fe / #zarabotok #rf_urls
    --08.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 3, 10, true)
        and cmpr_btw(features:WordCount(), 5, 30, true)
        and cmpr_gt(features:Words7bitRatio(), 66, true)
        and cmpr_gt(features:LinesToWordsRatio(), 25, true)
        and features:MailRuTo()
        and wclass:CYRILLIC_URL()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar3200')
    end

	--ar3201
    --fe / #zarabotok
    --07.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 500, 2000)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1     	
		and features:NoRealNameTo() == 1      
		and cmpr_btw(features:UrlNormCount(), 1, 2, true) 
    	and cmpr_lt(features:Karma(), 0, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true) 
    	and cmpr_gt(features:MultipartNum(), 3, true)   	    			
    	and cmpr_btw(features:WordCount(), 10, 30, true)	
    	and cmpr_gt(features:Word7bitCount(), 10, true)
    	and cmpr_btw(features:TextLines(), 2, 10, true)
    	and cmpr_gt(features:HtmlTagCount(), 4, true)  	    	
    	and wclass:RUSSIAN_FROM_REALNAME()
	then      	
        SetPSAR('ar3201')
    end
    
    --ar3202
	--mxs_mbp / #dohod #rambler.ru
	--08.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 5000, 250000)
        and features:IsFromRambler()
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_gt(features:ImgNum(), 0)
    	and cmpr_gt(features:WordCount(), 100)
    	and cmpr_btw(features:UrlNormCount(), 1, 15, true)
    	and cmpr_gt(features:MultipartNum(), 3)
    	and cmpr_gt(features:HtmlTagCount(), 100, true)
        and cmpr_gt(features:HtmlTagsUnknownCount(), 1, true)
    	and cmpr_gt(features:NumberCount(), 300)
        and wclass:FAKE_FREE_MAIL()
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
	then
		SetPSAR('ar3202')
	end

    --ar3203
    --fe #zarabotki #eng #yahoo
    --02.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
    	and (cmpr_eq(features:FromDomain(), 'yahoo.com')	
    		or cmpr_eq(features:FromDomain(), 'qip.ru'))
    	and cmpr_gt(features:UrlNormCount(), 2)
		and cmpr_eq(features:NoRealNameFrom(), 1)
        and (wclass:FE_REGIONS_MISMATCH()
        	or wclass:MORE_THAN_N_RCPT())
        and wclass:ENGLISH_LANGUAGE_MESSAGE()
    then
        SetPSAR('ar3203')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3203')
    end
   
	--ar3204
	--mxs_other / #pidori  #ded_moroz
	--08.12.16 / minina
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:MsgSize(), 100, 2000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_lt(features:WordCount(), 15)
    	and cmpr_eq(features:UrlNormCount(), 0)
    	and cmpr_lt(features:HtmlTagCount(), 10, true)
    	and features:ToRealName()
    	and cmpr_btw(#features:ToRealName(), 1, 5, true)
    	and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    	and wclass:SHORT_BOUNDARY()
	then
		SetPSAR('ar3204')
	end
    
    --ar3205
	--mxs_mbp / #zarabotok
	--08.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1500, 5500)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 10, 35)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:UrlNormCount(), 3, 8, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	and wclass:FAKE_FREE_MAIL()
    	--and wclass:UNKNOWN_IN_RECEIVED()
    	and UrlsMatchStr('justclick.ru')
    	and UrlsMatchStr('youtube.com')
	then
		SetPSAR('ar3205')
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar3205')
	end

    --ar3206
    --mxs_other / #zarabotok #5k #diamondglass.website
    --08.11.16 / r.kulpin
    --958e881149c972cfc3e21281450bf813 d45e25ce5c3314c0463425444c5586dc
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")  
        and cmpr_btw(features:MsgSize(), 100, 3000) 
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3) 
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and cmpr_lt(features:TextLines(), 7)
    	and features:ReplyToRealName()
    	and features:FromRealName()
  		and cmpr_eq(features:ReplyToRealName(), features:FromRealName())  
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
    	and wclass:SHORT_BOUNDARY()
    	and (wclass:NEW_FROMDOMAIN_7_DAYS() or wclass:IP_HAS_GAP_LAST_WEEK())
        and UrlsMatchStr('.html', 1)
    then
        SetPSAR('ar3206')
    end
    
    --ar3207
	--mxs_mbp / #zarabotok
	--08.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 1500, 5500)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:TextLines(), 10, 40)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_btw(features:UrlNormCount(), 3, 12, true)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	--and wclass:FAKE_FREE_MAIL()
    	--and wclass:UNKNOWN_IN_RECEIVED()
    	and UrlsMatchStr('justclick.ru')
    	and UrlsMatchStr('youtube.com')
	then
		SetPSAR('ar3207')
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar3207')
	end

	--ar3208 
	--#zarabotok #pdd
    --08.12.16 /m.guryanov 
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 100000, 900000)
    	and features:IsPddUser()
    	and features:HasAttach() == 1     	
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 60, true) 
    	and features:UrlNormCount() == 0
    	and features:AttachOfficeCount() == 1
    	and cmpr_lt(features:WordCount(), 30, true)	 
  		and StrMatchRe(features:FromLocalPart(), regex([[[A-Za-z]{3,12}\d{2,5}[a-z]{1,5}]]))
	then      	
        SetPSAR('ar3208')
    end 
    
    --ar3209
	--mxs_mbp / #pastebin #stoloto.ru
	--01.08.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 5000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(),1)
    	and cmpr_eq(features:NoRealNameTo(),1)
      	--and cmpr_lt(features:TextLines(), 10, true)
    	--and cmpr_btw(features:WordCount(), 5, 500)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
       	and cmpr_eq(features:Subject7bitOnly(), 1) 
    	and cmpr_gt(features:HtmlTagCount(), 50, true)
    	and cmpr_gt(features:EmailsCountInCcHeader(), 0)
    	and cmpr_gt(features:WhitespaceToWordRatio(), 800)
    	and StrMatch(features:AuthenticatedDomain(), 'ngs.ru')
    then
    	SetPSAR('ar3209')
    end

    --ar3210
    --fe / #seo
    --08.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 100, 800)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1       
		and cmpr_btw(features:UrlNormCount(), 1, 2, true) 
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 2, true)    	    			
    	and cmpr_btw(features:WordCount(), 10, 30, true)    	
    	and cmpr_btw(features:TextLines(), 2, 10, true)    	
    	and TermsMatchGroup(18131, 100)
    	and wclass:MOBILE_MAIL_RU()
	then      	
        SetPSAR('ar3210')
    end 
    
    --ar3211
	--fe / #mobile
	--08.12.2016 /m.guryanov  
	if features:RcvSrc() == "fe" 
		and features:MsgSize() >= 20 and features:MsgSize() <= 10000
		and not features:IsPddUser()
		and features:HasTextOnly() == 1
		and features:UrlNormCount() >= 1
    	and	features:UrlCountWithoutMailRu() >= 1
		and (features:RepuserAge() <= 14 or wclass:AUTOREG())
		and wclass:MOBILE_MAIL_RU()		
		and SFKD('ar3211', ',ar3211', 60, 30)
	then
		SetPSAR('ar3211')
		LogMsgToHadoop( 'dstat_guryanov_log', '#ar3211')
	end
    
	--ar3212
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and features:RcptNum() >= 4
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and wclass:SPF_NOT_PASS()
	then
		--SetPSAR('ar3212')
		SetSpam('ar3212')
		CarbideSendStatsSum('rules_analyst', 'ar3212', 1)
		LogMsgToHadoop( 'dstat_zubrilova_log', '#ar3212')
	end
   
    --ar3213
    --fe / #zarabotok
    --08.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 200, 1500)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1     	
		and features:NoRealNameTo() == 1      
		and cmpr_btw(features:UrlNormCount(), 1, 2, true) 
    	and cmpr_lt(features:Karma(), 0, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 60, true) 
    	and cmpr_gt(features:MultipartNum(), 3, true)    	   	    			
    	and cmpr_lt(features:WordCount(), 10, true)	    	
    	and cmpr_btw(features:TextLines(), 1, 10, true) 
    	and features:OneWordSubject() == 1
    	and features:Subject7bitOnly() == 1
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:HAS_2_DAYS_GAP()
	then      	
        SetPSAR('ar3213')
    end  
    
	--ar3214
	--mxs_other / #spam
	--08.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and wclass:INVALID_MIME()
		and features:MultipartNum() == 1
		and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and not HeaderMatch('Mime-Version', '1.0 (Mac OS')
	then
		SetPSAR('ar3214', true)
	end

	--ar3215
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_7_DAYS())
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		--and wclass:SPF_NOT_PASS()
	then
		SetPSAR('ar3215', true)
	end
    
	--ar3216
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:REMOTE_IP_IN_SPAMHAUS()
		and (wclass:FAIL_SPF() or wclass:SOFTFAIL_SPF())
	then
		SetPSAR('ar3216', true)
	end
    
    --ar3217
    --mxs / #fake_re #many_to
    --08.12.16 / r.r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
        and cmpr_btw(features:MsgSize(), 1000, 12000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(), 2)
        and wclass:NEW_DKIM_7_DAYS()
        and (wclass:NEW_IP_15_DAYS() or wclass:NEW_FROMDOMAIN_15_DAYS())
    	and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:NO_MIME()
        and (wclass:FAKE_REPLY_IN_SUBJECT() or wclass:REPLY_SUBJECT())
        and StrMatchRe(features:LastHelo(), regex([[^helo=[a-z]{3,20}\.host$]]))
    then
        SetPSAR('ar3217')
    end   
    
	--ar3218
	--mxs_other / #spam
	--08.12.16 / zubr
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and wclass:INVALID_MIME()
		and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
			or wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM())
		and not HeaderMatch('Mime-Version', '1.0 (Mac OS')
		and SFKD('ar3218', {features:FromDomain()}, 60, 800)
	then
		SetPSAR('ar3218')
	end

	--ar3219
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and (wclass:REMOTE_IP_IN_SPAMHAUS() or wclass:NEW_IP_7_DAYS())
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		--and wclass:SPF_NOT_PASS()
		and SFKD('ar3219', ',ar3219', 60, 30)
	then
		SetPSAR('ar3219')
	end

	--ar3220
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() and not features:DkimDomain()
			or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM())
		and features:InvalidFrom() == 1
		--and features:MultipartNum() == 1
		and HeaderMatchRe('From', regex([[(?i)@[a-z\d\-]{5,25}\.[a-z]{2,3}\s*\([a-z\-]{3,15}\)]]))
	then
		SetPSAR('ar3220')
	end
    
    --ar3221
    --mxs_mbp #english #spam
    --12.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    		or wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
			or wclass:HAS_X_CMAE_ENVELOPE_HDR()
    		or wclass:HAS_HEADER_COREMAIL_ANTISPAM()
    		or wclass:SPF_NOT_PASS_FROM_MBP()
			or wclass:MISC_SUSP_MAILERS())
    	and (wclass:NEW_FROMDOMAIN_7_DAYS()
    		or wclass:NO_MIME())
		and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar3221')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3221')
    end

    --ar3222
    --fe / #zarabotki
    --08.01.17 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 20, true)
        and cmpr_btw(features:WordCount(), 50, 1000)
        and cmpr_lt(features:NumberCount(), 10, true)
    	and cmpr_lt(features:UrlsTextSize(), 60)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50)
        and StrMatchRe(features:FromRealName(), regex([[^[à-ÿ¸]{2,}\s[à-ÿ¸]{2,}$]]))
    then
        SetPSAR('ar3222')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3222')
    end

    --ar3223
    --mxs_mbp #vacancy
    --08.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_btw(features:MsgSize(), 1000, 100000)
        and cmpr_eq(features:UrlNormCount(), 0)
    	and features:ToRealName()
		and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
        and HeaderMatchRe('Subject',regex([[\d{4,}$]]))
        and StrMatch(features:Subject(), features:ToRealName())     
    then
        SetPSAR('ar3223')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3223')
    end
    
    --ar3224
    --fe / #zarabotok #pdf
    --11.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50000, 1000000)
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:WordCount(), 50)
        and cmpr_gt(features:TextLines(), 10)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
        and cmpr_btw(features:RepuserAge(), 0, 2, true)
        and cmpr_lt(features:Karma(), 0, true)
		and (wclass:DOT_SPLIT_LOCALPART()
    		or wclass:FROM_ENDS_WITH_YEAR())
    then
        SetPSAR('ar3224')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3224')
    end
    
    --ar3225
    --fe / #zarabotki
    --08.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and wclass:FREE_HOSTING()
    	and wclass:SUSP_URLS_SHORT_TEXT()
        and StrMatchRe(features:FromRealName(), regex([[^[à-ÿ¸]{2,}\s[à-ÿ¸]{2,}$]]))
    then
        SetPSAR('ar3225')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3225')
    end

    --ar3226
    --mxs_other / #fake_domain_spam
    --08.12.16 / razuvaev 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
        and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and features:FromDomain()
        and getRepHits(features:FromDomain(), 3, 'd').total_hits
        and getRepHits(features:FromDomain(), 3, 'd').cmpl_ratio
        and getRepHits(features:FromDomain(), 3, 'd').total_hits >= 10000
        and getRepHits(features:FromDomain(), 3, 'd').cmpl_ratio >= 1 
    then 
      SetPSAR('ar3226') 
    end

    --ar3227
    --mxs_other / #mirtesen
    --08.12.16 / razuvaev
    if features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 30000
        and wclass:CT_IN_BODY()
        and features:FromDomain()
        and features:FromRealName()
        and SFKD('ar3227', features:FromDomain(), 60, 5)
    then
         if checkSuspEntityWithSFKD('ar3227', features:FromDomain(), features:FromRealName(), 3, 900) then
         SetPSAR('ar3227',true)
          end
      end
    
    --ar3228
    --fe / #zarabotki
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 50, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
        and cmpr_eq(features:UrlNormCount(), 3)
    	and cmpr_gt(features:SubjectNumbersCount(), 3, true)
    	and wclass:SHORT_MESSAGE_WITH_URL_GOOGLEDRIVE()
		and UrlsMatchStr('.drive.google.com/open',1)
    then
        SetPSAR('ar3228')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3228')
    end
    
    --ar3229
    --mxs_mbp #vbei_v_google
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 5000)
        and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:NOT_EMAIL_IN_FROM()
    	and wclass:RECEIVED_LAN_1()
    then
        SetPSAR('ar3229')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3229')
    end
    
    --ar3230
    --fe / #virus
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 1000000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:UserAge(), 100, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:WordCount(), 30, 200)
        and cmpr_btw(features:HtmlTagCount(), 1, 10, true)
        and cmpr_eq(features:FilesExtensions(), '.zip')
        and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
    	and SFKD('ar3230', features:FromRealName(), 120, 4)
    then
        if checkSuspEntityWithSFKD('ar3230', features:FromDomain(), features:FromRealName(), 2, 900)
        then
        	SetPSAR('ar3230')
        end
    end
    
    --ar3231
    --mxs_mbp #zarabotki
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_lt(features:UrlsTextSize(), 50)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:NEW_FROMDOMAIN_7_DAYS()
    	and wclass:SPF_NOT_PASS()
        and UrlsMatch(regex([[\.html$]]),1)
    then
        SetPSAR('ar3231')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3231')
    end
    
    --ar3232
    --fe / #china casino
    --19.12.16 / razuvaev(sokolik)
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(),1000, 50000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:Words8bitRatio(),20)
        and wclass:MORE_THAN_N_RCPT()
        and (wclass:HDR_MANY_ENVELOPE_TO()
    		or wclass:FE_SUBJECT_SUSP_UTF8_CHARS())
        and (wclass:FE_REGIONS_MISMATCH() 
        	or wclass:AUTOREG()
			or wclass:CJK_UNIFIED_IDEOGRAPHS())
        --and (wclass:TO_LOCALPART_IN_REALNAME() 
        	--or cmpr_eq(features:NoTo(),1))
    then
        SetPSAR('ar3232')
    end

    --ar3233
    --fe / #virus
    --10.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 100000, 300000)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_btw(features:WordCount(), 30, 200)
        and cmpr_eq(features:FilesExtensions(), '.zip')
    	and wclass:ARCHIVE_WITH_ONE_FILE_INSIDE()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
    	and wclass:IS_ONLY_ONE_EXECUTION_FILE_IN_ARCHIVE()
    then
        SetPSAR('ar3233')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3233')
    end
    
    --ar3234
    --fe/ #zarabotok
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 50000)
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:UrlNormCount(), 3)
        and wclass:SUBJECT_MIXED_BADRATIO()	
  		and TermsMatchGroup(18134, 100)
    then
        SetPSAR('ar3234')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3234')
    end
    
	--ar3235
    --mxs_mbp #disk
    --27.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromYandex()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 20000)
        and cmpr_btw(features:UrlNormCount(), 1, 3, true)
   		and cmpr_eq(features:SubjectNumbersCount(), 0)
        and (wclass:ONLY_URLS_IN_BODY()
    		or (cmpr_gt(features:HtmlTagCount(), 0) and cmpr_eq(features:NoBodyTag(), 1)))
    	and wclass:YANDEX_DISC()
    	and wclass:SK_URLS()
    	and wclass:FROM_ENDS_IN_NUMS()
    	and StrMatchRe(features:From(), regex([[\d{5,}@]]))
    then
    	SetPSAR('ar3235')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3235')
    end
    
	--ar3236
    --mxs_mbp #eye
    --09.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_eq(features:UrlNormCount(), 0)
        and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    	and wclass:DKIM_FAIL()
    	and wclass:MESSAGE_ID_NO_ANGLE_BRACKETS()
    	and wclass:EMAIL_IN_FROM_REAL_NAME()
    then
        SetPSAR('ar3236')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3236')
    end

    --ar3237
	--mxs_mbp / #zarabotok #mbp_other #su #visov_centr
	--09.12.16 / minina
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other'))
		and cmpr_btw(features:MsgSize(), 50, 5000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	--and cmpr_btw(features:TextLines(), 1, 5, true)
    	--and cmpr_btw(features:WordCount(), 1, 50)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_eq(features:HasShortUrl(), 1)
    	--and cmpr_eq(features:HtmlTagCount(), 0)
        and (wclass:UNKNOWN_IN_RECEIVED() or wclass:ONE_RECEIVED())
    	--and wclass:NO_USER_AGENT()
    	and wclass:MX_PROBABLESPAM_RATE_MORE_THAN_25()
	then
		SetPSAR('ar3237')
	end

    --ar3238
	--mxs_mbp / #ngs.ru #esp_url
	--09.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 1000, 100000)
    	and cmpr_eq(features:HasTextOnly(), 1)
       	and cmpr_btw(features:UrlNormCount(), 1, 10, true)
       	and cmpr_eq(features:MultipartNum(),1)
       	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true) 
    	and StrMatch(features:AuthenticatedDomain() , 'ngs.ru')
    	and features:HasSuspEspUrl()
    then
    	SetPSAR('ar3238')
    end

    --ar3239
	--mxs_mbp / #platforma #jewellery #perehod
	--09.12.16 / minina
	if not IsBlocked
    	and (cmpr_eq(features:RcvSrcExt(), 'mxs_mbp') or cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrc(), 'fe'))
    	and cmpr_btw(features:MsgSize(), 100, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:TextLines(), 5)
       	and cmpr_btw(features:UrlNormCount(), 1, 3,true)
      	and cmpr_eq(features:MultipartNum(),3)
    	and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() 
        	or wclass:DIFFERENT_REPLY_TO_AND_FROM() 
        	or cmpr_gt(features:EmailsCountInCcHeader(), 0))
    	and wclass:NOREALNAME_FROM()
    	and UrlsMatchStr('.html', 1)
    then
    	SetPSAR('ar3239')
    end
    
	--ar3240
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and (features:RepIpComplRatioByLastDay() >= 0.5 or features:RepIpSpamRatioByLastDay() >= 0.5)
		and wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM()
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		--and wclass:SPF_NOT_PASS()
	then
		SetPSAR('ar3240', true)
	end

	--ar3241
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
	then
		local reputation = getRepHits(features:EnvelopeFromDomain(), 2)
		local total_hits = reputation.total_hits
		if total_hits and total_hits > 0
		then 
			local result_zubr = features:RepFromDomainTotalHitsByLastDay()/ total_hits
			if result_zubr > 1.5 then SetPSAR('ar3241', true) end
		end
	end

	--ar3242
	--mxs_other / #spam
	--08.12.16 / zubr
	if features:RcvSrcExt() == "mxs_other"
		and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and SFKD('ar3242', {features:SrcIp()}, 60, 2000)
	then
		SetPSAR('ar3242', true)
	end

        	--ar3242
	--mxs_other / #spam
	--09.12.16 / d.moryakov
    if features:RcvSrcExt() == "mxs_other"
       and TermsMatchGroup(18112, 100)     
    then
		SetSpam('ar3243')
    end
    
	--ar3244
    --fe / #zarabotok #urlspam
    --09.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 200, 5000)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1     
		and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and	features:NoTo() == 1
    	and cmpr_lt(features:Karma(), 0, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true) 
    	and cmpr_gt(features:MultipartNum(), 3, true)    	   	    			
    	and cmpr_lt(features:WordCount(), 50, true)	    	
    	and cmpr_btw(features:TextLines(), 1, 10, true) 
    	and (features:OneWordSubject() == 1 or cmpr_lt(features:SubjectLen(), 20, true))   	
	then      	
        SetPSAR('ar3244')
    end   

    --ar3245
    --fe / #zarabotok #cloud
    --09.12.16 /m.guryanov 
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 500, 1500)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1    	   	
		and (features:NoRealNameTo() == 1 or features:NoTo() == 1)  	
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true) 
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true)
    	and cmpr_lt(features:WordCount(), 30, true)	
    	and wclass:SUBJECT_8BBIT_AND_BODY_7BIT()
    	and wclass:RUSSIAN_FROM_REALNAME()
    	and UrlsMatchStr('cloud.mail.ru/public', 1)
	then      	
        SetPSAR('ar3245')
    end

    --ar3246
    --fe / #zarabotok
    --09.12.16 /m.guryanov 
    if not IsBlocked
    	and not wclass:EXCEPTIONS()
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 3000, 15000)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1    	   	
		and features:NoRealNameTo() == 1	
    	and features:IsAutoreg()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:UrlNormCount() == 1    	
    	and	features:UrlCountWithoutMailRu() >= 1
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 60, true)
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_gt(features:WordCount(), 300, true)
	then      	
        SetPSAR('ar3246')
    end 
    
	--ar3247
	--mxs_other / #zarabotok #podstav domain #vtb
	--09.12.16 / r.kulpin
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 50000
		and features:FromDomain() == 'gazprombank.ru'  and D('aaaa')
    	and (wclass:PTR_ERROR()  or wclass:REMOTE_IP_IN_SPAMHAUS())
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (wclass:HDR_MANY_ENVELOPE_TO() or HeaderMatch('X-DMARC-Result', 'fail') or HeaderMatch('Mime-Version', '1.0 (1.0)'))
	then
		SetPSAR('ar3247')
	end
    
    --ar3248
    --fe / #upforsex
    --09.12.16 / philip.karpov
    --f_fm_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 1000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and (cmpr_eq(features:NoRealNameTo(), 1) or cmpr_eq(features:NoTo(), 1))
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 13, true)
        and cmpr_btw(features:WordCount(), 1, 15, true)
        and cmpr_gt(features:Words7bitRatio(), 50, true)
        and not features:MailRuTo()
        and wclass:FAST_AUTOREG()
        and wclass:WITH_HTTP()
        and UrlsMatchStr('tinyurl.com', 1)
    then
        SetPSAR('ar3248')
    end
    
    --ar3249
    --fe / #sex znakomstva
    --09.12.16 / philip.karpov
    --f_fm_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_btw(features:UrlCount(), 3, 7, true)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 8, 20, true)
        and cmpr_btw(features:WordCount(), 50, 100, true)
        and cmpr_gt(features:Words7bitRatio(), 55, true)
        and not features:MailRuTo()
        and wclass:FAST_AUTOREG()
        and wclass:WITH_HTTP()
        and wclass:FE_WORDS_WITH_NOISE_AND_SU()
        and wclass:HAS_TAG_STYLE()
        and UrlsMatchStr('bit.ly', 1)
    then
        SetPSAR('ar3249')
    end
    
    --ar3250
    --mxs_mbp / #attach_other 
    --09.12.16 / razuvaev 
     if features:RcvSrcExt() == 'mxs_mbp' 
     and (features:AttachOtherCount() >= 1 or features:AttachMultimediaCount() >= 1) 
     and features:FilesExtensions()
     and cmpr_gt(features:TextLines(), 30) 
     and cmpr_gt(features:WordCount(),200) 
     and wclass:RELAY_RECEIVED_FROM_FREEMAIL() 
     and SFKD('ar3250', {features:FilesExtensions()}, 60, 5) 
   then 
      SetPSAR('ar3250',true) 
    end
    
    --ar3251
    --mxs_mbp #google
    --09.12.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_lt(features:Words8bitRatio(),20)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:SubjectNumbersCount(),1,true)
        and wclass: HEADER_XSPAM_FLAG()
        and wclass: RUSSIAN_FROM_REALNAME()
        and wclass: FROM_AND_DKIM_DOMAINS_MISMTACH()
        and wclass:MISSING_DATE()
    then
        SetPSAR('ar3251')
    end
    
     --ar3252
     --mxs_other / #fake_domain 
      --09.12.16 / razuvaev 
   if features:RcvSrcExt() == 'mxs_other' 
      and wclass:SPF_NOT_PASS() 
      and features:FromDomain() 
      and features:FromRealName()  
      and mrasRepHasSendingGap(features:FromDomain(), 3, 30, 10, 1000) 
      and SFKD('ar3252', features:FromDomain(), 60, 10) 
   then 
      if checkSuspEntityWithSFKD('ar3252', features:FromDomain(), features:FromRealName(), 10, 900) 
     then
         SetPSAR('ar3252')
      if math.random(0, 100) < 2  then LogMsgToHadoop('dstat_razuvaev_log', '#ar3252') 
             end
        end      
    end
    
    --ar3253
    --mxs_mbp #google_yandex
    --09.12.16 / razuvaev
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_lt(features:Words8bitRatio(),20)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass: RUSSIAN_FROM_REALNAME()
        and wclass:HELO_IN_MSGID()
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:RECEIVED_LAN_1()
        and wclass:NO_USER_AGENT()
        and TermsMatchGroup(18135, 100)
    then
        SetPSAR('ar3253')
    end
    
    --ar3254
	--mxs_mbp / #google rambler
	--13.12.16 / razuvaev(sokolik)
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_lt(features:Words8bitRatio(),20)
    	and cmpr_btw(features:MultipartNum(), 1, 2, true)
        and ((wclass:FROM_RAMBLER()
    	and wclass:UNAVAILABLE_IN_RECEIVED())
    		or wclass:SPF_NOT_PASS_FROM_MBP()
			or wclass:SUBJECT_MIXED_BADRATIO()
			or wclass:MISSING_DATE()
			or wclass:ONLY_URLS_IN_BODY())
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
  		and TermsMatchGroup(17375, 100) 
	then
		SetPSAR('ar3254')
	end
    
    --ar3255
    --fe / #zarabotok
    --10.12.16 / philip.karpov
    --fc_fb_noimg
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 25000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_gt(features:WordCount(), 500)
        and cmpr_eq(features:Words7bitRatio(), 0)
        and features:MailRuTo()
        and wclass:SUSP_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and (wclass:SOURCE_IP_IN_XBL() or wclass:SOURCE_IP_IN_DNSBL())
    then
        SetPSAR('ar3255')
    end
    
    --ar3256
	--mxs_mbp / #zarabotok
	--10.12.16 / razuvaev
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 20000)
        and cmpr_eq(features:ToUndisclosed(),1)
    	and cmpr_eq(features:FromDomain(),'yandex.ru')
        and wclass:VERY_LONG_LOCALPART()
        and wclass:YANDEX_DISC()
        and wclass:RUSSIAN_FROM_REALNAME()
	then
		SetPSAR('ar3256')
	end
    
    --ar3257
	--mxs_mbp / #zarabotok
	--10.12.16 / razuvaev
	if not IsBlocked
        and false
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 2000)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:UrlCount(),1,true)
        and wclass:FAKE_FREE_MAIL()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass: DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and HeaderMatch('Received', '.hosting.reg.ru')    
	then
		SetPSAR('ar3257')
	end
    
    --ar3258
    --fe / #virus
    --10.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:WORDS_MIXED_RATIO()
        and wclass:WITH_HTTP()
        and (wclass:SOURCE_IP_IN_XBL() or wclass:SOURCE_IP_IN_DNSBL())
    then
        SetPSAR('ar3258')
    end
    
  

    --ar3259
    --fe / #zarabotok
    --10.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 15, 45, true)
        and cmpr_btw(features:WordCount(), 35, 95, true)
        and cmpr_btw(features:Words7bitRatio(), 1, 20)
        and cmpr_gt(features:LinesToWordsRatio(), 15)
        and features:MailRuTo()
        and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
        and wclass:WITH_HTTP()
        and wclass:WORDS_OTHERS_BAD_RATIO()
    then
        SetPSAR('ar3259')
    end
    
  --ar3260
	--mxs_mbp / #google
	--10.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_lt(features:MsgSize(), 2000)
        and cmpr_lt(features:Words8bitRatio(),50)
    	and cmpr_eq(features:FromDomain(),'yandex.ru')
        and wclass: NOREALNAME_TO()
        and wclass: SHORT_MESSAGE()
        and wclass: RECEIVED_LAN_1()
        and wclass: HELO_IN_MSGID()
        and wclass: FROM_ENDS_IN_NUMS()  
	then
		SetPSAR('ar3260')
	end

    --ar3261
    --fe / #zarabotok #pdf
    --11.12.16 / philip.karpov
    --fc_fb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 200000, 5000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_gt(features:AttachAllCount(), 1)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 5, 35, true)
        and cmpr_btw(features:WordCount(), 100, 395, true)
        and cmpr_gt(features:Words8bitRatio(), 75)
        and cmpr_gt(features:LinesToWordsRatio(), 5)
        and cmpr_gt(features:SubjectNumbersCount(), 5)
        and features:MailRuTo()
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:WITH_HTTP()
        and wclass:INNER_SOURCE_SUSP_REPEAT_TAG()
        and wclass:CT_ENCODED_FILENAME()
    then
        SetPSAR('ar3261')
    end
    
   	--ar3262
    --fe / #zarabotok #pdf 
    --14.12.16 / philip.karpov (sulimov)(sokolik)
    --fc_fb_usage7
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 20000, 5000000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_gt(features:AttachAllCount(), 1, true)
        and cmpr_btw(features:UrlCount(), 0, 1, true)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and (cmpr_eq(features:NoRealNameTo(), 1)
            or cmpr_eq(features:NoTo(), 1))
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 2, 35, true)
        and cmpr_btw(features:WordCount(), 20, 1000, true)
        and cmpr_gt(features:Words8bitRatio(), 50)
        --and cmpr_btw(features:LinesToWordsRatio(), 10, 20, true)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and (cmpr_gt(features:WordMixedCount(), 25)
    		or wclass:AUTOREG())
        and wclass:CRASHED_BASE64_IN_SUBJECT()
        and wclass:WITH_HTTP()
        and wclass:CT_ENCODED_FILENAME()
        and StrMatchRe(features:PartsFilenames(), regex([[\.pdf$]]))
    then
        SetPSAR('ar3262')
    end
 
     --ar3263
	--mxs_mbp / #vbei v google #orange.fr
    --10.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10, 50000)
  	    and cmpr_eq(features:EnvelopeFromDomain(),'orange.fr')
        and wclass: FROM_TLD_IS_SUSP()
        and wclass: ONLY_URLS_IN_BODY()
        and wclass: RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:SPF_NOT_PASS_FROM_MBP()
	then
		SetPSAR('ar3263')
	end
    
    --ar3264
	--mxs_mbp / #zarabotok
	--11.12.16 / razuvaev
    --edf466d0fa01bbbd24dbebcfbdef186e 52151ff8321c80292a194ad0c9cb36ad
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 2000,15000)
    	and cmpr_eq(features:FromDomain(),'ngs.ru')
     	and cmpr_eq(features:MsgIdDomain(),'mx66.intranet.ru') 
        and cmpr_eq(features:UrlCount(), 1)
        and wclass:ANTIVIRUS_STATUS()
        and wclass: NOT_CP1251_CHARS_IN_SUBJECT()
        and wclass: SUSP_HTML_WITH_TEXT_ONLY()
	then
		SetPSAR('ar3264')
	end

    --ar3265
	--mxs_mbp / #vbei v google 
    --22.12.16 / razuvaev(sokolik)
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 10, 500000)
        and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
        and wclass:HAS_X_CMAE_ENVELOPE_HDR()
        and wclass:MISSING_DATE()
        and ((UrlsMatchStr('google.com') and wclass: ONLY_URLS_IN_BODY())
    		or TermsMatchGroup(18140, 100))
	then
		SetPSAR('ar3265')
	end
    
      --ar3266
     --mxs_other / #1subject
     --11.12.16 / razuvaev 
   if features:RcvSrcExt() == 'mxs_other' 
      and features:FromDomain() 
	  and features:Subject()
      and features:Subject8bitOnly() == 1
      and cmpr_gt(features:SubjectWordCount(), 4)
      and cmpr_gt(features:UrlCount(),1, true)
      and SFKD('ar3266', features:Subject(), 60, 10) 
   then 
      if checkSuspEntityWithSFKD('ar3266', features:Subject(), features:FromDomain(), 5, 900) 
   then
         SetPSAR('ar3266')
      if math.random(0, 100) < 2  then LogMsgToHadoop('dstat_razuvaev_log', '#ar3266') 
             end
        end      
    end
    
     --ar3267
     --mxs_other / #realname_1_word
     --11.12.16 / razuvaev 
   if features:RcvSrcExt() == 'mxs_other' 
      and features:FromDomain() 
      and features:FromRealName()  
      and cmpr_gt(features:UrlCount(),1, true)
      and cmpr_eq(features:FromRealNameWordCount(), 1)
      and wclass:RUSSIAN_FROM_REALNAME()
      and wclass:CAPS_IN_FROM_REAL_NAME()
      and SFKD('ar3267', features:FromRealName(), 60, 10) 
   then 
      if checkSuspEntityWithSFKD('ar3267', features:FromRealName(), features:From(), 3, 900) 
    then
         SetPSAR('ar3267')
      if math.random(0, 100) < 2  then LogMsgToHadoop('dstat_razuvaev_log', '#ar3267') 
             end
        end      
    end

    --ar3268
	--mxs_mbp / #zarabotok
	--11.12.16 / razuvaev
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
        and cmpr_btw(features:MsgSize(), 50000,1000000)
    	and cmpr_eq(features:MultipartNum(), 1)
      	and cmpr_lt(features:TextLines(),50)
        and cmpr_gt(features:WordCount(),700)
    	and cmpr_gt(features:UrlCount(),20)
        and wclass:FROM_TLD_IS_SUSP()
        and wclass:SPF_NOT_PASS_FROM_MBP()
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
	then
		SetPSAR('ar3268')
	end

    --ar3269
    --mxs_other / #invite #zarabotok
    --11.12.16 /m.guryanov  
	--db277291e4d4e2e1418b1edfca6ace89 c377212cc815057dff0132422b0a7753 dc03d658b881f87352265674f64f7f21
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 50000, 200000, true)
    	and features:HasNoAttach() == 1
    	and cmpr_btw(features:ImgNum(), 1, 3, true)
    	and features:NoRealNameTo() == 1
    	and features:NoUserAgent() == 1
    	and cmpr_btw(features:UrlNormCount(), 3, 15, true) 
    	and cmpr_btw(features:WordCount(), 300, 600, true)
    	and cmpr_gt(features:HtmlTagCount(), 200, true)  
  		and cmpr_gt(features:NumberCount(), 300, true)
    	and cmpr_gt(features:WhitespaceCount(), 1000, true)
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   	   	
    	and wclass:EMPTY_OR_BAD_IMAGE()
    	and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
	then      	
        SetPSAR('ar3269')
    end 

	--ar3270
    --mxs_other / #perevod #pay #transfer #viplat
    --11.12.16 /m.guryanov  
	--5bd70980eb91c584f8e4aada9cdb63f2 287ec7ed693be81edc69a3bce5599589 03a19552113456244022df969465ebb6
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 3000, 15000, true)
    	and features:HasTextOnly() == 1
    	and features:NoUserAgent() == 1
    	and features:UrlNormCount() == 1
    	and cmpr_btw(features:WordCount(), 80, 500, true)    	
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   	   	
    	and wclass:NEW_IP_7_DAYS()
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH_AND_DIFF_FROM_AND_ENV_FROM()
    	and wclass:SHORT_BOUNDARY()
	then      	
        SetPSAR('ar3270')
    end 

    --ar3271
    --mxs_other / #perevod #pay #transfer #viplat
    --11.12.16 /m.guryanov 
    if features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 500, 30000, true)
    	and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 1   	
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   	   	
    	and wclass:NEW_IP_7_DAYS()
    	and wclass:FROM_AND_DKIM_DOMAINS_MISMTACH_AND_DIFF_FROM_AND_ENV_FROM()    	
	then      	
        SetPSAR('ar3271')
    	LogMsgToHadoop('dstat_guryanov_log', '#ar3271')
    end 

    --ar3272
    --mxs_other / #rotaru #omolozhenie
    --11.12.16 /m.guryanov 
	--3b41f7202bf09efc2c6e4f3e61487e43 3f42cf2a8e08a03dbe5b1565fca0ab9c fc90695501187d9133f92fc02f583174
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 500, 4000, true)
    	and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 0   	
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   
   		and cmpr_btw(features:WordCount(), 5, 200, true)
    	and cmpr_btw(features:TextLines(), 1, 10, true) 
    	and cmpr_gt(features:HtmlTagCount(), 1, true)     	
    	and wclass:UNPARSED_URL_IN_BODY()
    	and TermsMatchGroup(18138, 100)
	then      	
        SetPSAR('ar3272')
    end 
    

    --ar3273
    --smtp / #img
    --11.12.16 / r.belyankin
    --s_sm_aol
    if not IsBlocked
        and features:RcvSrc() == 'smtp'
        and features:MsgSize() >= 100000 and features:MsgSize() <= 1000000
        and not features:IsPddUser()
        and features:HasNoAttach() == 1
        and features:ImgNum() == 1
        and features:UrlNormCount() == 0
        and features:FilesExtensions() == ".png" 
        and features:Karma() <= 0
        and features:NoRealNameTo() == 1
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 25)
        and features:TextLines() >= 1 and features:TextLines() <= 5
        and features:WordCount() >= 1 and features:WordCount() <= 10
        and features:HtmlTagCount() >= 5 and features:HtmlTagCount() <= 25
        and cmpr_eq(features:NumberCount(), 0)
        and wclass:FROM_EMAIL_IN_MSGID_LOCALPART()
    then
        SetSpam('ar3273',false)
		CarbideSendStatsSum('rules_analyst', 'ar3273', 1)
        --SetPSAR('ar3273')
    end
    
    --ar3274
    --mxs / #zarabotok
    --11.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 3
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 1 and features:TextLines() <= 50
        and features:WordCount() >= 5 and features:WordCount() <= 250
        and UrlsMatch(regex([[\/(ok|w)\/[a-z\d]+\.php$]]),1)
		and not UrlsMatch(regex([[\/(index|order|load|post)\.php$]]),1)
		and not wclass:FROM_INFORMATION_SERVICE()
    then
        SetPSAR('ar3274')
    end

    --ar3275
    --mxs_mbp #podrobnee
    --20.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and cmpr_lt(features:TextLines(), 50)
    	and cmpr_gt(features:WordCount(), 500)
    	and cmpr_gt(features:HtmlTagCount(), 300)
        and cmpr_gt(features:UrlNormCount(), 20)
        and (wclass:MISC_SUSP_MAILERS()
    		or wclass:MESSAGE_ID_SUSP_TLD())
        and (wclass:FROM_AND_DKIM_DOMAINS_MISMTACH()
    		or wclass:SPF_NOT_PASS_FROM_MBP())
	then
        SetPSAR('ar3275')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3275')
    end

    --ar3276
    --fe / #zarabotok 
	--12.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 100000)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 300, true)
        and cmpr_lt(features:RepuserAge(), 150, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:TextLines(), 100)
        and cmpr_gt(features:WordCount(), 500)
		and features:UrlNormCount() == features:UrlCountWithoutMailRu() + 5
    	and (wclass:DIFFERENT_RES_IMAGES()
    		or wclass:MORE_THAN_5_EMAILS_IN_BODY())
    then
        SetPSAR('ar3276')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3276')
    end
    
    --ar3277
    --mxs / #zarabotok
    --11.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 5
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 70
        and features:TextLines() >= 5 and features:TextLines() <= 10
        and features:WordCount() >= 10 and features:WordCount() <= 150
        and features:HtmlTagCount() >= 5 and features:HtmlTagCount() <= 25
        and UrlsMatch(regex([[\d+\.php$]]),1)
        and ((wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() and wclass:NEW_FROMDOMAIN_15_DAYS())
    		or (wclass:DKIM_FAIL() and wclass:MSG_ID_LOCALPART_SEEMS_HASH()))
    then
        SetPSAR('ar3277')
    end
    
    --ar3278
    --fe / #programma #zarabotok
	--29.12.16 / minina
	if not IsBlocked
       	and cmpr_eq(features:RcvSrc(), 'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
      	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:WordCount(), 200, true)
    	and cmpr_gt(features:Words8bitRatio(), 70)
       	and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
    	and cmpr_btw(features:UrlsTextSize(), 5, 30)
    	and cmpr_btw(features:HtmlTagCount(), 10, 100)
    	and cmpr_btw(features:WhitespaceToWordRatio(), 50, 250)
    	and RepuserHasSendingGap(ts(features:MpopUserId()), 'mail', 60, 30)
       	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:AUTOREG()
    then
    	SetPSAR('ar3278')
    end
    
    --ar3279
    --fe / #zarabotok 
	--11.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 200000)
    	and cmpr_gt(features:MultipartNum(), 5)
        and cmpr_gt(features:ImgNum(), 1)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_btw(features:TextLines(), 1, 30, true)
        and cmpr_btw(features:WordCount(), 10, 500)
		and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:SUBJECT_MIXED_BADRATIO()
    	and wclass:SUBJECT_MANY_SYMBOLS_SUCCESSIVELY()
    then
        SetPSAR('ar3279')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3279')
    end
    
    --ar3280
    --mxs_mbp #url_subj
    --11.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
    	and wclass:EMAIL_IN_FROM_REAL_NAME()
    	and wclass:URL_IN_SUBJECT()
    	and wclass:NO_URLS_WITH_HTML_TAGS()
    then
        SetPSAR('ar3280')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3280')
    end

    --ar3281
    --fe / #virus_out
	--22.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 500000)
    	and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:HasAttach(), 1)
        and cmpr_btw(features:TextLines(), 0, 16, true)
        and cmpr_btw(features:WordCount(), 0, 500, true)
		and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
   		and wclass:HAS_ONLY_ONE_ARCHIVE_ATTACH()
    	and (wclass:TO_LOCALPART_IN_REALNAME()
    		or wclass:SOURCE_IP_IN_XBL())
    	and wclass:SOURCE_IP_IN_TOR_NODE()
    then
        SetPSAR('ar3281')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3281')
    end
    
    --ar3282
    --mxs_mbp #kolgotki
    --12.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1) 
        and cmpr_btw(features:TextLines(), 5, 50, true)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:FROM_ENDS_WITH_YEAR()
		and UrlsMatchStr(features:ToLocalPart(), 1)
    then
        SetPSAR('ar3282')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3282')
    end
    
    --ar3283
    --mxs / #zarabotok
    --12.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:MultipartNum() == 1
        and features:TextLines() >= 10 and features:TextLines() <= 50
        and features:WordCount() >= 20 and features:WordCount() <= 150
        and wclass:US_URLS()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and wclass:NEW_FROMDOMAIN_15_DAYS()
    then
        SetPSAR('ar3283')
    end
    
    --ar3284
    --mxs / #zarabotok
    --12.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 1
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 100
        and features:TextLines() >= 20 and features:TextLines() <= 50
        and features:WordCount() >= 100 and features:WordCount() <= 700
        and wclass:ONE_RECEIVED()
        and wclass:MAIL_RU_MSGID_PATTERN()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and wclass:IP_REP_GAP_MORE_30_DAYS()
        and wclass:NEW_DKIM_7_DAYS()
    then
        SetPSAR('ar3284')
    end

    --ar3285
    --mxs / #zarabotok #{http://}
    --12.12.16 / r.belyankin
    --moc_mo_nourl
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 10000
        and features:HasTextOnly() == 1
        and features:UrlsTextSize() >= 5 and features:UrlsTextSize() <= 50
        and features:TextLines() >= 5 and features:TextLines() <= 20
        and features:WordCount() >= 30 and features:WordCount() <= 150
        and features:HtmlTagCount() >= 10 and features:HtmlTagCount() <= 25
        and (wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM() or wclass:PTR_SEEMS_DYNAMIC() or wclass:PTR_ERROR())
        --and (wclass:IP_REP_GAP_MORE_30_DAYS() or wclass:NEW_IP_30_DAYS() or wclass:REMOTE_IP_IN_SPAMHAUS())
        and TermsMatchGroup(18148, 10)
    then
        SetPSAR('ar3285')
    end

    --ar3286
    --mxs / #zarabotok #sparkpostmail #jewellery
    --12.12.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 500 and features:MsgSize() <= 5000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 150 and features:UrlsTextSize() <= 350
        and features:TextLines() >= 10 and features:TextLines() <= 30
        and features:WordCount() >= 10 and features:WordCount() <= 100
        and wclass:NEW_DKIM_15_DAYS()
        and wclass:ONE_RECEIVED()
        and wclass:IP_REP_GAP_MORE_30_DAYS()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and UrlsMatch(regex([[^go\.sparkpostmail(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar3286')
    end
    
    --ar3287
    --mxs / #english
    --12.12.16 / r.belyankin
    --mcc_mc_from7
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 1000 and features:MsgSize() <= 15000
        and features:HasTextOnly() == 1
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 10 and features:UrlsTextSize() <= 100
        and features:TextLines() >= 10 and features:TextLines() <= 35
        and features:WordCount() >= 100 and features:WordCount() <= 1000
        and features:Word8bitCount() == 0
        and (wclass:MORE_5_EMAILS_IN_TO() or wclass:NEW_IP_30_DAYS_WITH_10_DAY_GAP() or wclass:TO_LOCALPART_IN_REALNAME())
        and HeaderMatchRe('Content-type', regex([[boundary=\"\-{1,8}=?_NextPart_\d+_?]]), 1)
        and TermsMatchGroup(785, 10)
    then
        SetPSAR('ar3287')
    end
    
    --ar3288
    --fe / #china_spam
	--15.12.16 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000000)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 6, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and (wclass:ONLY_7BIT_WORDS()
    		or cmpr_gt(features:WordsOtherRatio(), 30))
    	and (wclass:MORE_THAN_N_RCPT()
    		or wclass:NO_TO())
        and (wclass:BAD_LINES_TO_WORD_RATIO()
    		or wclass:WORDS_OTHERS_VERY_BAD_RATIO()
    		or wclass:HDR_MANY_ENVELOPE_TO()
			or wclass:FE_REGIONS_MISMATCH())
    then
        SetPSAR('ar3288')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3288')
    end

    --ar3289
    --fe / #zarabotki #podrobnee
	--15.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 10000000)
    	--and cmpr_gt(features:MultipartNum(), 6, true)
    	and cmpr_gt(features:UrlNormCount(), 8)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 300, true)
    	and cmpr_gt(features:HtmlTagCount(), 80)
        and (cmpr_lt(features:Karma(), 0, true)
    		or wclass:AUTOREG())
    	and cmpr_gt(features:WhitespaceToWordRatio(), 3000)
    	and wclass:PHP_URL()
    	and wclass:FROM_ENDS_WITH_YEAR()
        and wclass:HAS_IMAGE_URL()
    then
        SetPSAR('ar3289')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3289')
    end
    
 	--ar3290
	--mxs-other / #@test #.top #mmserver
	--12.12.16 / r.kulpin
	--da87561a1ab5d0f7c29e216da6d8bd31 c194d11b28832df778437db51c224881
 	if not IsBlocked
    	and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and cmpr_btw(features:MsgSize(), 100, 3000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 2)
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and UrlsMatch(regex([[^(mmserver|mmsmtp).{1,5}\d+\.top$]]))
    then
    	SetPSAR('ar3290')
    end
    

    --ar3291
    --fe / #virus
    --12.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 20000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_lt(features:Karma(), 0, true)
        and cmpr_gt(features:UserAge(), 150, true)
        and cmpr_btw(features:WordCount(), 10, 200)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
        and (cmpr_gt(features:SubjectNumbersCount(), 4, true) or cmpr_gt(features:SubjectLen(), 30, true))
    	and TermsMatchGroup(18141,100)
    then
        SetPSAR('ar3291')
    end
    
    --ar3292
    --mxs_other / #fake spam
    --12.12.16 / r.kulpin 
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other") 
    	and cmpr_btw(features:MsgSize(), 100, 3000)
    	and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
    	and features:NoHtmlTag()
    	and cmpr_btw(features:WordsOtherRatio(), 40, 60)
    	and cmpr_eq(features:UrlNormCount(), 1)
    	and wclass:SHORT_ENGLISH_MESSAGE()
    	and wclass:HELO_HAS3D_LVL_DOMAIN()
    	and wclass:HAS_EXTERNAL_IMG()
    	and wclass:NO_CTE()
        and (wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() or wclass:SHORT_WITH_MANY_URLS())
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    then 
        SetPSAR('ar3292') 
    end
    
	--ar3293
	--esp / #unisender  TEST TEST
	--12.12.16 / r.kulpin
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
		and StrMatch(features:DkimDomain(), ':topeml.com')
		and features:FromDomain()
			then
		    	local from_stat = getRepHits(features:FromDomain(), 1, 'd')
		  		if from_stat.ham_hits > 300000
		    	and from_stat.cmpl_ratio > 1
		  	then
		    	SetPSAR('ar3293', true)   -- tyt dlya slejki fonbet.com
		end
	end
 
    --ar3294
    --mxs_other / #phishing #paypal
    --12.12.16 /m.guryanov 
	--66bf941d832e79ec4cc30467241ee2ac df6953115bfefd550080c6e866a7baee 7b38a679ab61f58ca49f386d6a5de38f
    if features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 5000, 16000, true)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true) 
  		and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   
   		and cmpr_btw(features:WordCount(), 200, 1000, true)
    	and cmpr_gt(features:TextLines(), 80, true) 
    	and features:Subject7bitOnly() == 1    	
    	and cmpr_gt(features:HtmlTagCount(), 1, true)  
   		and features:SPF() == "fail" 
    	and wclass:ONLY_7BIT_WORDS()
    	and wclass:PROBABLE_PHISHING_FROM()
    	and StrMatchRe(features:FromRealName(), regex([[(?i)pa[yv]{1}pal]]))
    	and cmpr_eq(features:EnvelopeFromDomain(), 'paypal.com', true)
	then      	
        SetPSAR('ar3294')
    end 

    --ar3295
    --mxs_other / #phishing #apple
    --12.12.16 /m.guryanov 
	--28beb4909dc3653b227c4145beb68ad9 441437c078025bb30d945989dc2115a6
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 8000, 20000, true)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 7, true) 
  		and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))   
   		and cmpr_btw(features:WordCount(), 50, 300, true)
    	and cmpr_btw(features:TextLines(), 30, 100, true) 
    	and features:Subject7bitOnly() == 1   
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
    	and UrlsMatchStr('support.apple.com', 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'apple.com', true)
	then     	
        SetPSAR('ar3295')
    end 

	--ar3296
	--mxs / #my.com #moryak
	--12.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(), 'mxs')
    	and features:ToDomain() == "my.com"
    	and TermsMatchGroup(18142, 100)
    then
    	SetPSAR('ar3296',true)
    end

    --ar3297
    --fe / #zarabotok
    --12.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
         and cmpr_eq(features:MultipartNum(), 5)
         and (cmpr_eq(features:ImgNum() , 1) or cmpr_eq(features:HasAttach(), 1))
    	 and cmpr_lt(features:Karma(), 0, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:UserAge(), 15, true)
        and cmpr_btw(features:WordCount(), 10, 5000)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
    	and wclass:FE_NO_TO()
    	and wclass:NO_SUBJECT()
        and wclass:NAME_IN_BODY()
    then
        SetPSAR('ar3297')
    end

    --ar3298
    --fe / #zarabotki php
    --12.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 5000, 50000)
        and cmpr_eq(features:MultipartNum(),3)
    	and cmpr_lt(features:UserAge(), 10)
        and cmpr_lt(features:RepuserAge(), 3, true)
		and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
    	and cmpr_gt(features:UrlNormCount(), 10)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:TextLines(), 50, 150)
        and cmpr_btw(features:WordCount(),100, 400)
        and cmpr_gt(features:LinesToWordsRatio(), 25)
    	and cmpr_eq(features:IpCategory(), 'tiny')
    	and cmpr_gt(features:HtmlTagCount(), 100)
    	and wclass:PHP_URL()
    then
        SetPSAR('ar3298')
    end
    
    --ar3299
    --mxs_mbp #zapiska #cloud
    --12.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_lt(features:MsgSize(), 300)
        and cmpr_eq(features:HasTextOnly(), 1)  
        and cmpr_eq(features:UrlNormCount(), 2)
    	and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and TermsMatchGroup(18144, 100)
    then
        SetPSAR('ar3299')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3299')
    end

    --ar3300
    --mxs_mbp #zarabotki #@
    --15.12.16 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)  
        and cmpr_btw(features:UrlNormCount(), 0, 5, true)
    	and wclass:TO_IN_SUBJECT()
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    	and (wclass:GET_PARAM_IN_SHORTURL()
    		or wclass:HAS_X_PHP_SCRIPT())
        and TermsMatchGroup(18011, 100)
    then
        SetSpam('ar3300',false)
		CarbideSendStatsSum('rules_analyst', 'ar3300', 1)
        --SetPSAR('ar3300')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3300')
    end
    
    --ar3301
    --mxs_mbp #hrap
    --11.01.17 / a.sokolov
    if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 500, 20000)
        and cmpr_gt(features:HtmlTagCount(), 0)
		and cmpr_gt(features:HtmlTags()['br'], 20)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_gt(features:UrlNormCount(), 1, true)
  		and UrlsMatchStr('.blogspot.')
        and TermsMatchGroup(18145, 100)
    then
        SetPSAR('ar3301', true)
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3301')
    end
    
    --ar3302
    --mxs_mbp #zarabotki #href
    --18.12.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 500, 10000)
        and cmpr_gt(features:HtmlTagCount(), 0)
    	and cmpr_btw(features:WordCount(), 10, 300)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_eq(features:UrlNormCount(), 1)
    	and (wclass:FROM_LOCALPART_IN_REALNAME()
    		or wclass:NO_HTML_TAG())
      	and (UrlsMatch(regex([[\.ru$]]), 1)  
    		or UrlsMatch(regex([[\.ðô$]]), 1)
			or wclass:SHORTURL())
        and TermsMatchGroup(18146, 100)
    then
        SetPSAR('ar3302')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3302')
    end
    
    --ar3303
    --mxs_mbp #zarabotki #with_top_url
    --13.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)
    	and wclass:FROM_NGS_RU()
        and cmpr_btw(features:MsgSize(), 2000, 6000)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:NoBodyTag(), 1)
		and cmpr_eq(features:NoHtmlTag(), 1) 
        and cmpr_btw(features:WordCount(), 10, 200)
        and cmpr_btw(features:TextLines(), 10, 40, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
    	and not wclass:RUSSIAN_FROM_REALNAME()
    	and wclass:MISC_SUSP_MAILERS()
    then
        SetPSAR('ar3303')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3303')
    end

    --ar3304
    --fe / #zarabotok #pdf
    --16.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 1000000)
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_btw(features:MultipartNum(), 3, 5, true)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
        and cmpr_btw(features:RepuserAge(), 0, 10, true)
        and cmpr_lt(features:Karma(), 0, true)
		and (wclass:DOT_SPLIT_LOCALPART()
    		or wclass:FROM_ENDS_WITH_YEAR()
			or wclass:FEW_WORDS_WITH_DOC_ATTACH()
			or wclass:AUTOREG()
			or wclass:FROM_ENDS_IN_NUMS()
			or wclass:NEW_IP_7_DAYS())
		and wclass:MESSAGE_ONLY_WITH_ONE_ATTACH()
    then
        SetPSAR('ar3304')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3304')
    end

    --ar3305
    --fe / #zarabotok #blogspot
    --13.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 1000)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 2)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:SubjectNumbersCount(), 3, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 100)
        --and (cmpr_lt(features:Karma(), 0, true)
    		--or wclass:AUTOREG())
		and (wclass:DOT_SPLIT_LOCALPART()
    		or wclass:FROM_ENDS_WITH_YEAR())
    	and UrlsMatchStr('.blogspot.')
    then
        SetPSAR('ar3305')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3305')
    end
    
 	--ar3306
	--mxs_other / #flud
	--13.12.16 / r.kulpin
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_lt(features:MsgSize(), 300)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and cmpr_btw(features:SubjectWordCount(), 1, 2, true)
    	and cmpr_btw(features:WordCount(), 4, 20)
    	and cmpr_eq(features:TextLines(), 1)
    	and cmpr_eq(features:HtmlTagCount(), 0)
    	and wclass:EML_HELO()
    	and wclass:REP_FROM_DOMAIN_OK_HITS_WITHOUT_USER_ACTIONS()
    	and wclass:ONE_RECEIVED()
    	and wclass:DOMAINS_EQUAL()
    	and wclass:HELO_HAS3D_LVL_DOMAIN()
    	and wclass:MSG_ID_LOCALPART_SEEMS_HASH()
    	and HeaderMatch('Content-Type', 'charset="windows-1251')
    then
        SetSpam('ar3306',false)
		CarbideSendStatsSum('rules_analyst', 'ar3306', 1)
    	--SetPSAR('ar3306')
    end
    
	--ar3307
	--mxs_other / #efremov #podstav domain #TEST
	--13.12.16 / minina 
    if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and features:Helo() and not StrMatch(features:Helo(), features:FromDomain())
        and features:SpfDomain() and features:SpfDomain() ~= features:FromDomain()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and HeaderMatch('X-DMARC-Result', 'fail')
	then
		SetPSAR('ar3307',true)
	end
    
	--ar3308
	--mxs_other / #efremov #podstav domain #TEST
	--13.12.16 / minina
    if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
    	and features:Helo() and not StrMatch(features:Helo(), features:FromDomain())
        and features:SpfDomain() and features:SpfDomain() ~= features:FromDomain()
        and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and HeaderMatch('Content-Transfer-Encoding', '7bit')
	then
		SetPSAR('ar3308',true)
	end
    
    --ar3309
	--mxs_mbp / #vbei v google #google_search
	--07.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 50, 50000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:MultipartNum(), 1)
    	and wclass:ONLY_7BIT_WORDS()
  		and TermsMatchGroup(17375, 100)
	then
		SetPSAR('ar3309')
	end
    
	--ar3310
	--mxs_other / #efremov #podstav domain #TEST
	--13.12.16 / minina
    if cmpr_eq(features:RcvSrcExt(), 'mxs_other') 
    	and (features:FromDomainCategory() == "huge" or features:FromDomainCategory() == "medium" or features:FromDomainCategory() == "large")
    	and features:EnvelopeFromDomain()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
        and getRepHits(features:EnvelopeFromDomain(), 2, 'm').spam_ratio
    	and getRepHits(features:EnvelopeFromDomain(), 2, 'm').spam_ratio >= 50
	then
		SetPSAR('ar3310',true)
	end
    
    --ar3311
	--mxs_mbp / #zarabotok #gmail.com 
	--13.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 50000, 180000)
    	and cmpr_eq(features:FromDomain(), 'gmail.com')
    	and cmpr_lt(features:TextLines(), 5)
    	and cmpr_lt(features:WordCount(), 4)
    	and cmpr_eq(features:DotCount(), 0)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.xls')
    	and wclass:NO_SUBJECT()
    	and wclass:ONLY_7BIT_WORDS()
	then
		SetPSAR('ar3311')
	end

    --ar3312
	--mxs_other / #efremov #podstav domain
	--13.12.16 / minina
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and (cmpr_eq(features:FromDomain(), 'pikabu.ru') 
        	or cmpr_eq(features:FromDomain(), 'mirtesen.ru') 
        	or cmpr_eq(features:FromDomain(), 'edarling.ru') 
        	or cmpr_eq(features:FromDomain(), 'loveplanet.ru')
        	or cmpr_eq(features:FromDomain(), 'badoo.com')
        	or cmpr_eq(features:FromDomain(), 'avito.ru'))
        and cmpr_eq(features:MultipartNum(), 1)
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
	then
		SetPSAR('ar3312')
	end
    
    --ar3313
    --fe / #znakomstva #english
	--13.12.16 / r.sulimov
    --s_sm_hotmail
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_btw(features:MsgSize(), 50, 400)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        --and cmpr_btw(features:TextLines(),1, 2, true)
        and cmpr_btw(features:WordCount(), 5, 20, true)
        and cmpr_lt(features:UserAge(), 40, true)
		and cmpr_gt(features:NumberCount(), 5, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
        and cmpr_eq(features:UrlNormCount(),0)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and not features:MailRuTo()
        and wclass:FE_REGIONS_MISMATCH()
        and HeaderMatch('X-Mru-User-Agent' ,'Mozilla')
    then
        SetPSAR('ar3313')
    end

    --ar3314
    --fe / #norm
    --13.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 800000)
        and cmpr_gt(features:ImgNum() , 1, true)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_gt(features:UrlNormCount(), 10)
        and cmpr_btw(features:UserAge(), 100, 300, true)
        and cmpr_btw(features:WordCount(), 200, 4000)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and cmpr_gt(features:HtmlTagCount(), 200)
        and cmpr_gt(features:LinesToWordsRatio(), 20)
        and cmpr_gt(features:HtmlTags()['br'], 20)
        and cmpr_gt(features:HtmlTags()['div'], 40)
        and wclass:HAS_INPUT_TAG()
    then
        SetPSAR('ar3314')
    end
    
    --ar3315
    --fe / #casino
    --09.01.17 / r.sulimov(sokolik)
    --fc_fb_usagemo7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:Subject7bitOnly(), 1)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and (cmpr_gt(features:WordCount(),100) or cmpr_gt(features:WhitespaceToWordRatio(), 500))
        and cmpr_lt(features:DotCount(), 2, true)
        and cmpr_lt(features:RepuserAge(), 150, true)
        and cmpr_eq(features:OneWordSubject() , 1)
        and cmpr_lt(features:Word7bitCount(),15)
        and cmpr_lt(features:WordOtherCount(),30)
        and cmpr_btw(features:TextLines(), 3, 30) 
    	and cmpr_btw(features:HtmlTagCount(), 7, 15, true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and cmpr_gt(features:HtmlTags()['p'], 4)
        and wclass:FE_TOR_IP()   
    then
        SetPSAR('ar3315')
    end
    
	--ar3316
	--mxs_other / #spam
	--08.12.16 / zubr
    if not IsBlocked
		and (features:RcvSrcExt() == "mxs_other" or features:ImapSubSrc() == "mxs")
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and not features:DkimDomain()
		and features:InvalidFrom() == 1
		and HeaderMatch('Date', '+0900')
		and not HeaderMatch('Received', '+0900')
		and HeaderMatchRe('From', regex([[(?i)@[a-z\d\-]{5,25}\.[a-z]{2,3}\s*\([a-zà-ÿ].+]]))
	then
		SetPSAR('ar3316')
	end

    --ar3317
    --fe / #text
	--13.12.16 / r.sulimov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
		and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 0, true)
		and cmpr_lt(features:RepuserAge(),3, true)
    	and cmpr_btw(features:UserAge(), 1,100, true)
		and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:LinesToWordsRatio(), 0)
        and cmpr_gt(features:WordCount(), 500)
		and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar3317')
 	end    
    
    --ar3318
    --fe / #zarabotok #drive.google
    --13.12.16 / philip.karpov
    --fc_fb_fh
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 200, 5000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_eq(features:UrlCount(), 1)
        and cmpr_lt(features:RepuserAge(), 15, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 40, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_btw(features:TextLines(), 1, 5, true)
        and cmpr_gt(features:LinesToWordsRatio(), 50, true)
        and cmpr_eq(features:OneWordSubject(), 1)
        and cmpr_eq(features:Subject7bitOnly(), 1)
        and features:MailRuTo()
        and wclass:URL_GOOGLEDRIVE()
        and wclass:WITH_HTTP()
    then
        SetPSAR('ar3318')
    end

    --ar3319
    --fe / #mp3
	--13.12.16 / r.sulimov
	if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
		and cmpr_eq(features:AttachAllCount(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
		and cmpr_lt(features:RepuserAge(),3, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),1)
        and cmpr_eq(features:Subject8bitOnly(), 1)
    	and cmpr_btw(features:UserAge(), 1,10, true)
		and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:LinesToWordsRatio(), 20)
        and cmpr_btw(features:WordCount(), 14, 35)
		and wclass:NOREALNAME_TO()
    then
        SetPSAR('ar3319')
 	end    
    
	--ar3320
    --fe / #zarabotok drive
	--30.12.16 / r.sulimov(sokolik)
    --fc_fb_usage7
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "fe")
	    and not features:IsPddUser()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 100, 10000)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_lt(features:Karma(), 0, true)
        and cmpr_btw(features:UrlNormCount(),1,3, true)
	    and cmpr_gt(features:WhitespaceToWordRatio(), 180)
        and cmpr_btw(features:HtmlTagCount(), 1, 20)
        and (wclass:YEAR_IN_FROM_LOCAL_PART()
    		or wclass:AUTOREG())
        and (StrMatch(features:UrlsRawHashString(),".drive.google.com/open")
            or StrMatch(features:UrlsRawHashString(),"cloud.mail.ru/public/")
    		or wclass:IP_URL())
    then
        SetPSAR('ar3320',true)
    end
    
    --ar3321
	--mxs_mbp / #pohudeika #gmail.com
	--14.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 200, 3000)
    	and cmpr_eq(features:FromDomain(), 'gmail.com')
		and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 2, 5, true)
    	and cmpr_btw(features:TextLines(), 3, 10, true)
    	and cmpr_btw(features:WordCount(), 9, 40, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and wclass:AUTH_SENDER_WITH_BAD_REP()
    	and UrlsMatchStr('radikal.ru')
    	and (UrlsMatchStr('tmweb.ru') or UrlsMatchStr('tw1.su'))
	then
		SetPSAR('ar3321')
	end

    --ar3322
    --smtp / #pdd
    --14.12.16 / r.sulimov
    --sc_sb_usage7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp")
        and features:IsPddUser()
        and cmpr_gt(features:ImgNum(), 1)
        and cmpr_btw(features:MsgSize(),50000, 1000000)
        and cmpr_gt(features:MultipartNum(), 5)
        and cmpr_lt(features:RepuserAge(), 8, true)
        and cmpr_btw(features:TextLines(),3,10, true)
        and cmpr_gt(features:UrlNormCount(), 1, true)
        and cmpr_btw(features:HtmlTagCount(), 20, 80)
        and cmpr_gt(features:WhitespaceToWordRatio(), 1000)
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar3322')
    end
     
    --ar3323
    --fe / #usloviya
    --13.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:AUTOREG() or wclass:NAME_IN_BODY() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_btw(features:UrlNormCount(), 0, 4 , true)
        and cmpr_lt(features:DotCount(), 7, true) 
        and cmpr_btw(features:UserAge(), 10, 100, true)
        and cmpr_btw(features:WordCount(), 15, 60)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and cmpr_gt(features:LinesToWordsRatio(), 30)
        and (cmpr_gt(features:HtmlTags()['br'], 20) or cmpr_eq(features:NoSubject(), 1) or TermsMatchGroup(18156,100))
        and wclass:FE_NO_TO()
    then
        SetPSAR('ar3323')
    end
    
    --ar3324
    --fe / #iso
    --14.12.16 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:RepuserAge(), 0, 30, true)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 30)
        and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_gt(features:AbfCountriesPerMonthNum(), 1)
        and StrMatchRe(features:FromRealName(), regex([[^[à-ÿ¸]{2,}\s[à-ÿ¸]{2,}$]]))
        and TermsMatchGroup(18155,100)
    then
        SetPSAR('ar3324')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3324')
    end

    --ar3325
    --fe / #zarabotok #pdf
    --26.12.16 / a.sokolov
    if not IsBlocked
		and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 100000)
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_eq(features:MultipartNum(), 5)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and (cmpr_eq(features:NoRealNameTo(), 1)
    		or wclass:NO_TO())
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 20)
        and cmpr_btw(features:RepuserAge(), 0, 2, true)
		and (cmpr_lt(features:DomainRepipAge(), 30, true)
    		or mrasRepHasSendingGap(features:FromDomain(), 3, 30, 10, 1)
			or wclass:USER_AGE_1())
    	and StrMatchRe(features:PartsFilenames(),regex([[^(?i)[a-z0-9]+\.pdf$]]))
    then
        SetPSAR('ar3325')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3325')
    end
     
    --ar3326
    --fe / #flud #only_text
    --15.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:FilesExtensions(), '.pdf')
        and cmpr_btw(features:MsgSize(), 1000, 1000000)
        and cmpr_btw(features:WordCount(), 100, 500)
        and cmpr_btw(features:TextLines(), 20, 100) 
    	and cmpr_btw(features:HtmlTagCount(), 10, 100, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_eq(features:UrlCount(), 0)
        and cmpr_eq(features:UrlCountWithoutMailRu(), 0)
        and cmpr_eq(features:Words7bitRatio(), 0)
        and cmpr_eq(features:NoRealNameTo(), 1)
    	and cmpr_gt(features:SubjectWordCount(), 0)
        and cmpr_gt(features:AbfCountriesPerMonthNum(), 3, true)
        and cmpr_gt(features:HtmlTags()['br'], 10)
    then
        SetPSAR('ar3326')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3326')
    end

    --ar3327
    --fe / #plp7
	--14.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 10000)
		and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 30)
		and cmpr_eq(features:UrlNormCount(), 2)
        and not wclass:RUSSIAN_FROM_REALNAME()
    	and UrlsMatchStr('.plp7.ru')
    then
        SetPSAR('ar3327')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3327')
    end
    
    --ar3328
    --fe / #prisoedinyaisya
    --14.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 8000)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_lt(features:RepuserAge(), 3, true)
        and cmpr_gt(features:UserAge(), 10, true)
        and cmpr_btw(features:WordCount(), 50, 400)
        and cmpr_gt(features:HtmlTags()['br'], 10)
        and wclass:FE_NO_TO()
        and wclass:NO_SUBJECT()
    then
        SetPSAR('ar3328')
    end
     
    --ar3329
    --fe / #govnosetki fe
    --14.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
     	--and (cmpr_lt(features:Karma(), 0, true) or cmpr_lt(features:RepuserAge(), 10, true))
        and TermsMatchGroup(18157,100)
    then
        SetPSAR('ar3329')
    end
     
	--ar3330
	--mxs_other / #efremov
	--15.12.16 / r.kulpin
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and UrlsMatchStr('list-manage.com')
    	and features:SPF() == "pass" 
    	and features:EnvelopeFromDomain() == "timeweb.ru"
	then
		SetPSAR('ar3330')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar3330' )
	end
    
    --ar3331
    --fe / #govnosetki fe
    --15.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_gt(features:RepIpComplRatioByLastWeek(), 50)
    then
        SetPSAR('ar3331', true)
    end
    
    --ar3332
    --mxs_other / #zarab
    --15.12.16 / r.kulpin
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other" 
    	and cmpr_btw(features:MsgSize(), 500, 3000, true) 	   		   	
		and features:HasTextOnly() == 1	
    	and cmpr_eq(features:MultipartNum(), 3)
    	and features:NoRealNameTo() == 1
  		and cmpr_eq(features:UrlNormCount(), 1)  
    	and cmpr_btw(features:WordCount(), 10, 100, true)
    	and cmpr_btw(features:TextLines(), 8, 30, true)
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:NEW_DKIM_7_DAYS()
    	and (wclass:FROM_MATCHES_WITH_URL_AND_EXTERNAL_IMAGE() or wclass:FROM_MATCHES_WITH_URL_WITH_IMAGE_URL())
	then      	
        SetPSAR('ar3332')     	
    end
    
	--ar3333
	--mxs_other / #efremov
	--15.12.16 / r.kulpin
    if  features:RcvSrcExt() == "mxs_other"
        and not StrMatch(features:EnvelopeFrom(), 'bounce-mc.us') 
        and not StrMatch(features:EnvelopeFromDomain(), features:FromDomain())
        and not features:DkimDomain()
        and features:SPF() == 'pass'
        and UrlsMatchStr('list-manage')
		and SFKD('ar3333', features:To(), 60, 5)
    then
        SetPSAR('ar3333')
    end
     
    --ar3334
    --fe / #prostitutki | dogovornyaki
    --15.12.16 / r.sulimov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and cmpr_gt(features:RepuserMissedRatio(), 10) 
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:REPLY_SUBJECT()
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 3600)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 5)
        then
            SetPSAR('ar3334', true)
            LogMsgToHadoop('dstat_sulimov_log', '#ar3334')
        end
    end
    
    --ar3335
	--mxs_mbp / #pohudeika #gmail.com 
	--15.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 200, 5000)
    	and cmpr_eq(features:FromDomain(), 'gmail.com')
		and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 2, 5, true)
    	and cmpr_btw(features:TextLines(), 3, 40, true)
    	and cmpr_btw(features:WordCount(), 9, 300, true)
    	and cmpr_eq(features:NoRealNameTo(), 1)
    	and wclass:AUTH_SENDER_WITH_BAD_REP()
    	and TermsMatchGroup(18159, 100)
    	and (UrlsMatchStr('drive.google.com/', 1) or UrlsMatchStr('.blogspot.com/', 1))
	then
		SetPSAR('ar3335')
	end
    
    --ar3336
	--fe / #attach #virus
	--15.12.16 / minina
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(),'fe')
    	and not features:IsPddUser()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_btw(features:MsgSize(), 10000, 500000)
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:AttachAllCount(), 1)
    	and cmpr_eq(features:AttachOfficeCount(), 0)
    	and cmpr_eq(features:AttachArchiveCount(), 0)
       	and cmpr_eq(features:UrlNormCount(), 1)
    	and cmpr_btw(features:RepuserAge(), 0, 3, true)
    	and cmpr_lt(features:HtmlTagCount(), 30)
    	and wclass:CT_ENCODED_FILENAME()
    	and wclass:NEW_IP_30_DAYS()
    then
    	SetPSAR('ar3336')
    end
    
    --ar3337
    --smtp / #text #pdd
    --15.12.2016 / minina
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 500, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7) 
        and cmpr_lt(features:RepuserAge(), 2, true)
        and cmpr_eq(features:HtmlTagCount(), 0)
    	and wclass:MS_MAILER()
    	and wclass:WORDS_MIXED_RATIO()
    then
        SetPSAR('ar3337') 
    end
    
    --ar3338
    --fe / #china_casino
	--16.12.16 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_gt(features:MultipartNum(), 3, true)
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_lt(features:Karma(), 0, true)
    	and (wclass:NO_TO()
    		or wclass:CJK_UNIFIED_IDEOGRAPHS())
		and wclass:ONLY_7BIT_WORDS()
    then
        SetPSAR('ar3338')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3338')
    end
    
	--ar3339
	--mxs_other / #efremov
	--16.12.16 / r.kulpin
    if  features:RcvSrcExt() == "mxs_other"
        and not StrMatch(features:EnvelopeFromDomain(), Get2ndLevelDomain(features:FromDomain())) 
        and not features:DkimDomain()
        and features:SPF() == 'pass'
    	and features:FromRealName()
		and StrMatch(features:FromRealName(), 'frem')
    	and SFKD('ar3339', {features:FromRealName(), features:SrcIp()}, 60, 10)
	then
		SetPSAR('ar3339')
    	LogMsgToHadoop( 'dstat_kulpin_log', '#ar3339' )
	end 
    
    --ar3340
	--fe / #matryoshki
	--16.12.16 / a.lis	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'fe'
    	and cmpr_btw(features:MsgSize(), 100, 1000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:UrlCount(), 0)
    	and cmpr_lt(features:Karma(), 0)
    	and features:UserCreateTime()
		and features:UserCreateTime().days
        and features:UserCreateTime().days <= 3
    	and cmpr_eq(features:RepuserAge(), 1)
    	and cmpr_gt(features:RcptNum(), 6, true)
    	and wclass:NEW_IP_15_DAYS()
    	and wclass:SUBJECT_LONGER_THEN_BODY()
    	and wclass:SUBJECT_ALL_CAPS()
    	and wclass:CAPS_IN_FROM_REAL_NAME()
    	and TermsMatchGroup(18165, 100)
  	then
    	SetPSAR('ar3340')
    end
    
    --ar3341
    --fe / #low recipients
    --16.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RcptNum(), 2, true)
        and cmpr_gt(features:RepIpComplRatioByLastWeek(), 5)
        and cmpr_lt(features:RepuserMissedRatio(), 2)
    then
        SetPSAR('ar3341', true)
    end
    
    --ar3342
	--mxs_other / #phishing #paypal
	--16.12.16 / a.lis	
 	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
    	and cmpr_btw(features:MsgSize(), 1500, 8000, true)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_eq(features:MsgIdDomainNotEqualFromDomain(), true)
    	and not features:MailRuMxsMsgId() == true
    	and (wclass:FAIL_SPF() or wclass:UNKNOWN_GEO_CODE())
    	and ( (wclass:HAS_X_PHP_SCRIPT() and wclass:IP_REP_GAP_MORE_30_DAYS()) or wclass:W8BIT_NO_CTE_AND_DIFFERENT_FROM_AND_ENVELOPE_FROM())
    	and (wclass:ONLY_7BIT_WORDS() or wclass:W8BIT_NO_CTE())
    	and HeaderMatch('Subject', 'Account')
  	then
    	SetPSAR('ar3342')
    end

    --ar3343
	--mxs_other / #phishing #paypal
	--16.12.16 / a.lis	
 	if features:RcvSrcExt() == 'mxs_other'
    	and wclass:SPF_NOT_PASS()
    	and TermsMatchGroup(18169, 100)
  	then
    	SetPSAR('ar3343', true)
    end
    
    --ar3344
	--mxs_other / #phishing #paypal
	--16.12.16 / a.lis	
 	if features:RcvSrcExt() == 'mxs_other'
    	and not HeaderMatch('From', 'paypal.')
    	and TermsMatchGroup(18169, 100)
  	then
    	SetPSAR('ar3344', true)
    end
    
    --ar3345
	--mxs_esp / #500$
	--17.12.16 / razuvaev
    --addadaee80160151a3d637a66c008ee8 13b3cabd43453f0b3b38744d1b6f6132
	if not IsBlocked
    	and cmpr_eq(features:RcvSrc(), 'mxs')
    	and cmpr_btw(features:MsgSize(), 4000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:NoRealNameTo(),1)
    	and cmpr_eq(features:UrlInListUnsubscribe(),"emlportal.com")
        and TermsMatchGroup(18170,100)
        and not StrMatch(features:FromDomain(), features:EnvelopeFromDomain())  
    then
    	SetPSAR('ar3345')
    end

    --ar3346
    --mxs_other / #copy #zaim
    --17.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 500, 2000, true)
    	and features:HasTextOnly() == 1
    	and features:NoRealNameTo() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true) 
    	and features:HasShortUrl() == 1
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))
    	and wclass:WORDS_MIXED_RATIO()
    	and wclass:SUBJECT_MIXED_BADRATIO()
    	and TermsMatchGroup(18171, 100)
	then     	
        SetPSAR('ar3346')
    end 

    --ar3347
    --fe / #trashurl
    --17.12.16 /m.guryanov 
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 400, 1000)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1    	   	
		and features:NoRealNameTo() == 1	
    	and features:IsAutoreg()
    	and cmpr_lt(features:Karma(), 0, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:UrlNormCount() == 1    	
    	and	features:UrlCountWithoutMailRu() >= 1
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 10, true)
    	and	features:NoSubject() == 1
    	and cmpr_lt(features:RepuserAge(), 2, true)
    	and cmpr_lt(features:WordCount(), 10, true)
    	and UrlsMatchStr('google-analytics.com/collect', 1)
	then      	
        SetPSAR('ar3347')
    end 
    
    --ar3348
    --fe / #casino
    --17.12.16 / m.guryanov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100,500000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_eq(features:MultipartNum(),3)
    	and (cmpr_eq(features:UrlNormCount(), 0) or cmpr_eq(features:HasShortUrl(), 1))
        --and (cmpr_lt(features:WordCount(),100) or (features:HasTextOnly() and cmpr_gt(features:WordCount(),500))) 
        --and cmpr_lt(features:Word7bitCount(),20)
        and cmpr_btw(features:WordOtherCount(),2,50, true)
        and cmpr_btw(features:TextLines(), 3, 70) 
    	and cmpr_gt(features:HtmlTagCount(), 5, true)
    	and features:NoRealNameTo() == 1
        and (wclass:FE_TOR_IP() or (features:Subject7bitOnly() == 1 
            and features:OneWordSubject() == 1 and wclass:RUSSIAN_FROM_REALNAME()))
    	and (wclass:HAS_2_DAYS_GAP() or wclass:USER_SENDING_MORE_THAN_20_PER_DAY() or wclass:SUSP_FROM_LOCALPART_MAILRU() or wclass:SUBJECT_7BBIT_AND_BODY_8BIT())
    	and (TermsMatchGroup(18172, 100) or wclass:SOURCE_IP_IN_XBL_AND_SOURCE_IP_IN_DNSBL_AND_MSGL_BAD_SPAM_RATIO() or wclass:COMPL_RATIO_BY_LAST_HOUR_MORE_THAN_15())
    	and (cmpr_lt(features:RepuserAge(), 100, true) or StrMatchRe(features:From(), regex([[^.*\d.*@]])) or wclass:ABF_FAST_CITY_CHANGE())
    then
        SetPSAR('ar3348')
    end

    --ar3349
    --mxs_other / #oblysenie #trash #manynumbers #sexyparser
    --17.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 3000, 12000, true)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 5, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and (features:DkimDomainRepipAge() == 10000 or 
         cmpr_lt(features:DkimDomainRepipAge(), 10, true))
    	and cmpr_gt(features:NumberCount(), 300, true)    	
        and cmpr_btw(features:WordCount(), 1, 20, true)
    	and wclass:SUBJECT_LONGER_THEN_BODY()
    	and wclass:SUBJECT_MIXED_BADRATIO()
    	and wclass:HAS_HEADER_DKIM_AND_NOT_AUTH_RESULTS()
	then     	
        SetPSAR('ar3349')
    end 

    --ar3350
    --mxs_other / #sber #zarabotok #ukrasheniya
    --17.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 50000, 100000, true)
    	and features:HasNoAttach() == 1
        and cmpr_btw(features:ImgNum(), 1, 4, true) 
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:DkimDomainRepipAge() == 10000   	
        and cmpr_btw(features:WordCount(), 10, 150, true)
    	--and (features:FromDomain() == "sberbank.ru" or 	features:FromDomain() == 'alfabank.ru')
    	and (features:SPF() == "fail" or features:SPF() == 'softfail')
    	--and (wclass:GA_URLS() or wclass:GQ_URLS())
    	and HeaderMatchRe('Received', regex([[^by\s(?:[a-z\d_-]+\.?){2,5}\sid\s[a-z\d]+\sfor\s\<[a-z\d_\.-]+@(?:mail|bk|list|inbox)\.ru\>;\s.*\(envelope-from\s\<.*\>\)]]))
	then     	
        SetPSAR('ar3350')
    end 

    --ar3351
    --mxs_other / #znakomstva #yandex #vbei_v_googl
    --17.12.16 /m.guryanov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 100, 200000)
        and features:HasTextOnly() == 1
    	--and features:IsFromYandex()
    	and features:UrlNormCount() == 0
        and features:NoRealNameTo() == 1
    	and (features:NoUserAgent() == 1 or wclass:INVALID_DATE())
    	and cmpr_btw(features:SubjectLen(), 1, 50, true)
    	--and cmpr_btw(features:SubjectNumbersCount(), 1, 15, true)  
        and (wclass:RELAY_RECEIVED_FROM_FREEMAIL() or wclass:EMPTY_FROM())
    	and TermsMatchGroup(18174, 100)
    then        
        SetPSAR('ar3351') 
    end       

   	--ar3352
    --fe / #zarabotok #urlspam
    --17.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 200, 5000)
    	and not features:IsPddUser()
    	and features:HasTextOnly() == 1     
		and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and cmpr_lt(features:Karma(), 0, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true) 
    	and cmpr_gt(features:MultipartNum(), 3, true)    	   	    			
    	and cmpr_lt(features:WordCount(), 50, true)	    	
    	and cmpr_btw(features:TextLines(), 1, 10, true) 
    	and (features:OneWordSubject() == 1 or cmpr_lt(features:SubjectLen(), 20, true)) 
  		and TermsMatchGroup(18173, 100)
	then      	
        SetPSAR('ar3352')
    end 

    --ar3353
    --fe / #zarabotok #urlspam
    --17.12.16 /m.guryanov
    if not IsBlocked
		and features:RcvSrcExt() == "fe"            
		and cmpr_btw(features:MsgSize(), 600000, 1000000)
    	and not features:IsPddUser()
    	and features:HasAttach() == 1 
        and features:ImgNum() == 0
		and features:UrlNormCount() == 1 
    	and cmpr_gt(features:UrlCountWithoutMailRu(), 1, true)
    	and features:UserCreateTime()
    	and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 7, true) 
    	and cmpr_gt(features:MultipartNum(), 3, true)    	   	    			
    	and cmpr_lt(features:WordCount(), 50, true)	    	
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and features:AttachMultimediaCount() >= 1     
    	and StrMatchRe(features:FromLocalPart(), regex([[[A-Za-z]{3,12}\d{2,5}[a-z]{1,5}[a-zA-Z\d]*]]))
	then      	
        SetPSAR('ar3353')
    end 

    --ar3354
    --mxs_sender / #credit #kredit #vebinar #seminar
    --17.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_sender" 
    	and cmpr_btw(features:MsgSize(), 3000, 12000, true)
    	and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 1
    	and cmpr_gt(features:MultipartNum(), 3, true) 
 		and cmpr_gt(features:HtmlTagCount(), 50, true)
        and cmpr_gt(features:WordCount(), 150, true)
    	and StrMatchRe(features:FromDomain(), regex([[^[a-z]+\-t(?:v|w)\.ru$]])) 
    	and TermsMatchGroup(18175, 100)
	then     	
        SetPSAR('ar3354')
    end 

	--ar3355
	--mxs_mbp / #znakomstva #yandex #vbei_v_googl #zaebalisukiblya
	--27.12.16 /m.guryanov(sokolik)(zubr)(r.kulpin)
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"   
		and cmpr_btw(features:MsgSize(), 80, 75000)
		and features:HasTextOnly() == 1
		and features:UrlNormCount() == 0
		and (features:NoRealNameTo() == 1 or wclass:UNDISCLOSED())
		and cmpr_btw(features:SubjectLen(), 0, 50, true) 
		and cmpr_lt(features:LinesToWordsRatio(), 30)
		and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_lt(features:HtmlTagCount(), 10, true)
		and cmpr_btw(features:WordCount(), 3, 300, true)
		and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
		and (wclass:HAS_HDR_ORGANIZATION() 
			or (wclass:NO_HTML_TAG() and wclass:NO_BODY_TAG()) 
			or wclass:RECEIVED_LAN_1())
   		and (cmpr_lt(features:WordCount(), features:DotCount() ) or wclass:TEXT_TO_TERM_RATIO_MORE_THAN_49())
		and HeaderMatchRe('Received', regex([[by\ssmtp\d{1,2}[a-z]{1,2}\.mail\.yandex\.net]]))
	then        
		SetPSAR('ar3355') 
	end 

    --ar3356
    --smtp / #zarabotok
    --17.12.16 /m.guryanov
      if not IsBlocked
          and features:RcvSrcExt() == "smtp"
          and cmpr_btw(features:MsgSize(), 100000, 300000)
          and features:HasTextOnly() == 1 
          and features:UrlNormCount() == 1
          and features:OneWordSubject() == 1
          and features:NoUserAgent() == 1
          and features:UserCreateTime()
          and features:UserCreateTime().days
          and cmpr_lt(features:UserCreateTime().days, 7, true)
          and cmpr_lt(features:Karma(), 0, true)        
          and cmpr_gt(features:TextLines(), 100, true)
          and cmpr_btw(features:WordCount(), 100, 400, true)
          and cmpr_gt(features:NumberCount(), 1000, true)
          and wclass:CT_IN_BODY()
          and wclass:NO_HTML_TAG() 
          and wclass:NO_BODY_TAG()
      then 
          SetPSAR('ar3356')         
      end
    
    --ar3357
    --mxs_mbp / #orange wanadoo #vbei_v_googl #zaebalisukiblya
    --17.12.16 /razuvaev
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 200, 600000)
        and features:HasTextOnly() == 1
      	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr' or features:AuthenticatedDomain() == 'mail.com')
        and cmpr_lt(features:LinesToWordsRatio(),35)
        and features:NoRealNameTo() == 1
        and (features:NoUserAgent() == 1 or cmpr_btw(features:SubjectNumbersCount(), 1, 15, true))     
      --  and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and (wclass:SPF_NOT_PASS_FROM_MBP() or features:AuthenticatedDomain() == 'mail.com')
    then        
        SetPSAR('ar3357') 
    end  
   
    --ar3358
    --mxs_other / #seks #pills
    --18.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 400, 2000, true)
    	and features:HasTextOnly() == 1
    	and features:UrlNormCount() == 0
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and not features:DkimDomain()   	
        and cmpr_btw(features:WordCount(), 1, 25, true)
    	--and (features:NoBodyTag() == 1 or wclass:WORDS_MIXED_RATIO() 
    		--or wclass:TERMS_PRIVETY())
    	and wclass:HELO_IN_FROM()  
  		and features:FromRealName() == 'Ìàêñ'
	then     	
        SetPSAR('ar3358')
    end 

    --ar3359
    --mxs_other / #priveti #short_url
    --18.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 20, 200, true)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and features:HasShortUrl() == 1
    	and features:MultipartNum() == 1
    	and not features:DkimDomain()   	
        and cmpr_btw(features:WordCount(), 1, 10, true)
    	and features:HtmlTagCount() == 0
    	and wclass:WHITESPACE_SUSP_RATIO()
    	and wclass:NEW_IP_30_DAYS()
	then     	
        SetPSAR('ar3359')
    end 

    --ar3360
    --mxs_other / #trocki #zarab #mnogo urlov
    --19.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 10000, 80000)
    	and cmpr_eq(features:HasTextOnly(),1)
    	and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_gt(features:UrlCount(), 250)
        and cmpr_eq(features:NoRealNameTo(), 1)
		and cmpr_lt(features:TextLines(), 5, true)    
        and (wclass:FAKE_ATTACH() or wclass:NEW_IP_7_DAYS())
    	and wclass:EML_HELO()
    then
        SetPSAR('ar3360')
    end
    
    --ar3361
    --fe / #test fe
    --19.12.16 / r.sulimov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RcptNum(), 5, true)
        and (cmpr_gt(features:RepuserMailCmplRatioBy30Days(), 5) or cmpr_gt(features:RepIpComplRatioByLastWeek(), 35))
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and not TermsMatchGroup(18192,100) -- gruppa dlya isklyu4enii
        and wclass:AUTOREG()
    then
        SetPSAR('ar3361')
    end

    --ar3362
    --fe / #many urls
    --17.12.16 /r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 10000, 500000)
        and cmpr_gt(features:ImgNum() , 1, true)
        and cmpr_lt(features:Karma(), 0, true)
        and (cmpr_gt(features:RcptNum(), 5, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_gt(features:UrlNormCount(), 10)
        and cmpr_btw(features:UserAge(), 100, 300, true)
        and cmpr_btw(features:WordCount(), 200, 2000)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
        and cmpr_gt(features:HtmlTagCount(), 200)
        and cmpr_gt(features:LinesToWordsRatio(), 20)
        and cmpr_gt(features:HtmlTags()['br'], 20)
        and cmpr_gt(features:HtmlTags()['div'], 40)
        and wclass:HAS_TAG_SCRIPT()
	then      	
        SetPSAR('ar3362')
    end 
    
    --ar3363
    --mxs_other / #zarabotok 
	--19.12.16 / r.kulpin
    --fc_fb_usagemo7
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 2000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:TextLines(), 2)
		and cmpr_eq(features:UrlNormCount(), 0)
		and cmpr_eq(features:HtmlTagCount(), 0)
		and cmpr_eq(features:MultipartNum(), 3)
    	and wclass:HELO_IN_FROM()
    	and wclass:DISCOUNT_IN_SUBJECT()
    	and HeaderMatchRe('Message-Id', regex([[^\<\d{8,40}\@]]))
    then
        SetPSAR('ar3363')
    end

    --ar3364
    --mxs_other/ #70sale
    --19.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 50000, 500000)
        and cmpr_gt(features:ImgNum(), 1)
    	and cmpr_eq(features:AttachAllCount(), 0)
        and cmpr_gt(features:MultipartNum(), 5, true)
        and wclass:DIFFERENT_RES_IMAGES()
    	and wclass:RANDOM_CASE_IN_IMAGE_NAME()
        and wclass:SUSP_IMAGE_NAME_3()
    	and HasHeader('Date')
		and not HeaderMatch('Date', '+0300') 
        and features:FromRealName()
        and cmpr_gt(#features:FromRealName(), 3, true)
    	and StrMatch(features:EnvelopeFromDomain(), string.lower(features:FromRealName()))
    then 
        SetPSAR('ar3364')
    end

    --ar3365
    --mxs / #zarabotok #sparkpostmail 
    --19.12.16 / r.kulpin
    if not IsBlocked
        and features:RcvSrcExt() == 'mxs_other'
        and features:MsgSize() >= 100000 and features:MsgSize() <= 170000
    	and cmpr_btw(features:ImgNum(), 1, 3, true)
    	and features:AttachAllCount() == 0
        and features:UrlNormCount() == 2
        and features:UrlsTextSize() >= 150
        and features:TextLines() >= 10 and features:TextLines() <= 30
        and features:WordCount() >= 300 and features:WordCount() <= 700
        and (wclass:NEW_DKIM_15_DAYS() or wclass:NEW_FROMDOMAIN_15_DAYS())
        and wclass:DIFFERENT_REPLY_TO_AND_FROM()
        and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and UrlsMatch(regex([[^go\.sparkpostmail(\d{1,3})?\.com]]),1)
    then
        SetPSAR('ar3365')
    end
    
    --ar3366
	--mxs_mbp / #yandex #office 
	--19.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 2500, 15000, true)
		and cmpr_eq(features:HasTextOnly(), 1)
    	and (cmpr_eq(features:HasDifferentFromAndReply(), 1)
        	or cmpr_eq(features:Subject7bitOnly(), 1))
    	and cmpr_btw(features:TextLines(), 20, 200)
    	and cmpr_btw(features:WordCount(), 40, 400)
    	and (wclass:OTHER_IP_IN_DNSBL() or wclass:IP_REP_GAP_MORE_30_DAYS())
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    	and (wclass:MORE_5_EMAILS_IN_TO() or wclass:NO_TO())
    then
		SetPSAR('ar3366')
	end

	--ar3367
	--mxs_other / #seminar #oblisenoe
	--19.12.2016 / r.kulpin
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "mxs_other") 		
        and cmpr_btw(features:MsgSize(), 5000, 15000)
        and cmpr_eq(features:MultipartNum(), 4)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_btw(features:TextLines(), 3, 20, true)
        and cmpr_btw(features:WordCount(), 5, 20)
    	and cmpr_gt(features:TermTextSize(), 4000)
        and cmpr_btw(features:Word7bitCount(),1,10,true)
        and wclass:PTR_ERROR()
        and wclass:IP_IN_SPAMHAUS_AND_TO_MISMATCH_ENVELOPE_TO()
        and wclass:SUSP_LINES_TO_WORD_RATIO()
	then
		SetPSAR('ar3367')
	end
    
    --ar3368
    --mxs_mbp / #znakomstva #yandex #vbei_v_googl #zaebalisukiblya
    --19.12.16 /zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"   
		and cmpr_btw(features:MsgSize(), 10000, 300000)
		and features:HasTextOnly() == 1
		and features:IsFromYandex()
		and features:UrlNormCount() == 0
		and features:NoRealNameTo() == 1
		and cmpr_btw(features:SubjectLen(), 1, 50, true)
		and cmpr_btw(features:TextLines(), 1, 8, true) 
		and cmpr_lt(features:HtmlTagCount(), 5, true)
		and features:WordCount() >= 30
		and cmpr_lt(features:LinesToWordsRatio(), 10)
		and HeaderMatchRe('Received', regex([[by\ssmtp\d{1,2}[a-z]{1,2}\.mail\.yandex\.net]]))
	then        
		SetPSAR('ar3368') 
	end
    
    --ar3369
	--mxs_mbp / #yandex #office 
	--19.12.16 / zubr
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
		and cmpr_btw(features:MsgSize(), 2000, 30000, true)
		and cmpr_eq(features:HasTextOnly(), 1)
    	and wclass:MS_MAILER_WITH_ONE_RECEIVED()
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    	and wclass:DKIM_FAIL()
		and features:FromRealNameLen() >= 3 and features:FromRealNameLen() <= 8
    then
		SetPSAR('ar3369')
	end
    
	--ar3370
	--mxs_sender / #novostroiTV
	--19.12.2016 / zubr 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_sender" or features:RcvSrcExt() == "mxs_esp")
		and (mrasRepHasSendingGap(features:FromDomain(), 3, 20, 10, 50) or features:DomainRepipAge() <= 7)
		and HasHeader('DKIM-Signature')
		and HeaderCount('DKIM-Signature', 1) >= 2
	then
		SetPSAR('ar3370', true)
	end

    --ar3371
	--mxs_mbp / #spam #fakembp
	--19.12.16 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"
		and features:MsgSize() >= 500
		and features:HasTextOnly() == 1
    	and features:UrlCountWithoutMailRu() == 1
		and features:IsFromMailru() == true
    	and wclass:SPF_NOT_PASS_FROM_MBP()
    	and (wclass:DKIM_FAIL() or features:DkimDomainRepipAge() == 10000)
    then
		SetPSAR('ar3371',true)
	end
    
    --ar3372
    --mxs_other / #zarabotok 
	--19.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:MultipartNum(), 1, 3, true)
        and cmpr_eq(features:TextLines(), 3)
		and cmpr_eq(features:UrlNormCount(), 2)
    	and wclass:CC_URLS()
    	and wclass:SHORT_ENGLISH_MESSAGE()
    	and wclass:SHORT_BOUNDARY()
    	and wclass:IP_IN_HELO()
    then
        SetPSAR('ar3372')
    end
    
    --ar3373
    --mxs_mbp #ddos_test
    --20.12.16 / a.sokolov
    if  cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        --and (features:FromDomain() =='mail.ru' 
        	--or features:FromDomain() =='list.ru' 
            --or features:FromDomain() =='bk.ru' 
            --or features:FromDomain() =='inbox.ru'
    		--or features:FromDomain() =='mail.ua')
        and features:IsFromMailru()
    	and not features:DkimDomain()
	then
		local repIpSpamRatio = getRepHits(features:SrcIp(), 0, 604800).spam_ratio
    	if repIpSpamRatio > 20 then 
    			LogMsgToHadoop('dstat_sokolik_log', '#ar3373')
        end
        InsertToCB("ar3373")
        CarbideSendStatsSum('rules_analyst','ar3373',1)
        --SetRepipFlagOnKey(features:SrcIp(), 0, Repip.REPIP_FLAG_TRY_AGAIN_SOFT, 1200, nil, 5, 'ar3373')   
	end

    --ar3374
    --fe / #test autoreg
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:UserAge(), 10)
        and cmpr_gt(features:RcptNum(), 15, true)
        and StrMatchRe(features:From(), regex([[^[a-z]{6,}19[7-9]{1}[0-9]{1}[a-z]{1}.{2,3}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar3374')
    end
     
    --ar3375
    --fe / #test cities
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:UserAge(), 20)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
    then
        SetPSAR('ar3375', true)
    end
    
    --ar3376
    --fe / #test spam hits by day
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RepuserMailSpamHitsByDay(), 3, true)
    then
        SetPSAR('ar3376', true)
    end
    
    --ar3377
    --fe / #test fast out without recipients
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and cmpr_gt(features:RepuserTotalHitsBy5Min(), 5, true)
    then
        SetPSAR('ar3377', true)
    end
    
    --ar3378
    --fe / #test cmpl ratio
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and cmpr_gt(features:RepuserMailCmplRatioBy30Days(), 5, true)
    then
        SetPSAR('ar3378', true)
    end
    
    --ar3379
    --fe / #test 
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RcptNum(), 1)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and cmpr_gt(features:RepuserMailCmplRatioBy30Days(), 5, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
    then
        SetPSAR('ar3379')
    end
    
    --ar3380
    --smtp /  #pdd
    --20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "smtp") 
        and features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 2000, 10000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_gt(features:HtmlTagCount(), 20)
    	and wclass:LASTHELO_WITHOUT_DOMAIN()
    	and wclass:SUBJECT_MIXED_BADRATIO()
        and wclass:TO_LOCALPART_IN_REALNAME()
        and StrMatch(features:UrlsRawHashString(),"/index")
    then
        SetPSAR('ar3380') 
    end
    
    --ar3381
    --fe /  #zarabotok
    --20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 5000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_gt(features:UserAge(), 50, true)
        and wclass:BAD_KARMA()
    	and not wclass:RUSSIAN_FROM_REALNAME()
        and StrMatch(features:UrlsRawHashString(),".ru")
    then
        SetPSAR('ar3381') 
    end
    
    --ar3382
    --fe / #pizdec vsem nigeram (ulu mne)
	--20.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and not wclass:RUSSIAN_FROM_REALNAME()
        and TermsMatchGroup(18185,100)
    then
        SetPSAR('ar3382', true)
        LogMsgToHadoop('dstat_sulimov_log', 'ar3382')
    end
    
    --ar3383
    --fe /  #zarabotok php
    --21.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not wclass:EXCEPTIONS()
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 400, 2000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:UrlNormCount(),1, 3, true)
        and cmpr_lt(features:RepuserAge(), 10, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true)
        and wclass:NAME_IN_BODY()
    	and wclass:PHP_URL()
        and wclass:SUSP_LINES_TO_WORD_RATIO()
    then
        SetPSAR('ar3383') 
    end
    
    --ar3384
    --mxs_other / #buhgalter
    --21.12.2016 / r.kulpin
    if not IsBlocked
        and (features:RcvSrcExt() == "mxs_other" or features:RcvSrcExt() == "mxs_mbp")
		and features:MsgSize() >= 20000 and features:MsgSize() <= 80000
		and features:HasNoAttach() == 1
		and features:MultipartNum() > 3
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
		and features:NoRealNameTo() == 1
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 3, true) 
		and features:TextLines() >= 3 and features:TextLines() <= 10
		and features:WordCount() >= 5 and features:WordCount() <= 30
        and wclass:FAKE_ATTACH()
    then
        SetPSAR('ar3384')
    end

	--ar3385
	--mxs_sender / #unisender #efremov
	--21.12.16 /m.guryanov 
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_sender" or features:RcvSrcExt() == "mxs_esp")
		and features:MsgSize() >= 5000 and features:MsgSize() <= 50000 
		and features:HasTextOnly() == 1 
		and features:ExternalImgNum() >= 1
		and features:NoRealNameTo() == 1
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 7
		and features:WordCount() >= 50
		and features:DotRatio() <= 1
    	and cmpr_eq(features:EmailsCountInBody(), 0)
    	and (cmpr_eq(features:EngRealNameFrom(),1) or cmpr_eq(features:FromRealNameWordCount(), 1))
    	and (cmpr_lt(features:DomainRepipAge(), 5) or mrasRepHasSendingGap(features:FromDomain(), 3, 20, 10, 50))
		and HasHeader('DKIM-Signature')
		and HeaderCount('DKIM-Signature', 1) >= 2
    	and HeaderMatch('Date', '+0000')    	
    	and UrlsMatchStr('usndr.com/marketing/logo-footer2.png', 1)     	
	then
		SetPSAR('ar3385')
	end
    
	--ar3386
	--mxs_other / #efremov
	--22.12.16 / r.kulpin
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 100000 
    	and features:ImgNum() == 1
    	and features:AttachAllCount() == 0
		and (wclass:CT_IN_BODY() or wclass:NEW_IP_7_DAYS() or wclass:MULTIPLE_SLASH_IN_RAW_URL())
		and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
		and (not wclass:HDR_LIST_UNSUBSCRIBE() or wclass:DOMAIN_HAS_DKIM_AND_NOT_HEADER_DKIM() or wclass:IMAGE_WITH_NO_OR_DYN_PTR())
    	and (wclass:FAKE_REPLY_IN_SUBJECT() or wclass:CTE_7BIT_WITH_CONTENT_8BIT() or wclass:INVALID_CHAR_SUBJECT() or wclass:MORE_THAN_N_RCPT())
	then
		SetPSAR('ar3386')
	end
    
    --ar3387
    --fe / #bazi ikra
	--22.12.16 / r.sulimov
    --fc_fb_usagemo7
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "fe")
        and features:MpopUserId()
        and not features:SmtpFeGoodSR()
	    and not features:IsPddUser()
        and features:UserCreateTime()
        and features:UserCreateTime().days
        and (cmpr_lt(features:UserCreateTime().days, 2, true) or cmpr_lt(features:RepuserAge(), 1, true))
	    and cmpr_gt(features:RcptNum(), 10, true)
        and (cmpr_eq(features:UrlNormCount(),0) or StrMatch(features:UrlsRawHashString(),"e.mail.ru"))
        and cmpr_gt(features:Karma(), 1, true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and TermsMatchGroup(17887,20)
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 3600)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 100)
        then
            SetPSAR('ar3387')
            LogMsgToHadoop('dstat_sulimov_log', '#ar3387')
        end
    end

    --ar3388
    --fe / #test autoreg
	--22.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 1, true)
        and cmpr_gt(features:RcptNum(), 10, true)
        and StrMatchRe(features:From(), regex([[^[a-z]{4,}\.[a-z]{4,}@(mail|bk|list|inbox)\.ru$]]))
        and StrMatchRe(features:PartsFilenames(), regex([[\.pdf$]]))
    then
        SetPSAR('aar3388')
    end
    
    --ar3389
    --mxs_other / #vot_eto #cifri_to
    --22.12.16 / r.kulpin
    if not IsBlocked
        and (cmpr_eq(features:RcvSrcExt(), "mxs_other") or cmpr_eq(features:RcvSrcExt(), "imap"))  
    	and cmpr_btw(features:MsgSize(), 500, 5000) 
		and cmpr_eq(features:MultipartNum(), 3) 
    	and cmpr_btw(features:TextLines(), 1, 10, true)
    	and wclass:FROM_HAS_NOT_SPACES_AFTER_ENCODED_REALNAME()
    	and StrMatchRe(features:ToRealName() , regex([[^\d+$]]))  
    then
        SetPSAR('ar3389')
    end
     
 	--ar3390
    --fe / #kitai
    --12.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and cmpr_btw(features:MsgSize(), 500, 15000000)
        and (cmpr_eq(features:UrlEncodedImg(), 1) or cmpr_eq(features:ImgNum(), 1))
    	and cmpr_gt(features:RcptNum(), 3, true)
        and cmpr_lt(features:RepuserAge(),30, true)
    	and wclass:FE_REGIONS_MISMATCH()
    	and wclass:AUTOREG()
        and StrMatchRe(features:Subject(), regex([[4000[0-9]{4}\.com]]))
        and HeaderMatch('X-Envelope-To', 'qq.com')
    then
        SetPSAR('ar3390')
    end
    
    --ar3391
    --fe / #xyz #seminar
    --22.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 20000, 50000)
		and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:HasNoAttach(), 1)
    	and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
    	and cmpr_lt(features:RepuserAge(), 7, true)
        and cmpr_btw(features:LinesToWordsRatio(), 5, 20, true)
    	and wclass:SUSP_UNIC_TO_ALL_HTML_TAG_RATIO()
    	and wclass:XYZ_URLS()
    then
        SetPSAR('ar3391')
	end
    
    --ar3392
    --fe / #test autoreg
	--22.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 1, true)
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_lt(features:Karma(), 0, true)
        and not wclass:RUSSIAN_FROM_REALNAME()
        and StrMatch(features:UrlsRawHashString(),".ru")
        and StrMatchRe(features:From(), regex([[^[a-z]{8,}@(mail|bk|list|inbox)\.ru$]]))
        and StrMatchRe(features:PartsFilenames(), regex([[\.(exe|dll|ttf|xml|ttf|TTF|nls|CCX|fb2|kkl|mid|3gp|swf)$]]))
    then
        SetPSAR('ar3392')
    end
    
    --ar3393
    --fe / #zarabotok #youtube
	--23.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 15000)
    	and cmpr_gt(features:MultipartNum(), 3, true)
		and cmpr_eq(features:AttachOfficeCount(), 1)
		and cmpr_eq(features:ImgNum(), 0)
        and (cmpr_lt(features:RepuserAge(), 5, true)
    		or wclass:AUTOREG()
			or cmpr_gt(features:AbfCitiesPerMonthNum(), 3, true))
        and cmpr_btw(features:TextLines(), 20, 50)
    	and cmpr_lt(features:Word7bitCount(), 3)
		and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
		and cmpr_btw(features:HtmlTagCount(), 1, 40)
    	and (features:NoRealNameTo() or wclass:NO_TO())
    	and wclass:CT_ENCODED_FILENAME()
   		and UrlsMatch(regex([[\.[a-z]{2,3}\/[a-zA-Z0-9]{4,50}\/$]]), 1)
    then
        SetPSAR('ar3393')
    end   
 
	--ar3394
	--mxs_other / #efremov test
	--24.12.16 / r.sulimov
    if not IsBlocked
		and features:RcvSrcExt() == "mxs_other"
		and features:MsgSize() >= 50000
        and cmpr_gt(features:RcptNum(), 20, true)
        and HeaderMatchRe('Received',regex([[helo\=[a-z0-9]{3,}\.[a-z]{2,3}]]))
        and SFKD('ar3394', {features:SrcIp()}, 60, 1000)
	then
		SetPSAR('ar3394', true)
	end
     
    --ar3395
    --fe / #test autoreg
	--24.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 2, true)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:SUBJECT_MIXED_BADRATIO() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_gt(features:HtmlTags()['br'], 10)
        and wclass:HAS_ATTACH()
        and StrMatch(features:UrlsRawHashString(),".ru")
        and (StrMatchRe(features:From(), regex([[^[a-z]{8,}@(mail|bk|list|inbox)\.ru$]])) or StrMatchRe(features:From(), regex([[^[a-z]{8,}19[0-9]{2}@(mail|bk|list|inbox)\.ru$]])))
        and StrMatchRe(features:PartsFilenames(), regex([[\.(exe|dll|ttf|xml|ttf|TTF|nls|CCX|fb2|kkl|mid|3gp|swf|mpeg|mpg|mp4|ttr|pr2|gfe|pr1)$]]))
    then
        SetPSAR('ar3395')
    end
    
	--ar3396
	--mxs_mbp/ #zarabotok #attach #xlsx
	--24.12.16 / r.sulimov
 	if not IsBlocked
        and false
        and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and features:IsFromGoogle()
    	and cmpr_eq(features:HasAttach(), 1)
    	and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_eq(features:DotCount() , 0)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_eq(features:WhitespaceCount(), 0)
        and cmpr_gt(features:WordCount(), 10)
    	and cmpr_eq(features:NoSubject(), 1) 
    	and wclass:ONLY_ONE_XLSX_FILE()
    then
    	SetPSAR('ar3396')
    end
    
    --ar3397
    --mxs_mbp / #orange wanadoo #vbei_v_googl #zaebalisukiblya
    --24.12.16 / r.sulimov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 200, 600000)
        and features:HasTextOnly() == 1
      	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr' or features:AuthenticatedDomain() == 'mail.com')
        and cmpr_gt(features:LinesToWordsRatio(),80)
        and features:NoRealNameTo() == 1
        and (features:NoUserAgent() == 1 or cmpr_btw(features:SubjectNumbersCount(), 1, 15, true))   
        and cmpr_gt(features:WordsOtherRatio(), 50)
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and (wclass:SPF_NOT_PASS_FROM_MBP() or features:AuthenticatedDomain() == 'mail.com')
    then        
        SetPSAR('ar3397') 
    end  

    --ar3398
	--mxs_mbp / #gmail #blogspot #pohudei
	--24.12.16 / m.guryanov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 2000, 10000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'gmail.com')
    	and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and features:NoHtmlTag() == 1
    	and features:NoBodyTag() == 1
    	and features:NoUserAgent() == 1
    	and cmpr_gt(features:Words8bitRatio(), 60)
    	and UrlsMatchStr('.blogspot.', 1)
	then
		SetPSAR('ar3398')
	end

	--ar3399
	--mxs_mbp / #znakomstva #rambler #vbei_v_googl #zaebalisukiblya
	--24.12.16 /m.guryanov
	if not IsBlocked
        and false
		and features:RcvSrcExt() == "mxs_mbp"   
		and cmpr_btw(features:MsgSize(), 100, 15000)
		and features:HasTextOnly() == 1
		and features:IsFromRambler()
		and features:UrlNormCount() == 0
		and (features:NoRealNameTo() == 1 or wclass:UNDISCLOSED())
		and cmpr_btw(features:SubjectLen(), 0, 50, true)
		and (cmpr_btw(features:SubjectNumbersCount(), 1, 15, true)
			or wclass:SUBJECT_MIXED_BADRATIO() or features:Subject7bitOnly() == 1 or features:NoSubject() == 1 
        	or wclass:OTHER_IP_IN_DNSBL())   		
		and cmpr_lt(features:LinesToWordsRatio(), 50)
		and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_lt(features:HtmlTagCount(), 5, true)
		and cmpr_btw(features:WordCount(), 3, 300, true)
		and wclass:RELAY_RECEIVED_FROM_FREEMAIL()
		and (wclass:HAS_HDR_ORGANIZATION() 
			or (wclass:NO_HTML_TAG() and wclass:NO_BODY_TAG()) 
            or features:NoUserAgent() == 1)
	then        
		SetPSAR('ar3399') 
	end 

    --ar3400
	--mxs_mbp / #gmail #zarabotok
	--24.12.16 / m.guryanov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 10, 2000)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'gmail.com')
    	and features:UrlNormCount() == 0  
  		and cmpr_lt(features:WordCount(), 50)
    	and (wclass:URL_IN_SUBJECT() or wclass:ONLY_7BIT_WORDS())
    	and wclass:FROM_REALNAME_DUBLICATE_FROM_EMAIL()
	then
		SetPSAR('ar3400')
	end

    --ar3401
    --mxs_other / #vacancy #it
    --25.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 5000, 40000, true)
    	and features:HasTextOnly() == 1
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)    	
    	and features:MultipartNum() == 1
    	and features:DkimDomainRepipAge() == 10000   	
        and cmpr_btw(features:WordCount(), 1, 100, true)
    	and features:HtmlTagCount() == 0
    	and wclass:TOP_URLS()
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:SUSP_SHORT_PHP_SCRIPT_NAME()
	then     	
        SetPSAR('ar3401')
    end 

    --ar3402
    --mxs_other / #manyurls
    --25.12.16 /m.guryanov 
    if not IsBlocked
    	and features:RcvSrcExt() == "mxs_other"
    	and cmpr_btw(features:MsgSize(), 40000, 300000, true)
    	and features:HasNoAttach() == 1
    	and features:ImgNum() == 1
    	and cmpr_gt(features:UrlNormCount(), 100, true)    	
    	and cmpr_gt(features:MultipartNum(), 3, true)
    	and features:DkimDomainRepipAge() == 10000   	
        and cmpr_gt(features:WordCount(), 200, true)
    	and cmpr_gt(features:HtmlTagCount(), 1, true)
    	and wclass:FROM_ADMIN()
    	and wclass:SHORT_BOUNDARY_AND_ONE_RECEIVED()
	then     	
        SetPSAR('ar3402')
    end 
    
	--ar3403
	--mxs_mbp / #vbei v google
	--25.12.16 / zubr
	if not IsBlocked
		and (features:RcvSrcExt() == "mxs_mbp" or features:RcvSrcExt() == "imap") 
		and features:MsgSize() >= 200 and features:MsgSize() <= 5000
		--and (features:UrlNormCount() == 0 or (features:UrlCount() == 1 and features:HasImageUrl() == 1))
		and features:WordCount() >= 5
		and cmpr_eq(features:EnvelopeFromDomain(),"rambler.ru")
		and wclass:UNAVAILABLE_IN_RECEIVED()
		and not features:IsRmspamProfile()
		and StrMatch(features:Helo(), '.net')
		and wclass:SUSP_MSG_ID_AND_UNAVAILABLE_IN_RECEIVED()
	then
		SetPSAR('ar3403')
	end
    
    --ar3404
    --fe / #test autoreg
	--26.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:Karma(), 0)
        and cmpr_btw(features:UserAge(),100,300, true)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_gt(features:HtmlTagCount(), 45)
        and cmpr_eq(features:IsAutoreg(), 1)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:AUTOREG_WITH_BAD_CARMA() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and wclass:HAS_ATTACH()
        and StrMatchRe(features:PartsFilenames(), regex([[(csv|mp4|prn|slk|xlsx)]]))
    then
        SetPSAR('ar3404')
    end

	--ar3405
	--mxs_other / #efremov
	--15.12.16 / r.kulpin
    if  features:RcvSrcExt() == "mxs_other"
        and not features:DkimDomain()
        and features:SPF() == 'pass'
    	and features:To()
        and cmpr_eq(features:To(), 'vam@mail.ru')
    	and not StrMatch(features:EnvelopeFromDomain(), features:FromDomain())
    	and features:SrcIp()
		and SFKD('ar3405', {features:SrcIp()}, 60, 5)
    then
        SetPSAR('ar3405')
    end
    
    --ar3406
    --fe / #ikra
    --26.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and not features:SmtpFeGoodSR()
        and cmpr_gt(features:RcptNum(), 15, true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
    	and cmpr_lt(features:Karma(), 1, true)
        and cmpr_lt(features:UserAge(), 6, true)
        and cmpr_lt(features:RepuserAge(), 6, true)
        and cmpr_btw(features:WordCount(), 100, 400)
    	and cmpr_gt(features:AbfCitiesPerMonthNum(), 2, true)
        and cmpr_gt(features:HtmlTagCount(), 10)
    	and TermsMatchGroup(17887,10)
        --and (cmpr_gt(features:RepIpComplRatioByLastMonth(), 2) or cmpr_gt(features:RepIpSpamRatioByLastWeek(), 2, true))
    then
        local repuser = mrasGetRepuserHitsPerTime(features:MpopUserId(), 'mail', 18000)
        if repuser
            and repuser.hits
            and repuser.hits.total_hits
            and cmpr_gt(repuser.hits.total_hits, 50)
        then
            SetPSAR('ar3406')
            LogMsgToHadoop('dstat_sulimov_log', '#ar3406')
        end
    end

    --ar3407
    --mxs_mbp #flud #english
    --05.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_eq(features:HasTextOnly(), 1)  
    	and features:IsFromOtherMbp()
   		and cmpr_eq(features:UrlNormCount(), 0)
        and cmpr_lt(features:WordCount(), 10)
        and cmpr_eq(features:TextLines(), 1)
        and cmpr_eq(features:NoRealNameFrom(), 1)
    	and wclass:NO_CTE()
    	and wclass:ONLY_7BIT_WORDS()
    	and not HeaderMatch('From', '.my.com')
	then
        SetPSAR('ar3407')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3407')
    end
    
    --ar3408
    --fe / #zarabotok
	--26.12.16 / r.sulimov
	if not IsBlocked
	    and cmpr_eq(features:RcvSrcExt(), "fe")
	    and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 300, 7000)
        and cmpr_eq(features:HasTextOnly(), 1)
	    and cmpr_gt(features:RcptNum(), 10, true)
	    and cmpr_lt(features:UserAge(), 100, true)
        and cmpr_eq(features:RepuserAge(), 2, true)
        and cmpr_btw(features:WordCount(), 70, 250)
        and cmpr_gt(features:HtmlTagCount(), 8)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:IpCategory(), 'tiny')
        and cmpr_gt(features:HtmlTags()['br'], 5)
        and wclass:ONE_WORD_SUBJECT()
        and wclass:RUSSIAN_FROM_REALNAME()
        and wclass:WORDS_TO_URLS_BADRATIO() 	
    then
        SetPSAR('ar3408')
    end
 
 	--ar3409
	--mxs_other / #zarab
	--26.12.16 / r.kulpin	
	--47b46dba445e3551b294033b66f33cc3 fd3f0ec92a711f5cf79eb2aa02514c54 7b3e5afac2dffa397776d3a9490d30ca
	if not IsBlocked
		and (cmpr_eq(features:RcvSrcExt(), 'mxs_other') or cmpr_eq(features:RcvSrc(), 'imap') or cmpr_eq(features:RcvSrc(), 'rpop'))
		and cmpr_btw(features:MsgSize(), 7000, 30000)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:MultipartNum(), 3, true)
        and features:NoRealNameTo()
		and cmpr_gt(features:WordCount(), 1000)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and cmpr_btw(features:TextLines(), 6, 40, true)
 		and wclass:URL_IN_FROM_DOMAINPART()
 		and wclass:IMAGE_AND_FROM_MATCHES_WITH_URL_WITH_YOUNG_DOMAIN()
 		and wclass:ENGLISH_LANGUAGE_MESSAGE()
        and wclass:HTML_BODY_HEAD()
        and wclass:SHORT_BOUNDARY_WITHOUT_LETTERS()
    	and HeaderMatchRe('From', regex([[^\"\s\w]]))
	then
		SetPSAR('ar3409')
    end

	--ar3410
	--mxs_other / #vk #kartinka
	--27.12.16 / r.kulpin
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 50000, 1000000)   
		and cmpr_eq(features:HasTextOnly(), 1)
        and features:NoSubject()
        and wclass:SHORT_WITH_URLS()
        and wclass:ONLY_URLS_IN_BODY()
    	and wclass:MISSING_DATE()
        and wclass:HTML_SHORT_LINK_IMG()
    	and wclass:NON_RFC_CHARS_IN_BOUNDARY()
        and UrlsMatchStr('vk.com') 
	then
    	SetPSAR('ar3410')
    end

    --ar3411
	--mxs_esp / #zarabotok
	--27.12.16 /m.guryanov 
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_esp"
		and features:MsgSize() >= 2000 and features:MsgSize() <= 10000 
		and features:HasTextOnly() == 1 
		and features:UrlNormCount() >= 2 and features:UrlNormCount() <= 7
		and cmpr_lt(features:WordCount(), 50, true)
		and features:DotRatio() <= 1
    	and cmpr_eq(features:EmailsCountInBody(), 0)
    	and wclass:RELAY_RECEIVED_FROM_FREEMAIL_AND_SOFTFAIL_SPF()	
    	and wclass:WORDS_MIXED_RATIO()
    	and TermsMatchGroup(18208, 100)     	
	then
		SetPSAR('ar3411')
	end
    
    --ar3412
    --mxs_mbp #gmailapi
    --11.01.17 / a.sokolov
    if not IsBlocked
        and not wclass:EXCEPTIONS()
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and features:IsFromGoogle()
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_btw(features:MsgSize(), 1000, 10000)
        and cmpr_gt(features:HtmlTagCount(), 0)
		and cmpr_gt(features:HtmlTags()['br'], 5)
        and cmpr_btw(features:TextLines(), 1, 50, true)
        and cmpr_btw(features:UrlNormCount(), 1, 2, true)
        and TermsMatchGroup(18145, 100)
        and HeaderMatch('Received','gmailapi.google.com')
    then
        SetPSAR('ar3412')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3412')
    end
    
    --ar3413
    --fe / #2 urls 2 lines
	--27.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 20, true)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_btw(features:UrlNormCount(),2,3,true)
        and cmpr_lt(features:Karma(), 0, true)
        and (not wclass:RUSSIAN_FROM_REALNAME() or wclass:REP_USER_SPAM_RATE_MORE_25())
        and wclass:PHP_URL()
        and (StrMatch(features:UrlsRawHashString(),".ru") or wclass:COM_AU_URLS())
        and (StrMatchRe(features:From(), regex([[^[a-z]{8,}@(mail|bk|list|inbox)\.ru$]])) or wclass:FROM_ENDS_IN_NUMS())
    then
        SetPSAR('ar3413')
    end
    
    --ar3414
    --sbor
	--28.12.16 / a.lis
    if (cmpr_eq(features:RcvSrcExt(), "fe") or cmpr_eq(features:RcvSrcExt(), "smtp") or cmpr_eq(features:RcvSrcExt(), "msx_other"))
        and TermsMatchGroup(18211, 100)
    then
        SetPSAR('ar3414', true)
    	LogMsgToHadoop('dstat_lisitskaya_log', '#ar3414')
    end

    --ar3415
    --fe #zarabotki #php
    --02.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
    	and cmpr_gt(features:ImgNum(), 1, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and features:UserCreateTime()
       -- and cmpr_lt(features:UserCreateTime().days, 50)
        and not wclass:RUSSIAN_FROM_REALNAME()
        and wclass:ONLY_7BIT_WORDS()
    	and wclass:SUBJECT_ONLY_WITH_IMAGE()
    	and wclass:MORE_THAN_N_RCPT()
    then
        SetPSAR('ar3415')
        LogMsgToHadoop('dstat_sokolik_log', '#ar3415')
    end
    
    --ar3416
    --mxs_other / #usa.cc #zarabotok
	--29.12.16 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(), 100, 20000)
    	and cmpr_eq(features:FromRealNameWordCount(), 1)
		and cmpr_btw(features:UrlNormCount(), 2, 6, true)
    	and features:HasFreeHosting() == 1
    	and wclass:HAS_TAG_META()
    	and wclass:SPF_NOT_PASS()
    	and UrlsMatchStr('usa.cc')
    	and HeaderMatchRe('From', regex([[^\"]]))
    	and TermsMatchGroup(18216, 100)
    then
        SetPSAR('ar3416')
    end    
    
	--ar3417
	--mxs_other / #efremov
	--30.12.16 / r.kulpin
    if  features:RcvSrcExt() == "mxs_other"
        and features:SPF() == 'pass'
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
    	and wclass:DKIM_FAIL()
    	and wclass:NO_TO()
    	and wclass:NEW_FROMDOMAIN_7_DAYS()
    	and features:SrcIp()
		and SFKD('ar3417', {features:SrcIp()}, 60, 5)
    then
        SetPSAR('ar3417')
    end
    
    --ar3418
    --mxs / #chalii_denis #zarabat
    --30.12.2016 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_other")
        and cmpr_btw(features:MsgSize(),100000, 300000)
        and features:AttachOfficeCount() == 1
    	and features:ImgNum() == 0
        and features:MultipartNum() == 5
    	and cmpr_btw(features:TextLines(), 2, 10, true)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
        and features:HtmlTagCount() > 0
        and features:DomainRepipAge() < 15
    	and wclass:IP_IN_HELO()
        and wclass:DKIM_FAIL()
    	and wclass:TO_LOCALPART_IN_REALNAME()
    then
        SetPSAR('ar3418') 
    end
    
	--ar3419
	--mxs_other / #ebala #new7
	--30.12.16 / r.kulpin
	if not IsBlocked
    	and features:RcvSrcExt() == 'mxs_other'
   		and cmpr_btw(features:MsgSize(), 100, 10000)   
		and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_btw(features:UrlCountWithoutMailRu(), 1, 2, true)
        and (wclass:NEW_IP_7_DAYS() or wclass:NEW_DKIM_7_DAYS())
    	and wclass:NEW_FROMDOMAIN_7_DAYS()
    	and wclass:URL_IN_FROM_DOMAINPART()
    	and (wclass:NO_TO() or wclass:MORE_1_EMAILS_IN_TO() or wclass:TO_NO_DOMAIN())
	then
    	SetPSAR('ar3419')
    end
    
    --ar3420
    --fe / #english
    --30.12.16 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'fe')
        and not features:IsPddUser()
		and (cmpr_btw(features:MsgSize(), 700, 3000, true) or cmpr_btw(features:MsgSize(), 40000, 95000, true))
    	and (cmpr_eq(features:UrlNormCount(), 1) or cmpr_eq(features:ImgNum(), 1))
    	and cmpr_btw(features:TextLines(), 0, 8)
    	and cmpr_eq(features:Word8bitCount(), 0)
    	and cmpr_eq(features:Subject7bitOnly(), 1)
    	and (cmpr_gt(features:RcptNum(), 2, true) or wclass:NEW_IP_7_DAYS() or wclass:HTML_TAGS_MORE_THAN_WORDS_IN_BODY())
    	and cmpr_lt(features:Karma(), 0)
    	and cmpr_btw(features:RepuserAge(), -1, 1, true)
    	and features:AbfCountryWasChanged()
	then
		SetPSAR('ar3420')
        LogMsgToHadoop('dstat_lisitskaya_log', '#ar3420')
	end 

    --ar3421
    --mxs_mbp #zarabotki #href
	--06.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and (features:IsFromGoogle()
    		or features:IsFromOtherMbp())
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_gt(features:HtmlTagCount(), 0)
        and cmpr_eq(features:UrlNormCount(), 1)
        and cmpr_eq(features:FromRealNameWordCount(), 1)
    	and (wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    		or wclass:HAS_HEADER_COREMAIL_ANTISPAM())
    	and wclass:HAS_HDR_ORGANIZATION()
    	and wclass:RUSSIAN_FROM_REALNAME()
    then
        SetPSAR('ar3421')
    	LogMsgToHadoop('dstat_sokolik_log', '#ar3421')
    end
    
    --ar3422
    --fe / #autoreg
	--31.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_btw(features:UserAge(), 20, 200, true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
        and cmpr_eq(features:TextLines(), 3, 10, true)
        and cmpr_eq(features:UrlNormCount(),1)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:RUSSIAN_FROM_REALNAME()
        and cmpr_eq(features:HtmlTags()['strong'], 1)
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and StrMatchRe(features:UrlsRawHashString(), regex([[\.ru\/[a-z]{3,}\/]]))
        and StrMatchRe(features:From(), regex([[^[a-z0-9]{8,}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar3422')
    end

    --ar3423
    --fe / #fast autoreg
	--31.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_lt(features:RepuserAge(), 20, true)
        and cmpr_eq(features:TextLines(), 2)
        and cmpr_eq(features:UrlNormCount(),2)
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:PHP_URL()
        and StrMatch(features:UrlsRawHashString(),".ru")
        and StrMatchRe(features:From(), regex([[^[a-z]{8,}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar3413')
    end

    --ar3424
    --fe / #zarabotok
	--31.12.16 / m.guryanov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
    	and not features:IsPddUser()
    	and features:NoRealNameTo() == 1
    	--and features:IsAutoreg() == 1
        and cmpr_lt(features:RepuserAge(), 5, true)
        and cmpr_btw(features:TextLines(), 1, 6, true)
    	and cmpr_btw(features:WordCount(), 1, 35, true)
        and cmpr_btw(features:UrlNormCount(), 1, 4, true)
    	and features:UrlCountWithoutMailRu() >= 1
        and cmpr_lt(features:Karma(), 0, true)
        and wclass:WORDS_MIXED_RATIO()
        and wclass:MORE_THAN_N_RCPT()
    then
        SetPSAR('ar3424')
    end
    
    --ar3425
    --'' / #my.com #brainformula
	--01.01.17 / r.kulpin
	if not IsBlocked
    	and features:RcvSrc() == ''
    	and cmpr_btw(features:MsgSize(), 10000, 100000)
    	and cmpr_eq(features:ImgNum(), 1)
    	and cmpr_eq(features:NoRealNameTo(), 1)   
    	and features:MultipartNum() == 5
    	and cmpr_eq(features:TextLines(), 1)
    	and cmpr_eq(features:WordCount(), 1)
    	and cmpr_btw(features:HtmlTagCount(), 1, 12, true)
    	and features:EmailsCountInToHeader() > 1
    	and TermsMatchGroup(18219, 100)
    then
    	SetPSAR('ar3425')
    end

    --ar3426
    --mxs_esp / #mlsendru #Den Bilzerian #bilzeriancash.ru
    --01.01.2017 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_esp")
        and cmpr_btw(features:MsgSize(),10000,100000)
        and cmpr_eq(features:HasTextOnly(),1)
        and cmpr_btw(features:MultipartNum(),1,3,true)
        and features:NoRealNameTo() == 1
        and cmpr_btw(features:UrlCountWithoutMailRu(),1,5,true)
        and features:LinesToWordsRatio() >= 10
        and cmpr_btw(features:HtmlTagCount(),15,100)
        and cmpr_btw(features:TextLines(),1,20,true)
        and features:WhitespaceToWordRatio() > 1000
		and (StrMatchRe(features:FromLocalPart(),regex([[^andr]])) or cmpr_eq(features:FromLocalPart(),'nikiforov'))
        and (UrlsMatchStr('mlsendru.com')
        	or UrlsMatchStr('mlnewsletterru.com'))
    then
        SetPSAR('ar3426') 
    end

    --ar3427
    --mxs_mbp / #znakomstva #yandex #vbei_v_googl
    --01.01.17 /zubr
	if not IsBlocked
		and features:RcvSrcExt() == "mxs_mbp"   
		and features:MsgSize() >= 200 and features:MsgSize() <= 5000
		and features:HasAttach() == 1
		and features:IsFromYandex()
		and features:UrlNormCount() == 0
		and features:NoRealNameTo() == 1
		and HeaderMatchRe('Received', regex([[by\ssmtp\d{1,2}[a-z]{1,2}\.mail\.yandex\.net]]))
		and HeaderMatch('Content-Type', 'text/plain; name="')
	then        
		SetPSAR('ar3427') 
	end

	--ar3428
	--mxs_other / #zarabotok #8000r
	--01.01.2017 / zubr
	if not IsBlocked
    	and (features:RcvSrcExt() == 'mxs_other' or features:RcvSrcExt() == 'local'
			or (features:RcvSrcExt() == 'imap' and features:ImapSubSrc() == 'mxs'))
    	and cmpr_btw(features:MsgSize(), 1000, 30000)
    	and features:HasTextOnly() == 1
    	and	features:TextLines() >= 6
    	and features:WordCount() >= 15
		and features:NumberCount() >= 20
		and (wclass:REMOTE_IP_IN_SPAMHAUS() or mrasRepHasSendingGap(features:SrcIp(), 0, 40, 20, 10) or wclass:NEW_IP_30_DAYS()
			or wclass:PTR_ERROR_AND_FAIL_SPF() or wclass:SOFTFAIL_SPF() or wclass:TERMS_ZARABOTOK_V_SETI() or wclass:URL_COUNT_0_WITH_HTTP_AND_PTR_ERROR())
		and wclass:ONE_RECEIVED()
    	and TermsMatchGroup(10604, 100)
    	and TermsMatchGroup(17192, 100)
	then
		SetPSAR('ar3428')
	end

	--ar3429
	--mxs_other / #udovolstvie
	--01.01.2017 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and features:MsgSize() >= 1000 and features:MsgSize() <= 10000
		and features:HasTextOnly() == 1
		and features:ExternalImgNum() == 1
    	and wclass:SUSP_SWIFT_BOUNDARY()
    	and wclass:REMOTE_IP_IN_SPAMHAUS()
    	and wclass:HAS_LIST_UNSUBSCRIBE_AND_NO_REALNAME_TO()
    	and wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE()
    	and wclass:TO_REALNAME_DUBLICATE_TO_EMAIL()
    	and wclass:DOMAINS_EQUAL()
    	and wclass:ONE_RECEIVED()
	then
		SetPSAR('ar3429')
	end

	--ar3430
	--mxs_other / #viagra #german
	--01.01.2017 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and (features:MsgSize() >= 200 and features:MsgSize() <= 5000 or (features:MsgSize() >= 50000 and features:ExternalImgNum() >= 1))
		and features:HasTextOnly() == 1
    	and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
    	and features:TextLines() >= 5 and features:TextLines() <= 40
    	and features:Word8bitCount() == 0
    	and features:SubjectWordCount() >= 3
		and features:Subject7bitOnly() == 1
    	and (wclass:HDR_LIST_UNSUBSCRIBE_WITH_BODY_WITHOUT_UNSUBSCRIBE() or wclass:FAKE_CONTENT_TYPE_3() or wclass:ENGLISH_TEXT_AND_CTE_8BIT())
    	and (wclass:NEW_IP_30_DAYS() or mrasRepHasSendingGap(features:FromDomain(), 3, 30, 20, 5))
    	and (wclass:URL_IN_FROM_DOMAINPART() or wclass:WEBSITE_IN_MSGID_DOMAIN())
	then
		SetPSAR('ar3430')
	end

    --ar3431
    --fe / #english #sms #onlyDigInBody
	--02.01.17 / r.kulpin
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 500)
    	and cmpr_eq(features:MultipartNum(), 1)
		and cmpr_eq(features:HasTextOnly(), 1)
    	and features:Subject7bitOnly()
		and cmpr_eq(features:UrlCount(), 0)
    	and cmpr_eq(features:WordCount(), 1)
    	and cmpr_gt(features:NumbersToZeroRatio(), 3) 
    	and wclass:SUBJECT_LONGER_THEN_BODY()
    	and (wclass:FROM_MATCH_TO_AND_MORE_THAN_N_RCPT() or wclass:DIFFERENT_REPLY_TO_AND_FROM() or wclass:NEW_IP_7_DAYS())
    then
        SetPSAR('ar3431')
    end

    --ar3432
    --fe #zarabotki #eng #test
    --02.01.17 / a.sokolov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe") 
        and not features:IsPddUser()
    	and not cmpr_eq(features:FromDomain(), 'mail.ru')
        and not cmpr_eq(features:FromDomain(), 'mail.ua')
    	and not cmpr_eq(features:FromDomain(), 'inbox.ru')
        and not cmpr_eq(features:FromDomain(), 'bk.ru')
    	and not cmpr_eq(features:FromDomain(), 'list.ru')
    then
        SetPSAR('ar3432', true )
        LogMsgToHadoop('dstat_sokolik_log', '#ar3432')
    end


	--ar3433
	--mxs_other / #udovolstvie
	--03.01.2017 / zubr
	if not IsBlocked
		and features:RcvSrcExt() == 'mxs_other'
		and features:MsgSize() >= 5000 and features:MsgSize() <= 50000
		and features:HasTextOnly() == 1
		and features:ExternalImgNum() >= 3
		and features:UrlNormCount() >= 1 and features:UrlNormCount() <= 4
		and features:WordCount() >= 50 and features:WordCount() <= 500
		and features:NumberCount() >= 2000
		and wclass:ONE_RECEIVED_AND_DOMAINS_EQUAL()
	then
		SetPSAR('ar3433')
	end
    
    --ar3434
    --mxs_other 
    --04.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_eq(features:HasTextOnly(), 1)
    	and not features:DkimDomain()
    	and cmpr_eq(features:From(), features:AuthenticatedSender(), true)
    	and wclass:SPF_NOT_PASS()
    	and (wclass:IP_IN_SPAMHAUS_AND_ONE_RECEIVED() or wclass:IP_REP_GAP_MORE_14_DAYS())
    	and HeaderMatch('Content-Transfer-Encoding', '7bit')
	then
		SetPSAR('ar3434')
	end 

    --ar3435
	--mxs_mbp / #gmail #evroset
	--04.01.17 / m.guryanov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 300, 3500)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and cmpr_eq(features:EnvelopeFromDomain(), 'gmail.com')
    	and features:UrlNormCount() == 1
    	and features:NoUserAgent() == 1
  		and cmpr_lt(features:WordCount(), 150)
    	and wclass:TO_LOCALPART_IN_REALNAME()
    	and wclass:FROM_ENDS_IN_NUMS()
    	and (TermsMatchGroup(18223, 100) or wclass:TERMS_ZARABOTOK_V_SETI() or wclass:RELAY_RECEIVED_FROM_FREEMAIL())
	then
		SetPSAR('ar3435')
	end
    
    --ar3436
    --mxs_other 
    --04.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_eq(features:HasTextOnly(), 1)
    	and not features:DkimDomain()
    	and cmpr_eq(features:FromDomain(), features:Helo(), true)
    	and wclass:SPF_NOT_PASS()
    	and (wclass:UNENCODED_SUBJECT() or wclass:FAKE_REPLY_IN_SUBJECT() or wclass:NEW_IP_7_DAYS() or wclass:IP_REP_GAP_MORE_14_DAYS())
    	and HeaderMatch('Content-Transfer-Encoding', '7bit')
	then
		SetPSAR('ar3436')
	end 
    
    --ar3437
    --fe / #znakomstva #eng
    --04.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 50, 1500)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:UrlCount(), 0)
        and cmpr_btw(features:TextLines(),1, 2, true)
        and cmpr_lt(features:RepuserAge(), 1, true) 
        --and wclass:FE_ENG_MSG()
        and wclass:SUSP_NUMBER_TO_TEXT_RATIO() 
        and wclass:MORE_THAN_5_RCPT()
        and StrMatchRe(features:From(), regex([[^[a-z]{4,}(-|.|_)[a-z]{4,}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar3437')
    end
    
    --ar3438
    --fe / #zarabotok 
    --04.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 10000)
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:AUTOREG() or wclass:MSGL_BAD_SPAM_RATIO_FROM_FREE_MAIL())
        and ( (cmpr_btw(features:UserAge(), 100, 300, true) and cmpr_gt(features:AbfCitiesPerMonthNum(),2)) 
        	or cmpr_btw(features:RepuserAge(),0,3) )
        and cmpr_eq(features:UrlCountWithoutMailRu(), 1)
        and cmpr_lt(features:Karma(), 0, true)
        and features:ReplyTo()
        and (cmpr_eq(features:IpCategory(), 'tiny') or cmpr_eq(features:IpCategory(), 'small'))
        and (cmpr_gt(features:HtmlTags()['br'], 5) or cmpr_gt(features:HtmlTags()['p'], 5))
        and cmpr_eq(features:HtmlTags()['html'], 1)
        and cmpr_gt(features:HtmlTags()['p'], 1, true)
        --and (cmpr_gt(features:ImgNum(), 2, true) or StrMatchRe(features:PartsFilenames(), regex([[\.(xlsx)$]])) or StrMatchRe(features:PartsFilenames(), regex([[\.(csv)$]])))
        and StrMatchRe(features:UrlsRawHashString(), regex([[\.ru/.{5,8}]]))
    then
        SetPSAR('ar3438',true)
    end
    
    
     --ar3439
    --fe / #zarabotok #pdf pdd
    --04.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and features:IsPddUser()
        and cmpr_gt(features:MsgSize(), 500000)
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and (cmpr_gt(features:RcptNum(), 10, true) or wclass:USER_AGE_1())
        and features:UserCreateTime() and features:UserCreateTime().days
        and cmpr_lt(features:UserCreateTime().days, 50)
        and cmpr_gt(features:LinesToWordsRatio(), 30)
		and cmpr_lt(features:DomainRepipAge(), 50, true)
        and StrMatchRe(features:FromLocalPart(), regex([[^[a-z]{4,}[0-9]{2,4}]]))

    then
        SetPSAR('ar3439')
    end
    
    --ar3440
    --fe / #blogspot #pdf
    --04.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
    	and cmpr_eq(features:HasAttach(), 1) 
        and cmpr_eq(features:FilesExtensions(), ".pdf")
        and cmpr_gt(features:RcptNum(), 10, true)
        and cmpr_gt(features:AbfCitiesPerMonthNum(),3)
        and cmpr_gt(features:HtmlTags()['br'], 15)
        and StrMatchRe(features:UrlsRawHashString(), regex([[.*blogspot.*\.html]]))
    then
        SetPSAR('ar3440')
    end
    
    --ar3441
    --fe / #prostitutki test
    --05.01.17 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and TermsMatchGroup(18225,100)
        and StrMatchRe(features:From(), regex([[^vosc[0-9]{2,4}@(mail|bk|list|inbox)\.ru$]]))
    then
        SetPSAR('ar3441')
    end
    
    --ar3442
    --mxs_other 
    --05.01.17 / a.lis
	if not IsBlocked
		and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and (cmpr_eq(features:ImgNum(), 1) or cmpr_eq(features:UrlNormCount(), 1))
    	and not features:DkimDomain()
    	and cmpr_eq(features:FromDomain(), features:Helo(), true)
        and cmpr_eq(features:SenderPtr(), 'error')
    	and wclass:SPF_NOT_PASS()
    	and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT() or wclass:SUBJECT_LONGER_THEN_BODY())
    	and wclass:NEW_IP_15_DAYS()
	then
		SetSpam('ar3442')
        CarbideSendStatsSum('rules_analyst', 'ar3442', 1)
	end 
    
    --ar3443
    --mxs_other 
    --05.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:ImgNum(), 1, 3, true)
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and not features:DkimDomain()
    	and cmpr_eq(features:FromDomain(), features:Helo(), true)
    	and wclass:FAIL_SPF()
    	and wclass:NEW_IP_15_DAYS()
    	and wclass:SUBJECT_LONGER_THEN_BODY()
	then
		SetPSAR('ar3443')
	end 

    --ar3444
	--mxs_mbp / #spanish #fakefreemail #registration
	--05.01.17 / m.guryanov
	if not IsBlocked
        and not wclass:EXCEPTIONS()
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 300, 3500)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:UrlNormCount() == 1
    	and features:NoRealNameTo() == 1
  		and cmpr_lt(features:WordCount(), 100)
    	and (wclass:HAS_X_PHP_SCRIPT() or wclass:TO_MISMATCH_ENVELOPE_TO())
    	and wclass:FAKE_FREE_MAIL()
    	and wclass:PSEUDO_DMARC_AND_SPF_NOT_PASS()
    	and wclass:ENGLISH_TEXT_AND_CTE_8BIT()
	then
		SetPSAR('ar3444')
	end

    --ar3445
	--mxs_mbp / #english #trash #helo
	--05.01.17 / m.guryanov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 100, 700)
    	and cmpr_eq(features:HasTextOnly(), 1)
    	and features:UrlNormCount() == 0
    	and features:NoRealNameTo() == 1
  		and cmpr_lt(features:WordCount(), 30)
    	and features:NoBodyTag() == 1
    	and features:NoHtmlTag() == 1
    	and wclass:DIFFERENT_FROM_AND_ENVELOPE_FROM()
    	and wclass:UNDISCLOSED()
    	and wclass:ENGLISH_LANGUAGE_MESSAGE()
    	and wclass:HAS_X_RECEIVED()
	then
		SetPSAR('ar3445')
	end

    --ar3446
	--mxs_mbp / #rabota #image #gif
	--05.01.17 / m.guryanov
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_mbp')
    	and cmpr_btw(features:MsgSize(), 10000, 80000)
    	and features:HasNoAttach() == 1 
    	and features:UrlNormCount() == 0
    	and features:NoRealNameTo() == 1
  		and features:WordCount() == 0
    	and features:NoSubject() == 1
    	and features:NoBodyTag() == 1
    	and features:NoHtmlTag() == 1
    	and wclass:BCC_WITH_RELAY_RECEIVED_FROM_FREEMAIL()
    	and wclass:ONE_GIF_IN_BODY()
    	and wclass:TO_MISMATCH_ENVELOPE_TO()
	then
		SetPSAR('ar3446')
	end
    
    --ar3447
    --mxs_other 
    --06.01.17 / a.lis
	if not IsBlocked
		and cmpr_eq(features:RcvSrcExt(), 'mxs_other')
		and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and not features:DkimDomain()
    	and cmpr_eq(features:FromDomain(), features:Helo(), true)
    	and wclass:SPF_NOT_PASS()
    	and (wclass:SUBJECT_8BBIT_AND_BODY_7BIT() or wclass:SUBJECT_LONGER_THEN_BODY() or wclass:ONE_WORD_SUBJECT())
        and wclass:ONLY_7BIT_WORDS()
    	and HeaderMatch('Precedence', 'bulk')
        and not HeaderMatch('From', 'Cron Daemon')
	then
		SetPSAR('ar3447')
	end 
    
    --ar3448
    --mxs_mbp / #orange wanadoo #vbei_v_googl #zaebalisukiblya
    --06.01.17 /m.guryanov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 200, 600000)
        and features:HasNoAttach() == 1
    	and cmpr_gt(features:ImgNum(), 3, true)    	
      	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr' or features:AuthenticatedDomain() == 'mail.com')
        --and cmpr_lt(features:LinesToWordsRatio(),50)
        and features:NoRealNameTo() == 1
        and features:NoUserAgent() == 1     
    	and (cmpr_gt(features:UrlNormCount(), 1, true) or TermsMatchGroup(18174, 100))
        and wclass:RUSSIAN_FROM_REALNAME_WITH_FOREIGN_DOMAIN()
    	and (wclass:SPF_NOT_PASS_FROM_MBP() or features:AuthenticatedDomain() == 'mail.com')
    	and (UrlsMatchStr('go.mail.ru/search', 1) or UrlsMatchStr('google.', 1) 
        	or wclass:WHITESPACE_SUSP_RATIO() or wclass:NO_URLS_WITH_HTML_TAGS())
    	and wclass:GIF_IN_BODY()
    then        
        SetPSAR('ar3448') 
    end 

    --ar3449
    --mxs_mbp / #orange wanadoo #vbei_v_googl #zaebalisukiblya
    --08.01.17 /m.guryanov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp"   
        and cmpr_btw(features:MsgSize(), 200, 600000)
        and features:HasNoAttach() == 1
    	and cmpr_gt(features:ImgNum(), 1, true)    	
        and cmpr_gt(features:SubjectWordCount(), 1, true) 
      	and (features:AuthenticatedDomain() == 'orange.fr' 
        		or features:AuthenticatedDomain() == 'wanadoo.fr' or features:AuthenticatedDomain() == 'mail.com'
        		or features:AuthenticatedDomain() == 'narod.ru' or features:IsFromYandex())
        and cmpr_lt(features:LinesToWordsRatio(),50)
        and (features:NoRealNameTo() == 1 or features:NoTo() == 1)
        and (features:NoUserAgent() == 1 or TermsMatchGroup(18174, 100) or wclass:NO_HTML_TAG())
    	and (wclass:SUBJECT_ONLY_WITH_IMAGE() or wclass:NO_TEXT_LINES_AND_SUSP_IMAGE_NAME() or wclass:ONLY_IMAGE_IN_EMAIL()
    		or wclass:HAS_HDR_ORGANIZATION() or wclass:ONLY_IMAGE_WITH_ONLY_IMAGE_TAG() or wclass:SUSP_IMAGE_NAME_3() or wclass:RANDOM_CASE_IN_IMAGE_NAME() )
    	and (wclass:MISSING_DATE() or wclass:HAS_HDR_ORGANIZATION() or wclass:NO_TO_AND_FREE_MAIL() or wclass:HAS_NOT_EXT_IMG_WITH_IMG_TAG())
    then        
        SetPSAR('ar3449') 
    end     
    
    --ar3450
    --mxs_mbp / #zarabotok
    --07.01.17 / m.guryanov    
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "mxs_mbp")
        and cmpr_btw(features:MsgSize(), 50, 1000, true)
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 1)
        and cmpr_btw(features:UrlCount(), 1, 3, true)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_eq(features:FromDomain(), "yahoo.com")
    	and features:NoUserAgent() == 1
        and wclass:YANDEX_DISC_AND_SHORT_MESSAGE()
    then
        SetPSAR('ar3450')
    end    
    
    --ar3451
    --mxs_mbp / #zarabotok #yandex
    --09.01.17 / m.guryanov
    if not IsBlocked
        and features:RcvSrcExt() == "mxs_mbp" 
        and cmpr_btw(features:MsgSize(), 400, 2000, true)
        and features:HasTextOnly() == 1
        and features:MultipartNum() == 1
        and features:UrlNormCount() == 1
        and features:NoRealNameTo() == 1
        and features:IsFromYandex()
    	and cmpr_btw(features:TextLines(), 1, 3, true)
        and wclass:NO_BODY_TAG() 
    	and StrMatchRe(features:FromLocalPart(), regex([[[A-Za-z]{3,12}\d{2,5}[a-z]{1,5}[a-zA-Z\d]*]]))
    then
        SetPSAR('ar3451')
    end

	--ar3452
    --fe / #casino
    --13.01.17 / m.guryanov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 5000)
        and cmpr_lt(features:Karma(),0,true)
        and cmpr_lt(features:WordCount(),100)
        and cmpr_lt(features:DotCount(), 6, true)
    	and cmpr_btw(features:HtmlTagCount(), 1, 20, true)
        and cmpr_eq(features:NoRealNameTo(),1)
        and wclass:FE_TOR_IP() 
    	and (wclass:BAD_LINES_TO_WORD_RATIO() or wclass:SUSP_LINES_TO_WORD_RATIO())
    	and wclass:SUBJECT_WITH_CAPS()
    	and wclass:SUBJECT_LONGER_THEN_BODY()
    then
        SetPSAR('ar3452')
    end  

	--ar3453
    --fe / #zarabotok #blogspot
    --13.01.17 / m.guryanov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 1000, 50000)
        and cmpr_eq(features:IpCategory(), "tiny")
        and cmpr_eq(features:HasTextOnly(), 1)
        and cmpr_eq(features:MultipartNum(), 3)
        and cmpr_gt(features:UrlNormCount(), 1)
        and cmpr_eq(features:NoRealNameTo(), 1)
        and cmpr_gt(features:TextLines(), 30, true)
        and cmpr_eq(features:Subject8bitOnly(), 1)
        and cmpr_gt(features:WordCount(), 400, true)        
        and wclass:TERMS_ZARABOTOK_V_SETI2_AND_HAS_SUSP_URLS()
        and wclass:WITH_HTTP()
        and (UrlsMatchStr('.blogspot.', 1))
    then
        SetPSAR('ar3453')
    end

    --ar3454
    --smtp / #zarabotok
    --13.01.17 /m.guryanov
    if not IsBlocked
        and features:RcvSrcExt() == "smtp"
    	and features:IsPddUser()
        and cmpr_btw(features:MsgSize(), 100, 2000)
        and features:HasTextOnly() == 1 
    	and cmpr_btw(features:UrlNormCount(), 1, 3, true)
    	and cmpr_lt(features:WordCount(), 70, true) 
    	and HasHeader('List-Unsubscribe')
    	and HeaderMatch('List-Unsubscribe', 'getresponse.com')    	 
    	and wclass:ABF_FAST_CITY_CHANGE()
    then 
        SetPSAR('ar3454')         
    end
    
    --ar3455
    --fe / #govnosetki fe
    --14.12.16 / r.sulimov
    if not IsBlocked
        and cmpr_eq(features:RcvSrcExt(), "fe")
        and not features:SmtpFeGoodSR()
        and cmpr_btw(features:RcptNum(), 2, 9,true)
        and cmpr_eq(features:RepuserMissedHits30Days(), 0)
     	and (cmpr_lt(features:Karma(), 0, true) or cmpr_lt(features:RepuserAge(), 30, true))
        and TermsMatchGroup(18157,100)
    then
        SetPSAR('ar3329', true)
        LogMsgToHadoop('dstat_sulimov_log', '#ar3455')
    end
    
    NOTICE('AnalystRules: end')
end




	
    
